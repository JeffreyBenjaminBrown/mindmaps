<map version="freeplane 1.3.0">
<!--To view this file, download free mind mapping software Freeplane from http://freeplane.sourceforge.net -->
<node TEXT="lang" LOCALIZED_STYLE_REF="default" ID="ID_402639747" CREATED="1277698213598" MODIFIED="1433835911056"><hook NAME="MapStyle" background="#d2f7cc" zoom="1.241">

<map_styles>
<stylenode LOCALIZED_TEXT="styles.root_node">
<stylenode LOCALIZED_TEXT="styles.predefined" POSITION="right">
<stylenode LOCALIZED_TEXT="default" MAX_WIDTH="800" COLOR="#000000" STYLE="as_parent">
<font NAME="Courier" SIZE="16" BOLD="false" ITALIC="false"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.details" MAX_WIDTH="800" COLOR="#cc00ff">
<font NAME="Courier" SIZE="16"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.note" MAX_WIDTH="800">
<font NAME="Courier" SIZE="16"/>
</stylenode>
<stylenode LOCALIZED_TEXT="defaultstyle.floating" MAX_WIDTH="800">
<edge STYLE="hide_edge"/>
<cloud COLOR="#f0f0f0" SHAPE="ROUND_RECT"/>
<font NAME="Courier" SIZE="16"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.user-defined" POSITION="right">
<stylenode LOCALIZED_TEXT="styles.topic" COLOR="#009999" STYLE="fork" MAX_WIDTH="800">
<font NAME="Courier" SIZE="16" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subtopic" COLOR="#ff7700" BACKGROUND_COLOR="#c6f7f9" STYLE="fork" MAX_WIDTH="800">
<font NAME="Courier" SIZE="16" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.subsubtopic" COLOR="#008600" BACKGROUND_COLOR="#f5e1db" MAX_WIDTH="800">
<font NAME="Courier" SIZE="16" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.important" MAX_WIDTH="800">
<icon BUILTIN="yes"/>
<font NAME="Courier" SIZE="16"/>
</stylenode>
</stylenode>
<stylenode LOCALIZED_TEXT="styles.AutomaticLayout" POSITION="right">
<stylenode LOCALIZED_TEXT="AutomaticLayout.level.root" COLOR="#000099" MAX_WIDTH="800">
<font NAME="Courier" SIZE="16" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,1" COLOR="#006600" MAX_WIDTH="800">
<font NAME="Courier" SIZE="16" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,2" COLOR="#996600" MAX_WIDTH="800">
<font NAME="Courier" SIZE="16" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,3" COLOR="#990000" MAX_WIDTH="800">
<font NAME="Courier" SIZE="16" BOLD="true"/>
</stylenode>
<stylenode LOCALIZED_TEXT="AutomaticLayout.level,4" COLOR="#660066" MAX_WIDTH="800">
<font NAME="Courier" SIZE="16" BOLD="true"/>
</stylenode>
</stylenode>
</stylenode>
</map_styles>
</hook>
<node TEXT=". compare, inc econ" POSITION="right" ID="ID_843558609" CREATED="1416037167401" MODIFIED="1418783422638">
<node TEXT="haskell v. supercollider" ID="ID_1944640486" CREATED="1416037170705" MODIFIED="1416037205812">
<node TEXT="despite Haskell&apos;s being good at general concurrency, very likely easier to write audio in SuperCollider, with its support for specifically audio concurrency" ID="ID_1734247625" CREATED="1416037134939" MODIFIED="1416037163150"/>
</node>
<node TEXT="singles" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1557424896" CREATED="1329510001916" MODIFIED="1416037193476">
<node TEXT="C++" ID="ID_1378706569" CREATED="1397451020557" MODIFIED="1397451022494">
<node TEXT="good for speed, because ..." LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1347017148" CREATED="1397451035981" MODIFIED="1397451415376"/>
<node TEXT="explicit memory management" ID="ID_1893779856" CREATED="1397451023004" MODIFIED="1397451061180"/>
</node>
<node TEXT="C++ and Qt" ID="ID_1718625328" CREATED="1405631948154" MODIFIED="1405631952790">
<node TEXT="cross-platform, widely used" ID="ID_1439553902" CREATED="1405631953002" MODIFIED="1405631965514"/>
<node TEXT="Python deprecated for large projects?" ID="ID_1440172124" CREATED="1405631968354" MODIFIED="1405631985702"/>
</node>
<node TEXT="Perl, Python" ID="ID_163208462" CREATED="1277698213619" MODIFIED="1311539389591">
<node TEXT="attract some of the best programmers, because they&apos;re awesome" ID="ID_4773933" CREATED="1277698213619" MODIFIED="1311539389589"/>
<node TEXT="therefore they&apos;ll get better faster than other languages" ID="ID_939573042" CREATED="1277698213619" MODIFIED="1376105739002"/>
<node TEXT="mutli-core-savvy" ID="ID_999055974" CREATED="1277698213619" MODIFIED="1311539389585"/>
</node>
<node TEXT="Ruby" ID="ID_642755595" CREATED="1397451128536" MODIFIED="1397451130474">
<node TEXT="good for communication, internet, because ..." LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_592587872" CREATED="1397451396753" MODIFIED="1397451406246"/>
<node TEXT="easy postponement" ID="ID_1346168244" CREATED="1397451130694" MODIFIED="1397451143227">
<node TEXT="good when facing asynchrony" ID="ID_1290211757" CREATED="1397451143464" MODIFIED="1397451173104"/>
</node>
<node TEXT="easy string manip" ID="ID_1965917553" CREATED="1397451383855" MODIFIED="1397451389607"/>
</node>
<node TEXT="Groovy" LOCALIZED_STYLE_REF="default" ID="ID_1608776720" CREATED="1277698213619" MODIFIED="1398452366008">
<edge STYLE="bezier" COLOR="#808080" WIDTH="thin"/>
<node TEXT="dynamic language built on Java" ID="ID_1058868620" CREATED="1277698213619" MODIFIED="1311539389581"/>
<node TEXT="also has &quot;enough critical mass&quot;" ID="ID_1688114471" CREATED="1277698213619" MODIFIED="1311539389579"/>
<node TEXT="mutli-core-savvy" ID="ID_1985903155" CREATED="1277698213619" MODIFIED="1311539389577"/>
</node>
<node TEXT="DashCode" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1704811468" CREATED="1314971223062" MODIFIED="1398299937720">
<edge STYLE="bezier" COLOR="#808080" WIDTH="thin"/>
<node TEXT="it&apos;s already installed" ID="ID_83085051" CREATED="1314971233494" MODIFIED="1314971236527"/>
</node>
<node TEXT="HTML5 audio API" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1302903977" CREATED="1315349153853" MODIFIED="1398299937727">
<edge STYLE="bezier" COLOR="#808080" WIDTH="thin"/>
<node TEXT="using &quot;website/background/audio api/&quot;" ID="ID_1156432277" CREATED="1315410166118" MODIFIED="1315410177060"/>
<node TEXT="&quot;Audio Data API&quot;" ID="ID_531248529" CREATED="1315409879696" MODIFIED="1315409882987">
<node TEXT="https://wiki.mozilla.org/Audio_Data_API" ID="ID_1483001714" CREATED="1315409872069" MODIFIED="1315409872072" LINK="https://wiki.mozilla.org/Audio_Data_API"/>
</node>
<node TEXT="&quot;Audio API&quot;" ID="ID_751897403" CREATED="1315409875488" MODIFIED="1315410148949" COLOR="#18898b" STYLE="fork">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
<edge STYLE="bezier" COLOR="#808080" WIDTH="thin"/>
<node TEXT="https://developer.mozilla.org/en/Introducing_the_Audio_API_Extension" ID="ID_1607420478" CREATED="1315349153068" MODIFIED="1315349153069" LINK="https://developer.mozilla.org/en/Introducing_the_Audio_API_Extension"/>
</node>
</node>
</node>
<node TEXT="sound programming" LOCALIZED_STYLE_REF="default" ID="ID_747823597" CREATED="1314751031105" MODIFIED="1409707934907">
<font BOLD="true"/>
<node TEXT="HTML audio playback" ID="ID_418222554" CREATED="1314751651478" MODIFIED="1314751662320">
<node TEXT="http://www.w3schools.com/html5/html5_audio.asp" ID="ID_145182013" CREATED="1314751654842" MODIFIED="1314751654842" LINK="http://www.w3schools.com/html5/html5_audio.asp"/>
</node>
<node TEXT="Audio Data API" ID="ID_1073756705" CREATED="1314752955368" MODIFIED="1314752965203">
<node TEXT="https://wiki.mozilla.org/Audio_Data_API" ID="ID_1116033416" CREATED="1314753033530" MODIFIED="1314753033530" LINK="https://wiki.mozilla.org/Audio_Data_API"/>
<node TEXT="seems only to work in Firefox" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_1057265878" CREATED="1314752966488" MODIFIED="1398300035726" STYLE="fork">
<edge STYLE="bezier" COLOR="#808080" WIDTH="thin"/>
</node>
</node>
<node TEXT="browser-based Pd clone" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1842093861" CREATED="1314750522825" MODIFIED="1398300021838">
<edge STYLE="bezier" COLOR="#808080" WIDTH="thin"/>
<node TEXT="it" ID="ID_1185431556" CREATED="1314750563911" MODIFIED="1314750564418">
<node TEXT="http://mccormick.cx/dev/webpd/" ID="ID_154501869" CREATED="1314750557096" MODIFIED="1314750557098" LINK="http://mccormick.cx/dev/webpd/"/>
</node>
<node TEXT="the API it uses" ID="ID_1829736692" CREATED="1314750573367" MODIFIED="1314750579330">
<node TEXT="https://wiki.mozilla.org/Audio_Data_API" ID="ID_1211517083" CREATED="1314750562490" MODIFIED="1314750562490" LINK="https://wiki.mozilla.org/Audio_Data_API"/>
</node>
<node TEXT="where I learned of it" ID="ID_51695132" CREATED="1314750566742" MODIFIED="1314750571026">
<node TEXT="http://createdigitalmusic.com/2010/05/browser-madness-3d-music-mountainscapes-web-based-pd-patching/" ID="ID_218481913" CREATED="1314750531438" MODIFIED="1314750531438" LINK="http://createdigitalmusic.com/2010/05/browser-madness-3d-music-mountainscapes-web-based-pd-patching/"/>
</node>
</node>
<node TEXT="some HTML5 audio apps" LOCALIZED_STYLE_REF="styles.topic" ID="ID_613451534" CREATED="1314750613606" MODIFIED="1398300021844">
<edge STYLE="bezier" COLOR="#808080" WIDTH="thin"/>
<node TEXT="http://createdigitalmusic.com/2010/05/real-sound-synthesis-now-an-open-standard-in-the-browser/" ID="ID_1420902940" CREATED="1314750617993" MODIFIED="1314750617993" LINK="http://createdigitalmusic.com/2010/05/real-sound-synthesis-now-an-open-standard-in-the-browser/"/>
</node>
</node>
<node TEXT="market research" ID="ID_699742655" CREATED="1396559473551" MODIFIED="1398301311742">
<font BOLD="true"/>
<node TEXT="Python" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_916516019" CREATED="1396559566633" MODIFIED="1396560092654">
<node TEXT="second most popular" ID="ID_829925429" CREATED="1396559737508" MODIFIED="1396559863424"/>
<node TEXT="lowest hanging fruit" ID="ID_589507658" CREATED="1396560100066" MODIFIED="1396560106162"/>
</node>
<node TEXT="C++ &amp; design patterns" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1688448665" CREATED="1396559855846" MODIFIED="1396559896918">
<node TEXT="for quant, most in demand" ID="ID_1030416012" CREATED="1396559817623" MODIFIED="1396559893125"/>
</node>
<node TEXT="Visual Basic / Excel" ID="ID_898214375" CREATED="1396560176637" MODIFIED="1396560177209">
<node TEXT="widespread" ID="ID_1212598454" CREATED="1396560177469" MODIFIED="1396560183314"/>
</node>
<node TEXT="for high freq trading" LOCALIZED_STYLE_REF="default" ID="ID_295483324" CREATED="1396559985679" MODIFIED="1396560118898">
<node TEXT="be a serious expert in both optimisation of the language, compiler limitations and operating system internals" ID="ID_977436136" CREATED="1396559989709" MODIFIED="1396559990096"/>
</node>
<node TEXT="C#, Java" ID="ID_349851249" CREATED="1396559725745" MODIFIED="1396559727469">
<node TEXT="&quot;garbage-collection VM languages&quot;" ID="ID_628819958" CREATED="1396559727698" MODIFIED="1396559733074"/>
</node>
<node TEXT="Matlab, R" ID="ID_1156143360" CREATED="1396559743934" MODIFIED="1396559745420">
<node TEXT="used (along with Python) for prototyping" ID="ID_804198271" CREATED="1396559746023" MODIFIED="1396559758860"/>
</node>
</node>
<node TEXT="popular" ID="ID_208427814" CREATED="1429744531364" MODIFIED="1429997029821">
<node TEXT="popularity-ranked, with no dynamically typed languages except Python" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1854671053" CREATED="1429744560828" MODIFIED="1429744577672"/>
<node TEXT="C" ID="ID_442561692" CREATED="1429744542476" MODIFIED="1429744543123"/>
<node TEXT="Java" ID="ID_1291284477" CREATED="1429744550004" MODIFIED="1429744550939"/>
<node TEXT="C++" ID="ID_131593799" CREATED="1429744553100" MODIFIED="1429744553803"/>
<node TEXT="Python" ID="ID_1927730124" CREATED="1429744554092" MODIFIED="1429744555043"/>
<node TEXT="objective c: adds smalltalk-style messaging to C" ID="ID_1592701343" CREATED="1429744441900" MODIFIED="1429744452835"/>
<node TEXT="C#" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1176383099" CREATED="1429744583677" MODIFIED="1429744585096">
<node TEXT="has it all?" ID="ID_1485493688" CREATED="1429744661323" MODIFIED="1429744662809"/>
<node TEXT="http://en.wikipedia.org/wiki/C_Sharp_%28programming_language%29" ID="ID_1292190240" CREATED="1429744659125" MODIFIED="1429744659125" LINK="http://en.wikipedia.org/wiki/C_Sharp_%28programming_language%29"/>
</node>
<node TEXT="D" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1150045217" CREATED="1429744779005" MODIFIED="1429744780585">
<node TEXT="has it all?" ID="ID_1622715307" CREATED="1429744661323" MODIFIED="1429744662809"/>
<node TEXT="half as popular as C#" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1267902974" CREATED="1429744781428" MODIFIED="1429744792817"/>
</node>
</node>
<node TEXT="scala &gt; haskell" ID="ID_1667813509" CREATED="1430012020222" MODIFIED="1430883104788">
<node TEXT="(the argument, not the conclusion)" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1773689438" CREATED="1430883106933" MODIFIED="1430883113012"/>
<node TEXT="Scala is substantially better than Python" ID="ID_1383288117" CREATED="1430012025358" MODIFIED="1430012032910"/>
<node TEXT="I could have written it in Python already." ID="ID_1606611072" CREATED="1430012037223" MODIFIED="1430012048663"/>
<node TEXT="What I want is dwt fast, so I can use it. Lust for a beautiful codebase contradicts that goal." ID="ID_1615593320" CREATED="1430012053464" MODIFIED="1430012128008"/>
<node TEXT="I don&apos;t know that I will be a coder forever. Trying to get the situatie myself in the perfect language for that is premature, particularly given that even if I did become comfortable in Haskell, I would probably do most of my coding at work, at a non-Haskell job." ID="ID_595492599" CREATED="1430012141518" MODIFIED="1430012241790"/>
</node>
<node TEXT="haskellers like these" ID="ID_1865794380" CREATED="1426232462534" MODIFIED="1430970702213">
<node TEXT="rust" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1409754953" CREATED="1426232465629" MODIFIED="1426232978633">
<node TEXT="&quot;linear ownership&quot;" ID="ID_1787400215" CREATED="1426232979847" MODIFIED="1426232982915"/>
</node>
<node TEXT="cargo" ID="ID_1338594997" CREATED="1426232466446" MODIFIED="1426232467211"/>
<node TEXT="j" ID="ID_1658821356" CREATED="1426232467901" MODIFIED="1426232468594"/>
<node TEXT="julia" ID="ID_1876066867" CREATED="1426232468806" MODIFIED="1426232469788"/>
<node TEXT="f#" ID="ID_352687279" CREATED="1426232474158" MODIFIED="1426232475085"/>
<node TEXT="Scala" ID="ID_1347600354" CREATED="1426232597366" MODIFIED="1426232599469"/>
<node TEXT="Ceylon" ID="ID_349210474" CREATED="1426232604829" MODIFIED="1426232605981"/>
<node TEXT="Ocaml" ID="ID_1045146403" CREATED="1426232725998" MODIFIED="1426232727221"/>
<node TEXT="Flask" ID="ID_454474624" CREATED="1426232779830" MODIFIED="1426232780787"/>
<node TEXT="Nim" ID="ID_1235261281" CREATED="1426232810600" MODIFIED="1426232811579"/>
<node TEXT="Go" ID="ID_619987948" CREATED="1426232829398" MODIFIED="1426232830045"/>
<node TEXT="Haxe" ID="ID_698918062" CREATED="1426232877470" MODIFIED="1426232878563"/>
<node TEXT="more" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1958205724" CREATED="1426232915270" MODIFIED="1426232944883">
<node TEXT="Lua" ID="ID_633828662" CREATED="1426232568958" MODIFIED="1426232569691"/>
<node TEXT="C" ID="ID_1498483586" CREATED="1426232568278" MODIFIED="1426232568725"/>
<node TEXT="Ada" ID="ID_204040626" CREATED="1426232538414" MODIFIED="1426232539371"/>
<node TEXT="Javascript" ID="ID_1248026084" CREATED="1426232621141" MODIFIED="1426232623478"/>
<node TEXT="Java" ID="ID_747243255" CREATED="1426232795782" MODIFIED="1426232797653"/>
<node TEXT="C++" ID="ID_115038555" CREATED="1426232798494" MODIFIED="1426232799493"/>
</node>
</node>
</node>
<node TEXT="code, lib, mostly python" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" POSITION="right" ID="ID_1881209537" CREATED="1408162782289" MODIFIED="1422574400842">
<node TEXT="links in from &quot;to do/to sort/&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1641981561" CREATED="1409708724324" MODIFIED="1409708732494"/>
<node TEXT="by others" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_560886463" CREATED="1408251107961" MODIFIED="1408251111891"/>
<node TEXT="how" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1074344273" CREATED="1408250199638" MODIFIED="1408250203063">
<node TEXT="no need to sort between ..." LOCALIZED_STYLE_REF="default" ID="ID_964382505" CREATED="1408249589782" MODIFIED="1408250205834">
<node TEXT="useful as model vs. useful to call" ID="ID_718516536" CREATED="1408249600445" MODIFIED="1408249611120"/>
</node>
<node TEXT="learn what for, learn how, use" LOCALIZED_STYLE_REF="default" ID="ID_82285417" CREATED="1408162902648" MODIFIED="1408250205831">
<node TEXT="and get" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1661539072" CREATED="1408250154672" MODIFIED="1408250159906"/>
</node>
</node>
<node TEXT="see also &quot;lang, app&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_45594347" CREATED="1408250184440" MODIFIED="1408250188109"/>
<node TEXT="graph libraries" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1801942405" CREATED="1408086400731" MODIFIED="1408250100335">
<node TEXT="pygraph" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1359243540" CREATED="1408082047520" MODIFIED="1408249465884">
<node TEXT="to do" LOCALIZED_STYLE_REF="default" ID="ID_704342716" CREATED="1408085009501" MODIFIED="1408173051156">
<node TEXT="questions by doc" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1981792843" CREATED="1408085424909" MODIFIED="1408085446804"/>
<node TEXT="digraph.py" ID="ID_402286989" CREATED="1408084995550" MODIFIED="1408085450246">
<node TEXT="incidence" ID="ID_1980870674" CREATED="1408085015852" MODIFIED="1408085444143">
<node TEXT="is a node&apos;s incident nodes the ones it points to?" ID="ID_1555445602" CREATED="1408085023044" MODIFIED="1408085032390"/>
<node TEXT="incidence &#x2260; neighborness" ID="ID_1010872486" CREATED="1408085053361" MODIFIED="1408085058460"/>
</node>
<node TEXT="yield" ID="ID_937083412" CREATED="1408085118851" MODIFIED="1408085444942">
<node TEXT="Python generally" ID="ID_1066453582" CREATED="1408085126658" MODIFIED="1408085129773"/>
</node>
</node>
<node TEXT="utils.py" ID="ID_1364973491" CREATED="1408085448299" MODIFIED="1408085461605">
<node TEXT="heap, priority queue" ID="ID_1286887922" CREATED="1408085463209" MODIFIED="1408085468012"/>
</node>
<node TEXT="traversal.py" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_23957292" CREATED="1408085508724" MODIFIED="1408085511119"/>
<node TEXT="filters/" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_275674336" CREATED="1408086040164" MODIFIED="1408086046725"/>
</node>
<node TEXT="what I&apos;ve already done" ID="ID_745112224" CREATED="1408084930513" MODIFIED="1408084934836">
<node TEXT="lightly skimmed &quot;mixins&quot;" ID="ID_1854922157" CREATED="1408084935928" MODIFIED="1408084948755"/>
<node TEXT="read well enough* classes/{graph, exceptions, hypergraph}" ID="ID_963678567" CREATED="1408084954824" MODIFIED="1408084992602">
<node TEXT="at least for the first time" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_150157170" CREATED="1408084969419" MODIFIED="1408084972207"/>
</node>
</node>
<node TEXT="worth reviewing" ID="ID_1551513916" CREATED="1408084892805" MODIFIED="1408084895728">
<node TEXT="the Exceptions file" LOCALIZED_STYLE_REF="default" ID="ID_1104973016" CREATED="1408083603235" MODIFIED="1408084898493">
<node TEXT="and its later uses" ID="ID_1332235132" CREATED="1408083616129" MODIFIED="1408083619300"/>
</node>
</node>
<node TEXT="ref&apos;s" LOCALIZED_STYLE_REF="styles.topic" ID="ID_836786767" CREATED="1408083597242" MODIFIED="1408085161866">
<node TEXT="I have pygraph on python2." ID="ID_1997784221" CREATED="1408081957256" MODIFIED="1408081976633"/>
<node TEXT="I have source code at computer/languages, apps/Python/pygraph" ID="ID_1570999997" CREATED="1408083320566" MODIFIED="1408083572864"/>
</node>
<node TEXT="why" LOCALIZED_STYLE_REF="styles.topic" ID="ID_282920762" CREATED="1408085148920" MODIFIED="1408085161868">
<node TEXT="coding style &gt;&gt; mine" ID="ID_1123830152" CREATED="1408082052616" MODIFIED="1408083315570"/>
</node>
</node>
</node>
<node TEXT="text doc apps" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_182634710" CREATED="1408249556105" MODIFIED="1408250104973">
<node TEXT="to do/PM, in wx" ID="ID_546478733" CREATED="1408137291556" MODIFIED="1408163131989">
<node TEXT="http://pythonsource.com/open-source/project-management/task-coach" ID="ID_1272824930" CREATED="1408137287881" MODIFIED="1408137287881" LINK="http://pythonsource.com/open-source/project-management/task-coach"/>
</node>
<node TEXT="editors" ID="ID_1625493040" CREATED="1408162974489" MODIFIED="1408162975445">
<node TEXT="links in" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_427370195" CREATED="1408162752836" MODIFIED="1408162767042"/>
<node TEXT="some of these are IDEs, I think" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1075063956" CREATED="1408163036810" MODIFIED="1408163090233"/>
<node TEXT="simple, in PyQt" LOCALIZED_STYLE_REF="default" ID="ID_1139391427" CREATED="1408133326501" MODIFIED="1408162986963">
<node TEXT="http://straightedgelinux.com/blog/python/html/pyqtxt.html" ID="ID_648562950" CREATED="1408133330482" MODIFIED="1408133330482" LINK="http://straightedgelinux.com/blog/python/html/pyqtxt.html"/>
<node TEXT="menus" ID="ID_1897725148" CREATED="1408133389840" MODIFIED="1408133390659"/>
<node TEXT="file i/o" ID="ID_1178346587" CREATED="1408133364219" MODIFIED="1408133365518"/>
<node TEXT="copy paste" ID="ID_1285675929" CREATED="1408133361514" MODIFIED="1408133363868"/>
<node TEXT="no undo, redo" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_27248967" CREATED="1408133896299" MODIFIED="1408133912752"/>
</node>
<node TEXT="eric" ID="ID_653245362" CREATED="1408134067987" MODIFIED="1408134068671"/>
<node TEXT="ideas" ID="ID_518444375" CREATED="1408134068875" MODIFIED="1408134069582"/>
<node TEXT="LeoEditor" ID="ID_1750206749" CREATED="1408134080834" MODIFIED="1408134083973"/>
<node TEXT="ninja-ide" ID="ID_1111971973" CREATED="1408134094705" MODIFIED="1408134100828"/>
<node TEXT="Spyder" ID="ID_1781417819" CREATED="1408134134534" MODIFIED="1408134135536"/>
</node>
<node TEXT="IDE" ID="ID_152606309" CREATED="1408137513338" MODIFIED="1408163075730">
<node TEXT="some of these" ID="ID_1959168119" CREATED="1408163100044" MODIFIED="1408163104071">
<node TEXT="links out" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1989031566" CREATED="1408162751012" MODIFIED="1408162767041">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_427370195" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="a list" ID="ID_329421640" CREATED="1408163072447" MODIFIED="1408163073538">
<node TEXT="http://pythonsource.com/open-source/ides" ID="ID_689257766" CREATED="1408137516438" MODIFIED="1408137516438" LINK="http://pythonsource.com/open-source/ides"/>
</node>
<node TEXT="pyscripter" ID="ID_1051991098" CREATED="1408131832300" MODIFIED="1408163081585">
<node TEXT="https://code.google.com/p/pyscripter/" ID="ID_1358586666" CREATED="1408131834965" MODIFIED="1408131834965" LINK="https://code.google.com/p/pyscripter/"/>
</node>
</node>
</node>
<node TEXT="graphics" ID="ID_825579900" CREATED="1408162889743" MODIFIED="1408162890898">
<node TEXT="games" ID="ID_951402680" CREATED="1408162830406" MODIFIED="1408162892626">
<node TEXT="links out" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1312747935" CREATED="1408162751012" MODIFIED="1408162767041">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1874197545" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="3D modeling in Python" ID="ID_355848477" CREATED="1408132930930" MODIFIED="1408132937243">
<node TEXT="https://sourceforge.net/projects/python-sa/?source=directory" ID="ID_187534207" CREATED="1408132937487" MODIFIED="1408132937487" LINK="https://sourceforge.net/projects/python-sa/?source=directory"/>
</node>
</node>
<node TEXT="django" LOCALIZED_STYLE_REF="default" ID="ID_1465358724" CREATED="1408088236560" MODIFIED="1408249536127">
<node ID="ID_1214548260" CREATED="1408249536728" MODIFIED="1408249536728"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      MVC, written in Python, downloaded
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="in computing/.../pyuthon" ID="ID_1361713758" CREATED="1408088384534" MODIFIED="1408088389379"/>
</node>
<node TEXT="&quot;top 400&quot;" ID="ID_52689346" CREATED="1408128994449" MODIFIED="1408250111346">
<font BOLD="true"/>
<node TEXT="extracted to below, the entire list was" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1269481640" CREATED="1408249726726" MODIFIED="1408249746744">
<node TEXT="2014 08 15" ID="ID_734171844" CREATED="1408249748613" MODIFIED="1408249751080"/>
</node>
<node LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1816703070" CREATED="1408162795974" MODIFIED="1408162799898"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      open-source Python projects
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="http://pythonhackers.com/open-source/" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_749686160" CREATED="1408128993085" MODIFIED="1408162799901" LINK="http://pythonhackers.com/open-source/"/>
<node TEXT="web" ID="ID_828199334" CREATED="1408162283823" MODIFIED="1408162284618">
<node TEXT="web mining" ID="ID_1867609518" CREATED="1408129264720" MODIFIED="1408129266186">
<node TEXT="http://pythonhackers.com/open-source/clips/pattern" ID="ID_811955854" CREATED="1408129266470" MODIFIED="1408129266470" LINK="http://pythonhackers.com/open-source/clips/pattern"/>
<node TEXT="with tools for scraping, natural language processing, machine learning, network analysis and visualization." ID="ID_232326239" CREATED="1408129280590" MODIFIED="1408129282416"/>
</node>
<node TEXT="for automating interactions with websites" ID="ID_794376457" CREATED="1408130800794" MODIFIED="1408130806487">
<node TEXT="https://github.com/hickford/MechanicalSoup" ID="ID_1046282850" CREATED="1408130806796" MODIFIED="1408130806796" LINK="https://github.com/hickford/MechanicalSoup"/>
</node>
<node TEXT="Facebook" ID="ID_1259690859" CREATED="1408130680558" MODIFIED="1408130681776">
<node TEXT="https://github.com/pythonforfacebook/facebook-sdk" ID="ID_216838511" CREATED="1408130679904" MODIFIED="1408130679904" LINK="https://github.com/pythonforfacebook/facebook-sdk"/>
</node>
<node TEXT="trading" ID="ID_1800052303" CREATED="1408162620672" MODIFIED="1408162622080">
<font BOLD="true"/>
<node TEXT="algorithmic trading" ID="ID_501192458" CREATED="1408129668905" MODIFIED="1408129671212">
<node TEXT="web, data" ID="ID_1225715751" CREATED="1408162320674" MODIFIED="1408162322383"/>
<node TEXT="http://pythonhackers.com/open-source/quantopian/zipline" ID="ID_869885420" CREATED="1408129671516" MODIFIED="1408129671516" LINK="http://pythonhackers.com/open-source/quantopian/zipline"/>
</node>
<node TEXT="http://pythonhackers.com/open-source/maxme/bitcoin-arbitrage" ID="ID_1370721368" CREATED="1408131536129" MODIFIED="1408131536129" LINK="http://pythonhackers.com/open-source/maxme/bitcoin-arbitrage"/>
</node>
</node>
<node TEXT="productivity" ID="ID_1772969462" CREATED="1408162491772" MODIFIED="1408162493583">
<node TEXT="see also &quot;code autocompletion&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_288807065" CREATED="1408162518665" MODIFIED="1408162524051"/>
<node TEXT="create and view interactive cheat-sheets on the command line" ID="ID_1636216145" CREATED="1408130896746" MODIFIED="1408130903756">
<node TEXT="https://github.com/chrisallenlane/cheat" ID="ID_1934638797" CREATED="1408130904027" MODIFIED="1408130904027" LINK="https://github.com/chrisallenlane/cheat"/>
</node>
<node TEXT="automatic testing" ID="ID_1669509190" CREATED="1408137223586" MODIFIED="1408137227893">
<node TEXT="http://pythonsource.com/open-source/testing-tools/pyunit" ID="ID_314648207" CREATED="1408137228140" MODIFIED="1408137228140" LINK="http://pythonsource.com/open-source/testing-tools/pyunit"/>
</node>
<node TEXT="generates fake data" ID="ID_1921497096" CREATED="1408129328986" MODIFIED="1408129335517">
<node TEXT="http://pythonhackers.com/open-source/joke2k/faker" ID="ID_1288544247" CREATED="1408129329888" MODIFIED="1408129329888" LINK="http://pythonhackers.com/open-source/joke2k/faker"/>
</node>
</node>
<node TEXT="data" ID="ID_1894881522" CREATED="1408162288951" MODIFIED="1408162289681">
<node TEXT="see also &quot;web mining&quot; and &quot;productivity&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1542581024" CREATED="1408162397234" MODIFIED="1408163388845"/>
<node TEXT="http://matplotlib.org/" ID="ID_275110668" CREATED="1408129883136" MODIFIED="1408129883136" LINK="http://matplotlib.org/"/>
<node TEXT="https://github.com/scipy/scipy" ID="ID_690134662" CREATED="1408130046761" MODIFIED="1408130046761" LINK="https://github.com/scipy/scipy"/>
<node TEXT="http://www.numpy.org/" ID="ID_121947866" CREATED="1408130747818" MODIFIED="1408130747818" LINK="http://www.numpy.org/"/>
<node TEXT="text" ID="ID_851448204" CREATED="1408163367403" MODIFIED="1408163368507">
<font BOLD="true"/>
<node TEXT="text search" ID="ID_490757361" CREATED="1408137266383" MODIFIED="1408137267778">
<node TEXT="http://pythonsource.com/open-source/search-engines/advas" ID="ID_623363171" CREATED="1408137268002" MODIFIED="1408137268002" LINK="http://pythonsource.com/open-source/search-engines/advas"/>
</node>
<node TEXT="fuzzy string matching" ID="ID_1731953108" CREATED="1408130575071" MODIFIED="1408130577514">
<node TEXT="https://github.com/seatgeek/fuzzywuzzy" ID="ID_1254985070" CREATED="1408130573937" MODIFIED="1408130573937" LINK="https://github.com/seatgeek/fuzzywuzzy"/>
</node>
<node TEXT="text analysis" ID="ID_1720708432" CREATED="1408129595713" MODIFIED="1408129597419">
<node TEXT="http://pythonhackers.com/open-source/sloria/TextBlob" ID="ID_1449429028" CREATED="1408129597666" MODIFIED="1408129597666" LINK="http://pythonhackers.com/open-source/sloria/TextBlob"/>
</node>
</node>
<node TEXT="graph" ID="ID_595200265" CREATED="1408130999912" MODIFIED="1408162543026">
<font BOLD="true"/>
<node TEXT="a collection" LOCALIZED_STYLE_REF="default" ID="ID_961622458" CREATED="1408086493828" MODIFIED="1408173242738">
<font BOLD="true"/>
<node TEXT="what looked best already extracted (uncles of this green node)" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_768633954" CREATED="1408173243610" MODIFIED="1408173326846"/>
<node TEXT="https://wiki.python.org/moin/PythonGraphApi" ID="ID_1582681427" CREATED="1408086399760" MODIFIED="1408086399760" LINK="https://wiki.python.org/moin/PythonGraphApi"/>
</node>
<node TEXT="pygraph" ID="ID_1591971989" CREATED="1408162545657" MODIFIED="1408162547186">
<node TEXT="elsewhere" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_701626127" CREATED="1408173300349" MODIFIED="1408173305238"/>
</node>
<node TEXT="http://graph-tool.skewed.de/" ID="ID_561495795" CREATED="1408086493112" MODIFIED="1408086493112" LINK="http://graph-tool.skewed.de/">
<node TEXT="links in" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1124411821" CREATED="1407000263213" MODIFIED="1407000275472"/>
</node>
</node>
<node TEXT="stats, metrics" ID="ID_1160035636" CREATED="1408131516664" MODIFIED="1408162588508">
<font BOLD="true"/>
<node TEXT="https://github.com/statsmodels/statsmodels" ID="ID_47143387" CREATED="1408131518883" MODIFIED="1408131518883" LINK="https://github.com/statsmodels/statsmodels"/>
</node>
<node TEXT="crypto" ID="ID_569686273" CREATED="1408162647670" MODIFIED="1408163351620">
<font BOLD="true"/>
<node TEXT="http://pythonhackers.com/open-source/dlitz/pycrypto" ID="ID_1220093599" CREATED="1408131736087" MODIFIED="1408131736087" LINK="http://pythonhackers.com/open-source/dlitz/pycrypto"/>
<node TEXT="http://pythonsource.com/open-source/security/fcrypt" ID="ID_1033202851" CREATED="1408137247197" MODIFIED="1408137247197" LINK="http://pythonsource.com/open-source/security/fcrypt"/>
</node>
</node>
<node TEXT="game" ID="ID_1111144689" CREATED="1408162299133" MODIFIED="1408162299617">
<node TEXT="minecraft clone" ID="ID_1075970977" CREATED="1408129626541" MODIFIED="1408129628776">
<node TEXT="http://pythonhackers.com/open-source/fogleman/Minecraft" ID="ID_415652119" CREATED="1408129629024" MODIFIED="1408129629024" LINK="http://pythonhackers.com/open-source/fogleman/Minecraft"/>
</node>
<node TEXT="Mario-Level-1" ID="ID_1219396625" CREATED="1408131434777" MODIFIED="1408131435069">
<node TEXT="https://github.com/justinmeister/Mario-Level-1" ID="ID_628998940" CREATED="1408131439786" MODIFIED="1408131439786" LINK="https://github.com/justinmeister/Mario-Level-1"/>
</node>
<node TEXT="links in" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1874197545" CREATED="1408162752836" MODIFIED="1408162767042"/>
</node>
<node TEXT="bundle" LOCALIZED_STYLE_REF="default" ID="ID_477573607" CREATED="1408162317059" MODIFIED="1408162334848">
<node TEXT="django" ID="ID_664462912" CREATED="1408129698039" MODIFIED="1408129699594">
<node TEXT="http://pythonhackers.com/open-source/django/django" ID="ID_1713806493" CREATED="1408129699873" MODIFIED="1408129699873" LINK="http://pythonhackers.com/open-source/django/django"/>
</node>
</node>
<node TEXT="understanding" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1009461553" CREATED="1408162367614" MODIFIED="1408163244176">
<node TEXT="see also &quot;data&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1926222634" CREATED="1408162378372" MODIFIED="1408162384287"/>
<node TEXT="symbolic algebra" ID="ID_1234806489" CREATED="1408130062358" MODIFIED="1408130065720">
<node TEXT="https://github.com/sympy/sympy" ID="ID_1133515850" CREATED="1408130060144" MODIFIED="1408130060144" LINK="https://github.com/sympy/sympy"/>
</node>
<node TEXT="code autocompletion" ID="ID_1249687385" CREATED="1408130689412" MODIFIED="1408130694401">
<node TEXT="https://github.com/davidhalter/jedi" ID="ID_1186100666" CREATED="1408130530749" MODIFIED="1408130530749" LINK="https://github.com/davidhalter/jedi"/>
<node TEXT="works for EMacs, vi, not JEdit" ID="ID_836112613" CREATED="1408130532138" MODIFIED="1408130539477"/>
</node>
<node TEXT="https://github.com/ajalt/fuckitpy" LOCALIZED_STYLE_REF="default" ID="ID_996531584" CREATED="1408130385139" MODIFIED="1408163243391" LINK="https://github.com/ajalt/fuckitpy"/>
<node TEXT="patterns (canonical ones) in python" LOCALIZED_STYLE_REF="default" ID="ID_343443657" CREATED="1408129145274" MODIFIED="1408163243392">
<node TEXT="https://github.com/faif/python-patterns" ID="ID_936777096" CREATED="1408129150733" MODIFIED="1408129150733" LINK="https://github.com/faif/python-patterns"/>
</node>
<node TEXT="a &quot;parser generator&quot;" LOCALIZED_STYLE_REF="default" ID="ID_764920645" CREATED="1408137384654" MODIFIED="1408163231521">
<node TEXT="http://pythonsource.com/open-source/parser-generators/simpleparse" ID="ID_1899450515" CREATED="1408137389633" MODIFIED="1408137389633" LINK="http://pythonsource.com/open-source/parser-generators/simpleparse"/>
</node>
</node>
</node>
<node TEXT="mine, orphaned tool" ID="ID_1661054507" CREATED="1408174662755" MODIFIED="1424148206553">
<node TEXT=". having with no target problem" ID="ID_1639935026" CREATED="1424148206993" MODIFIED="1424148210949"/>
<node TEXT="refList, reflected list" ID="ID_738317792" CREATED="1406700412633" MODIFIED="1406700865406">
<node TEXT="definition" ID="ID_481665274" CREATED="1406701268253" MODIFIED="1406701269432">
<node TEXT="algebra: if O is an object in a refList R, then ..." LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1131263146" CREATED="1406700561688" MODIFIED="1406700967420"/>
<node TEXT="Inherits from list" ID="ID_1745325446" CREATED="1406700412633" MODIFIED="1406700412633"/>
<node TEXT="refList.offset (int)" ID="ID_1049451146" CREATED="1406700412633" MODIFIED="1406700464051">
<node TEXT="Used by prepend() and insert()." ID="ID_517944292" CREATED="1406700412633" MODIFIED="1406700412633"/>
</node>
<node TEXT="class lookback" ID="ID_454786256" CREATED="1406700412633" MODIFIED="1406700558100">
<node TEXT="O.lookback.referent" ID="ID_105784646" CREATED="1406700607301" MODIFIED="1406700822549">
<node TEXT="is the object P of which R is an attribute" ID="ID_1706735704" CREATED="1406700690959" MODIFIED="1406700776644"/>
</node>
<node TEXT="O.lookback.index (integer)" ID="ID_1759501673" CREATED="1406700549674" MODIFIED="1406700689562">
<node TEXT="is such that R[O.lookback.index] = O" ID="ID_1090537203" CREATED="1406700824380" MODIFIED="1406700841591"/>
</node>
</node>
<node TEXT="methods" ID="ID_845881818" CREATED="1406700499805" MODIFIED="1406700504720">
<node TEXT="[], retrieve" ID="ID_110252324" CREATED="1406701119208" MODIFIED="1406701129650">
<node TEXT="consider offset" ID="ID_305182279" CREATED="1406701135055" MODIFIED="1406701146121"/>
</node>
<node TEXT="append" ID="ID_592913902" CREATED="1406700877962" MODIFIED="1406700879045">
<node TEXT="req" ID="ID_114894208" CREATED="1406700935765" MODIFIED="1406700936578">
<node TEXT="O must have an attribute of class refList.lookback." ID="ID_252311501" CREATED="1406700412633" MODIFIED="1406700952378"/>
</node>
<node TEXT="steps" LOCALIZED_STYLE_REF="default" ID="ID_905677465" CREATED="1406700910430" MODIFIED="1406700934449">
<node TEXT="call super.[same method]" LOCALIZED_STYLE_REF="default" ID="ID_1713914767" CREATED="1406700412633" MODIFIED="1406701011963"/>
<node TEXT="R.lookback is set to the index of O in R." ID="ID_710982285" CREATED="1406700412633" MODIFIED="1406700412633"/>
</node>
</node>
<node TEXT="prepend" ID="ID_898527376" CREATED="1406700877962" MODIFIED="1406701030418">
<node TEXT="req" ID="ID_1020634530" CREATED="1406700935765" MODIFIED="1406700936578">
<node TEXT="O must have an attribute of class refList.lookback." ID="ID_522424581" CREATED="1406700412633" MODIFIED="1406700952378"/>
</node>
<node TEXT="steps" LOCALIZED_STYLE_REF="default" ID="ID_1973955086" CREATED="1406700910430" MODIFIED="1406700934449">
<node TEXT="call super.[same method]" LOCALIZED_STYLE_REF="default" ID="ID_1904313566" CREATED="1406700412633" MODIFIED="1406701011963"/>
<node TEXT="R.lookback is set to the index of O in R." ID="ID_1927149926" CREATED="1406700412633" MODIFIED="1406700412633"/>
<node TEXT="change R.offset" ID="ID_348197609" CREATED="1406701033455" MODIFIED="1406701106172"/>
</node>
</node>
<node TEXT="insert" ID="ID_771515949" CREATED="1406701056957" MODIFIED="1406701057815">
<node TEXT="req" ID="ID_1230680105" CREATED="1406700935765" MODIFIED="1406700936578">
<node TEXT="O must have an attribute of class refList.lookback." ID="ID_1069148835" CREATED="1406700412633" MODIFIED="1406700952378"/>
</node>
<node TEXT="steps" LOCALIZED_STYLE_REF="default" ID="ID_959816528" CREATED="1406700910430" MODIFIED="1406700934449">
<node TEXT="call super.[same method]" LOCALIZED_STYLE_REF="default" ID="ID_340257988" CREATED="1406700412633" MODIFIED="1406701011963"/>
<node TEXT="R.lookback is set to the index of O in R." ID="ID_1462636610" CREATED="1406700412633" MODIFIED="1406700412633"/>
<node TEXT="change some lookbacks" ID="ID_1126476772" CREATED="1406701162654" MODIFIED="1406701231227">
<node TEXT="and change R.offset if that helps speed" ID="ID_495734037" CREATED="1406701033455" MODIFIED="1406701237347"/>
<node TEXT="which it will half the time" ID="ID_751177374" CREATED="1406701209842" MODIFIED="1406701226028"/>
</node>
</node>
</node>
<node TEXT="remove: no change" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_924549416" CREATED="1406701066411" MODIFIED="1406701074101"/>
</node>
</node>
<node TEXT="compare" ID="ID_1633478238" CREATED="1406701517238" MODIFIED="1406701520496">
<node TEXT="without refList" ID="ID_1388362109" CREATED="1406701490341" MODIFIED="1406701515161">
<node TEXT="how" ID="ID_1211321233" CREATED="1406701800914" MODIFIED="1406701806236">
<node TEXT="let CO (hOlder) be a class with a list L of objects of class CE (held)" ID="ID_269111410" CREATED="1406701524845" MODIFIED="1406701587531"/>
<node TEXT="controller A wants to move E, a member of class CE, in CO.L" ID="ID_1507901335" CREATED="1406701592704" MODIFIED="1406701714515"/>
</node>
<node TEXT="cost" ID="ID_1593815106" CREATED="1406701797617" MODIFIED="1406701809483">
<node TEXT="A has to find E in CO.L first." ID="ID_1421879865" CREATED="1406701674370" MODIFIED="1406701720474"/>
</node>
</node>
<node TEXT="with refList" ID="ID_478959657" CREATED="1406701724766" MODIFIED="1406701726706">
<node TEXT="how" ID="ID_145286438" CREATED="1406701821893" MODIFIED="1406701822840">
<node TEXT="let CO (hOlder) be a class with a list L of objects of class CE (held)" ID="ID_1888328324" CREATED="1406701524845" MODIFIED="1406701587531"/>
</node>
<node TEXT="cost" ID="ID_1726945769" CREATED="1406701823957" MODIFIED="1406701824513">
<node TEXT="L must be a refList" ID="ID_1839847207" CREATED="1406701731310" MODIFIED="1406701914475"/>
<node TEXT="E and the other members of L must have a refList.lookback" ID="ID_74792328" CREATED="1406701914847" MODIFIED="1406701948546"/>
</node>
</node>
</node>
<node TEXT="when to use" ID="ID_1147432622" CREATED="1406701270725" MODIFIED="1406701271840">
<node TEXT="when awareness travels from one element of the list to another" ID="ID_226352796" CREATED="1406701277389" MODIFIED="1406701331724"/>
<node TEXT="when there is not a lot of insertion" ID="ID_165656312" CREATED="1406701332545" MODIFIED="1406701337307">
<node TEXT="if only using ends, fast" ID="ID_1582133441" CREATED="1406701339456" MODIFIED="1406701352346"/>
</node>
<node TEXT="when the increased complexity is worth it" ID="ID_15183365" CREATED="1406701356599" MODIFIED="1406701364971"/>
<node TEXT="when searching for a node in a list would take a long time" ID="ID_1012549912" CREATED="1406701378856" MODIFIED="1406701392407">
<node TEXT="because the list is long" ID="ID_1466042817" CREATED="1406701392596" MODIFIED="1406701395279"/>
</node>
</node>
<node TEXT="bio" ID="ID_66096996" CREATED="1406702028615" MODIFIED="1406702029418">
<node TEXT="If I faced a speed problem I would use it. I don&apos;t think I&apos;ll preempt such a speed problem in Overlarchy before I know it exists." ID="ID_1613485284" CREATED="1406701995353" MODIFIED="1406702026538"/>
</node>
</node>
</node>
<node TEXT="parser(s)" ID="ID_1961603250" CREATED="1408235778369" MODIFIED="1408250179820">
<node TEXT="why" ID="ID_1621575906" CREATED="1408235781216" MODIFIED="1408235782876">
<node TEXT="Write a music parser. Name a loop and reference its duration: from another one" ID="ID_1030720148" CREATED="1408235784201" MODIFIED="1408235784428">
<node TEXT="dup&apos;d under music.mm" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_591502263" CREATED="1408235785224" MODIFIED="1408235789291"/>
</node>
</node>
</node>
<node TEXT="finance: bloomberg open data API" LOCALIZED_STYLE_REF="default" ID="ID_986427343" CREATED="1396640043916" MODIFIED="1409708901423">
<node TEXT="http://www.openbloomberg.com/open-api/" ID="ID_1404948471" CREATED="1396640051069" MODIFIED="1396640051069" LINK="http://www.openbloomberg.com/open-api/"/>
<node TEXT="free code, but the data costs money" ID="ID_1281617920" CREATED="1396641183410" MODIFIED="1396641191361"/>
</node>
</node>
<node TEXT="general" POSITION="right" ID="ID_1960297552" CREATED="1424127276693" MODIFIED="1445314907135">
<font BOLD="false"/>
<node TEXT="casting from int to float is expensive" ID="ID_557036057" CREATED="1424127278661" MODIFIED="1424127284909"/>
<node TEXT="&quot;every application should have a menubar and a statusbar&quot;" ID="ID_1354809626" CREATED="1424157602841" MODIFIED="1424157612954">
<node TEXT="http://wiki.wxpython.org/Getting%20Started" ID="ID_1391564133" CREATED="1424157634552" MODIFIED="1424157634552" LINK="http://wiki.wxpython.org/Getting%20Started"/>
</node>
<node TEXT="code purity allows [Haskell] compiler to optimize, inc. parallelize" ID="ID_1863485510" CREATED="1430467983588" MODIFIED="1431029235219"/>
<node TEXT="keep &quot;a place to stand if must switch interfaces&quot;" ID="ID_964523071" CREATED="1438498552352" MODIFIED="1438498561726">
<node TEXT="http://research.microsoft.com/en-us/um/people/blampson/33-Hints/Acrobat.pdf" ID="ID_1915328013" CREATED="1438498570377" MODIFIED="1438498570377" LINK="http://research.microsoft.com/en-us/um/people/blampson/33-Hints/Acrobat.pdf"/>
</node>
</node>
<node TEXT="to do" POSITION="right" ID="ID_1525341159" CREATED="1445314052375" MODIFIED="1445314053157">
<node TEXT="&quot;stack upgrade&quot;" ID="ID_1284328300" CREATED="1445314054611" MODIFIED="1445314058027">
<node TEXT="upgrades Stack itself" ID="ID_1454753744" CREATED="1445314058892" MODIFIED="1445314070137"/>
</node>
</node>
<node TEXT="by lang" POSITION="right" ID="ID_1864816165" CREATED="1445314044031" MODIFIED="1445314905101">
<font BOLD="true"/>
<node TEXT="infreq" LOCALIZED_STYLE_REF="styles.topic" ID="ID_312333934" CREATED="1445329610576" MODIFIED="1445329612787">
<node TEXT="Python +" LOCALIZED_STYLE_REF="default" ID="ID_1939224739" CREATED="1409708337095" MODIFIED="1433283969017">
<font BOLD="true"/>
<node TEXT="= + gui, monome" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1364250115" CREATED="1433281371430" MODIFIED="1433281377414"/>
<node TEXT="for most of it, see where.mm" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_975806077" CREATED="1433281447034" MODIFIED="1433281457135"/>
<node TEXT="choi" ID="ID_1459797746" CREATED="1433281277821" MODIFIED="1433281282539">
<node TEXT="? add type-checks to Python code" LOCALIZED_STYLE_REF="default" ID="ID_1917246442" CREATED="1429752839336" MODIFIED="1430883257372"/>
<node TEXT="where is the standard library?" LOCALIZED_STYLE_REF="default" ID="ID_401262077" CREATED="1408821194152" MODIFIED="1433283199871">
<node ID="ID_153810141" CREATED="1408856373730" MODIFIED="1408856373730"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      ask StackOverflow:
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="I want to read it, not about it." ID="ID_137303883" CREATED="1408856396516" MODIFIED="1408856406417"/>
<node TEXT="Might need to find Python written in Python." LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_928306956" CREATED="1408856412628" MODIFIED="1408856429445">
<node TEXT="pypy is that" ID="ID_712846643" CREATED="1409711649395" MODIFIED="1409711651277"/>
</node>
</node>
<node TEXT="itertools" ID="ID_1231302606" CREATED="1408820333830" MODIFIED="1433283461820">
<node ID="ID_1771195995" CREATED="1433283462159" MODIFIED="1433283462159"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      was things I could easily write?
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="not cruc" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1046239278" CREATED="1433283076914" MODIFIED="1433283221643">
<font BOLD="true"/>
<node TEXT="what is __main__" ID="ID_495041335" CREATED="1408908042087" MODIFIED="1408908044778">
<node TEXT="https://docs.python.org/3/library/__main__.html" ID="ID_318877557" CREATED="1408908045201" MODIFIED="1408908045201" LINK="https://docs.python.org/3/library/__main__.html"/>
</node>
<node TEXT="multiple constructors, different arg signatures: possible?" ID="ID_805479700" CREATED="1406575473885" MODIFIED="1408920153997">
<node TEXT="motiv &amp; prior attempt" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1486995351" CREATED="1433282924190" MODIFIED="1433282938012">
<node TEXT="from Overlarchy" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_695645610" CREATED="1408920156791" MODIFIED="1433282944281"/>
<node TEXT="would like two constructors for nodeIm, but I couldn&apos;t do it easily" ID="ID_783950517" CREATED="1406410775000" MODIFIED="1406575498119"/>
<node TEXT="I tried a couple ways -- using two constructors (fails even in toys) and using one constructor with a default argument (failed in Overlarchy but works in the toy at right)" ID="ID_1124244217" CREATED="1406410789020" MODIFIED="1406410913107">
<node TEXT="class c:&#xa;  def __init__(self,num=1):&#xa;    self.num=num&#xa;&#xa;o = c()&#xa;o.num" ID="ID_838437402" CREATED="1406410913441" MODIFIED="1406410913901"/>
</node>
</node>
</node>
<node TEXT="exec(expr defining varible a), then refer to a" LOCALIZED_STYLE_REF="default" ID="ID_1852503083" CREATED="1407976077411" MODIFIED="1433283084444">
<node TEXT="the question" ID="ID_1613562131" CREATED="1407976094207" MODIFIED="1407976095427">
<node TEXT="how to create a shorthand for &quot;a = node(&apos;a&apos;)&quot; that only involves one instance of the string &quot;a&quot;?" ID="ID_1892920524" CREATED="1407976096145" MODIFIED="1407976122825"/>
</node>
<node TEXT="the code" ID="ID_1944195030" CREATED="1407976091744" MODIFIED="1407976092923">
<node TEXT="my question is about node.nodeOfSameName" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_52711084" CREATED="1407976143612" MODIFIED="1407976153088"/>
<node TEXT="class node:" ID="ID_769495842" CREATED="1407976080061" MODIFIED="1407976080061">
<node TEXT="def __init__(self,text,children=[],parents=[]):" ID="ID_1035599354" CREATED="1407976080061" MODIFIED="1407976080061">
<node TEXT="self.text = text" ID="ID_1734501712" CREATED="1407976080061" MODIFIED="1407976080061"/>
<node TEXT="self.children = children" ID="ID_1448073793" CREATED="1407976080061" MODIFIED="1407976080061"/>
<node TEXT="self.parents = parents" ID="ID_1961029401" CREATED="1407976080061" MODIFIED="1407976080061"/>
</node>
<node TEXT="def nodeOfSameName(text):" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_906246629" CREATED="1407976080061" MODIFIED="1407976135790">
<node TEXT="exec( text + &quot; = node(\&quot;&quot; + text + &quot;\&quot;)&quot; )" ID="ID_716497565" CREATED="1407976080061" MODIFIED="1407976080061"/>
<node TEXT="exec( text + &quot;.tree()&quot; )" ID="ID_269508268" CREATED="1407976080061" MODIFIED="1407976080061"/>
<node TEXT="return exec(text)" ID="ID_1633282025" CREATED="1407976080061" MODIFIED="1407976080061"/>
</node>
<node TEXT="def add(self, n):" ID="ID_578755513" CREATED="1407976080061" MODIFIED="1407976080061">
<node TEXT="if n not in self.children: self.children.append(n)" ID="ID_1570751296" CREATED="1407976080061" MODIFIED="1407976080061"/>
<node TEXT="if self not in n.parents: n.parents.append(self)" ID="ID_1073043194" CREATED="1407976080061" MODIFIED="1407976080061"/>
</node>
<node TEXT="def printTree(self):" LOCALIZED_STYLE_REF="default" ID="ID_774563824" CREATED="1407976080061" MODIFIED="1407976210685">
<font BOLD="false"/>
<node TEXT="shown = []" ID="ID_1216987717" CREATED="1407976080061" MODIFIED="1407976080061"/>
<node TEXT="sep = &quot;  &quot;" ID="ID_225690624" CREATED="1407976080061" MODIFIED="1407976080061"/>
<node TEXT="def f(node,indent):" ID="ID_1783356415" CREATED="1407976080061" MODIFIED="1407976080061">
<node TEXT="print(indent*sep + node.text)" ID="ID_910791628" CREATED="1407976080061" MODIFIED="1407976080061"/>
<node TEXT="print((indent+1)*sep + &quot;children:&quot;)" ID="ID_1347121706" CREATED="1407976080061" MODIFIED="1407976080061"/>
<node TEXT="shown.append(node) # PITFALL: Might have to precede recursion." ID="ID_431311580" CREATED="1407976080061" MODIFIED="1407976080061">
<node TEXT="# To ensure recursion ends." ID="ID_1737080401" CREATED="1407976080061" MODIFIED="1407976080061"/>
</node>
<node TEXT="for i in node.children:" ID="ID_1577679548" CREATED="1407976080061" MODIFIED="1407976080061">
<node TEXT="if i in shown:" ID="ID_300109275" CREATED="1407976080061" MODIFIED="1407976080061">
<node TEXT="print( (indent+2)*sep + i.text + &quot; (unfolded elsewhere)&quot; )" ID="ID_1422022704" CREATED="1407976080061" MODIFIED="1407976080061"/>
</node>
<node TEXT="else: f(i,indent+2)" ID="ID_1488017736" CREATED="1407976080061" MODIFIED="1407976080061"/>
</node>
</node>
</node>
</node>
<node TEXT="using it" ID="ID_487279070" CREATED="1407976087825" MODIFIED="1407976089566">
<node TEXT="node.nodeOfSameName(&quot;a&quot;)" ID="ID_628982442" CREATED="1407976080061" MODIFIED="1407976080061"/>
<node TEXT="node.nodeOfSameName(&quot;b&quot;)" ID="ID_1337867815" CREATED="1407976080062" MODIFIED="1407976080062"/>
<node TEXT="a.add(b)" ID="ID_263661564" CREATED="1407976080062" MODIFIED="1407976080062"/>
<node TEXT="node.nodeOfSameName(&quot;c&quot;)" ID="ID_1560213333" CREATED="1407976080062" MODIFIED="1407976080062"/>
<node TEXT="a.add(c)" ID="ID_1544625761" CREATED="1407976080062" MODIFIED="1407976080062"/>
<node TEXT="a.tree()" ID="ID_730467904" CREATED="1407976080063" MODIFIED="1407976080063"/>
</node>
</node>
</node>
<node TEXT="in a method, how to implicitly refer to the method&apos;s name and class?" ID="ID_816855344" CREATED="1408918842159" MODIFIED="1408918855920">
<node TEXT="start from a reference to &quot;this scope&quot;?" ID="ID_384787828" CREATED="1408918879891" MODIFIED="1408918897908"/>
</node>
<node TEXT="a global catch (Error) scope that starts debugger" ID="ID_1073630228" CREATED="1408828750586" MODIFIED="1433283164343"/>
<node TEXT="How can I avoid explicitly naming self&apos;s class when calling super()?" ID="ID_606946974" CREATED="1408830892102" MODIFIED="1408830913160">
<node TEXT="I did it in Overlarchy." ID="ID_834978802" CREATED="1408856130565" MODIFIED="1408856137918"/>
<node TEXT="But I don&apos;t understand the syntax." ID="ID_1999442393" CREATED="1408856156282" MODIFIED="1408856162404"/>
</node>
<node TEXT="refer to function name or docstring from within function" ID="ID_810786826" CREATED="1407217812493" MODIFIED="1408174310624"/>
<node TEXT="https://pypi.python.org/pypi/PyMonad/" ID="ID_465889936" CREATED="1414395256140" MODIFIED="1414395256140" LINK="https://pypi.python.org/pypi/PyMonad/"/>
<node TEXT="puzzle (complex, obscure): instances sharing list" ID="ID_717265206" CREATED="1407977016835" MODIFIED="1433283319995">
<node TEXT="the question" ID="ID_1738165423" CREATED="1407977024259" MODIFIED="1407977025582">
<node TEXT="why do the two instances a and b of class node share the same list of children?" ID="ID_1228355446" CREATED="1407977026236" MODIFIED="1407977051293"/>
</node>
<node TEXT="the code" ID="ID_224247962" CREATED="1407977022060" MODIFIED="1407977022935">
<node TEXT="class node:" ID="ID_387733984" CREATED="1407977019871" MODIFIED="1407977019871">
<node TEXT="def __init__(self,text,children=[],parents=[])" ID="ID_721815376" CREATED="1407977019871" MODIFIED="1407977019871">
<node TEXT="self.text = text" ID="ID_153455358" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="self.children = children" ID="ID_1571637912" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="self.parents = parents" ID="ID_1512234038" CREATED="1407977019871" MODIFIED="1407977019871"/>
</node>
<node TEXT="sep = &quot;  &quot;" ID="ID_1221543583" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="def nodeOfSameName(text): # Broken." ID="ID_214064527" CREATED="1407977019871" MODIFIED="1407977019871">
<node TEXT="# Purpose" ID="ID_1760394720" CREATED="1407977019871" MODIFIED="1407977019871">
<node TEXT="# I wanted this to let me write &quot;nodeOfSameName(&apos;a&apos;)&quot;" ID="ID_225077513" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="# instead of &quot;a = node(&apos;a&apos;)&quot;" ID="ID_147705805" CREATED="1407977019871" MODIFIED="1407977019871"/>
</node>
<node TEXT="exec( text + &quot; = node(\&quot;&quot; + text + &quot;\&quot;)&quot; )" ID="ID_1105100270" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="exec( text + &quot;.tree()&quot; )" ID="ID_1364480399" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="return exec(text)" ID="ID_265729916" CREATED="1407977019871" MODIFIED="1407977019871"/>
</node>
<node TEXT="def add(self, n):" ID="ID_1228591422" CREATED="1407977019871" MODIFIED="1407977019871">
<node TEXT="if self.children is n.children:" ID="ID_496786269" CREATED="1407977019871" MODIFIED="1407977019871">
<node TEXT="print(&quot;WHY DOES THIS LINE GET PRINTED?&quot;)" ID="ID_829630145" CREATED="1407977019871" MODIFIED="1407977019871"/>
</node>
<node TEXT="self.print()" ID="ID_1559823952" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="n.print()" ID="ID_1667258263" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="if n not in self.children: self.children.append(n)" ID="ID_537281264" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="print(1)" ID="ID_945059370" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="self.print()" ID="ID_1484228660" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="n.print()" ID="ID_1895041665" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="if self not in n.parents: n.parents.append(self)" ID="ID_1715672498" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="print(2)" ID="ID_1577911920" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="self.print()" ID="ID_1899648113" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="n.print()" ID="ID_77177993" CREATED="1407977019871" MODIFIED="1407977019871"/>
</node>
<node TEXT="def print(self):" ID="ID_271233500" CREATED="1407977019871" MODIFIED="1407977019871">
<node TEXT="print(self.text)" ID="ID_930430882" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="print(node.sep + &quot;children:&quot;)" ID="ID_1496310505" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="for i in self.children: print(2*node.sep + i.text)" ID="ID_727307832" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="print(node.sep + &quot;parents:&quot;)" ID="ID_830422024" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="for i in self.parents: print(2*node.sep + i.text)" ID="ID_1859304722" CREATED="1407977019871" MODIFIED="1407977019871"/>
</node>
<node TEXT="def printRec(self):" ID="ID_828106584" CREATED="1407977019871" MODIFIED="1407977019871">
<node TEXT="shown = []" ID="ID_1887980840" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="def f(node,indent=0):" ID="ID_1571647213" CREATED="1407977019871" MODIFIED="1407977019871">
<node TEXT="print(indent*node.sep + node.text)" ID="ID_776692352" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="shown.append(node) # PITFALL: Might have to precede recursion." ID="ID_69396963" CREATED="1407977019871" MODIFIED="1407977019871">
<node TEXT="# To ensure recursion ends." ID="ID_1390851112" CREATED="1407977019871" MODIFIED="1407977019871"/>
</node>
<node TEXT="for i in node.children:" ID="ID_210856261" CREATED="1407977019871" MODIFIED="1407977019871">
<node TEXT="if i in shown:" ID="ID_553783635" CREATED="1407977019871" MODIFIED="1407977019871">
<node TEXT="print( (indent+1)*node.sep + i.text + &quot; (unfolded elsewhere)&quot; )" ID="ID_1724746961" CREATED="1407977019871" MODIFIED="1407977019871"/>
</node>
<node TEXT="else: f(i,indent+1)" ID="ID_373246981" CREATED="1407977019871" MODIFIED="1407977019871"/>
</node>
</node>
<node TEXT="f(self)" ID="ID_1153906640" CREATED="1407977019871" MODIFIED="1407977019871"/>
</node>
</node>
<node TEXT="b = node(&quot;b&quot;)" ID="ID_1880375765" CREATED="1407977019872" MODIFIED="1407977019872"/>
<node TEXT="a = node(&quot;a&quot;)" ID="ID_1286338481" CREATED="1407977019871" MODIFIED="1407977019871"/>
<node TEXT="a.add(b)" ID="ID_1596581223" CREATED="1407977019872" MODIFIED="1407977019872"/>
<node TEXT="a.printRec()" ID="ID_1458845509" CREATED="1407977019872" MODIFIED="1407977019872"/>
</node>
</node>
<node TEXT="https://pypi.python.org/pypi/" ID="ID_349909980" CREATED="1398375379955" MODIFIED="1398375379955" LINK="https://pypi.python.org/pypi/"/>
<node TEXT="* hidden features" ID="ID_895159250" CREATED="1415745811634" MODIFIED="1415745825661">
<node TEXT="http://stackoverflow.com/questions/101268/hidden-features-of-python" ID="ID_447249196" CREATED="1415745809724" MODIFIED="1415745809724" LINK="http://stackoverflow.com/questions/101268/hidden-features-of-python"/>
</node>
<node TEXT="&quot;list filtering&quot;" LOCALIZED_STYLE_REF="default" ID="ID_406568987" CREATED="1398386394513" MODIFIED="1398453011650">
<node ID="ID_709047212" CREATED="1398453012055" MODIFIED="1398453012055"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      I missed that section.
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="of &quot;Dive into Python&quot;, online, free" ID="ID_1481303798" CREATED="1398452925697" MODIFIED="1398452932332"/>
</node>
<node TEXT="=&gt;: available in Python 3 and not 2?" LOCALIZED_STYLE_REF="default" ID="ID_1924972812" CREATED="1376112172298" MODIFIED="1398453000368">
<node TEXT="seeing it a lot here" ID="ID_1938603423" CREATED="1376112198113" MODIFIED="1376112200780">
<node TEXT="http://effbot.org/tkinterbook/tkinter-widget-configuration.htm" ID="ID_1341335505" CREATED="1376112201773" MODIFIED="1376112201773" LINK="http://effbot.org/tkinterbook/tkinter-widget-configuration.htm"/>
</node>
<node TEXT="can&apos;t seem to use it in interactive mode" ID="ID_1848396242" CREATED="1376112202337" MODIFIED="1376112212596"/>
</node>
<node TEXT="import yes, but include?" ID="ID_1889041298" CREATED="1374334971830" MODIFIED="1374335304778">
<node TEXT="&quot;import&quot; imports class definitions, but (I believe) does not execute any code." ID="ID_861404154" CREATED="1374334975190" MODIFIED="1374334982010"/>
<node TEXT="I don&apos;t know if there&apos;s anything equivalent to, say, SAS %include statements." ID="ID_378813850" CREATED="1374334983773" MODIFIED="1374335003027"/>
</node>
<node TEXT="didn&apos;t understand" LOCALIZED_STYLE_REF="default" ID="ID_916808513" CREATED="1346053175013" MODIFIED="1398454514766">
<font BOLD="true"/>
<node TEXT="bulletproofing the and-or trick" ID="ID_1958802162" CREATED="1346053178949" MODIFIED="1346103774489">
<node TEXT="http://www.diveintopython.net/power_of_introspection/and_or.html" ID="ID_1327332524" CREATED="1346053178489" MODIFIED="1346053178489" LINK="http://www.diveintopython.net/power_of_introspection/and_or.html"/>
<node TEXT="there&apos;s something complicated and strange-looking you can do to make sure it works even if b is false" ID="ID_1853615730" CREATED="1346103720137" MODIFIED="1346103743606"/>
<node TEXT="I haven&apos;t learned what that is." ID="ID_257419674" CREATED="1346103743859" MODIFIED="1346103762445"/>
</node>
<node TEXT="wrapper classes" ID="ID_907518552" CREATED="1346103690187" MODIFIED="1346103692855">
<node TEXT="http://www.diveintopython.net/object_oriented_framework/userdict.html" ID="ID_1693620491" CREATED="1346103693170" MODIFIED="1346103693170" LINK="http://www.diveintopython.net/object_oriented_framework/userdict.html"/>
</node>
</node>
</node>
</node>
<node TEXT="src" ID="ID_1089165018" CREATED="1433282888461" MODIFIED="1433282889638">
<node TEXT="the Python language refrence" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1591740400" CREATED="1408906403044" MODIFIED="1408906407140">
<node TEXT="Google does not (in the first few results) often link to." ID="ID_1403950253" CREATED="1408906413404" MODIFIED="1408906434128"/>
<node TEXT="https://docs.python.org/3/library/index.html" ID="ID_987088742" CREATED="1408906407574" MODIFIED="1408906407574" LINK="https://docs.python.org/3/library/index.html"/>
</node>
<node TEXT="online interpreters" ID="ID_108033544" CREATED="1345853354770" MODIFIED="1345853357245">
<node TEXT="http://shell.appspot.com/" ID="ID_1678032632" CREATED="1345853353984" MODIFIED="1345853353986" LINK="http://shell.appspot.com/"/>
<node TEXT="http://mathcs.holycross.edu/~kwalsh/python/" ID="ID_832875507" CREATED="1345853394435" MODIFIED="1345853394435" LINK="http://mathcs.holycross.edu/~kwalsh/python/"/>
</node>
<node TEXT="ref&apos;s" ID="ID_796835989" CREATED="1398454012452" MODIFIED="1398454013136">
<node TEXT="Dive into Python" LOCALIZED_STYLE_REF="default" ID="ID_5540843" CREATED="1345853375377" MODIFIED="1398454018872">
<node TEXT="http://www.diveintopython.net/getting_to_know_python" ID="ID_7369848" CREATED="1345852823365" MODIFIED="1345852823366" LINK="http://www.diveintopython.net/getting_to_know_python"/>
<node TEXT="which I also downloaded as a pdf" ID="ID_788747087" CREATED="1345853379570" MODIFIED="1345853385124"/>
</node>
<node TEXT="advanced books" ID="ID_1032898787" CREATED="1405800975935" MODIFIED="1405800977834">
<node TEXT="Expert Python Programming" ID="ID_1984523765" CREATED="1405800979366" MODIFIED="1405800979626">
<node TEXT="http://www.packtpub.com/expert-python-programming/book" ID="ID_1915921297" CREATED="1405801071750" MODIFIED="1405801071750" LINK="http://www.packtpub.com/expert-python-programming/book"/>
</node>
<node TEXT="Problem Solving with Algorithms and Data Structures" ID="ID_1849626044" CREATED="1405800989005" MODIFIED="1405800999776">
<node TEXT="http://www.interactivepython.org/courselib/static/pythonds/index.html" ID="ID_305194349" CREATED="1405800985835" MODIFIED="1405800985835" LINK="http://www.interactivepython.org/courselib/static/pythonds/index.html"/>
</node>
<node TEXT="A Guide to Python&apos;s Magic Methods (the &quot;__method__&quot;s)" ID="ID_1079396330" CREATED="1405801092478" MODIFIED="1405801118466">
<node TEXT="http://www.rafekettler.com/magicmethods.html" ID="ID_602407902" CREATED="1405801098657" MODIFIED="1405801098657" LINK="http://www.rafekettler.com/magicmethods.html"/>
</node>
<node TEXT="Writing Idiomatic Python" ID="ID_750976826" CREATED="1405801183719" MODIFIED="1405801188291">
<node TEXT="http://www.amazon.com/Writing-Idiomatic-Python-Jeff-Knupp-ebook/dp/B00B5VXMRG/" ID="ID_1834167238" CREATED="1405801188548" MODIFIED="1405801188548" LINK="http://www.amazon.com/Writing-Idiomatic-Python-Jeff-Knupp-ebook/dp/B00B5VXMRG/"/>
</node>
<node TEXT="The Hacker&apos;s Guide to Python" ID="ID_1188398180" CREATED="1405801373323" MODIFIED="1405801377261"/>
<node TEXT="Pro Python" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_47722837" CREATED="1405801225893" MODIFIED="1405801246416"/>
<node TEXT="Python Cookbook" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_185765841" CREATED="1405801260042" MODIFIED="1405801263244"/>
</node>
<node TEXT="a blog I like" ID="ID_500765268" CREATED="1405801480498" MODIFIED="1405801483710">
<node TEXT="https://julien.danjou.info/blog/2013/python-3.4-single-dispatch-generic-function" ID="ID_136147031" CREATED="1405801478085" MODIFIED="1405801478085" LINK="https://julien.danjou.info/blog/2013/python-3.4-single-dispatch-generic-function"/>
</node>
</node>
<node TEXT="Python motherlode" ID="ID_1578630894" CREATED="1406669467897" MODIFIED="1406669476163">
<node TEXT="tons of interesting titles" ID="ID_135002284" CREATED="1406669476368" MODIFIED="1406669479347"/>
<node TEXT="root" ID="ID_1165129951" CREATED="1406669490737" MODIFIED="1406669491418">
<node TEXT="https://docs.python.org/2/contents.html" ID="ID_774316582" CREATED="1406669489753" MODIFIED="1406669489753" LINK="https://docs.python.org/2/contents.html"/>
</node>
<node TEXT="some selections" ID="ID_760359234" CREATED="1406669493576" MODIFIED="1406669498818">
<node TEXT="performance measurement" ID="ID_613097249" CREATED="1406669508910" MODIFIED="1406669511465">
<node TEXT="https://docs.python.org/2/tutorial/stdlib.html#performance-measurement" ID="ID_1124670806" CREATED="1406669508409" MODIFIED="1406669508409" LINK="https://docs.python.org/2/tutorial/stdlib.html#performance-measurement"/>
</node>
<node TEXT="QC" ID="ID_1583641887" CREATED="1406669519837" MODIFIED="1406669521144">
<node TEXT="https://docs.python.org/2/tutorial/stdlib.html#quality-control" ID="ID_790339364" CREATED="1406669519272" MODIFIED="1406669519272" LINK="https://docs.python.org/2/tutorial/stdlib.html#quality-control"/>
</node>
<node TEXT="logging" ID="ID_1978322860" CREATED="1406669538356" MODIFIED="1406669539399">
<node TEXT="https://docs.python.org/2/tutorial/stdlib2.html#logging" ID="ID_799895628" CREATED="1406669539726" MODIFIED="1406669539726" LINK="https://docs.python.org/2/tutorial/stdlib2.html#logging"/>
</node>
<node TEXT="&quot;program frameworks&quot;: writing interpreters" ID="ID_1173364258" CREATED="1406669599800" MODIFIED="1406669606650">
<node TEXT="https://docs.python.org/2/library/frameworks.html" ID="ID_724512600" CREATED="1406669607010" MODIFIED="1406669607010" LINK="https://docs.python.org/2/library/frameworks.html"/>
</node>
<node TEXT="testing" ID="ID_1641839413" CREATED="1406669689633" MODIFIED="1406669691389">
<node TEXT="https://docs.python.org/2/library/development.html" ID="ID_303612260" CREATED="1406669691756" MODIFIED="1406669691756" LINK="https://docs.python.org/2/library/development.html"/>
</node>
<node TEXT="debugging, profiling" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_758391860" CREATED="1406669701744" MODIFIED="1406669706697">
<node TEXT="https://docs.python.org/2/library/debug.html" ID="ID_855683168" CREATED="1406669704986" MODIFIED="1406669704986" LINK="https://docs.python.org/2/library/debug.html"/>
</node>
<node TEXT="&quot;tokenizing, parsing, syntax analysis ...&quot;" ID="ID_1408300386" CREATED="1406669718151" MODIFIED="1406669758544">
<node TEXT="titled &quot;Python language services&quot;" ID="ID_1798747438" CREATED="1406669760444" MODIFIED="1406669768790"/>
<node TEXT="https://docs.python.org/2/library/language.html" ID="ID_11824020" CREATED="1406669721921" MODIFIED="1406669721921" LINK="https://docs.python.org/2/library/language.html"/>
</node>
</node>
</node>
<node TEXT="&quot;Dive into Python&quot;, where to resume" LOCALIZED_STYLE_REF="default" ID="ID_1134051754" CREATED="1345926678627" MODIFIED="1398453336575">
<node TEXT="I mostly* finished the first 6." LOCALIZED_STYLE_REF="default" ID="ID_1992288305" CREATED="1346108546158" MODIFIED="1398448013783">
<node TEXT="*somehow skipped list filtering, maybe other parts" ID="ID_1963343973" CREATED="1398447571563" MODIFIED="1398447596928"/>
</node>
<node TEXT="what chapters are left" ID="ID_1925190496" CREATED="1398448032702" MODIFIED="1398448133559">
<node TEXT="7 is regex&apos;s" ID="ID_584400081" CREATED="1398448026839" MODIFIED="1398448029729"/>
<node TEXT="8 (HTML) through* 12 (SOAP) are web stuff" ID="ID_1259281093" CREATED="1398448040502" MODIFIED="1398448116159">
<node TEXT="* except 10" ID="ID_1049227190" CREATED="1398448111184" MODIFIED="1398448112632"/>
</node>
<node TEXT="10 is &quot;scripts and streams&quot;" ID="ID_1524570061" CREATED="1398448060221" MODIFIED="1398448067985"/>
<node TEXT="13 (unit testing) through 16 (functional programming) look like* they should be read in sequence." ID="ID_1473589595" CREATED="1398447974655" MODIFIED="1398448127735">
<node TEXT="*judging by the start of ch. 16" ID="ID_138412783" CREATED="1398447999848" MODIFIED="1398448008442"/>
</node>
</node>
<node TEXT="http://www.diveintopython.net/toc/index.html" ID="ID_1952728568" CREATED="1398447559563" MODIFIED="1398447559563" LINK="http://www.diveintopython.net/toc/index.html"/>
</node>
</node>
<node TEXT="lang" ID="ID_1744679463" CREATED="1433282761683" MODIFIED="1433282762389">
<node TEXT="new in Python 3" LOCALIZED_STYLE_REF="default" ID="ID_644622699" CREATED="1399594977549" MODIFIED="1433285436084">
<node TEXT="exec (python3) &#x2260; execFile (python2)" ID="ID_1158462058" CREATED="1408239283002" MODIFIED="1408239298300">
<node TEXT="to run code from within interpreter" ID="ID_907887629" CREATED="1408239299289" MODIFIED="1408239303571"/>
<node TEXT="https://docs.python.org/3.3/whatsnew/3.0.html?highlight=execfile#builtins" ID="ID_1556018395" CREATED="1399595016223" MODIFIED="1399595016223" LINK="https://docs.python.org/3.3/whatsnew/3.0.html?highlight=execfile#builtins"/>
</node>
<node TEXT="&quot;print x&quot; -&gt; &quot;print(x)&quot;" ID="ID_1182357900" CREATED="1399594981678" MODIFIED="1399594988321"/>
<node TEXT="&quot;apply(f, args)&quot; -&gt; &quot;f(*args)&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1036180134" CREATED="1399594992846" MODIFIED="1433285444648">
<node TEXT="works on sets too" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1335097261" CREATED="1408751089189" MODIFIED="1408751111139"/>
<node TEXT="&gt;&gt;&gt; def f(x,y):" ID="ID_1653592725" CREATED="1408751108950" MODIFIED="1408751108950"/>
<node TEXT="...   return x+y" ID="ID_1251336766" CREATED="1408751108950" MODIFIED="1408751108950"/>
<node TEXT="..." ID="ID_1080773688" CREATED="1408751108951" MODIFIED="1408751108951"/>
<node TEXT="&gt;&gt;&gt; f(*[1,2])" ID="ID_469904439" CREATED="1408751108951" MODIFIED="1408751108951"/>
<node TEXT="3" ID="ID_1684557313" CREATED="1408751108951" MODIFIED="1408751108951"/>
<node TEXT="&gt;&gt;&gt; f(*{1,2})" ID="ID_441044707" CREATED="1408751108951" MODIFIED="1408751108951"/>
<node TEXT="3" ID="ID_866907503" CREATED="1408751108952" MODIFIED="1408751108952"/>
<node TEXT="&gt;&gt;&gt; f(*{1,2,3})" ID="ID_826244541" CREATED="1408751108952" MODIFIED="1408751108952"/>
<node TEXT="Traceback (most recent call last):" ID="ID_502030379" CREATED="1408751108952" MODIFIED="1408751108952">
<node TEXT="File &quot;&lt;stdin&gt;&quot;, line 1, in &lt;module&gt;" ID="ID_1938411518" CREATED="1408751108952" MODIFIED="1408751108952"/>
</node>
<node TEXT="TypeError: f() takes 2 positional arguments but 3 were given" ID="ID_306461078" CREATED="1408751108952" MODIFIED="1408751108952"/>
</node>
<node TEXT="Tkinter -&gt; tkinter" ID="ID_1811062772" CREATED="1402422714527" MODIFIED="1402422717866"/>
</node>
<node TEXT="! pitfalls" ID="ID_1050573758" CREATED="1433283880386" MODIFIED="1433283884279">
<node TEXT="for more: search for tag, &quot;pitfall&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_766012161" CREATED="1374296657618" MODIFIED="1383460160885"/>
<node TEXT="silent error : indent after coment without leading &quot;if 1:&quot;" LOCALIZED_STYLE_REF="default" ID="ID_1222124947" CREATED="1412236421914" MODIFIED="1433283927073">
<node ID="ID_1267002541" CREATED="1433283902776" MODIFIED="1433283902776"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      the code does not execute
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="some assignment is by value, other by reference" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_623842539" CREATED="1406242779946" MODIFIED="1433285668313">
<node TEXT="2014 07 24" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_277161811" CREATED="1406242794785" MODIFIED="1433285657375"/>
<node TEXT="numbers are assigned by value" ID="ID_423817222" CREATED="1406242800608" MODIFIED="1406242806643">
<node TEXT="&gt;&gt;&gt; x = 3&#xa;&gt;&gt;&gt; a = [x]&#xa;&gt;&gt;&gt; x=4&#xa;&gt;&gt;&gt; a&#xa;[3]" ID="ID_1153468280" CREATED="1406242807192" MODIFIED="1406242807844"/>
</node>
<node TEXT="objects are assigned by reference" ID="ID_1037376097" CREATED="1406242814895" MODIFIED="1406242819026">
<node TEXT="&gt;&gt;&gt; class x:&#xa;...   def __init__(self):&#xa;...     self.x = 3&#xa;...&#xa;&gt;&gt;&gt; a = x()&#xa;&gt;&gt;&gt; a&#xa;&lt;__main__.x object at 0x1027559e8&gt;&#xa;&gt;&gt;&gt; a.x&#xa;3&#xa;&gt;&gt;&gt; a.x = 4&#xa;&gt;&gt;&gt; list = [a]&#xa;&gt;&gt;&gt; list&#xa;[&lt;__main__.x object at 0x1027559e8&gt;]&#xa;&gt;&gt;&gt; list[0].x&#xa;4&#xa;&gt;&gt;&gt; a.x = 5&#xa;&gt;&gt;&gt; list[0].x&#xa;5" ID="ID_1262962847" CREATED="1406242825407" MODIFIED="1406242848806"/>
</node>
</node>
<node TEXT="? class-globals are not global" ID="ID_1022294295" CREATED="1398373586419" MODIFIED="1433285710308">
<node TEXT="? I wrote this last year at the latest; looking back now I am skeptical" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_271973449" CREATED="1433285717995" MODIFIED="1433285741129"/>
<node TEXT="global var&apos;s defined in a class file do not persist into the space the class is imported into" ID="ID_523667806" CREATED="1376278063885" MODIFIED="1376278085776"/>
</node>
<node TEXT="probably internalized" LOCALIZED_STYLE_REF="styles.topic" ID="ID_724228907" CREATED="1398373596444" MODIFIED="1398452891881">
<node TEXT="&quot;to the power of&quot; = &quot;**&quot;" ID="ID_147608981" CREATED="1385612303574" MODIFIED="1385612323796">
<node TEXT="tag power, tag exponential" ID="ID_884607796" CREATED="1398373515988" MODIFIED="1398373522074"/>
</node>
<node TEXT="use a colon after introducing a for loop" ID="ID_112913965" CREATED="1377226434724" MODIFIED="1398373539728"/>
<node TEXT="use str() to print, sometimes" ID="ID_1296024811" CREATED="1398373550723" MODIFIED="1398373557342">
<node TEXT="sometimes one has to str() something to print it. I don&apos;t understand when." LOCALIZED_STYLE_REF="styles.topic" ID="ID_776230781" CREATED="1376109662387" MODIFIED="1398373560595"/>
</node>
<node TEXT="the endpoint of a range is the first non-included index" LOCALIZED_STYLE_REF="default" ID="ID_1041983881" CREATED="1374301134981" MODIFIED="1398454447175">
<node TEXT="for compactness, is likely the best way" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1463006833" CREATED="1374301145973" MODIFIED="1374331286180">
<node TEXT="e.g. I can define the rotation of a list in these three lines" ID="ID_1732559745" CREATED="1374301164548" MODIFIED="1374301171223"/>
<node TEXT="def cycleRight( seq, dist ):&#xa;  start = dist % len(seq)&#xa;  return seq[start:] + seq[:start]" ID="ID_870713079" CREATED="1374301171716" MODIFIED="1374301175504"/>
</node>
<node TEXT="when accessing a list as in &quot;x[a,b]&quot;, b is the first elt NOT used" ID="ID_1492997626" CREATED="1374301250586" MODIFIED="1374301250933"/>
</node>
</node>
</node>
<node TEXT="interpreter, inc. interactive" ID="ID_442421256" CREATED="1433284265531" MODIFIED="1433285257625">
<node TEXT="*var on left side of assignment" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_369673275" CREATED="1405627413476" MODIFIED="1433285262788">
<node TEXT="&gt;&gt;&gt; first, *rest, last = [1,2,3,4]&#xa;&gt;&gt;&gt; rest&#xa;[2, 3]" ID="ID_1952005615" CREATED="1405627438002" MODIFIED="1405627439246"/>
</node>
<node TEXT="if line wrap not permitted, try parens" ID="ID_1704624289" CREATED="1408825038505" MODIFIED="1408825095194">
<node TEXT="this can fail" ID="ID_391246052" CREATED="1408825065152" MODIFIED="1408825066666">
<node TEXT="return &quot;long string&quot; +&#xa;  &quot;another&quot;" ID="ID_1443873903" CREATED="1408825045449" MODIFIED="1408825064707"/>
</node>
<node TEXT="but this succeeds" ID="ID_326004291" CREATED="1408825067632" MODIFIED="1408825070058">
<node TEXT="return( &quot;long string&quot; +&#xa;  &quot;another&quot; )" ID="ID_562947533" CREATED="1408825045449" MODIFIED="1408825074803"/>
</node>
</node>
<node TEXT="multi-line commends" ID="ID_931338891" CREATED="1407704047979" MODIFIED="1407704051599">
<node TEXT="&quot;&quot;&quot; ... &quot;&quot;&quot;" ID="ID_1952127390" CREATED="1407704052451" MODIFIED="1407704055198"/>
</node>
<node TEXT="can doc strings follow the colon: no" LOCALIZED_STYLE_REF="default" ID="ID_1155202317" CREATED="1407109233151" MODIFIED="1433284844837"/>
<node TEXT="semicolon ~ newline" ID="ID_613009706" CREATED="1406247781940" MODIFIED="1433285203003"/>
</node>
<node TEXT="values" ID="ID_77524671" CREATED="1433285323541" MODIFIED="1433285324613">
<node TEXT="&quot;is&quot; is a word" ID="ID_1518321999" CREATED="1405799843416" MODIFIED="1405799846603">
<node TEXT="like =" ID="ID_324220116" CREATED="1405799846785" MODIFIED="1405799848835"/>
<node TEXT="for a static &quot;mix_ingredients&quot; function, this works" ID="ID_1726191710" CREATED="1405799856743" MODIFIED="1405799875249">
<node TEXT="&gt;&gt;&gt; Pizza().mix_ingredients is Pizza.mix_ingredients&#xa;True" ID="ID_921582389" CREATED="1405799875398" MODIFIED="1405799875929"/>
</node>
<node TEXT="but not if it&apos;s an ordinary method" ID="ID_1432855842" CREATED="1405799881718" MODIFIED="1405799889824">
<node TEXT="because each instance of the Pizza class has its own associated instance of the function" ID="ID_229529301" CREATED="1405799890597" MODIFIED="1405799910908"/>
</node>
</node>
</node>
<node TEXT="functions" ID="ID_708532410" CREATED="1433284428721" MODIFIED="1433284429903">
<node TEXT="native operators" ID="ID_523209935" CREATED="1408173120453" MODIFIED="1408173122497">
<node TEXT="extending ==" ID="ID_474993486" CREATED="1408083277970" MODIFIED="1408083286565">
<node TEXT="class c:" ID="ID_1183351961" CREATED="1408083287166" MODIFIED="1408083287166">
<node TEXT="def __init__(self,x):" ID="ID_1761564611" CREATED="1408083287166" MODIFIED="1408083287166">
<node TEXT="self.x = x" ID="ID_749194265" CREATED="1408083287166" MODIFIED="1408083287166"/>
</node>
<node TEXT="def __eq__(self,other):" ID="ID_569265339" CREATED="1408083287166" MODIFIED="1408083287166">
<node TEXT="return self.x==other.x" ID="ID_1157847589" CREATED="1408083287166" MODIFIED="1408083287166"/>
</node>
</node>
<node TEXT="c(3)==c(4)" ID="ID_1389743949" CREATED="1408083287166" MODIFIED="1408083287166"/>
<node TEXT="c(3)==c(3)" ID="ID_1087157769" CREATED="1408083287167" MODIFIED="1408083287167"/>
</node>
<node TEXT="__repr__ might enable str( any object )" ID="ID_119348497" CREATED="1408173130317" MODIFIED="1408173145606"/>
<node TEXT="__str__ might enable &quot;%s&quot; substitution" ID="ID_126987324" CREATED="1408084483444" MODIFIED="1408084497918">
<node TEXT="quoting pygraph" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_918002833" CREATED="1408084511400" MODIFIED="1408084518423">
<node TEXT="specifically digraph.py" ID="ID_616705467" CREATED="1408084536342" MODIFIED="1408084551999"/>
</node>
<node TEXT="raise AdditionError(&quot;Node %s already in digraph&quot; % node)" ID="ID_1695203025" CREATED="1408084509586" MODIFIED="1408084509586"/>
</node>
</node>
<node TEXT="no return statement =&gt; NoneType" ID="ID_1984231120" CREATED="1433284666074" MODIFIED="1433284671539">
<node TEXT="what a function returns without a return statement is NoneType" ID="ID_324291427" CREATED="1407047103413" MODIFIED="1407047116176"/>
<node TEXT="which cannot, for instance, be summed with an int" ID="ID_282103149" CREATED="1407047117981" MODIFIED="1407047129616"/>
</node>
<node TEXT="no return in lambda" ID="ID_175117594" CREATED="1406787452398" MODIFIED="1433284859960"/>
</node>
<node TEXT="collections" ID="ID_770450645" CREATED="1433283612290" MODIFIED="1433283616712">
<font BOLD="true"/>
<node TEXT="generators" ID="ID_1270552036" CREATED="1408300847243" MODIFIED="1408300849109">
<node TEXT="like list comp&apos;n, but () instead of []" ID="ID_1678631999" CREATED="1408300853769" MODIFIED="1408300864381"/>
<node TEXT="unlike list comp&apos;n, generates elements on the fly; does not store them in memory" ID="ID_518435322" CREATED="1408300864752" MODIFIED="1408300879027"/>
<node TEXT="therefore can only be iterated over once" ID="ID_225737360" CREATED="1408300879207" MODIFIED="1408300886058"/>
<node TEXT="mygenerator = (x*x for x in range(3))" ID="ID_485473443" CREATED="1408300851786" MODIFIED="1408300852037"/>
</node>
<node TEXT="yield" ID="ID_705332759" CREATED="1408300752956" MODIFIED="1408300753816">
<node TEXT="why" ID="ID_1812627455" CREATED="1408301308112" MODIFIED="1408301338497">
<node TEXT="to iterate over a list without building and storing it" ID="ID_833538773" CREATED="1408301309248" MODIFIED="1408301364457"/>
<node TEXT="to save memory" ID="ID_708152763" CREATED="1408301333581" MODIFIED="1408301348816"/>
</node>
<node TEXT="how" ID="ID_135195933" CREATED="1408301305824" MODIFIED="1408301306491">
<node TEXT="&quot;is like return, except the function will return a generator&quot;" ID="ID_595763533" CREATED="1408300953312" MODIFIED="1408300967771"/>
<node TEXT="sample code" ID="ID_372219035" CREATED="1408300968655" MODIFIED="1408300974738">
<node TEXT="&gt;&gt;&gt; def createGenerator():&#xa;...    mylist = range(3)&#xa;...    for i in mylist:&#xa;...        yield i*i&#xa;...&#xa;&gt;&gt;&gt; mygenerator = createGenerator() # create a generator&#xa;&gt;&gt;&gt; print(mygenerator) # mygenerator is an object!&#xa;&lt;generator object createGenerator at 0xb7555c34&gt;&#xa;&gt;&gt;&gt; for i in mygenerator:&#xa;...     print(i)&#xa;0&#xa;1&#xa;4" ID="ID_1453416126" CREATED="1408300970487" MODIFIED="1408300970883"/>
</node>
</node>
</node>
<node TEXT="sets" ID="ID_680200811" CREATED="1408061367420" MODIFIED="1408061367983">
<node TEXT="https://docs.python.org/3/library/stdtypes.html?highlight=set#set" ID="ID_263795007" CREATED="1408061741687" MODIFIED="1408061741687" LINK="https://docs.python.org/3/library/stdtypes.html?highlight=set#set"/>
<node TEXT="pitfall: set() = the empty set" ID="ID_1035278305" CREATED="1408066384348" MODIFIED="1408066428534">
<node TEXT="{} is a dict, not a set" ID="ID_1729633741" CREATED="1408066409972" MODIFIED="1408066411374"/>
</node>
<node TEXT="instantiating" ID="ID_315818679" CREATED="1408061372908" MODIFIED="1408061376615">
<node TEXT="{1,2}" ID="ID_473084025" CREATED="1408061368860" MODIFIED="1408061372703"/>
<node TEXT="set([1,2])" ID="ID_1612751262" CREATED="1408061377747" MODIFIED="1408061381743"/>
<node TEXT="set( {1:3,2:4} )" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_396851784" CREATED="1408061415729" MODIFIED="1408061420633">
<node TEXT="keeps keys, discards values" ID="ID_375076149" CREATED="1408061421512" MODIFIED="1408061425075"/>
</node>
</node>
<node TEXT="methods" ID="ID_680743888" CREATED="1408061444941" MODIFIED="1408061446665">
<node TEXT="change contents, unary" ID="ID_1839469089" CREATED="1408061808516" MODIFIED="1408061900707">
<node TEXT="also |=, &amp;=, etc; see &quot;arithmetic&quot; (uncle of this)" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_253579890" CREATED="1408061771177" MODIFIED="1408061823199"/>
<node TEXT="add" ID="ID_290294251" CREATED="1408061827099" MODIFIED="1408061828430"/>
<node TEXT="remove &#x2260; discard" ID="ID_511615171" CREATED="1408061828795" MODIFIED="1408061869819">
<node TEXT="self.remove(x) throws an exception if self did not begin with x" ID="ID_1677708445" CREATED="1408061831082" MODIFIED="1408061847604"/>
</node>
<node TEXT="pop" ID="ID_1390840074" CREATED="1408061851450" MODIFIED="1408061853427">
<node TEXT="returns and removes an arbitrary element" ID="ID_1425316493" CREATED="1408061854520" MODIFIED="1408061860811"/>
</node>
<node TEXT="clear" ID="ID_1895038349" CREATED="1408061754345" MODIFIED="1408061864570"/>
</node>
<node TEXT="tests" ID="ID_1204528112" CREATED="1408061884310" MODIFIED="1408061884968">
<node TEXT="is in, is not in" ID="ID_34585785" CREATED="1408061447124" MODIFIED="1408061451448"/>
<node TEXT="self.isdisjoint(other)" LOCALIZED_STYLE_REF="default" ID="ID_1798648234" CREATED="1408061451669" MODIFIED="1408061768096"/>
<node TEXT="set &lt;= other" ID="ID_848885694" CREATED="1408061472091" MODIFIED="1408061474134"/>
<node TEXT="set &lt; other" ID="ID_1410191711" CREATED="1408061474339" MODIFIED="1408061479677">
<node TEXT="proper" ID="ID_257454880" CREATED="1408061516592" MODIFIED="1408061517426"/>
</node>
</node>
<node TEXT="arithmetic, binary" ID="ID_39072124" CREATED="1408061758057" MODIFIED="1408061915361">
<node TEXT="union, or &quot;|&quot;" ID="ID_1055914079" CREATED="1408061511647" MODIFIED="1408061545319">
<node TEXT="&gt;&gt;&gt; {1,2}.union({1,2,3})" ID="ID_1883570528" CREATED="1408061513426" MODIFIED="1408061513426"/>
<node TEXT="{1, 2, 3}" ID="ID_307444317" CREATED="1408061513426" MODIFIED="1408061513426"/>
<node TEXT="&gt;&gt;&gt; set( range(2) ) | set( range(5) )" ID="ID_664118222" CREATED="1408061577944" MODIFIED="1408061577944"/>
<node TEXT="{0, 1, 2, 3, 4}" ID="ID_1990926980" CREATED="1408061577944" MODIFIED="1408061577944"/>
</node>
<node TEXT="intersection, or &quot;&amp;&quot;" ID="ID_64704763" CREATED="1408061589818" MODIFIED="1408061594318">
<node TEXT="like union" ID="ID_1406423952" CREATED="1408061595922" MODIFIED="1408061597373"/>
</node>
<node TEXT="self.difference(other), or &quot;-&quot;" ID="ID_1855176614" CREATED="1408061612021" MODIFIED="1408061671199">
<node TEXT="&gt;&gt;&gt; set( range(5) ) - set( range(2) )" ID="ID_1406264769" CREATED="1408061633697" MODIFIED="1408061633697"/>
<node TEXT="{2, 3, 4}" ID="ID_1809754728" CREATED="1408061633697" MODIFIED="1408061633697"/>
<node TEXT="&gt;&gt;&gt; set( range(5) ).difference( set( range(2) ) )" ID="ID_169410482" CREATED="1408061662068" MODIFIED="1408061662068"/>
<node TEXT="{2, 3, 4}" ID="ID_494109323" CREATED="1408061662068" MODIFIED="1408061662068"/>
</node>
</node>
</node>
<node TEXT="&quot;set comprehension&quot;" ID="ID_16619871" CREATED="1410043041200" MODIFIED="1410043051469">
<node TEXT="I just invented that term but it seems likely already in use." LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_165369362" CREATED="1410043052927" MODIFIED="1410043068938"/>
<node TEXT="class Bunch:&#xa;  def __init__(self, **kwds):&#xa;    self.__dict__.update(kwds)&#xa;&#xa;x = Bunch(i=1)&#xa;y = Bunch(i=2)&#xa;{o.i for o in {x,y}}" ID="ID_735663938" CREATED="1410043043712" MODIFIED="1410043044996"/>
</node>
</node>
<node TEXT="dictionaries: function reference" ID="ID_1965571178" CREATED="1406331804076" MODIFIED="1406331807568">
<node TEXT="https://docs.python.org/2/library/stdtypes.html#mapping-types-dict" ID="ID_1778704922" CREATED="1406331807936" MODIFIED="1406331807936" LINK="https://docs.python.org/2/library/stdtypes.html#mapping-types-dict"/>
</node>
</node>
<node TEXT="control flow" ID="ID_1526404358" CREATED="1433284187414" MODIFIED="1433284189081">
<node TEXT="loops" ID="ID_1463707041" CREATED="1433283774991" MODIFIED="1433283776934">
<node TEXT="! careful deleting" ID="ID_252845060" CREATED="1433283779489" MODIFIED="1433283788416">
<node TEXT="From a for loop over a collection, cannot delete elts of collection." ID="ID_1044595676" CREATED="1408933554074" MODIFIED="1412369758524">
<node TEXT="need an iterator" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1274163839" CREATED="1412369734155" MODIFIED="1412369736979"/>
<node TEXT="in Python" ID="ID_1429185765" CREATED="1408933589719" MODIFIED="1408933591042"/>
<node TEXT="fails silently and unpredictably" ID="ID_1366398946" CREATED="1408933579408" MODIFIED="1408933584907"/>
</node>
</node>
</node>
<node TEXT="with" ID="ID_321263720" CREATED="1408300751845" MODIFIED="1408300752720">
<node TEXT="why" ID="ID_1935854021" CREATED="1408301918035" MODIFIED="1408301919206">
<node TEXT="to ensure a thing&apos;s cleanup methods are called after using it" ID="ID_1581557538" CREATED="1408301914923" MODIFIED="1408301942038"/>
</node>
<node TEXT="how" ID="ID_1490423262" CREATED="1408301920811" MODIFIED="1408301921366">
<node TEXT="in this code" ID="ID_508659220" CREATED="1408301771639" MODIFIED="1408301775657">
<node TEXT="with open(&apos;output.txt&apos;, &apos;w&apos;) as f:&#xa;    f.write(&apos;Hi there!&apos;)" ID="ID_802564424" CREATED="1408301777205" MODIFIED="1408301777545"/>
</node>
<node TEXT="f will be &quot;closed&quot; once the block is ended" ID="ID_1343916063" CREATED="1408301783637" MODIFIED="1408301794719"/>
<node TEXT="that&apos;s because [either the file type or the &quot;open&quot; method for it] is written as a &quot;controlled execution&quot;, something with an __enter__ method and an __exit__ method" ID="ID_816711510" CREATED="1408301794924" MODIFIED="1408301888422"/>
<node TEXT="__enter__ is called on entering the with statement, and __exit__ on leaving it" ID="ID_353019187" CREATED="1408301888635" MODIFIED="1408301904557"/>
<node TEXT="__exit__ is called no matter how the exit happens" ID="ID_1451137054" CREATED="1408301904761" MODIFIED="1408301913079"/>
</node>
</node>
</node>
<node TEXT="exceptions" ID="ID_1421209755" CREATED="1408776119529" MODIFIED="1409710972605">
<font BOLD="false"/>
<node TEXT="-1 reviewed" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1849129285" CREATED="1433284314216" MODIFIED="1433284319299"/>
<node TEXT="." ID="ID_150204479" CREATED="1433284298259" MODIFIED="1433284298893">
<node TEXT="&quot;error theory&quot; elsewhere" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1642683077" CREATED="1408776187306" MODIFIED="1408776193277"/>
<node TEXT="use the standard library exceptions" LOCALIZED_STYLE_REF="default" ID="ID_1308784354" CREATED="1408819832141" MODIFIED="1433283377787">
<node TEXT="lookup error is in there" ID="ID_458163770" CREATED="1408819838372" MODIFIED="1408819841263"/>
</node>
<node TEXT="finally executes even if there is a return or an exception caught before it. code after the try block would not." ID="ID_1393831587" CREATED="1408776122784" MODIFIED="1408776168264"/>
</node>
<node TEXT="." ID="ID_1313075350" CREATED="1408730910360" MODIFIED="1433284303783">
<node TEXT="why" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1675203985" CREATED="1408684508940" MODIFIED="1408747287106">
<node TEXT="realized on 2014 08 21" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1412554835" CREATED="1408747287857" MODIFIED="1408747307963"/>
<node TEXT="Suppress an error from some sources." LOCALIZED_STYLE_REF="default" ID="ID_23776829" CREATED="1408682395591" MODIFIED="1408684513653">
<node TEXT="this is why try-catch" ID="ID_372201860" CREATED="1408682428404" MODIFIED="1408682431599"/>
<node TEXT="if adding a relative that already exists happens from Set.addRel, it&apos;s fine to ignore" ID="ID_536624642" CREATED="1408682431803" MODIFIED="1408682457660"/>
</node>
<node TEXT="could write a top gglobal error catcher that prints the error" LOCALIZED_STYLE_REF="default" ID="ID_181046975" CREATED="1408682783659" MODIFIED="1408747252248">
<node TEXT="if I do not it to reach the default top handler, which aborts to report" ID="ID_337091301" CREATED="1408747252908" MODIFIED="1408747278111"/>
<node TEXT="earlier local ones can stop an error from reaching it" ID="ID_1426276825" CREATED="1408682804473" MODIFIED="1408682811340"/>
</node>
</node>
<node TEXT="https://docs.python.org/2/tutorial/errors.html" ID="ID_1428102318" CREATED="1408730767463" MODIFIED="1408730767463" LINK="https://docs.python.org/2/tutorial/errors.html"/>
<node TEXT="raising one" ID="ID_1417664777" CREATED="1408747024215" MODIFIED="1408747028123">
<node TEXT="Python &quot;raise&quot; = C++ &quot;throw&quot;" ID="ID_579675288" CREATED="1408728627049" MODIFIED="1408728640690"/>
<node TEXT="initial" ID="ID_1967997273" CREATED="1408747036854" MODIFIED="1408747042625">
<node TEXT="when one &quot;raises&quot; an exception, the current scope aborts, and the exception is passed up the trace" ID="ID_591119395" CREATED="1408728645390" MODIFIED="1408746877682"/>
</node>
<node TEXT="re-raising" ID="ID_1519480290" CREATED="1408730922374" MODIFIED="1408747051458">
<node TEXT="&gt;&gt;&gt; try:&#xa;...     raise NameError(&apos;HiThere&apos;)&#xa;... except NameError:&#xa;...     print &apos;An exception flew by!&apos;&#xa;...     raise" ID="ID_1331290131" CREATED="1408730935653" MODIFIED="1408730935993"/>
</node>
</node>
<node TEXT="inspecting exceptions" ID="ID_1850873026" CREATED="1408730745951" MODIFIED="1408730848843">
<node TEXT="&gt;&gt;&gt; try:&#xa;...    raise Exception(&apos;spam&apos;, &apos;eggs&apos;)&#xa;... except Exception as inst:&#xa;...    print type(inst)     # the exception instance&#xa;...    print inst.args      # arguments stored in .args&#xa;...    print inst           # __str__ allows args to be printed directly&#xa;...    x, y = inst.args&#xa;...    print &apos;x =&apos;, x&#xa;...    print &apos;y =&apos;, y&#xa;...&#xa;&lt;type &apos;exceptions.Exception&apos;&gt;&#xa;(&apos;spam&apos;, &apos;eggs&apos;)&#xa;(&apos;spam&apos;, &apos;eggs&apos;)&#xa;x = spam&#xa;y = eggs" ID="ID_1236019417" CREATED="1408730750614" MODIFIED="1408730751186"/>
</node>
<node TEXT="defining and using your own" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_255839324" CREATED="1408731002511" MODIFIED="1408734177569">
<node TEXT="example" ID="ID_1745914672" CREATED="1408747074837" MODIFIED="1408747076024">
<node TEXT="&gt;&gt;&gt; class MyError(Exception):&#xa;...     def __init__(self, value):&#xa;...         self.value = value&#xa;...     def __str__(self):&#xa;...         return repr(self.value)&#xa;...&#xa;&gt;&gt;&gt; try:&#xa;...     raise MyError(2*2)&#xa;... except MyError as e:&#xa;...     print &apos;My exception occurred, value:&apos;, e.value&#xa;..." ID="ID_1113886736" CREATED="1408731006799" MODIFIED="1408731007130"/>
</node>
<node TEXT="usually, write a base Error inheriting from Exception, and others inheriting from Error" ID="ID_835476390" CREATED="1408731126597" MODIFIED="1408731142224"/>
</node>
<node TEXT="&quot;finally&quot; always executes" ID="ID_1004546099" CREATED="1408747092939" MODIFIED="1408747100334">
<node TEXT="even if no exception arose" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1455516765" CREATED="1408747111785" MODIFIED="1408747118554"/>
<node TEXT="after &quot;except&quot; clauses" ID="ID_1783801082" CREATED="1408731239578" MODIFIED="1408747111514"/>
</node>
</node>
</node>
<node TEXT="OOP" ID="ID_603435306" CREATED="1433284175153" MODIFIED="1433284176458">
<font BOLD="true"/>
<node TEXT="super" ID="ID_926875848" CREATED="1408760326677" MODIFIED="1408760327441">
<node TEXT="good reading" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_245857977" CREATED="1408760956324" MODIFIED="1408760983180">
<node TEXT="http://rhettinger.wordpress.com/2011/05/26/super-considered-super/" ID="ID_1880768425" CREATED="1408760955366" MODIFIED="1408760955366" LINK="http://rhettinger.wordpress.com/2011/05/26/super-considered-super/"/>
<node TEXT="I got a little into the section &quot;Practical Advice&quot;" ID="ID_1922125905" CREATED="1408760966643" MODIFIED="1408760979173"/>
</node>
<node TEXT="test type, then use super" ID="ID_703615338" CREATED="1408758493670" MODIFIED="1408758521143">
<node TEXT="I don&apos;t understand this notation" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_294192093" CREATED="1408758532146" MODIFIED="1408758546323">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_257521808" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="class C:" ID="ID_977160740" CREATED="1408758488618" MODIFIED="1408758488618">
<node TEXT="def __init__(self):" ID="ID_1285687656" CREATED="1408758488618" MODIFIED="1408758488618">
<node TEXT="self.v = 1" ID="ID_1062102710" CREATED="1408758488618" MODIFIED="1408758488618"/>
</node>
<node TEXT="def __str__(self):" ID="ID_185508792" CREATED="1408758488618" MODIFIED="1408758488618">
<node TEXT="return str(self.v)" ID="ID_1688368841" CREATED="1408758488618" MODIFIED="1408758488618"/>
</node>
</node>
<node TEXT="class Clist (list):" ID="ID_538663349" CREATED="1408758488618" MODIFIED="1408758488618">
<node TEXT="def append(self,elt):" ID="ID_850721594" CREATED="1408758488619" MODIFIED="1408758488619">
<node TEXT="if not isinstance(elt,C):" ID="ID_1469566896" CREATED="1408758488619" MODIFIED="1408758488619">
<node TEXT="raise Exception(&quot;Bad type.&quot;)" ID="ID_804632991" CREATED="1408758488619" MODIFIED="1408758488619"/>
</node>
<node TEXT="super(Clist,self).append(elt)" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_257521808" CREATED="1408758488619" MODIFIED="1408758531280"/>
</node>
</node>
<node TEXT="cl = Clist()" ID="ID_1365587874" CREATED="1408758488619" MODIFIED="1408758488619"/>
<node TEXT="c = C()" ID="ID_637982713" CREATED="1408758488619" MODIFIED="1408758488619"/>
<node TEXT="cl.append(c) # works" ID="ID_179121954" CREATED="1408758488619" MODIFIED="1408758488619"/>
<node TEXT="cl.append(3) # raises the Bad Type exception" ID="ID_1515808759" CREATED="1408758488620" MODIFIED="1408758488620"/>
</node>
<node TEXT="prefix something to super&apos;s work" ID="ID_692115557" CREATED="1408760329093" MODIFIED="1408760365595">
<node TEXT="class LoggingDict(dict):&#xa;    def __setitem__(self, key, value):&#xa;        logging.info(&apos;Setting %r to %r&apos; % (key, value))&#xa;        super().__setitem__(key, value)" ID="ID_55724964" CREATED="1408760331365" MODIFIED="1408760331720"/>
</node>
<node TEXT="it&apos;s powerful" ID="ID_369758674" CREATED="1408760736480" MODIFIED="1408760738739">
<node TEXT="http://rhettinger.wordpress.com/2011/05/26/super-considered-super/" ID="ID_1238604981" CREATED="1408760753257" MODIFIED="1408760753257" LINK="http://rhettinger.wordpress.com/2011/05/26/super-considered-super/"/>
<node TEXT="Let&#x2019;s use this to our advantage to construct a logging ordered dictionary without modifying our existing classes:&#xa;&#xa;class LoggingOD(LoggingDict, collections.OrderedDict):&#xa;    pass&#xa;The ancestor tree for our new class is: LoggingOD, LoggingDict, OrderedDict, dict, object. For our purposes, the important result is that OrderedDict was inserted after LoggingDict and before dict! This means that the super() call in LoggingDict.__setitem__ now dispatches the key/value update to OrderedDict instead of dict.&#xa;&#xa;Think about that for a moment. We did not alter the source code for LoggingDict. Instead we built a subclass whose only logic is to compose two existing classes and control their search order." ID="ID_778455348" CREATED="1408760742399" MODIFIED="1408760742829"/>
</node>
</node>
<node TEXT="multiple constructors" ID="ID_35565982" CREATED="1408749340867" MODIFIED="1433285776466">
<node TEXT="explicitly naming the super" ID="ID_1394311135" CREATED="1408749540162" MODIFIED="1408749549277">
<node TEXT="the most important line (three words)" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_290237552" CREATED="1408749356355" MODIFIED="1408749391931">
<node TEXT="links out" ID="ID_923738891" CREATED="1408749362737" MODIFIED="1408749366249">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1736675816" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="class c1:" ID="ID_831100518" CREATED="1408749348437" MODIFIED="1408749348437">
<node TEXT="def __init__(self):" ID="ID_1550798860" CREATED="1408749348437" MODIFIED="1408749348437">
<node TEXT="self.v1 = 1" ID="ID_134392722" CREATED="1408749348437" MODIFIED="1408749348437"/>
</node>
</node>
<node TEXT="class c2 (c1):" ID="ID_1849854358" CREATED="1408749348437" MODIFIED="1408749348437">
<node TEXT="def __init__(self):" ID="ID_712351468" CREATED="1408749348438" MODIFIED="1408749348438">
<node TEXT="self.v2 = 1" ID="ID_610478004" CREATED="1408749348438" MODIFIED="1408749348438"/>
<node TEXT="c1.__init__(self)" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1939194339" CREATED="1408749348438" MODIFIED="1408749354892">
<node TEXT="links in" ID="ID_1736675816" CREATED="1408749363906" MODIFIED="1408749364893"/>
</node>
</node>
</node>
<node TEXT="c2().v1" ID="ID_1835948149" CREATED="1408749348438" MODIFIED="1408749348438"/>
<node TEXT="c2().v2" ID="ID_1975694667" CREATED="1408749348438" MODIFIED="1408749348438"/>
</node>
<node TEXT="chainging super()" ID="ID_70383076" CREATED="1408749550985" MODIFIED="1408749575354">
<node TEXT="class c1:" ID="ID_556012482" CREATED="1408749583056" MODIFIED="1408749583056">
<node TEXT="def __init__(self):" ID="ID_1706483542" CREATED="1408749583056" MODIFIED="1408749583056">
<node TEXT="self.v1 = 1" ID="ID_1415326156" CREATED="1408749583056" MODIFIED="1408749583056"/>
</node>
</node>
<node TEXT="class c2 (c1):" ID="ID_1870142789" CREATED="1408749583056" MODIFIED="1408749583056">
<node TEXT="def __init__(self):" ID="ID_204749394" CREATED="1408749583056" MODIFIED="1408749583056">
<node TEXT="self.v2 = 1" ID="ID_1126846843" CREATED="1408749583056" MODIFIED="1408749583056"/>
<node TEXT="super().__init__()" ID="ID_1418147864" CREATED="1408749583056" MODIFIED="1408749583056"/>
</node>
</node>
<node TEXT="class c3 (c2):" ID="ID_1198862529" CREATED="1408749583056" MODIFIED="1408749583056">
<node TEXT="def __init__(self):" ID="ID_288782788" CREATED="1408749583056" MODIFIED="1408749583056">
<node TEXT="self.v3 = 1" ID="ID_1649204197" CREATED="1408749583056" MODIFIED="1408749583056"/>
<node TEXT="super().__init__()" ID="ID_1991700465" CREATED="1408749583056" MODIFIED="1408749583056"/>
</node>
</node>
<node TEXT="c3().v1" ID="ID_372052567" CREATED="1408749583056" MODIFIED="1408749583056"/>
<node TEXT="c3().v2" ID="ID_842162326" CREATED="1408749583057" MODIFIED="1408749583057"/>
<node TEXT="c3().v3" ID="ID_1083216174" CREATED="1408749583057" MODIFIED="1408749583057"/>
</node>
<node TEXT="? if two init methods, first should be fewer arguments" ID="ID_1792572142" CREATED="1377227491288" MODIFIED="1433285764561">
<node TEXT="? this seems to contradict what I wrote elsewhere, that there can be only one constructor" ID="ID_707419678" CREATED="1433285778097" MODIFIED="1433285788922"/>
<node TEXT="discovered in Overlarchy : switching the order of the two node.__init__ methods broke it, undoing that fixed it" ID="ID_327647436" CREATED="1377227510784" MODIFIED="1377227544095"/>
</node>
</node>
<node TEXT="obscure" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_537786740" CREATED="1433284363128" MODIFIED="1433284364850"/>
<node TEXT="Python&apos;s method resolution order" LOCALIZED_STYLE_REF="default" ID="ID_345858152" CREATED="1408687469401" MODIFIED="1433284361603">
<node TEXT="links in from &quot;super() with multiple inheritance&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_955242989" CREATED="1408687483495" MODIFIED="1408687504554"/>
<node TEXT="https://www.python.org/download/releases/2.3/mro/" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_766907584" CREATED="1408687264976" MODIFIED="1408687479757" LINK="https://www.python.org/download/releases/2.3/mro/"/>
<node TEXT="only one attribute is inherited" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1202614464" CREATED="1408686048384" MODIFIED="1408747626694">
<node TEXT="class a:" ID="ID_1251802128" CREATED="1408686173454" MODIFIED="1408686173454">
<node TEXT="def __init__(self):" ID="ID_1112882814" CREATED="1408686173454" MODIFIED="1408686173454">
<node TEXT="self.av = 3" ID="ID_1837746056" CREATED="1408686173454" MODIFIED="1408686173454"/>
</node>
</node>
<node TEXT="class b:" ID="ID_221150647" CREATED="1408686173454" MODIFIED="1408686173454">
<node TEXT="def __init__(self):" ID="ID_824837190" CREATED="1408686173457" MODIFIED="1408686173457">
<node TEXT="self.bv = 3" ID="ID_1511436079" CREATED="1408686173457" MODIFIED="1408686173457"/>
</node>
</node>
<node TEXT="class c(b, a):" ID="ID_554578520" CREATED="1408686173457" MODIFIED="1408686173457">
<node TEXT="pass" ID="ID_756374356" CREATED="1408686173457" MODIFIED="1408686173457"/>
</node>
<node TEXT="c().av # works" ID="ID_1096823845" CREATED="1408686173457" MODIFIED="1408686173457"/>
<node TEXT="c().bv # fails" ID="ID_825887676" CREATED="1408686173458" MODIFIED="1408686173458"/>
</node>
<node TEXT="&quot;attribute resolution order&quot; would be more accurate" ID="ID_1664394082" CREATED="1408690173801" MODIFIED="1408690188759"/>
<node TEXT="linearization = list of ancestral classes in search order" ID="ID_1913433823" CREATED="1408687529219" MODIFIED="1408687575036">
<node TEXT="= precedence list" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_406444438" CREATED="1408687575347" MODIFIED="1408687639749"/>
<node TEXT="sometimes mislabeled &quot;the MRO&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1132678231" CREATED="1408687632034" MODIFIED="1408687639752">
<node TEXT="it is constructed by the MRO, not equal to it" ID="ID_725991441" CREATED="1408687640776" MODIFIED="1408687645708"/>
</node>
<node TEXT="includes both ends" ID="ID_1186600235" CREATED="1408687590813" MODIFIED="1408687596816">
<node TEXT="not just ancestors, also self" ID="ID_1357138979" CREATED="1408687603797" MODIFIED="1408687607151"/>
</node>
</node>
<node TEXT="an MRO constructs a linearization" ID="ID_1300093856" CREATED="1408687647464" MODIFIED="1408687724360"/>
<node TEXT="Python&apos;s MRO is monotonic" ID="ID_841350028" CREATED="1408687709148" MODIFIED="1408687731912">
<node TEXT="A MRO is monotonic when the following is true: if C1 precedes C2 in the linearization of C, then C1 precedes C2 in the linearization of any subclass of C." ID="ID_1543512757" CREATED="1408687711874" MODIFIED="1408687712134"/>
</node>
<node TEXT="not all classes can be linearized" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_756400384" CREATED="1408687749895" MODIFIED="1408687757825">
<node TEXT="quote" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1229906442" CREATED="1408687852693" MODIFIED="1408687868717"/>
<node TEXT="&gt;&gt;&gt; O = object&#xa;&gt;&gt;&gt; class X(O): pass&#xa;&gt;&gt;&gt; class Y(O): pass&#xa;&gt;&gt;&gt; class A(X,Y): pass&#xa;&gt;&gt;&gt; class B(Y,X): pass" ID="ID_517254451" CREATED="1408687864422" MODIFIED="1408687865711"/>
<node TEXT="In this case, it is not possible to derive a new class C from A and B, since X precedes Y in A, but Y precedes X in B, therefore the method resolution order would be ambiguous in C." ID="ID_1944242383" CREATED="1408687854158" MODIFIED="1408687854522"/>
</node>
<node TEXT="the order" ID="ID_1358657042" CREATED="1408689659879" MODIFIED="1408689667474">
<node TEXT="see my notes and the area around them in &quot;python MRO.txt&quot;" ID="ID_1944975526" CREATED="1408689667998" MODIFIED="1408689687928"/>
</node>
<node TEXT="to view in python: set.mro(), list.mro() ..." LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_468089537" CREATED="1408689716339" MODIFIED="1408689746051"/>
<node TEXT="multiple inheritance =&gt; super() gets weird" ID="ID_650510899" CREATED="1408687147765" MODIFIED="1408747448222"/>
</node>
<node TEXT="a class var V of class C must be referred to, even from within the def&apos;n of C, as C.V" ID="ID_1289790692" CREATED="1406703021943" MODIFIED="1406703057371"/>
<node TEXT="a class does not need a constructor" ID="ID_726395097" CREATED="1406699563528" MODIFIED="1406699567843">
<node TEXT="e.g. if it has only local classes and class variables" ID="ID_682225946" CREATED="1406699568571" MODIFIED="1406699582883">
<node TEXT="class variables being the opposite, I hope, of instance variables -- associated with the class but not with any particular member of it" ID="ID_1253039482" CREATED="1406699584479" MODIFIED="1406699607401"/>
</node>
</node>
<node TEXT="constructor overloading" ID="ID_1740751665" CREATED="1406410057548" MODIFIED="1406410066447">
<node TEXT="writing two constructors with different numbers of arguments causes one not to work" ID="ID_1590739394" CREATED="1406410067420" MODIFIED="1406410090150"/>
<node TEXT="but I can write: def __init__(self, optionalArg=None):&#xa;  if (optionalArg==None) ..." ID="ID_1662363042" CREATED="1406410090571" MODIFIED="1406410112413"/>
</node>
</node>
</node>
<node TEXT="uses" ID="ID_1314572420" CREATED="1433282855796" MODIFIED="1433282856471">
<node TEXT="class Bunch, an arbitrary set of attributes" ID="ID_1058525669" CREATED="1408903051225" MODIFIED="1408903064970">
<node TEXT="field names chosen at instantiation, varying across instances" ID="ID_151369512" CREATED="1408903005387" MODIFIED="1408903082302"/>
<node TEXT="http://code.activestate.com/recipes/52308-the-simple-but-handy-collector-of-a-bunch-of-named/?in=user-97991" ID="ID_260945319" CREATED="1408903031857" MODIFIED="1408903031857" LINK="http://code.activestate.com/recipes/52308-the-simple-but-handy-collector-of-a-bunch-of-named/?in=user-97991"/>
</node>
<node TEXT="for access speed, set and dict &gt; list" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1649064946" CREATED="1409629283787" MODIFIED="1433282877425">
<node TEXT="set is faster than dict; it&apos;s a dict with only keys" ID="ID_795559657" CREATED="1408294774599" MODIFIED="1408294783969"/>
</node>
</node>
<node TEXT="libs, doms" ID="ID_531490545" CREATED="1433281227347" MODIFIED="1433282749739">
<node TEXT="sort" ID="ID_472704961" CREATED="1406161289065" MODIFIED="1433285369741">
<node TEXT="&gt;&gt;&gt; pairs = [(1,2),(1,5),(1,3),(2,3)]" ID="ID_1662743218" CREATED="1406161506292" MODIFIED="1406161506292"/>
<node TEXT="&gt;&gt;&gt; sorted(pairs,key=lambda pair:pair[1])" ID="ID_463659678" CREATED="1406161506292" MODIFIED="1406161506292"/>
<node TEXT="[(1, 2), (1, 3), (2, 3), (1, 5)]" ID="ID_1296084737" CREATED="1406161506293" MODIFIED="1406161506293"/>
<node TEXT="&gt;&gt;&gt; sorted(pairs,key=lambda pair:pair[1],reverse=True)" ID="ID_1428410398" CREATED="1406161506293" MODIFIED="1406161506293"/>
<node TEXT="[(1, 5), (1, 3), (2, 3), (1, 2)]" ID="ID_483829357" CREATED="1406161506293" MODIFIED="1406161506293"/>
</node>
<node TEXT="networkx" ID="ID_1900128625" CREATED="1424570193377" MODIFIED="1424570195273">
<node TEXT="tutorial" ID="ID_1230121175" CREATED="1424573801803" MODIFIED="1424573802904">
<node TEXT="http://networkx.github.io/documentation/latest/tutorial/tutorial.html" ID="ID_1037343002" CREATED="1424573800965" MODIFIED="1424573800965" LINK="http://networkx.github.io/documentation/latest/tutorial/tutorial.html"/>
</node>
<node TEXT="pitfalls" ID="ID_1801892800" CREATED="1424570368896" MODIFIED="1424570369961">
<node TEXT="Do not use None as a node." ID="ID_664705183" CREATED="1424570379736" MODIFIED="1424570384865"/>
<node TEXT="Do not change a returned dict." ID="ID_1601074352" CREATED="1424573923675" MODIFIED="1424573932682">
<node TEXT="modify it only through the networkx functions provided" ID="ID_993046171" CREATED="1424573937443" MODIFIED="1424573947154"/>
</node>
</node>
<node TEXT="cep" ID="ID_842796155" CREATED="1424573807019" MODIFIED="1424573807626">
<node TEXT="a dict (optional) for each node and edge" ID="ID_390926203" CREATED="1424573755107" MODIFIED="1424573778143">
<node TEXT="add_node and add_edge both permit a (2nd or 3rd, respj) arg to assoc a dictionary with the new thing" ID="ID_326483177" CREATED="1424573727234" MODIFIED="1424573753194"/>
</node>
</node>
<node TEXT="esp use" ID="ID_532396559" CREATED="1424574134115" MODIFIED="1424574139451">
<node TEXT="MultiDiGraph" ID="ID_440308169" CREATED="1424574139643" MODIFIED="1424574145519">
<node TEXT="http://networkx.github.io/documentation/latest/tutorial/tutorial.html#multigraphs" ID="ID_361791568" CREATED="1427842260106" MODIFIED="1427842260106" LINK="http://networkx.github.io/documentation/latest/tutorial/tutorial.html#multigraphs"/>
<node TEXT="Multi for multiple edges on the same node pair." ID="ID_112783312" CREATED="1424574151620" MODIFIED="1424574162115"/>
<node TEXT="Digraph because MultiGraph is something else." ID="ID_1359994435" CREATED="1424574162355" MODIFIED="1424574182488"/>
</node>
<node TEXT="Digraphs" LOCALIZED_STYLE_REF="default" ID="ID_747743640" CREATED="1427913299462" MODIFIED="1433199769176">
<node TEXT="g.out_edges(nodeLabel): edges in which nodeLabel is scr&#xa;g.in_edges(nodeLabel):  edges in which nodeLabel is pdr" ID="ID_1091270789" CREATED="1427913985295" MODIFIED="1427914012781">
<node TEXT="&gt;&gt;&gt; import networkx as nx" ID="ID_1914296468" CREATED="1427913980214" MODIFIED="1427913980214"/>
<node TEXT="&gt;&gt;&gt; g = nx.DiGraph()" ID="ID_1376090162" CREATED="1427913980214" MODIFIED="1427913980214"/>
<node TEXT="&gt;&gt;&gt; g.add_edge(1,2)" ID="ID_469340607" CREATED="1427913980225" MODIFIED="1427913980225"/>
<node TEXT="&gt;&gt;&gt; g.out_edges(1)" ID="ID_7916911" CREATED="1427913980225" MODIFIED="1427913980225"/>
<node TEXT="[(1, 2)]" ID="ID_1687113376" CREATED="1427913980233" MODIFIED="1427913980233"/>
<node TEXT="&gt;&gt;&gt; g.out_edges(2)" ID="ID_1039638283" CREATED="1427913980234" MODIFIED="1427913980234"/>
<node TEXT="[]" ID="ID_1851190624" CREATED="1427913980235" MODIFIED="1427913980235"/>
<node TEXT="&gt;&gt;&gt; g.in_edges(2)" ID="ID_981162090" CREATED="1427913980236" MODIFIED="1427913980236"/>
<node TEXT="[(1, 2)]" ID="ID_1153871868" CREATED="1427913980237" MODIFIED="1427913980237"/>
<node TEXT="&gt;&gt;&gt; g.in_edges(1)" ID="ID_958191631" CREATED="1427913980238" MODIFIED="1427913980238"/>
<node TEXT="[]" ID="ID_144808678" CREATED="1427913980241" MODIFIED="1427913980241"/>
</node>
<node TEXT="so I don&apos;t need to keep redundant the edge relationships" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_232511711" CREATED="1427914049599" MODIFIED="1427914063225">
<node TEXT="if in graph g appears edge (1,2) with label &quot;has&quot;, from 2 I can search for in_edges, and get the text from each label" ID="ID_836024022" CREATED="1427914074263" MODIFIED="1427914136365"/>
</node>
</node>
<node TEXT="a prewritten format" ID="ID_593577522" CREATED="1424574307427" MODIFIED="1424574314586">
<node TEXT="http://networkx.github.io/documentation/latest/reference/readwrite.html" ID="ID_1250858109" CREATED="1424574366716" MODIFIED="1424574366716" LINK="http://networkx.github.io/documentation/latest/reference/readwrite.html"/>
<node TEXT="http://networkx.github.io/documentation/latest/tutorial/tutorial.html" ID="ID_1801927101" CREATED="1424574346878" MODIFIED="1424574346878" LINK="http://networkx.github.io/documentation/latest/tutorial/tutorial.html"/>
<node TEXT="at least if it&apos;s good, svn-compatible" ID="ID_990812029" CREATED="1424574314803" MODIFIED="1424574321908"/>
<node TEXT="&quot;Reading a graph stored in a file using common graph formats, such as edge lists, adjacency lists, GML, GraphML, pickle, LEDA and others.&quot;" ID="ID_1170004943" CREATED="1424574305844" MODIFIED="1424574325029"/>
</node>
</node>
</node>
<node TEXT="strings" ID="ID_702129975" CREATED="1433283626496" MODIFIED="1433283627321">
<node TEXT="to split a string at a certain char" ID="ID_1842014791" CREATED="1410853828023" MODIFIED="1410853833753">
<node TEXT="&gt;&gt;&gt; &quot;a.gaga.e&quot;.split(&quot;.&quot;)" ID="ID_959417007" CREATED="1410853835296" MODIFIED="1410853835296"/>
<node TEXT="[&apos;a&apos;, &apos;gaga&apos;, &apos;e&apos;]" ID="ID_723040843" CREATED="1410853835296" MODIFIED="1410853835296"/>
</node>
<node TEXT="isdigit() : test whether string is number" ID="ID_393107109" CREATED="1405716955652" MODIFIED="1433285387636">
<node TEXT="&gt;&gt;&gt; &quot;351&quot;.isdigit()&#xa;True&#xa;&gt;&gt;&gt; &quot;3ab&quot;.isdigit()&#xa;False" ID="ID_1736575324" CREATED="1405716995712" MODIFIED="1405716996580"/>
</node>
</node>
<node TEXT="gui" ID="ID_768776329" CREATED="1433281246032" MODIFIED="1433281341556">
<font BOLD="true"/>
<node TEXT="shopping" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_496394324" CREATED="1407692821156" MODIFIED="1433284464245">
<node TEXT="&quot;Frameworks&quot;?" ID="ID_868098089" CREATED="1408173736928" MODIFIED="1408173750506">
<font BOLD="false"/>
<node TEXT="Qt" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_389707477" CREATED="1407692831492" MODIFIED="1407697014755">
<node TEXT="nothing else got any votes" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1392667327" CREATED="1407697017434" MODIFIED="1407697022442"/>
<node TEXT="1 vote" ID="ID_1834842718" CREATED="1407693411529" MODIFIED="1407693412781">
<node TEXT="&quot;In my opinion, the Qt toolkit is far better in terms of quality and speed ...&#xa;than wx/tk/whatever. It&apos;s also dead simple to code for.&quot;" ID="ID_1924194081" CREATED="1407693418649" MODIFIED="1407693445987">
<node TEXT="http://bytes.com/topic/python/answers/22289-how-accelerate-python-application-gui-speed" ID="ID_873773098" CREATED="1407693417685" MODIFIED="1407693417685" LINK="http://bytes.com/topic/python/answers/22289-how-accelerate-python-application-gui-speed"/>
</node>
</node>
<node TEXT="1 vote" ID="ID_983425845" CREATED="1407696993838" MODIFIED="1407696995335">
<node TEXT=" have selected PyQt for my own use, based on criteria of performance, programming model, completeness of the assortment of widgets and ease of installation. Oh, and because it was the most fun to use, of course!" ID="ID_1352404675" CREATED="1407696996620" MODIFIED="1407696996905">
<node TEXT="http://www.commandprompt.com/community/pyqt/x179" ID="ID_1475333447" CREATED="1407697006006" MODIFIED="1407697006006" LINK="http://www.commandprompt.com/community/pyqt/x179"/>
</node>
</node>
</node>
<node TEXT="Tkinter" ID="ID_1826604929" CREATED="1407692830235" MODIFIED="1407692831295"/>
<node TEXT="wx" ID="ID_1466672589" CREATED="1407692832260" MODIFIED="1407692834047">
<node TEXT="http://www.commandprompt.com/community/pyqt/x179" ID="ID_1207267568" CREATED="1407696648773" MODIFIED="1407696648773" LINK="http://www.commandprompt.com/community/pyqt/x179"/>
<node TEXT="quotes from that" ID="ID_1762068843" CREATED="1407696718980" MODIFIED="1407696720503">
<node TEXT="wxPython is based on the wxWindows toolkit. wxWindows is a crossplatform wrapper around a native toolkit of each platform: the standard Win32 controls on Windows and GTK on Unix/X11." ID="ID_784826440" CREATED="1407696606077" MODIFIED="1407696606745"/>
<node TEXT="wxPython, because it&apos;s a library (wxPython) based on a library (wxWindows) based on a library (MFC or GTK) can be really difficult to get up and running." ID="ID_1414145861" CREATED="1407696709028" MODIFIED="1407696713655"/>
</node>
</node>
<node TEXT="GTK" ID="ID_1318460737" CREATED="1407692834259" MODIFIED="1407692835022">
<node TEXT="PyGTK is based on GTK (formerly known as the Gimp Toolkit). Not really intended for cross-platform work, it has recently been ported (more or less) to Windows." ID="ID_326808579" CREATED="1407696637194" MODIFIED="1407696638022">
<node TEXT="http://www.commandprompt.com/community/pyqt/x179" ID="ID_461056147" CREATED="1407696643742" MODIFIED="1407696643742" LINK="http://www.commandprompt.com/community/pyqt/x179"/>
</node>
</node>
<node TEXT="Glade" ID="ID_697000437" CREATED="1407692835235" MODIFIED="1407692836766"/>
<node TEXT="PyOpenGL" ID="ID_1615937040" CREATED="1407692861976" MODIFIED="1407692862636"/>
</node>
<node TEXT="list of Python GUI Design Tools and IDEs" ID="ID_921602689" CREATED="1405280735685" MODIFIED="1405280754905">
<node TEXT="links in" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_518798113" CREATED="1407000263213" MODIFIED="1407000275472"/>
<node TEXT="https://wiki.python.org/moin/GuiProgramming" ID="ID_1635224078" CREATED="1405280746791" MODIFIED="1405280746791" LINK="https://wiki.python.org/moin/GuiProgramming"/>
<node TEXT="in the table labeled &quot;GUI Design Tools and IDEs&quot;, find IDEs with &quot;Tkinter&quot; in the &quot;Target&quot; column" ID="ID_1007154009" CREATED="1405280749324" MODIFIED="1405280800988"/>
</node>
</node>
<node TEXT="gtk" ID="ID_472296172" CREATED="1424744751627" MODIFIED="1424744752217">
<node TEXT="refs" ID="ID_1676198153" CREATED="1424813871648" MODIFIED="1424813872213">
<node TEXT="primary" ID="ID_479790007" CREATED="1424813960223" MODIFIED="1424813961398">
<node TEXT="http://www.pygtk.org/reference.html" ID="ID_1824661821" CREATED="1424813959653" MODIFIED="1424813959653" LINK="http://www.pygtk.org/reference.html"/>
</node>
<node TEXT="the tutorial I skimmed" ID="ID_609514916" CREATED="1424813873960" MODIFIED="1424813893775">
<node TEXT="there are many others" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1199608245" CREATED="1424813876407" MODIFIED="1424813905768"/>
<node TEXT="https://python-gtk-3-tutorial.readthedocs.org/en/latest/index.html" ID="ID_1783141473" CREATED="1424813891590" MODIFIED="1424813891590" LINK="https://python-gtk-3-tutorial.readthedocs.org/en/latest/index.html"/>
<node TEXT="I thoroughly read the first 7 chapters, and the chapters &quot;Multi-line text&quot; and &quot;Ojbects&quot;" ID="ID_1060473208" CREATED="1424813906161" MODIFIED="1424813938485"/>
</node>
</node>
<node TEXT="to import" ID="ID_1776683225" CREATED="1424744761859" MODIFIED="1424744794330">
<node TEXT=".alternatives, not substitutable" ID="ID_417393006" CREATED="1424744773483" MODIFIED="1424744923905"/>
<node TEXT="from gi.repository import Gtk" ID="ID_1221485932" CREATED="1424744759298" MODIFIED="1424744759298">
<node TEXT="suggested here" ID="ID_1708516593" CREATED="1424744787355" MODIFIED="1424744788833"/>
<node TEXT="https://python-gtk-3-tutorial.readthedocs.org/en/latest/introduction.html" ID="ID_86413916" CREATED="1424744786816" MODIFIED="1424744786816" LINK="https://python-gtk-3-tutorial.readthedocs.org/en/latest/introduction.html"/>
</node>
<node TEXT="? import pygtk" ID="ID_1218811793" CREATED="1424744768419" MODIFIED="1424744900339">
<node TEXT="executes successfully, but what does it make available?" ID="ID_1923106764" CREATED="1424744775595" MODIFIED="1424744933071"/>
</node>
</node>
<node TEXT="connect callbacks" ID="ID_248008538" CREATED="1424804676125" MODIFIED="1424804680844">
<node TEXT="handler_id = widget.connect(&quot;event&quot;, callback, data)" ID="ID_982022556" CREATED="1424804668156" MODIFIED="1424804668156"/>
<node TEXT="the set of listenable events varies across widgets" ID="ID_975059535" CREATED="1424804683123" MODIFIED="1424804697472">
<node TEXT="for instance, buttons can catch a &quot;clicked&quot; event" ID="ID_1789509549" CREATED="1424804697819" MODIFIED="1424804708756"/>
</node>
<node TEXT="&quot;data&quot; argument is optional and can be anything" ID="ID_558285526" CREATED="1424804726923" MODIFIED="1424804773150">
<node TEXT="I assume it&apos;s whatever I need in order to know where the event came from, how to react to it appropriately." ID="ID_1271438085" CREATED="1424804738602" MODIFIED="1424804751475"/>
</node>
</node>
<node TEXT="handler ids needed for disconnection, kind of" ID="ID_1753869836" CREATED="1424804818547" MODIFIED="1424804827064">
<node TEXT="either that or use &quot;disconnect_by_func&quot;" ID="ID_329251730" CREATED="1424804830738" MODIFIED="1424804840193"/>
</node>
<node TEXT="quitting" ID="ID_1585898256" CREATED="1424804891010" MODIFIED="1424804893123">
<node TEXT="https://python-gtk-3-tutorial.readthedocs.org/en/latest/basics.html" ID="ID_1433338580" CREATED="1424804893532" MODIFIED="1424804893532" LINK="https://python-gtk-3-tutorial.readthedocs.org/en/latest/basics.html"/>
</node>
<node TEXT="properties" ID="ID_65286546" CREATED="1424805002715" MODIFIED="1424805005136">
<node TEXT="least text: assign in batch as keyword arguments in constructor" ID="ID_1911249551" CREATED="1424805005887" MODIFIED="1424805053542"/>
<node TEXT="there are specific getters and setter functions per property, but also two generic &quot;*et-property&quot; functions" LOCALIZED_STYLE_REF="default" ID="ID_151291754" CREATED="1424805072379" MODIFIED="1424805109044"/>
<node TEXT="show available properties" ID="ID_407577696" CREATED="1424805126211" MODIFIED="1424805129264">
<node TEXT="widget = Gtk.Box()" ID="ID_1313201094" CREATED="1424805129707" MODIFIED="1424805129707"/>
<node TEXT="print(dir(widget.props))" ID="ID_1995196446" CREATED="1424805129707" MODIFIED="1424805129707"/>
</node>
</node>
<node TEXT="strings" ID="ID_242810652" CREATED="1424805200674" MODIFIED="1424805202226">
<node TEXT="https://python-gtk-3-tutorial.readthedocs.org/en/latest/unicode.html" ID="ID_1755280126" CREATED="1424805459127" MODIFIED="1424805459127" LINK="https://python-gtk-3-tutorial.readthedocs.org/en/latest/unicode.html"/>
<node TEXT="&quot;code point&quot; = unicode number repg a char" ID="ID_91747270" CREATED="1424805203995" MODIFIED="1424805215315"/>
<node TEXT="Unicode: if problem, consider Python 3" ID="ID_1281640732" CREATED="1424805448843" MODIFIED="1424805513248">
<node TEXT="In Python 2, in &quot;general it is recommended to not use unicode objects in GTK+ applications at all and only use UTF-8 encoded str objects&quot;." ID="ID_1910074411" CREATED="1424805645075" MODIFIED="1424805662782"/>
</node>
</node>
<node TEXT="layout" ID="ID_949676886" CREATED="1424806329388" MODIFIED="1424806332467">
<node TEXT="https://python-gtk-3-tutorial.readthedocs.org/en/latest/layout.html" ID="ID_359731558" CREATED="1424806332978" MODIFIED="1424806332978" LINK="https://python-gtk-3-tutorial.readthedocs.org/en/latest/layout.html"/>
<node TEXT="I learned boxes." ID="ID_1269621574" CREATED="1424806333692" MODIFIED="1424806336081"/>
<node TEXT="Left to learn: grids, tables, listBox" ID="ID_1969791126" CREATED="1424806336268" MODIFIED="1424806343363"/>
</node>
<node TEXT="Entry &amp; TextView" ID="ID_846028587" CREATED="1424808331825" MODIFIED="1424810341938">
<node TEXT="TextView" ID="ID_1984809298" CREATED="1424810342745" MODIFIED="1424810410783">
<node TEXT="is" ID="ID_626118524" CREATED="1424810722869" MODIFIED="1424810723491">
<node TEXT="multi-line" ID="ID_1816528561" CREATED="1424810411186" MODIFIED="1424810416398"/>
<node TEXT="model-view" ID="ID_933213197" CREATED="1424810416661" MODIFIED="1424810417234"/>
</node>
<node TEXT="offers" ID="ID_1385133102" CREATED="1424810732453" MODIFIED="1424810748119">
<node TEXT="text iterators" ID="ID_464562016" CREATED="1424810717501" MODIFIED="1424810721291"/>
<node TEXT="tags" ID="ID_269516155" CREATED="1424810745621" MODIFIED="1424810746211">
<node TEXT="apply to ranges" ID="ID_410602758" CREATED="1424810765485" MODIFIED="1424810767619"/>
<node TEXT="can but need not affect appearance" ID="ID_1290413950" CREATED="1424810767798" MODIFIED="1424810772531"/>
</node>
</node>
<node TEXT="multiple TextViews can refer to (and display differently) the same TextBuffer" ID="ID_1178462723" CREATED="1424810418294" MODIFIED="1424810433332"/>
</node>
</node>
<node TEXT="can create new signals" ID="ID_806955576" CREATED="1424813172455" MODIFIED="1424813174942">
<node TEXT="https://python-gtk-3-tutorial.readthedocs.org/en/latest/objects.html" ID="ID_190867758" CREATED="1424813175414" MODIFIED="1424813175414" LINK="https://python-gtk-3-tutorial.readthedocs.org/en/latest/objects.html"/>
</node>
<node TEXT="can create new properties" ID="ID_612440068" CREATED="1424813391039" MODIFIED="1424813393486">
<node TEXT="https://python-gtk-3-tutorial.readthedocs.org/en/latest/objects.html" ID="ID_1206796165" CREATED="1424813175414" MODIFIED="1424813175414" LINK="https://python-gtk-3-tutorial.readthedocs.org/en/latest/objects.html"/>
</node>
<node TEXT="use" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_771629519" CREATED="1424806350412" MODIFIED="1424806352519">
<node TEXT="ListBox: layout widget, allows sorting, filtering" ID="ID_1632563234" CREATED="1424806355667" MODIFIED="1424806376109"/>
<node TEXT="Notebook or Stack" ID="ID_1220005268" CREATED="1424806497284" MODIFIED="1424806535535"/>
<node TEXT="Label.set_selectable" ID="ID_1795814539" CREATED="1424806783235" MODIFIED="1424806789403">
<node TEXT="so user can highlight and copy text from it" ID="ID_1062277589" CREATED="1424806791404" MODIFIED="1424806796851"/>
<node TEXT="good for errors" ID="ID_1034592118" CREATED="1424806797036" MODIFIED="1424806798969"/>
</node>
<node TEXT="draw over text" LOCALIZED_STYLE_REF="default" ID="ID_1568177523" CREATED="1424807851314" MODIFIED="1424807979898">
<node TEXT="PyGTK answer?" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_934296810" CREATED="1424808235128" MODIFIED="1424808240267">
<node TEXT="http://faq.pygtk.org/index.py?req=all#6.4" ID="ID_1029313107" CREATED="1424808233507" MODIFIED="1424808233507" LINK="http://faq.pygtk.org/index.py?req=all#6.4"/>
</node>
<node TEXT="C++ answer?" LOCALIZED_STYLE_REF="default" ID="ID_498811936" CREATED="1424807858996" MODIFIED="1424808243226">
<node TEXT="http://darkabstraction.com/gtksharp/?p=213" ID="ID_400348323" CREATED="1424807858220" MODIFIED="1424807858220" LINK="http://darkabstraction.com/gtksharp/?p=213"/>
</node>
<node TEXT="manual: App-Paintable Widgets" LOCALIZED_STYLE_REF="default" ID="ID_1650275801" CREATED="1424807376980" MODIFIED="1424807875868">
<node TEXT="https://www.readability.com/articles/b4bjwqsa" LOCALIZED_STYLE_REF="default" ID="ID_1262326726" CREATED="1424807374640" MODIFIED="1424807382898" LINK="https://www.readability.com/articles/b4bjwqsa"/>
<node TEXT="search for &quot;App-Paintable Widgets&quot;" ID="ID_1717420125" CREATED="1424807386836" MODIFIED="1424807389299"/>
</node>
</node>
</node>
<node TEXT="sandbox for safety" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1859509521" CREATED="1424805255627" MODIFIED="1424813094088">
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1791349968" CREATED="1424805255627" MODIFIED="1424813094096">
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_709922131" CREATED="1424805255627" MODIFIED="1424813094100"/>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_74665068" CREATED="1424805255627" MODIFIED="1424813094104"/>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_817412028" CREATED="1424805255627" MODIFIED="1424813094108"/>
</node>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_514708360" CREATED="1424805255627" MODIFIED="1424813094112">
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_935301569" CREATED="1424805255627" MODIFIED="1424813094116"/>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1868030669" CREATED="1424805255627" MODIFIED="1424813094120">
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1287186323" CREATED="1424805255627" MODIFIED="1424813094126"/>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1067147399" CREATED="1424805255627" MODIFIED="1424813096299">
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1959116113" CREATED="1424805255627" MODIFIED="1424813120930">
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_873623262" CREATED="1424805255627" MODIFIED="1424813124410"/>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1013826566" CREATED="1424805255627" MODIFIED="1424813124408"/>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1893010433" CREATED="1424805255627" MODIFIED="1424813124405"/>
</node>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1000820307" CREATED="1424805255627" MODIFIED="1424813120928">
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1172160098" CREATED="1424805255627" MODIFIED="1424813124403"/>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_635024736" CREATED="1424805255627" MODIFIED="1424813124401"/>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1669246917" CREATED="1424805255627" MODIFIED="1424813124398"/>
</node>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_821583157" CREATED="1424805255627" MODIFIED="1424813120922">
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_956997651" CREATED="1424805255627" MODIFIED="1424813124395"/>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1797663288" CREATED="1424805255627" MODIFIED="1424813124386"/>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1427253246" CREATED="1424805255627" MODIFIED="1424813120940"/>
</node>
</node>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1842124702" CREATED="1424805255627" MODIFIED="1424813094133"/>
</node>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_168886426" CREATED="1424805255627" MODIFIED="1424813094137"/>
</node>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_246248598" CREATED="1424805255627" MODIFIED="1424813094140">
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1208861579" CREATED="1424805255627" MODIFIED="1424813094143"/>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_733959929" CREATED="1424805255627" MODIFIED="1424813094147"/>
<node TEXT="cfs" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_40172647" CREATED="1424805255627" MODIFIED="1424813094151"/>
</node>
</node>
<node TEXT="multiple (text) Entry in frame" ID="ID_418195677" CREATED="1424814781945" MODIFIED="1424814814395"/>
</node>
<node TEXT="Tkinter" LOCALIZED_STYLE_REF="default" ID="ID_1288600482" CREATED="1375558062478" MODIFIED="1407445010524">
<node TEXT="good, untapped reference" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_422069386" CREATED="1406669612223" MODIFIED="1406669634678">
<node TEXT="https://docs.python.org/2/library/tk.html" ID="ID_1329680059" CREATED="1406669613808" MODIFIED="1406669613808" LINK="https://docs.python.org/2/library/tk.html"/>
</node>
<node TEXT="to learn" LOCALIZED_STYLE_REF="default" ID="ID_461579954" CREATED="1377288035954" MODIFIED="1400282919723">
<node ID="ID_377748779" CREATED="1377288227738" MODIFIED="1377288227738"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      wait_variable
    </p>
  </body>
</html>
</richcontent>
<node TEXT="local event loop, to avoid getting in the way of others" ID="ID_568689866" CREATED="1377288273000" MODIFIED="1377288282146"/>
</node>
<node TEXT="option database" ID="ID_1882451078" CREATED="1400282715021" MODIFIED="1400282727075">
<font BOLD="true"/>
<node TEXT="NMT doc&apos;n starts here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1137073625" CREATED="1400282730907" MODIFIED="1400282758585">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/option-database.html" ID="ID_1772597895" CREATED="1400282730488" MODIFIED="1400282730488" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/option-database.html"/>
</node>
<node TEXT="I skipped it." ID="ID_775047180" CREATED="1400282834210" MODIFIED="1400282838652"/>
<node TEXT="motivation" ID="ID_581505827" CREATED="1400282770836" MODIFIED="1400282772637">
<node TEXT="homogenize appearance across widgets" ID="ID_1185684820" CREATED="1400282758867" MODIFIED="1400282770551"/>
<node TEXT="allow user to change defaults" ID="ID_506690987" CREATED="1400282774099" MODIFIED="1400282779337"/>
</node>
</node>
<node TEXT="ttk" ID="ID_786620841" CREATED="1400282946437" MODIFIED="1400282947965">
<font BOLD="true"/>
<node TEXT="doc&apos;n starts here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1918977368" CREATED="1400283056107" MODIFIED="1400283060611">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/ttk.html" ID="ID_1732872049" CREATED="1400283054016" MODIFIED="1400283054016" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/ttk.html"/>
<node TEXT="in the pdf it&apos;s 45 pages" ID="ID_1962986925" CREATED="1400283061659" MODIFIED="1400283088065"/>
</node>
<node TEXT="Simplifies and generalizes state-specific widget behavior." ID="ID_204643349" CREATED="1400283032901" MODIFIED="1400283039799"/>
</node>
<node TEXT="using additional arguments in event handlers" LOCALIZED_STYLE_REF="default" ID="ID_1908278141" CREATED="1400287277439" MODIFIED="1400287337757">
<font BOLD="false"/>
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/extra-args.html" ID="ID_644169410" CREATED="1400287283681" MODIFIED="1400287283681" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/extra-args.html"/>
<node TEXT="I don&apos;t get it." ID="ID_1141475353" CREATED="1400287284288" MODIFIED="1400287286139"/>
</node>
<node TEXT="pop-up dialogs, esp. the file browser one" ID="ID_1273600203" CREATED="1400287552192" MODIFIED="1400287562682">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/dialogs.html" ID="ID_1882751003" CREATED="1400287559962" MODIFIED="1400287559962" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/dialogs.html"/>
</node>
<node TEXT="forgotten" LOCALIZED_STYLE_REF="styles.topic" ID="ID_754218232" CREATED="1400282936400" MODIFIED="1400282944005">
<node TEXT="Tk(): my notes indicate two idioms." ID="ID_1886311531" CREATED="1377287645614" MODIFIED="1377288845623"/>
<node TEXT="Is anything easier than Text()?" ID="ID_1210561428" CREATED="1377287758061" MODIFIED="1377287764375">
<node TEXT="e.g. Canvas() is suggested here" ID="ID_1430506556" CREATED="1377287764908" MODIFIED="1377287771878">
<node TEXT="http://effbot.org/tkinterbook/label.htm" ID="ID_831153440" CREATED="1377287777503" MODIFIED="1377287777503" LINK="http://effbot.org/tkinterbook/label.htm"/>
<node TEXT="&quot;To display data that the user can manipulate in place, it&#x2019;s probably easier to use the Canvas widget.&quot;" ID="ID_488898982" CREATED="1377287782483" MODIFIED="1377287790759"/>
</node>
</node>
<node TEXT="Toplevel.class_(): what does it do?" ID="ID_1913008940" CREATED="1399769500918" MODIFIED="1399769511628">
<node TEXT="links out" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1885369440" CREATED="1399769482718" MODIFIED="1399769488305">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_512139109" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
</node>
</node>
<node TEXT="ref&apos;s" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_172964461" CREATED="1375558819967" MODIFIED="1375558830894">
<node TEXT="yet to use" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1362722967" CREATED="1399670275109" MODIFIED="1399674783936"/>
<node TEXT="possibly good" ID="ID_1179869957" CREATED="1399670291796" MODIFIED="1399670297936">
<node TEXT="very short" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1464533204" CREATED="1399670503300" MODIFIED="1399670513229">
<node TEXT="http://zetcode.com/gui/tkinter/introduction/" ID="ID_1903811099" CREATED="1399670504621" MODIFIED="1399670504621" LINK="http://zetcode.com/gui/tkinter/introduction/"/>
</node>
<node TEXT="http://thinkingtkinter.sourceforge.net/" ID="ID_1719536892" CREATED="1399670296335" MODIFIED="1399670296335" LINK="http://thinkingtkinter.sourceforge.net/"/>
<node TEXT="ActiveTcl user guide" ID="ID_479479994" CREATED="1398375457518" MODIFIED="1399670319247">
<node TEXT="file:/Library/Documentation/Help/ActiveTcl-8.6/index.html" ID="ID_34867109" CREATED="1398375456729" MODIFIED="1398375456729" LINK="file:/Library/Documentation/Help/ActiveTcl-8.6/index.html"/>
</node>
</node>
<node TEXT="lesser" ID="ID_981640594" CREATED="1376157115538" MODIFIED="1398376576804">
<font BOLD="true"/>
<node TEXT="scattered, but many hints, pitfalls" ID="ID_1722390225" CREATED="1375558822838" MODIFIED="1399670524335"/>
<node TEXT="http://www.astro.washington.edu/users/rowen/TkinterSummary.html#TracingVariables" ID="ID_1487795931" CREATED="1375558827676" MODIFIED="1375558827676" LINK="http://www.astro.washington.edu/users/rowen/TkinterSummary.html#TracingVariables"/>
</node>
<node TEXT="aborted" ID="ID_1648070635" CREATED="1399674355404" MODIFIED="1399674356582">
<node TEXT="Tcl/Tk 8.5 Programming Cookbook" ID="ID_410943930" CREATED="1399673916376" MODIFIED="1399674365055">
<node TEXT="why aborted" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_879650954" CREATED="1399674372595" MODIFIED="1399674376275">
<node TEXT="Tcl/Tk is too different from Tkinter" ID="ID_1088397687" CREATED="1399674377091" MODIFIED="1399674383884"/>
<node TEXT="syntax is unrecognizable -- no paren&apos;s, no dot notation" ID="ID_715485167" CREATED="1399674384082" MODIFIED="1399674398238"/>
</node>
<node TEXT="relevant portion" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1545730924" CREATED="1399674006390" MODIFIED="1399674369488">
<node TEXT="start on pdf 111" ID="ID_653486328" CREATED="1399673926951" MODIFIED="1399673932043">
<node TEXT="that&apos;s chapter 8, &quot;Tk GUI Programming&quot;" ID="ID_602917676" CREATED="1399673939503" MODIFIED="1399673951578"/>
</node>
<node TEXT="end on pdf 207" ID="ID_443307005" CREATED="1399674009517" MODIFIED="1399674011278">
<node TEXT="that&apos;s the start of the index" ID="ID_1535996668" CREATED="1399674012573" MODIFIED="1399674016399"/>
</node>
</node>
<node TEXT="vocab" LOCALIZED_STYLE_REF="styles.topic" ID="ID_586701781" CREATED="1399674078811" MODIFIED="1399674095162">
<node TEXT="Tk = the graphical part" ID="ID_1905320675" CREATED="1399674079755" MODIFIED="1399674083351">
<node TEXT="stands for the ToolKit in Graphical Toolkit" ID="ID_979483177" CREATED="1399674083563" MODIFIED="1399674091854"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="u" ID="ID_942770267" CREATED="1406665710529" MODIFIED="1406665711100">
<node TEXT="changing widget appearance causes redraw, without explicit redraw. changing which widgets a frame displays, though, requires explicit redrawing." ID="ID_1418885713" CREATED="1406665712198" MODIFIED="1406665758687">
<node TEXT="evidence" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1230690035" CREATED="1406665851757" MODIFIED="1406665853239"/>
<node TEXT="Overlarchy, revision 162" ID="ID_768190666" CREATED="1406665758948" MODIFIED="1406665851472"/>
<node TEXT="up() (&quot;i&quot;) and down() (&quot;k&quot;) cause appearance to change, and they issue no explicit redraw command" ID="ID_1299623910" CREATED="1406665853845" MODIFIED="1406665883022"/>
<node TEXT="toggle() (&quot; &quot;), though, does not cause the image to change unless it includes the line &quot;self.view.topNodeIm.displaySubtree()&quot;" ID="ID_1346841725" CREATED="1406665883275" MODIFIED="1406665920068"/>
</node>
</node>
<node TEXT="notes from Effboot" ID="ID_1899946946" CREATED="1377291410931" MODIFIED="1399765701436">
<node TEXT="source" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1582313856" CREATED="1399670271517" MODIFIED="1399674767494">
<node TEXT="http://effbot.org/tkinterbook/tkinter-index.htm#introduction" ID="ID_234899790" CREATED="1376157098025" MODIFIED="1376157098025" LINK="http://effbot.org/tkinterbook/tkinter-index.htm#introduction"/>
</node>
<node TEXT="questions" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_550053368" CREATED="1398471960297" MODIFIED="1399671091559">
<node TEXT="TopLevel &#x2260; Frame?" ID="ID_350313456" CREATED="1398471961880" MODIFIED="1398471969667"/>
</node>
<node TEXT="pitfalls, confusions" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_574523339" CREATED="1375559341664" MODIFIED="1399671089408">
<node TEXT="widgets never go out of scope" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_843337675" CREATED="1376109295734" MODIFIED="1377288773830">
<node TEXT="ref" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_258824001" CREATED="1376109367212" MODIFIED="1376109369893">
<node TEXT="see this section" ID="ID_1468107258" CREATED="1376109304352" MODIFIED="1376109354727">
<node TEXT="More on widget references" ID="ID_1551354242" CREATED="1376109355539" MODIFIED="1376109358993"/>
</node>
<node TEXT="of this link" ID="ID_843512239" CREATED="1376109359573" MODIFIED="1376109361839">
<node TEXT="http://effbot.org/tkinterbook/tkinter-hello-again.htm" ID="ID_42954328" CREATED="1376109319978" MODIFIED="1376109319978" LINK="http://effbot.org/tkinterbook/tkinter-hello-again.htm"/>
</node>
</node>
<node TEXT="a widget can be instantiated as a variable local to a function, and when the function exits, it will persist." ID="ID_1658498760" CREATED="1376109377620" MODIFIED="1376109406654"/>
<node TEXT="widgets only disappear when explicitly destroy()ed." ID="ID_1746668709" CREATED="1376109406883" MODIFIED="1376109422001"/>
</node>
<node TEXT="more elsewhere; search for &quot;pitfall&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1544866194" CREATED="1376149750757" MODIFIED="1376149772206"/>
<node TEXT="don&apos;t use _tkinter directly" ID="ID_541808182" CREATED="1375559345528" MODIFIED="1375559364894">
<node TEXT="&quot;The Tk interface is provided by a binary extension module named _tkinter. This module contains the low-level interface to Tk, and should never be used directly&quot;" ID="ID_631791493" CREATED="1375559350744" MODIFIED="1375559352091"/>
</node>
<node TEXT="packing" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_791793702" CREATED="1399671116773" MODIFIED="1405628825046">
<node TEXT="pack() is called from contents, not containers" LOCALIZED_STYLE_REF="default" ID="ID_1386904259" CREATED="1376166664523" MODIFIED="1399671130622"/>
<node TEXT="order matters" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_397046624" CREATED="1405628815990" MODIFIED="1405628820574">
<node TEXT="instantiate from the top down" ID="ID_1407851371" CREATED="1405628826741" MODIFIED="1405628839825">
<node TEXT="create root, then frame with root as parent, then frame2 with frame as parent ..." ID="ID_669936108" CREATED="1405628844676" MODIFIED="1405628858054"/>
</node>
<node TEXT="pack from the bottom up" ID="ID_1168791389" CREATED="1405628841515" MODIFIED="1405628844159">
<node TEXT="once all those things are instantiated, pack frame2 first, then pack frame. (don&apos;t pack root.)" ID="ID_1462753402" CREATED="1405628858923" MODIFIED="1405628887912"/>
</node>
</node>
<node TEXT="separate construction from packing" ID="ID_935955727" CREATED="1376109465497" MODIFIED="1376109471651">
<node TEXT="instead of the temptation below, use two statements" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1890728906" CREATED="1376109479673" MODIFIED="1376109570689"/>
<node TEXT="the temptation" ID="ID_853081069" CREATED="1376109510519" MODIFIED="1376109512531">
<node TEXT="chain them with the dot operator" ID="ID_586553488" CREATED="1376109471912" MODIFIED="1376109516171"/>
<node TEXT="assign no variable name to the instance" ID="ID_578475551" CREATED="1376109516872" MODIFIED="1376109547811"/>
<node TEXT="create the instance and pack it in one statement" ID="ID_985908073" CREATED="1376109548271" MODIFIED="1376109553002"/>
</node>
<node TEXT="why it doesn&apos;t work" ID="ID_1883263121" CREATED="1376109556999" MODIFIED="1376109559945">
<node TEXT="?" ID="ID_738881748" CREATED="1376109560134" MODIFIED="1376109560513"/>
</node>
</node>
<node TEXT="a frame must be .pack()ed before being used" ID="ID_456514692" CREATED="1376149873802" MODIFIED="1376149891869">
<node TEXT="I think" ID="ID_1903132745" CREATED="1376149892114" MODIFIED="1376149893325"/>
<node TEXT="even if it contains no sub-objects" ID="ID_1797873782" CREATED="1376149897585" MODIFIED="1376149904388"/>
<node TEXT="evidence" ID="ID_1407303320" CREATED="1376149916185" MODIFIED="1376149919004">
<node TEXT="second program here" ID="ID_613324456" CREATED="1376149919225" MODIFIED="1376149921516"/>
<node TEXT="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm" ID="ID_1346263606" CREATED="1377288695809" MODIFIED="1407610049518" LINK="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm"/>
</node>
</node>
</node>
<node TEXT="callbacks are passed &quot;event&quot; arguments" ID="ID_833820226" CREATED="1377459052604" MODIFIED="1377468283624">
<node TEXT="and must therefore be designed to accept them as arguments" ID="ID_738606673" CREATED="1377468221715" MODIFIED="1377468278525"/>
</node>
<node TEXT="weird idiom: &quot;make a class, run root.mainloop()&quot;" ID="ID_824220176" CREATED="1376108980602" MODIFIED="1399671103364">
<node TEXT="e.g. as here" ID="ID_253807471" CREATED="1376108885306" MODIFIED="1376108887613"/>
<node TEXT="http://effbot.org/tkinterbook/tkinter-hello-again.htm" ID="ID_1799637242" CREATED="1376108884453" MODIFIED="1376108884453" LINK="http://effbot.org/tkinterbook/tkinter-hello-again.htm"/>
<node TEXT="The object instantiated (of class suggestively named &quot;App&quot;) is passed at instantiation the Tk instance." ID="ID_963302284" CREATED="1376108890490" MODIFIED="1377288745730"/>
</node>
</node>
<node TEXT="pitfall: how to read this" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_1017674458" CREATED="1398472405269" MODIFIED="1398472410861">
<node TEXT="I thought I was seeing a &quot;=&gt;&quot; operator, but that might just be a symbol for &quot;function at left should return an object of type at right&quot;, not part of the Python language" ID="ID_756889572" CREATED="1398472411348" MODIFIED="1398472460240"/>
</node>
<node TEXT="coordinates (within window)" ID="ID_981046894" CREATED="1376147152841" MODIFIED="1398471192193">
<node TEXT="(how far right, how far down)" ID="ID_627017684" CREATED="1376147157921" MODIFIED="1376147171019"/>
<node TEXT="both positive" ID="ID_1637040217" CREATED="1376147177464" MODIFIED="1376147179355"/>
</node>
<node TEXT="mandatory" ID="ID_1853053974" CREATED="1375558066468" MODIFIED="1375558256810">
<node TEXT="import Tkinter&#xa;root = Tkinter.Tk()&#xa;# set up your interface, then run it with:&#xa;root.mainloop()" ID="ID_1750772983" CREATED="1375558072620" MODIFIED="1376157135546"/>
</node>
<node TEXT="widgets" ID="ID_390227199" CREATED="1376109886612" MODIFIED="1399671034103">
<font BOLD="true"/>
<node TEXT="list, by method" ID="ID_227543800" CREATED="1376110524386" MODIFIED="1399670917214">
<font BOLD="true"/>
<node TEXT="nodes one level rightward are all siblings in Tk()&apos;s hierarchy" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_409557221" CREATED="1376110538410" MODIFIED="1376110557780"/>
<node TEXT="special ones" ID="ID_914162785" CREATED="1398472473610" MODIFIED="1398472475126">
<node TEXT="Tk(), the root widget" ID="ID_691955467" CREATED="1375559715577" MODIFIED="1377287597033">
<node TEXT="what it is" ID="ID_402815744" CREATED="1377287603766" MODIFIED="1377287605265">
<node TEXT="&quot;there should be only one&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_712796948" CREATED="1375559719121" MODIFIED="1375559876588">
<node TEXT="http://effbot.org/tkinterbook/tkinter-hello-tkinter.htm" ID="ID_1560912859" CREATED="1375559873699" MODIFIED="1375559873699" LINK="http://effbot.org/tkinterbook/tkinter-hello-tkinter.htm"/>
<node TEXT="I am skeptical" ID="ID_1143668584" CREATED="1375559877186" MODIFIED="1375559879374"/>
</node>
<node TEXT="is a window" ID="ID_215105092" CREATED="1375559862938" MODIFIED="1377287570826"/>
</node>
<node TEXT="create it" ID="ID_327679797" CREATED="1375559722217" MODIFIED="1375559916373">
<node TEXT="root = Tk()" ID="ID_1425631029" CREATED="1375559729977" MODIFIED="1375559731659"/>
<node TEXT="&quot;root&quot; does not have to be its name" ID="ID_1837450902" CREATED="1375559732065" MODIFIED="1375559738580"/>
</node>
<node TEXT="one idiom?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_800423101" CREATED="1377287611518" MODIFIED="1398471053436">
<node TEXT="label it" ID="ID_825728524" CREATED="1375559912514" MODIFIED="1375559913781">
<node TEXT="w = Label(root, text=&quot;Hello, world!&quot;)" ID="ID_1446771763" CREATED="1375559925173" MODIFIED="1375559925173"/>
</node>
<node TEXT="pack it" ID="ID_110315362" CREATED="1375559928889" MODIFIED="1375559929962">
<node TEXT="w.pack()" ID="ID_1197178819" CREATED="1375559925173" MODIFIED="1375559925173"/>
</node>
</node>
<node TEXT="another?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1085171667" CREATED="1377287615654" MODIFIED="1398471053434">
<node TEXT="frame = Frame(root)" ID="ID_1905451147" CREATED="1376108508917" MODIFIED="1376108511192"/>
<node TEXT="frame.pack()" ID="ID_594584030" CREATED="1376108531420" MODIFIED="1376108531840"/>
</node>
</node>
<node TEXT="Toplevel" ID="ID_149452227" CREATED="1376110598672" MODIFIED="1376110600651">
<node TEXT="uniquely, provides window manager interface" ID="ID_392941434" CREATED="1376110601688" MODIFIED="1376110605659"/>
<node TEXT="to create one, and allow for its destruction" ID="ID_135891754" CREATED="1376166728786" MODIFIED="1376166749455">
<node TEXT="top = Toplevel()&#xa;top.title(&quot;This will be the title.&quot;)&#xa;&#xa;msg = Message(top, text=&quot;This will be displayed.&quot;)&#xa;msg.pack()&#xa;&#xa;button = Button(top, text=&quot;Dismiss&quot;, command=top.destroy)&#xa;button.pack()" ID="ID_868966814" CREATED="1376166738416" MODIFIED="1376166773635"/>
</node>
<node TEXT="like Frame, but to make a separate window" ID="ID_298840141" CREATED="1376152808893" MODIFIED="1376166615163">
<node TEXT="from Tkinter import *   &#xa;root = Tk()&#xa;   &#xa;# create root window contents...&#xa;top = Toplevel()&#xa;&#xa;# create top window contents...   &#xa;root.mainloop()" ID="ID_216033766" CREATED="1376152812092" MODIFIED="1399669855276"/>
</node>
<node TEXT="Toplevel windows cannot be pack()ed" ID="ID_1162270858" CREATED="1376152832860" MODIFIED="1376152849894">
<node TEXT="or otherwise geometry-managed" ID="ID_697065481" CREATED="1376152857227" MODIFIED="1376152861813"/>
<node TEXT="because pack() is called from guests, not hosts" ID="ID_1447314635" CREATED="1376166633156" MODIFIED="1399670545223"/>
</node>
</node>
</node>
<node TEXT="display, text" ID="ID_1277706117" CREATED="1376110344583" MODIFIED="1376110353789">
<node TEXT="Canvas" ID="ID_1907470929" CREATED="1376109902396" MODIFIED="1376110260101">
<node TEXT="general graphics" ID="ID_1442115776" CREATED="1376109905380" MODIFIED="1376109907311"/>
</node>
<node TEXT="Entry" ID="ID_1288209285" CREATED="1376109942491" MODIFIED="1376110277920">
<node TEXT="text entry" ID="ID_1700864747" CREATED="1376109944483" MODIFIED="1376109947902"/>
</node>
<node TEXT="Text (user-modifiable)" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_803529021" CREATED="1376110230922" MODIFIED="1398471767365">
<node TEXT="indexes" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1925907705" CREATED="1376168569476" MODIFIED="1398471548731">
<node TEXT="complex" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_75958045" CREATED="1398471545429" MODIFIED="1398471547396"/>
<node TEXT="point to spots in the text" ID="ID_1914726108" CREATED="1376168576060" MODIFIED="1376168579791"/>
<node TEXT="line.column notation" ID="ID_91924230" CREATED="1376168684432" MODIFIED="1376168687604">
<node TEXT="encoding (ugly)" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1367326227" CREATED="1376168751166" MODIFIED="1398471465257">
<node TEXT="strings of form &quot;number.number&quot;" ID="ID_200304401" CREATED="1376168694233" MODIFIED="1376168708107"/>
<node TEXT="first line = 1" ID="ID_1015413021" CREATED="1376168718856" MODIFIED="1376168721123"/>
<node TEXT="first column = 0" ID="ID_563174895" CREATED="1376168721383" MODIFIED="1376168723987"/>
</node>
<node TEXT="handy construction syntax" ID="ID_1651460003" CREATED="1376168741975" MODIFIED="1376168748290">
<node TEXT="&quot;%d.%d&quot; % (line, column)" ID="ID_176729405" CREATED="1376168749063" MODIFIED="1376168749674"/>
</node>
<node TEXT="above range : not an error" ID="ID_1535467660" CREATED="1376168786118" MODIFIED="1398471501075">
<node TEXT="&quot;It is not an error to specify line numbers beyond the last line, or column numbers beyond the last column on a line. Such numbers correspond to the line beyond the last, or the newline character ending a line.&quot;" ID="ID_1242704433" CREATED="1376168790358" MODIFIED="1376168797505"/>
</node>
</node>
<node TEXT="to convert to line.column notation" ID="ID_1440060000" CREATED="1376168828821" MODIFIED="1376168834792">
<node TEXT="call (Tkinter., I assumed)index() on any other index" ID="ID_589886090" CREATED="1376168834980" MODIFIED="1376168869159"/>
</node>
<node TEXT="window coordinates as indexes" ID="ID_119191222" CREATED="1376168944417" MODIFIED="1376168952972">
<node TEXT="this finds the character closest to the mouse" ID="ID_1970443782" CREATED="1376168959913" MODIFIED="1376168965540"/>
<node TEXT="&quot;@%d,%d&quot; % (event.x, event.y)" ID="ID_522021800" CREATED="1376168953697" MODIFIED="1376168954540"/>
</node>
<node TEXT="modifying them" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_887697840" CREATED="1376169083005" MODIFIED="1376169085871">
<node TEXT="http://effbot.org/tkinterbook/text.htm" ID="ID_567603657" CREATED="1376169098789" MODIFIED="1376169098789" LINK="http://effbot.org/tkinterbook/text.htm"/>
<node TEXT="search for this" ID="ID_8158713" CREATED="1376169099780" MODIFIED="1376169101640">
<node TEXT="&quot;Expressions can be used to modify any kind of index&quot;" ID="ID_745258014" CREATED="1376169086829" MODIFIED="1376169088720"/>
</node>
</node>
</node>
<node TEXT="tags" ID="ID_1704088876" CREATED="1376169264504" MODIFIED="1376169265147">
<node TEXT="one Text widget can have many tags" ID="ID_351309093" CREATED="1376169271383" MODIFIED="1398471616629"/>
<node TEXT="&quot;If you attach multiple tags to a range of text, style options from the most recently created tag override options from earlier tags.&quot;" ID="ID_97103648" CREATED="1376169265895" MODIFIED="1376169267155"/>
</node>
<node TEXT="can embed images and windows" ID="ID_917444778" CREATED="1376169016159" MODIFIED="1376169026062">
<node TEXT="&quot;To refer to a window, simply use the corresponding Tkinter widget instance as an index. To refer to an embedded image, use the corresponding Tkinter PhotoImage or BitmapImage object.&quot;" ID="ID_950153944" CREATED="1376169038558" MODIFIED="1376169043650"/>
</node>
<node TEXT="to disable editing" ID="ID_1086751668" CREATED="1376168588564" MODIFIED="1376168591303">
<node TEXT="set &quot;state&quot; option to &quot;DISABLED&quot;" ID="ID_1595423959" CREATED="1376168594379" MODIFIED="1376168603646"/>
<node TEXT="&quot;(but if you do that, you&#x2019;ll also disable the insert and delete methods)&quot;" ID="ID_540743521" CREATED="1376168613070" MODIFIED="1376168615814"/>
</node>
</node>
<node TEXT="Label" ID="ID_1273386360" CREATED="1376108585467" MODIFIED="1398471799611">
<font BOLD="true"/>
<node TEXT="does not wrap text" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_694790653" CREATED="1398471776437" MODIFIED="1398471794971">
<node ID="ID_934870302" CREATED="1398471793262" MODIFIED="1398471793262"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      for that, see Message widget
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="display text or image" ID="ID_10511311" CREATED="1376109990073" MODIFIED="1376109999911"/>
<node TEXT="root = Tk()&#xa;w = Label(root, text=&quot;Hello, world!&quot;)&#xa;w.pack()&#xa;root.mainloop()" ID="ID_1962528781" CREATED="1376108588835" MODIFIED="1376108614507"/>
</node>
<node TEXT="Message" ID="ID_1515405000" CREATED="1376110097303" MODIFIED="1376110097714">
<node TEXT="text. like label, but can wrap text." ID="ID_601882274" CREATED="1376110098591" MODIFIED="1376110124316"/>
</node>
</node>
<node TEXT="frames" ID="ID_873729794" CREATED="1376110324816" MODIFIED="1376110325987">
<node TEXT="Frame" LOCALIZED_STYLE_REF="default" ID="ID_925578960" CREATED="1375563864952" MODIFIED="1398471867592">
<font BOLD="true"/>
<node TEXT="a container to hold other widgets" ID="ID_1558423777" CREATED="1375563873785" MODIFIED="1375563878899"/>
<node TEXT="adding a child" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_557096975" CREATED="1375564008827" MODIFIED="1398471864948">
<node TEXT="adding [a button named frame] to a Frame?" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1253750617" CREATED="1398471869026" MODIFIED="1398471880412"/>
<node TEXT="adding a button to a Frame named &quot;frame&quot;" ID="ID_614355625" CREATED="1375564015692" MODIFIED="1375564027447"/>
<node TEXT="in the __init__ function of the class in which frame is a data field" ID="ID_234437533" CREATED="1375564055786" MODIFIED="1375564075755"/>
<node TEXT="self.button = Button(frame, text=&quot;QUIT&quot;, fg=&quot;red&quot;, command=frame.quit)&#xa;self.button.pack(side=LEFT)" ID="ID_1088718227" CREATED="1375564012469" MODIFIED="1375564013176"/>
</node>
</node>
<node TEXT="LabelFrame" ID="ID_404663510" CREATED="1376110307680" MODIFIED="1376110332519">
<node TEXT="with border and title" ID="ID_903833703" CREATED="1376110308593" MODIFIED="1376110315547"/>
</node>
<node TEXT="Toplevel" ID="ID_1044878355" CREATED="1376110275777" MODIFIED="1376110276468"/>
<node TEXT="PanedWindow" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_930648941" CREATED="1376110425807" MODIFIED="1376110429454">
<node TEXT="&quot;A container widget that organizes child widgets in resizable panes.&quot;" ID="ID_1493075413" CREATED="1376110425807" MODIFIED="1376110432000"/>
</node>
</node>
<node TEXT="selection" ID="ID_1697482854" CREATED="1376109892284" MODIFIED="1376110472759">
<node TEXT="Button" ID="ID_1651261775" CREATED="1375564207839" MODIFIED="1398471120526">
<font BOLD="true"/>
<node TEXT="Button(frame, text=&quot;QUIT&quot;, fg=&quot;red&quot;, command=frame.quit)&#xa;self.button.pack(side=LEFT)" ID="ID_1237618031" CREATED="1375564012469" MODIFIED="1376108744533"/>
<node TEXT="def&apos;s" ID="ID_1584449925" CREATED="1376108666625" MODIFIED="1376108667339">
<node TEXT="first arg = parent, containing widget" ID="ID_1059768191" CREATED="1375564229046" MODIFIED="1375564238937"/>
<node TEXT="text = displayed on button" ID="ID_1183063404" CREATED="1375564234613" MODIFIED="1375564247353"/>
<node TEXT="fg = foreground color" ID="ID_1478454198" CREATED="1375564247558" MODIFIED="1375564251928"/>
<node TEXT="command = called when button clicked" ID="ID_829725833" CREATED="1375564252133" MODIFIED="1375564259584"/>
</node>
<node TEXT="effect" ID="ID_1830935008" CREATED="1376108670360" MODIFIED="1376108672251">
<node TEXT="add a button to the frame" ID="ID_1845933388" CREATED="1376108672417" MODIFIED="1376108675468"/>
</node>
</node>
<node TEXT="Radiobutton" ID="ID_1233172307" CREATED="1376110137757" MODIFIED="1376110139624"/>
<node TEXT="Scrollbar" ID="ID_615742103" CREATED="1376110180508" MODIFIED="1376110181047"/>
<node TEXT="Checkbutton" ID="ID_1045591105" CREATED="1376109922860" MODIFIED="1376110342042">
<node TEXT="persistent two-state clickable object" ID="ID_1811899142" CREATED="1376109924780" MODIFIED="1376109939218"/>
</node>
<node TEXT="Listbox" ID="ID_835366791" CREATED="1376110023377" MODIFIED="1376110026444">
<node TEXT="menu" ID="ID_265725979" CREATED="1376110026729" MODIFIED="1376110035787"/>
<node TEXT="radio button or checklist" ID="ID_139786009" CREATED="1376110042736" MODIFIED="1376110046187"/>
</node>
<node TEXT="Menu" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1716270908" CREATED="1376110057127" MODIFIED="1399670818854">
<node TEXT="pulldown and popup menus" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_447150614" CREATED="1376110059319" MODIFIED="1399670826069"/>
<node TEXT="see example code" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1787240889" CREATED="1376153498280" MODIFIED="1376153521924">
<node TEXT="menus_1.py" ID="ID_628165925" CREATED="1376153501168" MODIFIED="1376154421227"/>
<node TEXT="in this folder" ID="ID_1103293250" CREATED="1376153513320" MODIFIED="1376153515515">
<node TEXT="/Users/jeff/Mine/by object/python/Tkinter" ID="ID_273319733" CREATED="1376153515945" MODIFIED="1376153515945"/>
</node>
</node>
<node TEXT="don&apos;t need to be packed" ID="ID_1189335400" CREATED="1376153485088" MODIFIED="1376153488211"/>
<node TEXT="Menu() has argument-dependent effects" ID="ID_603574107" CREATED="1376153558358" MODIFIED="1376153571561">
<node TEXT="the argument is, I believe, the parent of the thing created" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1734090261" CREATED="1376153746769" MODIFIED="1376153753585"/>
<node TEXT="called on a Tk instance (us. named &quot;root&quot;)" ID="ID_1406877662" CREATED="1376153571789" MODIFIED="1399670585421">
<node TEXT="ordered" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1649416091" CREATED="1376153888125" MODIFIED="1376153890638"/>
<node TEXT="create it" ID="ID_662590284" CREATED="1376153805935" MODIFIED="1376153885808">
<node TEXT="menu = Menu(root)" ID="ID_1512811833" CREATED="1376153808951" MODIFIED="1376153814138"/>
</node>
<node TEXT="express it" ID="ID_1197523400" CREATED="1376153815055" MODIFIED="1376153887384">
<node TEXT="don&apos;t express it until all its submenus have been created and expressed" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1213895711" CREATED="1376153911388" MODIFIED="1376153925196"/>
<node TEXT="root.config(menu=menu)" ID="ID_89508356" CREATED="1376153783794" MODIFIED="1376153783794"/>
</node>
<node TEXT="the result" ID="ID_1056537731" CREATED="1376153828511" MODIFIED="1376153829689">
<node ID="ID_607015544" CREATED="1376153789050" MODIFIED="1376153789050"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      it becomes (on a Mac -- maybe it populates what had nothing on a PC) the top menu bar on the scren.
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="called on a Menu" ID="ID_838562565" CREATED="1376153603517" MODIFIED="1376153836225">
<node TEXT="ordered" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_177913333" CREATED="1376153879269" MODIFIED="1376153881350"/>
<node TEXT="create it" ID="ID_1004794769" CREATED="1376153839654" MODIFIED="1376153876096">
<node TEXT="filemenu = Menu(menu)" ID="ID_1451029398" CREATED="1376153850054" MODIFIED="1376153850673"/>
</node>
<node TEXT="populate it" ID="ID_1183574243" CREATED="1376153858942" MODIFIED="1376153878312">
<node TEXT="filemenu.add_command(label=&quot;New&quot;, command=callback)" ID="ID_1955305218" CREATED="1376153862813" MODIFIED="1376153863712"/>
<node TEXT="..." ID="ID_979868264" CREATED="1376153864150" MODIFIED="1376153865472"/>
</node>
<node TEXT="express it" ID="ID_1619322873" CREATED="1376153871093" MODIFIED="1376153873000">
<node TEXT="menu.add_cascade(label=&quot;File&quot;, menu=filemenu)" ID="ID_1438219460" CREATED="1376153873591" MODIFIED="1376153873591"/>
</node>
</node>
</node>
</node>
<node TEXT="Menubutton" ID="ID_1606902443" CREATED="1376110073112" MODIFIED="1376110073514">
<node TEXT="for pulldown menus" ID="ID_211943299" CREATED="1376110075335" MODIFIED="1376110077722"/>
</node>
<node TEXT="Scale" ID="ID_236147786" CREATED="1376110154837" MODIFIED="1376110155712">
<node TEXT="slide a number" ID="ID_1473406004" CREATED="1376110155933" MODIFIED="1376110166443"/>
</node>
<node TEXT="Spinbox" ID="ID_1223777282" CREATED="1376110479734" MODIFIED="1376110479734">
<node TEXT="select from &quot;a range or an ordered set&quot;" ID="ID_1327674879" CREATED="1376110484499" MODIFIED="1376110491358"/>
</node>
</node>
<node TEXT="mixins" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1370326848" CREATED="1376110978138" MODIFIED="1399671145598">
<node TEXT="I don&apos;t understand either." LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_905825409" CREATED="1376110984978" MODIFIED="1376110989748"/>
<node TEXT="Wm" ID="ID_340538364" CREATED="1376110980491" MODIFIED="1376110982149"/>
<node TEXT="Misc" ID="ID_1798007095" CREATED="1376110982386" MODIFIED="1376110984285"/>
</node>
</node>
<node TEXT="list, by goal" LOCALIZED_STYLE_REF="default" ID="ID_983288236" CREATED="1376152803069" MODIFIED="1399670922521">
<font BOLD="true"/>
<node TEXT="hard to file" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_644890745" CREATED="1399670884846" MODIFIED="1399670886927"/>
<node TEXT="toolbar" ID="ID_460560636" CREATED="1376154455036" MODIFIED="1376154513341">
<node TEXT="see sample code" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_677829123" CREATED="1376154481875" MODIFIED="1376154491628">
<node TEXT="menus_2.py" ID="ID_1808071269" CREATED="1376153501168" MODIFIED="1376154488198"/>
<node TEXT="in this folder" ID="ID_707301426" CREATED="1376153513320" MODIFIED="1376153515515">
<node TEXT="/Users/jeff/Mine/by object/python/Tkinter" ID="ID_514067528" CREATED="1376153515945" MODIFIED="1376153515945"/>
</node>
</node>
</node>
<node TEXT="status bar" ID="ID_1579680016" CREATED="1376154822873" MODIFIED="1376154827452">
<node TEXT="raw" ID="ID_1168746730" CREATED="1376154908639" MODIFIED="1376154909785">
<node TEXT="status = Label(master, text=&quot;&quot;, bd=1, relief=SUNKEN, anchor=W)" ID="ID_1404862744" CREATED="1376154827884" MODIFIED="1376154827884"/>
<node TEXT="status.pack(side=BOTTOM, fill=X)" ID="ID_232734705" CREATED="1376154827884" MODIFIED="1376154827884"/>
</node>
<node TEXT="prettier : use a class wrapper" ID="ID_241854978" CREATED="1376154912279" MODIFIED="1376154917569">
<node TEXT="http://effbot.org/tkinterbook/tkinter-application-windows.htm" ID="ID_295660015" CREATED="1376154972553" MODIFIED="1376154972553" LINK="http://effbot.org/tkinterbook/tkinter-application-windows.htm"/>
<node TEXT="search for this" ID="ID_316288739" CREATED="1376154958965" MODIFIED="1376154964247">
<node TEXT="A Status Bar Class (File: tkSimpleStatusBar.py)" ID="ID_1676441914" CREATED="1376154964535" MODIFIED="1376154964535"/>
</node>
</node>
</node>
<node TEXT="dialogs" ID="ID_433026022" CREATED="1376157316084" MODIFIED="1376157318471">
<node TEXT="simple, &quot;standard&quot;" ID="ID_1130480714" CREATED="1376157773046" MODIFIED="1376157791193">
<node TEXT="http://effbot.org/tkinterbook/tkinter-standard-dialogs.htm" ID="ID_1098912181" CREATED="1376157676317" MODIFIED="1376157676317" LINK="http://effbot.org/tkinterbook/tkinter-standard-dialogs.htm"/>
<node TEXT="display" ID="ID_1613312568" CREATED="1376157560268" MODIFIED="1376157562384">
<node TEXT="tkMessageBox.function(title, message [, options])." ID="ID_1446768127" CREATED="1376157319084" MODIFIED="1376157319839"/>
<node TEXT="similar" ID="ID_809009822" CREATED="1376157440328" MODIFIED="1376157441587">
<node TEXT="tkMessageBox.showwarning" ID="ID_1192554172" CREATED="1376157457912" MODIFIED="1376157469811"/>
<node TEXT=".showinfo" ID="ID_1123982610" CREATED="1376157470039" MODIFIED="1376157472179"/>
<node TEXT=".showerror" ID="ID_1258651685" CREATED="1376157476647" MODIFIED="1376157479786"/>
</node>
</node>
<node TEXT="display and get input" ID="ID_869229667" CREATED="1376157563596" MODIFIED="1376157568312">
<node TEXT="if tkMessageBox.askyesno(&quot;Print&quot;, &quot;Print this report?&quot;):&#xa;  report.print()" ID="ID_1749804680" CREATED="1376157523782" MODIFIED="1376157557491"/>
<node TEXT="can specify options to change user response set" ID="ID_492871447" CREATED="1376157605851" MODIFIED="1376157620126"/>
<node TEXT="similar" ID="ID_606952190" CREATED="1376157570067" MODIFIED="1376157570975">
<node TEXT="askquestion" ID="ID_1276692225" CREATED="1376157591705" MODIFIED="1376157594030"/>
<node TEXT="askokcancel" ID="ID_544323947" CREATED="1376157591705" MODIFIED="1376157595935"/>
<node TEXT="askyesno" ID="ID_1762526182" CREATED="1376157591706" MODIFIED="1376157601254"/>
<node TEXT="askretrycancel" ID="ID_432705266" CREATED="1376157591707" MODIFIED="1376157600030"/>
</node>
</node>
</node>
<node TEXT="complex" ID="ID_988088076" CREATED="1376157779694" MODIFIED="1376157785241">
<node TEXT="http://effbot.org/tkinterbook/tkinter-dialog-windows.htm" ID="ID_290716222" CREATED="1376157798568" MODIFIED="1376157798568" LINK="http://effbot.org/tkinterbook/tkinter-dialog-windows.htm"/>
<node TEXT="pitfall: first program is bad" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1066648376" CREATED="1376158053622" MODIFIED="1399670955746">
<node TEXT="and only revealed to be so after presentation" ID="ID_1537225942" CREATED="1376158061110" MODIFIED="1376158067009"/>
</node>
<node TEXT="skimmed" ID="ID_233035759" CREATED="1376157801670" MODIFIED="1376157886755"/>
<node TEXT="concepts" ID="ID_1751216711" CREATED="1376157886946" MODIFIED="1376157887942">
<node TEXT="across-window conflicts" ID="ID_188792442" CREATED="1376157892931" MODIFIED="1376157901446"/>
<node TEXT="wait_window, to interrupt one for another" ID="ID_823609615" CREATED="1376157918522" MODIFIED="1376157928021"/>
<node TEXT="grab_set" ID="ID_116465673" CREATED="1376157990200" MODIFIED="1376157993091">
<node TEXT="&quot;which makes sure that no mouse or keyboard events are sent to the wrong window&quot;" ID="ID_1740965882" CREATED="1376157993480" MODIFIED="1376157994691"/>
</node>
<node TEXT="protocol" ID="ID_1636122598" CREATED="1376158032151" MODIFIED="1376158034218"/>
<node TEXT="destroy" ID="ID_714948070" CREATED="1376158034438" MODIFIED="1376158035650"/>
<node TEXT="packing vs. gridding" ID="ID_382495984" CREATED="1376158714962" MODIFIED="1376158719334"/>
<node TEXT="validating data" ID="ID_1682080889" CREATED="1376158895685" MODIFIED="1376158898553">
<node TEXT="checking that user-supplied data is appropriate" ID="ID_832725223" CREATED="1376158898973" MODIFIED="1376158905976"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="methods" ID="ID_659536049" CREATED="1376110563529" MODIFIED="1399670974077">
<node ID="ID_1670044700" CREATED="1399670974649" MODIFIED="1399670974649"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      common to all
    </p>
  </body>
</html>
</richcontent>
<node TEXT="http://effbot.org/tkinterbook/widget.htm" ID="ID_1102984082" CREATED="1376166862759" MODIFIED="1376166862759" LINK="http://effbot.org/tkinterbook/widget.htm"/>
<node TEXT="branches" ID="ID_369629405" CREATED="1398472697932" MODIFIED="1398472706712">
<node TEXT="Misc" ID="ID_1430383273" CREATED="1376110569841" MODIFIED="1376110570660"/>
<node TEXT="geometry management" ID="ID_583420307" CREATED="1376110570864" MODIFIED="1376110574315"/>
<node TEXT="config management" ID="ID_823844799" CREATED="1376110577456" MODIFIED="1376110579947"/>
</node>
<node TEXT="notable leaves" LOCALIZED_STYLE_REF="default" ID="ID_1870300785" CREATED="1376166907788" MODIFIED="1398472708352">
<node TEXT="unbind" ID="ID_1129371865" CREATED="1376166909115" MODIFIED="1376166910671">
<node TEXT="see Tkinter / events, in this .mm" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1159072424" CREATED="1377288416678" MODIFIED="1377288426526"/>
</node>
<node TEXT="wait_variable" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1056565120" CREATED="1376166917907" MODIFIED="1376167756864">
<node TEXT="&quot;Waits for the given Tkinter variable to change. This method enters a local event loop, so other parts of the application will still be responsive. The local event loop is terminated when the variable is updated (setting it to it&#x2019;s current value also counts).&quot;" ID="ID_819583615" CREATED="1376167757812" MODIFIED="1376167906269"/>
</node>
<node TEXT="lift, lower" ID="ID_705341234" CREATED="1376167007394" MODIFIED="1376167009206">
<node TEXT="relative to other windows" ID="ID_1518686628" CREATED="1376167009418" MODIFIED="1376167596712"/>
<node TEXT="in a stack" ID="ID_857901948" CREATED="1376167596969" MODIFIED="1376167601180"/>
</node>
<node TEXT="bell" ID="ID_1973856799" CREATED="1376167086343" MODIFIED="1376167087044">
<node TEXT="sound" ID="ID_1280545893" CREATED="1376167087600" MODIFIED="1376167088315"/>
</node>
<node TEXT="clipboard_*" ID="ID_18539816" CREATED="1376167099543" MODIFIED="1376167109698">
<node TEXT="set, clear are normal" ID="ID_326184517" CREATED="1376167228892" MODIFIED="1376167231759"/>
<node TEXT="getting seems to be weird" ID="ID_50626435" CREATED="1376167225684" MODIFIED="1376167244495">
<node TEXT="based on only this reference" ID="ID_1204001526" CREATED="1376167245618" MODIFIED="1376167249302">
<node TEXT="http://mail.python.org/pipermail/tutor/2004-July/030398.html" ID="ID_1934803139" CREATED="1376167241595" MODIFIED="1376167241595" LINK="http://mail.python.org/pipermail/tutor/2004-July/030398.html"/>
</node>
<node TEXT="self.selection_get(selection=&apos;CLIPBOARD&apos;)" ID="ID_1340049501" CREATED="1376167223915" MODIFIED="1376167224271"/>
</node>
</node>
<node TEXT="winfo_toplevel" ID="ID_1159201833" CREATED="1376167895296" MODIFIED="1376167897963">
<node TEXT="&quot;Get the toplevel window (or root) window for this widget, as a widget instance&quot;" ID="ID_1802887184" CREATED="1376167898824" MODIFIED="1376167900187"/>
</node>
</node>
</node>
<node TEXT="windows (+?)" ID="ID_1840248771" CREATED="1399670994872" MODIFIED="1399671013565">
<node TEXT="possibly available from other widgets too" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1370164191" CREATED="1399671001609" MODIFIED="1399671009154"/>
<node TEXT="to focus on a window" ID="ID_1487702467" CREATED="1376147269326" MODIFIED="1399669426822">
<node TEXT="ref" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_38855994" CREATED="1376149718150" MODIFIED="1376149740015">
<node TEXT="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm" ID="ID_936041643" CREATED="1376149721428" MODIFIED="1376149721428" LINK="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm"/>
<node TEXT="see second program there, which I saved as &quot;events_2.py&quot;" ID="ID_850543369" CREATED="1376149722991" MODIFIED="1376149738235"/>
</node>
<node TEXT="frame.focus_set()" ID="ID_1111588318" CREATED="1376147810394" MODIFIED="1376147811477">
<node TEXT="where frame is the window that will be focused on" ID="ID_873716719" CREATED="1399669433501" MODIFIED="1399669439656"/>
</node>
<node TEXT="pitfall : focus needed and not obvious" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_500772615" CREATED="1376149672248" MODIFIED="1376149680377">
<node TEXT="a window will not received keyboard input until focused" ID="ID_1047615173" CREATED="1376149638617" MODIFIED="1376149653363"/>
<node TEXT="a window can look in focus without being so" ID="ID_1066573864" CREATED="1376149683240" MODIFIED="1376149696730"/>
</node>
</node>
<node TEXT="to redraw" ID="ID_1844216455" CREATED="1376155028387" MODIFIED="1376155030462">
<node TEXT="call a widget&apos;s update_idletasks() method" ID="ID_1612328584" CREATED="1376155030988" MODIFIED="1376155049110"/>
</node>
</node>
<node TEXT="geometry managers" ID="ID_931834567" CREATED="1376111163804" MODIFIED="1376111166855">
<node TEXT="grid" ID="ID_1387070982" CREATED="1376111168516" MODIFIED="1376111169199"/>
<node TEXT="pack" ID="ID_677234980" CREATED="1376111169436" MODIFIED="1376111170054"/>
<node TEXT="place" ID="ID_1018872189" CREATED="1376111170300" MODIFIED="1376111171151"/>
</node>
</node>
<node TEXT="options" ID="ID_1193731413" CREATED="1376111278839" MODIFIED="1376111279753">
<node TEXT="what they are" ID="ID_184570333" CREATED="1376111593474" MODIFIED="1376111595037">
<node TEXT="the usual way to change appearance" ID="ID_291504160" CREATED="1376111279999" MODIFIED="1376111603373"/>
<node TEXT="are not function calls" ID="ID_1136386662" CREATED="1376111287974" MODIFIED="1398471994059"/>
<node TEXT="include" ID="ID_384229279" CREATED="1376111313210" MODIFIED="1376111314981">
<node TEXT="text" ID="ID_378745769" CREATED="1376111315298" MODIFIED="1376111321437"/>
<node TEXT="color" ID="ID_429608296" CREATED="1376111321673" MODIFIED="1376111322437"/>
<node TEXT="size" ID="ID_271406348" CREATED="1376111322642" MODIFIED="1376111323268"/>
<node TEXT="command callbacks" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1292976631" CREATED="1376111326066" MODIFIED="1376111337287">
<node TEXT="main node promoted" ID="ID_1561497395" CREATED="1376111337873" MODIFIED="1398472018941">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_829561824" STARTINCLINATION="213;0;" ENDINCLINATION="213;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
</node>
<node TEXT="include command callbacks" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_829561824" CREATED="1376111303635" MODIFIED="1376111311251"/>
</node>
<node TEXT="getting, seting them" ID="ID_933836968" CREATED="1398472347815" MODIFIED="1398472348385">
<node TEXT="setting" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_962103201" CREATED="1398472510522" MODIFIED="1398472540264">
<node TEXT="not sure" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_578266123" CREATED="1398472541454" MODIFIED="1398472543207"/>
<node TEXT="one set method" ID="ID_896221443" CREATED="1376111940289" MODIFIED="1376111946540">
<node TEXT="this" ID="ID_691671092" CREATED="1376111473108" MODIFIED="1376111473990">
<node TEXT="widgetclass(master, option=value, &#x2026;) =&gt; widget" ID="ID_1141090383" CREATED="1376111469768" MODIFIED="1376111469768"/>
</node>
<node TEXT="does this" ID="ID_726857553" CREATED="1376111476364" MODIFIED="1376111477351">
<node TEXT="creates &quot;widget&quot;, a member of class &quot;widgetclass&quot; and child of &quot;master&quot;, with the option &quot;option&quot; set to &quot;value&quot;" ID="ID_408361342" CREATED="1376111477772" MODIFIED="1376111514681"/>
</node>
</node>
<node TEXT="two more" ID="ID_1174324312" CREATED="1376111956553" MODIFIED="1398472526140">
<node TEXT="config(option=value, &#x2026;)" ID="ID_1427130012" CREATED="1376111960955" MODIFIED="1376111960955"/>
<node TEXT="configure(option=value, &#x2026;)" ID="ID_15052347" CREATED="1376111960955" MODIFIED="1376111960955"/>
</node>
</node>
<node TEXT="testing them" ID="ID_853404720" CREATED="1376111532234" MODIFIED="1376111538949">
<node TEXT="cget(&#x201c;option&#x201d;) =&gt; string" ID="ID_844797625" CREATED="1376111539762" MODIFIED="1376111540341"/>
<node TEXT="&quot;Both the option name, and the returned value, are strings.&quot;" ID="ID_1863740770" CREATED="1376111564788" MODIFIED="1376111566238"/>
<node TEXT="exception : getting the name option" ID="ID_1664388474" CREATED="1376111570379" MODIFIED="1376111576773">
<node TEXT="&quot;use str(widget) instead&quot;" ID="ID_898413155" CREATED="1376111577403" MODIFIED="1376111584565"/>
</node>
</node>
<node TEXT="both : convenience functions" ID="ID_1394625961" CREATED="1376111781518" MODIFIED="1376111973734">
<node TEXT="function associations" ID="ID_1845793334" CREATED="1376111819525" MODIFIED="1376111824608">
<node TEXT="&quot;the __setitem__ method maps to configure&quot;" ID="ID_1536214350" CREATED="1376111793077" MODIFIED="1376111805376"/>
<node TEXT="&quot;__getitem__ maps to cget&quot;" ID="ID_1745475891" CREATED="1376111817650" MODIFIED="1376111818983"/>
</node>
<node TEXT="resulting shorthand" ID="ID_1019143685" CREATED="1376111832421" MODIFIED="1376111837783">
<node TEXT="possible, not mandatory" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_329480900" CREATED="1376111841772" MODIFIED="1376111845141"/>
<node TEXT="value = widget[&quot;option&quot;]" ID="ID_1060986288" CREATED="1376111838447" MODIFIED="1376111838447"/>
<node TEXT="widget[&quot;option&quot;] = value" ID="ID_360251591" CREATED="1376111838447" MODIFIED="1376111838447"/>
</node>
</node>
<node TEXT="can change many in one statement" ID="ID_777099243" CREATED="1376112002008" MODIFIED="1376112009226"/>
</node>
<node TEXT="keys()" ID="ID_1847232185" CREATED="1376112046622" MODIFIED="1376112047361">
<node TEXT="returns a list of all a widget&apos;s options" ID="ID_821187771" CREATED="1376112049454" MODIFIED="1376112065440"/>
</node>
<node TEXT="pitfall : if the option name is a reserved word" ID="ID_1883130491" CREATED="1376111666310" MODIFIED="1376111675633">
<node TEXT="http://effbot.org/tkinterbook/tkinter-widget-configuration.htm" ID="ID_284056506" CREATED="1376111684515" MODIFIED="1376111684515" LINK="http://effbot.org/tkinterbook/tkinter-widget-configuration.htm"/>
<node TEXT="&quot;Note that some options have names that are reserved words in Python (class, from, &#x2026;). To use these as keyword arguments, simply append an underscore to the option name (class_, from_, &#x2026;).&quot;" ID="ID_1655598277" CREATED="1376111676495" MODIFIED="1376111677905"/>
</node>
<node TEXT="subtopic : widget styling" ID="ID_1050933606" CREATED="1376112653165" MODIFIED="1398472753545">
<node TEXT="http://effbot.org/tkinterbook/tkinter-widget-styling.htm" ID="ID_550376748" CREATED="1376112689536" MODIFIED="1376112689536" LINK="http://effbot.org/tkinterbook/tkinter-widget-styling.htm"/>
<node TEXT="colors, fonts, borders, relief, highlights, cursors" ID="ID_14771420" CREATED="1376112659093" MODIFIED="1376112685503"/>
</node>
</node>
</node>
<node TEXT="events" ID="ID_106328550" CREATED="1376147267357" MODIFIED="1399671035846">
<font BOLD="true"/>
<node TEXT="keyboard events, list of all" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_373726190" CREATED="1377291383811" MODIFIED="1399669453631">
<node TEXT="http://www.tcl.tk/man/tcl8.4/TkCmd/keysyms.htm" ID="ID_39217822" CREATED="1377291389792" MODIFIED="1377291389792" LINK="http://www.tcl.tk/man/tcl8.4/TkCmd/keysyms.htm"/>
</node>
<node TEXT="identifying them" ID="ID_710996520" CREATED="1376148140629" MODIFIED="1399669195832">
<font BOLD="true"/>
<node TEXT="syntax, general" ID="ID_1969638819" CREATED="1376149971135" MODIFIED="1376150098614">
<node TEXT="they are strings, of this form" ID="ID_987281478" CREATED="1376149980535" MODIFIED="1376149984337"/>
<node TEXT="&quot;&lt;modifier-type-detail&gt;&quot;" ID="ID_914065648" CREATED="1376149972633" MODIFIED="1376149979202"/>
<node TEXT="type is mandatory" ID="ID_1255310958" CREATED="1376150006534" MODIFIED="1399668928630"/>
<node TEXT="shorthand" ID="ID_789788471" CREATED="1376150059573" MODIFIED="1376150061056">
<node TEXT="EXCEPTION: &quot;Unless it is a space or an angle bracket&quot;" ID="ID_972475809" CREATED="1398473266309" MODIFIED="1398473276671"/>
<node TEXT="&quot;There are also various ways to simplify the event string; for example, to match a keyboard key, you can leave out the angle brackets and just use the key as is.&quot;" ID="ID_1009623190" CREATED="1376150062125" MODIFIED="1398473266018"/>
</node>
</node>
<node TEXT="the event types" ID="ID_131971887" CREATED="1376150098811" MODIFIED="1376151354077">
<node TEXT="I stopped taking thorough notes." LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1640284432" CREATED="1376150328933" MODIFIED="1376150344445"/>
<node TEXT="ref" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_385611807" CREATED="1376150341029" MODIFIED="1376150342445">
<node TEXT="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm" ID="ID_1956194623" CREATED="1376150343072" MODIFIED="1376150343072" LINK="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm"/>
</node>
<node TEXT="mouse" ID="ID_1599195983" CREATED="1376150422162" MODIFIED="1376150423277">
<node TEXT="mouse button" ID="ID_798492154" CREATED="1376150160818" MODIFIED="1376150242154">
<node TEXT="&lt;Button-1&gt;" ID="ID_1569096651" CREATED="1376150102220" MODIFIED="1376150119838">
<node TEXT="left" ID="ID_1708959955" CREATED="1376150120403" MODIFIED="1376150122046"/>
</node>
<node TEXT="&lt;Button-2&gt;" ID="ID_1480040102" CREATED="1376150130154" MODIFIED="1376150133238">
<node TEXT="middle, if it&apos;s there" ID="ID_1921894681" CREATED="1376150133443" MODIFIED="1376150138093"/>
</node>
<node TEXT="&lt;Button-3&gt;" ID="ID_498408396" CREATED="1376150102220" MODIFIED="1376150126822">
<node TEXT="right" ID="ID_1449141915" CREATED="1376150120403" MODIFIED="1376150128990"/>
</node>
<node TEXT="shorthand, longhand" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_269425971" CREATED="1376150164681" MODIFIED="1376150192479">
<node TEXT="pitfall -- someone else might use this" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1404501219" CREATED="1376150167314" MODIFIED="1376150173514"/>
<node TEXT="&lt;n&gt; = &lt;Button-n&gt; = &lt;ButtonPress-n&gt;" ID="ID_1729195242" CREATED="1376150174353" MODIFIED="1376150205494"/>
</node>
</node>
<node TEXT="move mouse with button down" ID="ID_180588273" CREATED="1376150234544" MODIFIED="1376150250778">
<node TEXT="&lt;Bk-Motion&gt;" ID="ID_691663507" CREATED="1376150253433" MODIFIED="1376150257081">
<node TEXT="k in [1,3]" ID="ID_492932948" CREATED="1376150257791" MODIFIED="1376150260250"/>
</node>
<node TEXT="passes x,y position data" ID="ID_1131434729" CREATED="1376150267671" MODIFIED="1376150289044"/>
</node>
<node TEXT="release mouse button" ID="ID_1994327049" CREATED="1376150309789" MODIFIED="1376150312968">
<node TEXT="&lt;ButtonRelease-k&gt;" ID="ID_718913620" CREATED="1376150300310" MODIFIED="1376150305153"/>
<node TEXT="k in [1,3]" ID="ID_1792243713" CREATED="1376150305669" MODIFIED="1376150307673"/>
</node>
<node TEXT="double click" ID="ID_351226380" CREATED="1376150320149" MODIFIED="1376150321784"/>
<node TEXT="&lt;Enter&gt;" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1826400449" CREATED="1376150357268" MODIFIED="1376150374185">
<node TEXT="looks like a keyboard thing" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_608928864" CREATED="1376150362572" MODIFIED="1376150420244"/>
<node TEXT="the MOUSE entered the widget" ID="ID_369824465" CREATED="1376150362572" MODIFIED="1376150380514"/>
</node>
<node TEXT="&lt;Leave&gt;" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_591183233" CREATED="1376150384683" MODIFIED="1376150387348"/>
</node>
<node TEXT="keyboard" ID="ID_821740851" CREATED="1376150435114" MODIFIED="1376150436613">
<node TEXT="&lt;Return&gt;" ID="ID_697830254" CREATED="1376150457841" MODIFIED="1376150460204"/>
<node TEXT="&lt;Key&gt;" ID="ID_199048672" CREATED="1376150491608" MODIFIED="1376150494899">
<node TEXT="provides key value in &quot;char&quot; member of the event passed to the callback" ID="ID_1533828459" CREATED="1376150505336" MODIFIED="1376150522786"/>
<node TEXT="it&apos;s an empty string for special keys" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1013790962" CREATED="1376150529511" MODIFIED="1376150535056"/>
</node>
<node TEXT="special keys" ID="ID_379425229" CREATED="1376150563918" MODIFIED="1376151118721">
<node TEXT="use them like &lt;Return&gt;" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1083448730" CREATED="1376150579589" MODIFIED="1376151124192"/>
<node TEXT="&quot;You can bind to virtually all keys on the keyboard. For an ordinary 102-key PC-style keyboard, the special keys are Cancel (the Break key), BackSpace, Tab, Return(the Enter key), Shift_L (any Shift key), Control_L (any Control key), Alt_L (any Alt key), Pause, Caps_Lock, Escape, Prior (Page Up), Next (Page Down), End, Home, Left, Up, Right, Down, Print, Insert, Delete, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, Num_Lock, and Scroll_Lock.&quot;" ID="ID_333010189" CREATED="1376150569806" MODIFIED="1376150578138"/>
</node>
<node TEXT="no brackets : ordinary characters" ID="ID_225308085" CREATED="1376150601124" MODIFIED="1376150607096">
<node TEXT="&quot;a&quot;, not &quot;&lt;a&gt;&quot;" ID="ID_970195518" CREATED="1376150607564" MODIFIED="1376150612967"/>
<node TEXT="won&apos;t work for special keys" ID="ID_559089766" CREATED="1376150613148" MODIFIED="1376150616168"/>
</node>
<node TEXT="modifiers" ID="ID_881184498" CREATED="1376150665899" MODIFIED="1376151081614">
<node TEXT="&lt;Shift-Up&gt;" ID="ID_541883798" CREATED="1376150631052" MODIFIED="1376150634639"/>
<node TEXT="Alt, Shift, and Control" ID="ID_1597564562" CREATED="1376150635011" MODIFIED="1376150636375"/>
<node TEXT="to modify ordinary keys" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1159304440" CREATED="1376150672003" MODIFIED="1376151083528">
<node TEXT="for Shift, can just use the key letter capitalized" ID="ID_753334195" CREATED="1376151006113" MODIFIED="1376151025494"/>
<node TEXT="for Control, Alt, it&apos;s like &lt;Ctrl-a&gt;, &lt;Alt-A&gt;" ID="ID_619473683" CREATED="1376151025955" MODIFIED="1376151105074">
<node TEXT="the latter implying Shift" ID="ID_676732781" CREATED="1376151105261" MODIFIED="1376151108809"/>
</node>
</node>
</node>
</node>
<node TEXT="window" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_421629873" CREATED="1398473442056" MODIFIED="1398473447016">
<node TEXT="&lt;Configure&gt;" ID="ID_82143181" CREATED="1376151324426" MODIFIED="1376151324426">
<node TEXT="&quot;The widget changed size (or location, on some platforms). The new size is provided in the width and height attributes of the event object passed to the callback.&quot;" ID="ID_244889964" CREATED="1376151324426" MODIFIED="1376151329348"/>
</node>
<node TEXT="&lt;FocusIn&gt;" ID="ID_1211991423" CREATED="1376150444690" MODIFIED="1376150446828">
<node TEXT="focus moved to this widget" ID="ID_811571496" CREATED="1376150439097" MODIFIED="1376150444244"/>
</node>
<node TEXT="&lt;FocusOut&gt;" ID="ID_1047379128" CREATED="1376150449345" MODIFIED="1376150453524"/>
</node>
</node>
<node TEXT="event attributes" ID="ID_1764189295" CREATED="1376151356855" MODIFIED="1376151360897">
<node TEXT="widget" ID="ID_1150827709" CREATED="1376151364126" MODIFIED="1376151365121">
<node TEXT="origin" ID="ID_786307899" CREATED="1376151365341" MODIFIED="1376151366193"/>
</node>
<node TEXT="x,y" ID="ID_22018027" CREATED="1376151389862" MODIFIED="1376151391256">
<node TEXT="mouse position, relative to window" ID="ID_1336091882" CREATED="1376151391501" MODIFIED="1399669107920"/>
</node>
<node TEXT="x_root, y_root" ID="ID_1893486279" CREATED="1376151397365" MODIFIED="1376151399920">
<node TEXT="mouse position, relative to screen, in pixels" ID="ID_1495529243" CREATED="1376151391501" MODIFIED="1399669124319"/>
</node>
<node TEXT="keys" ID="ID_977653288" CREATED="1376151436956" MODIFIED="1376151537520">
<node TEXT="what&apos;s the difference?" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1505171691" CREATED="1376151440629" MODIFIED="1376151443630"/>
<node TEXT="char" ID="ID_1855113895" CREATED="1376151412925" MODIFIED="1376151413520"/>
<node TEXT="keysym" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1524370119" CREATED="1376151425317" MODIFIED="1376151674750">
<node TEXT="dep; not portable" ID="ID_1459160203" CREATED="1376151541218" MODIFIED="1376151544356"/>
</node>
<node TEXT="keycode" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1844028075" CREATED="1376151450428" MODIFIED="1376151675342">
<node TEXT="dep; not portable" ID="ID_1797705191" CREATED="1376151541218" MODIFIED="1376151544356"/>
</node>
</node>
<node TEXT="num" LOCALIZED_STYLE_REF="styles.topic" ID="ID_907675690" CREATED="1376151458171" MODIFIED="1376151645070">
<node TEXT="mouse button number" ID="ID_966455526" CREATED="1376151459396" MODIFIED="1376151462070"/>
<node TEXT="dep; not portable" ID="ID_495762894" CREATED="1376151541218" MODIFIED="1376151544356">
<node TEXT="&quot;For portability reasons, you should stick to char, height, width, x, y, x_root, y_root, and widget.&quot;" ID="ID_624009454" CREATED="1376151588272" MODIFIED="1376151637853"/>
</node>
</node>
<node TEXT="width, height" ID="ID_1939488528" CREATED="1376151468692" MODIFIED="1376151470526">
<node TEXT="Configure only" ID="ID_502099505" CREATED="1376151472835" MODIFIED="1376151474878"/>
</node>
<node TEXT="type" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1489939362" CREATED="1376151491579" MODIFIED="1376151672303">
<node TEXT="type of event" ID="ID_1702483019" CREATED="1376151492923" MODIFIED="1376151495061"/>
<node TEXT="I find it hard to believe this is deprecated." ID="ID_1913424874" CREATED="1376151541218" MODIFIED="1376151668185">
<node TEXT="&quot;For portability reasons, you should stick to char, height, width, x, y, x_root, y_root, and widget.&quot;" ID="ID_1009729615" CREATED="1376151588272" MODIFIED="1376151637853"/>
</node>
</node>
</node>
</node>
<node TEXT="binding &amp; callback" ID="ID_1987486026" CREATED="1399669204723" MODIFIED="1399669507894">
<node TEXT="bind a function to an event" ID="ID_699015610" CREATED="1376147287699" MODIFIED="1376147314925">
<node TEXT="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm" ID="ID_1181641941" CREATED="1376147354812" MODIFIED="1376147354812" LINK="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm"/>
<node TEXT="frame.bind(&quot;&lt;Button-1&gt;&quot;, callback)" ID="ID_1360523905" CREATED="1376147320346" MODIFIED="1376147321517"/>
<node TEXT="where &quot;callback&quot; is a function" ID="ID_766097006" CREATED="1376147323594" MODIFIED="1376147333492"/>
</node>
<node TEXT="binding many things at once" ID="ID_742920068" CREATED="1376151764898" MODIFIED="1376151769445">
<node TEXT="below is are four collection of objects that can be bound to a callback at once. the first, &quot;widget instance&quot;, is a singleton: it binds the action only to that instance. the others bind to multiple widgets at once." LOCALIZED_STYLE_REF="default" ID="ID_1240806464" CREATED="1399669304713" MODIFIED="1399669549890"/>
<node TEXT="the four levels" ID="ID_146340563" CREATED="1376151788418" MODIFIED="1399669516582">
<node TEXT="the widget instance, using bind" ID="ID_709467665" CREATED="1376151773133" MODIFIED="1376151776877"/>
<node TEXT="the widget&#x2019;s toplevel window (Toplevel or root), also using bind" ID="ID_1077506332" CREATED="1376151773133" MODIFIED="1376151777821"/>
<node TEXT="the widget class, using bind_class (this is used by Tkinter to provide standard bindings)" ID="ID_72986912" CREATED="1376151773133" MODIFIED="1376151779127"/>
<node TEXT="the whole application, using bind_all" ID="ID_800101725" CREATED="1376151773134" MODIFIED="1376151779997"/>
</node>
</node>
<node TEXT="conflict management" ID="ID_808809081" CREATED="1376151834145" MODIFIED="1376151837811">
<node TEXT="for overlapping bindings" ID="ID_669470818" CREATED="1399669596897" MODIFIED="1399669604917">
<node TEXT="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm" ID="ID_159373993" CREATED="1376151852228" MODIFIED="1376151852228" LINK="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm"/>
<node TEXT="search for phrase" ID="ID_1942256835" CREATED="1376151838937" MODIFIED="1376151842691">
<node TEXT="overlapping bindings" ID="ID_1387446912" CREATED="1376151844186" MODIFIED="1376151844186"/>
</node>
</node>
<node TEXT="disabling an inherited callback" ID="ID_236847880" CREATED="1376151970821" MODIFIED="1376151978535">
<node TEXT="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm" ID="ID_1442946502" CREATED="1376151852228" MODIFIED="1376151852228" LINK="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm"/>
<node TEXT="search for phrase" ID="ID_559243948" CREATED="1376151981605" MODIFIED="1376151983959">
<node TEXT="assume you wish to disable" ID="ID_1748254778" CREATED="1376151984852" MODIFIED="1376151985639"/>
</node>
<node TEXT="but see here" LOCALIZED_STYLE_REF="default" ID="ID_1287760151" CREATED="1399669636061" MODIFIED="1399669649295">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_394762351" STARTINCLINATION="79;0;" ENDINCLINATION="79;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="rather than modifying default behavior, create a specialized class" ID="ID_1465766121" CREATED="1376152079754" MODIFIED="1376152089692">
<node TEXT="links in" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_394762351" CREATED="1399669637935" MODIFIED="1399669645330"/>
<node TEXT="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm" ID="ID_880392774" CREATED="1376151852228" MODIFIED="1376151852228" LINK="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm"/>
<node TEXT="search for phrase" ID="ID_520727442" CREATED="1376152091337" MODIFIED="1376152097140">
<node TEXT="Better use your own Text widget specialization" ID="ID_769072742" CREATED="1376152094211" MODIFIED="1376152094211"/>
</node>
</node>
</node>
</node>
<node TEXT="window manager interactions" ID="ID_257105006" CREATED="1376152215614" MODIFIED="1376152220144">
<node TEXT="ref" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1085179869" CREATED="1399669814673" MODIFIED="1399669821748">
<node TEXT="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm" ID="ID_1055474721" CREATED="1399669809242" MODIFIED="1399669809242" LINK="http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm"/>
<node TEXT="search for &quot;destroy&quot;" ID="ID_143952915" CREATED="1399669816561" MODIFIED="1399669819813"/>
</node>
<node TEXT="destroying windows" ID="ID_975378461" CREATED="1376152491486" MODIFIED="1376152497960">
<node TEXT="using WM_DELETE_WINDOW" ID="ID_1622308894" CREATED="1376152186599" MODIFIED="1376152509499">
<node TEXT="widget.protocol(&quot;WM_DELETE_WINDOW&quot;, handler)" ID="ID_513077761" CREATED="1376152256742" MODIFIED="1376152256742"/>
<node TEXT="&quot;used to define what happens when the user explicitly closes a window using the window manager&quot;" ID="ID_203686422" CREATED="1376152189365" MODIFIED="1376152201601"/>
<node TEXT="&quot;Once you have installed your own handler, Tkinter will no longer automatically close the window. Instead, you could for example display a message box asking the user if the current data should be saved, or in some cases, simply ignore the request. To close the window from this handler, simply call the destroy method &quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1934682376" CREATED="1376152318915" MODIFIED="1376152322620"/>
</node>
<node TEXT="danger : to delete the whole hierarchy" ID="ID_1785809303" CREATED="1376152560500" MODIFIED="1377288480030">
<node TEXT="why this might not be a worry" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1302252439" CREATED="1376152611362" MODIFIED="1376152617203">
<node TEXT="&quot;Future versions of Tkinter will most likely do this by default.&quot;" ID="ID_1083420998" CREATED="1376152617977" MODIFIED="1376152621510"/>
</node>
<node TEXT="closing a window from the WM destroys that window, but not its widget hierarchy" ID="ID_1348650481" CREATED="1376152538716" MODIFIED="1376152557943"/>
<node TEXT="to delete the whole thing, must do this" ID="ID_1676737411" CREATED="1376152572890" MODIFIED="1376152586918"/>
<node TEXT="top.protocol(&quot;WM_DELETE_WINDOW&quot;, top.destroy)" ID="ID_236719371" CREATED="1376152587251" MODIFIED="1376152589895"/>
</node>
</node>
<node TEXT="&quot;protocol&quot;" ID="ID_1719278633" CREATED="1376152136943" MODIFIED="1399669680763">
<node ID="ID_88483923" CREATED="1399669681106" MODIFIED="1399669681106"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      = interaction between application and window manager
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node TEXT="advanced : to configure a parent" ID="ID_1318415275" CREATED="1376112453337" MODIFIED="1376112468364">
<node TEXT="http://effbot.org/tkinterbook/tkinter-widget-configuration.htm" ID="ID_797951653" CREATED="1376112527836" MODIFIED="1376112527836" LINK="http://effbot.org/tkinterbook/tkinter-widget-configuration.htm"/>
<node TEXT="the idea" ID="ID_647241836" CREATED="1376112472856" MODIFIED="1376112476067">
<node TEXT="for &quot;a custom widget which needs to pass configuration options along to its parent class&quot;" ID="ID_1361286029" CREATED="1376112416435" MODIFIED="1376112441845"/>
</node>
<node TEXT="temptation" ID="ID_603078822" CREATED="1376112478544" MODIFIED="1376112480707">
<node TEXT="def __init__(self, master, **kw):&#xa;  Canvas.__init__(self, master, kw) # kw is a dictionary" ID="ID_3470530" CREATED="1376112424948" MODIFIED="1376112491387"/>
</node>
<node TEXT="the problem" ID="ID_1719589657" CREATED="1376112493520" MODIFIED="1376112499699">
<node TEXT="&quot;This works just fine with the current version of Tkinter, but it may not work with future versions.&quot;" ID="ID_1892943405" CREATED="1376112424948" MODIFIED="1376112508708"/>
</node>
<node TEXT="solution" ID="ID_485254172" CREATED="1376112510344" MODIFIED="1376112511899">
<node TEXT="&quot;A more general approach is to use the apply function:&quot;" ID="ID_1239768789" CREATED="1376112513087" MODIFIED="1376112516507"/>
<node TEXT="def __init__(self, master, **kw):&#xa;  apply(Canvas.__init__, (self, master), kw)" ID="ID_662884566" CREATED="1376112424949" MODIFIED="1376112520618"/>
<node TEXT="how that works" ID="ID_1522170220" CREATED="1376112580976" MODIFIED="1376112583587">
<node TEXT="&quot;The apply function takes a function (an unbound method, in this case), a tuple with arguments (which must include self since we&#x2019;re calling an unbound method), and optionally, a dictionary which provides the keyword arguments.&quot;" ID="ID_1097534637" CREATED="1376112583759" MODIFIED="1376112585002"/>
</node>
</node>
</node>
<node TEXT="vocab" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1646989335" CREATED="1375558264400" MODIFIED="1399671180181">
<node TEXT="callback" ID="ID_813108988" CREATED="1375558301214" MODIFIED="1375558302249">
<node TEXT="wikipedia: &quot;a callback is a piece of executable code that is passed as an argument to other code, which is expected to call back (execute) the argument at some convenient time&quot;" ID="ID_233692498" CREATED="1375558272895" MODIFIED="1375558287722"/>
<node TEXT="synchronous: executed immediately" ID="ID_363366479" CREATED="1375558303878" MODIFIED="1398470959526"/>
<node TEXT="asynchronous: executed later" ID="ID_1750849375" CREATED="1375558303878" MODIFIED="1398470967670">
<node TEXT="executed later" ID="ID_1825412118" CREATED="1375558308486" MODIFIED="1375558315393"/>
</node>
</node>
</node>
</node>
<node TEXT="notes from NMT" LOCALIZED_STYLE_REF="default" ID="ID_198923673" CREATED="1399670322516" MODIFIED="1405712920352">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html" ID="ID_1638183682" CREATED="1399670276627" MODIFIED="1399670276627" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html"/>
<node TEXT="where to resume" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1371090687" CREATED="1399840740009" MODIFIED="1399840743251">
<node TEXT="URL or PDF" ID="ID_1965574244" CREATED="1399840862415" MODIFIED="1399840874841">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/universal.html" ID="ID_1197645842" CREATED="1399840846932" MODIFIED="1399840846932" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/universal.html"/>
<node TEXT="sec. 26, universal widget methods" ID="ID_949519724" CREATED="1399840776066" MODIFIED="1399840780948"/>
</node>
<node TEXT="corresponding notes herein" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_773936219" CREATED="1399840794873" MODIFIED="1399840821027">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1738761350" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="pitfalls" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1763199096" CREATED="1399674908701" MODIFIED="1399674915117">
<node TEXT="this tutorial uses Python 2.7" ID="ID_1780830" CREATED="1399674901468" MODIFIED="1399674912424"/>
</node>
<node TEXT="to make a script self-executing" ID="ID_1144642132" CREATED="1399674919060" MODIFIED="1399674931151">
<node TEXT="put this line at the top" ID="ID_1443183274" CREATED="1399674932236" MODIFIED="1399674934919"/>
<node TEXT="#!/usr/bin/env python" ID="ID_1198140407" CREATED="1399674935364" MODIFIED="1399674935663"/>
</node>
<node TEXT="a minimal app, with an &quot;app&quot; class" ID="ID_1908126607" CREATED="1399674799336" MODIFIED="1399674804347">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/minimal-app.html" ID="ID_1394030118" CREATED="1399674804692" MODIFIED="1399674804692" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/minimal-app.html"/>
</node>
<node TEXT="geometry management" ID="ID_567986039" CREATED="1399675337472" MODIFIED="1399677768960">
<node TEXT="this is mostly about grid()" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1513445559" CREATED="1399677770372" MODIFIED="1399677776405">
<node TEXT="he favors it over the others for &quot;pretty much everything&quot;" ID="ID_1488805767" CREATED="1399675346200" MODIFIED="1399675357324"/>
</node>
<node TEXT="positioning" ID="ID_1727043619" CREATED="1399677097352" MODIFIED="1399677120384">
<node TEXT="dimensions" ID="ID_1668129636" CREATED="1399675425444" MODIFIED="1399675426808">
<node TEXT="column width = max of guest cell widths" ID="ID_1281543777" CREATED="1399675381799" MODIFIED="1399675401504"/>
<node TEXT="row width = similar" ID="ID_867411885" CREATED="1399675401799" MODIFIED="1399675404699"/>
</node>
<node TEXT="&quot;spanning&quot;" ID="ID_630913620" CREATED="1399675431196" MODIFIED="1399675434080">
<node TEXT="combining cells" ID="ID_11965878" CREATED="1399675435989" MODIFIED="1399675442789"/>
<node TEXT="example: column span" ID="ID_1100907763" CREATED="1399676944316" MODIFIED="1399676947311">
<node TEXT="w.grid(row=0, column=2, columnspan=3) would place widget w in a cell that spans columns 2, 3, and 4 of row 0." ID="ID_520730152" CREATED="1399676948027" MODIFIED="1399676948615"/>
</node>
</node>
<node TEXT="to display" ID="ID_832837980" CREATED="1399675520356" MODIFIED="1399675522934">
<node LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1386817987" CREATED="1399675537439" MODIFIED="1399675539141"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      to display widget w
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="w.grid(option=value, ...)" ID="ID_1161961426" CREATED="1399675524099" MODIFIED="1399675526254"/>
</node>
<node TEXT="arguments" ID="ID_914793892" CREATED="1399676885006" MODIFIED="1399676892249">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/grid.html#grid-arguments" ID="ID_676911464" CREATED="1399676887182" MODIFIED="1399676887182" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/grid.html#grid-arguments"/>
</node>
</node>
<node TEXT="reporting" ID="ID_464629100" CREATED="1399677286314" MODIFIED="1399677288389">
<node TEXT="w.grid_bbox()" ID="ID_64514926" CREATED="1399677130103" MODIFIED="1399677166817">
<node TEXT="reports w&apos;s bounding box" ID="ID_80469921" CREATED="1399677134879" MODIFIED="1399677148409"/>
</node>
<node TEXT="w.grid_size()" ID="ID_1480269591" CREATED="1399677267883" MODIFIED="1399677271566"/>
<node TEXT="w.grid_info()" ID="ID_939075418" CREATED="1399677182717" MODIFIED="1399677185432"/>
<node TEXT="w.grid_location()" ID="ID_1387483801" CREATED="1399677190229" MODIFIED="1399677192872"/>
<node TEXT="w.grid_size()" ID="ID_1776783272" CREATED="1399677294169" MODIFIED="1399677296270"/>
<node TEXT="w.grid_slaves()" ID="ID_1190874465" CREATED="1399677304207" MODIFIED="1399677309005"/>
</node>
<node TEXT="hiding" ID="ID_363700006" CREATED="1399677248691" MODIFIED="1399677261596">
<node TEXT="w.grid_forget()" ID="ID_1390750941" CREATED="1399677161213" MODIFIED="1399677167857">
<node TEXT="stop displaying it" ID="ID_1804215281" CREATED="1399677171173" MODIFIED="1399677175976"/>
<node TEXT="redo with w.grid()" ID="ID_345398114" CREATED="1399677229876" MODIFIED="1399677233519">
<node TEXT="options will be forgotten" ID="ID_1220898824" CREATED="1399677235612" MODIFIED="1399677238847"/>
</node>
</node>
<node TEXT="w.grid_remove()" ID="ID_459110570" CREATED="1399677161213" MODIFIED="1399677246375">
<node TEXT="stop displaying it" ID="ID_858366810" CREATED="1399677171173" MODIFIED="1399677175976"/>
<node TEXT="redo with w.grid()" ID="ID_216933674" CREATED="1399677229876" MODIFIED="1399677233519"/>
</node>
</node>
<node TEXT="size control" ID="ID_1080713140" CREATED="1399677398415" MODIFIED="1399677401538">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/grid-config.html" ID="ID_780124761" CREATED="1399677442018" MODIFIED="1399677442018" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/grid-config.html"/>
<node TEXT="to override the default" ID="ID_1147795871" CREATED="1399677403415" MODIFIED="1399677407250">
<node TEXT="which is to be minimal, given the guests" ID="ID_561300819" CREATED="1399677407495" MODIFIED="1399677422038"/>
</node>
<node TEXT="w.grid_propogate()" ID="ID_1602755425" CREATED="1399677207077" MODIFIED="1399677212344">
<node TEXT="force it to be a certain size" ID="ID_1585031164" CREATED="1399677212580" MODIFIED="1399677217576"/>
</node>
<node TEXT="w.columnconfigure()" ID="ID_1014070045" CREATED="1399677451046" MODIFIED="1399677452400"/>
<node TEXT="w.rowconfigure()" ID="ID_1943114769" CREATED="1399677463381" MODIFIED="1399677465288"/>
<node TEXT="stretching" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_116834299" CREATED="1399677751269" MODIFIED="1405712559420">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/root-resize.html#rr-quitgrid" ID="ID_852680599" CREATED="1399677753926" MODIFIED="1399677753926" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/root-resize.html#rr-quitgrid"/>
</node>
</node>
</node>
<node TEXT="finding the top window" ID="ID_545165893" CREATED="1399677659944" MODIFIED="1399677662595">
<node TEXT="top=self.winfo_toplevel()" ID="ID_334060373" CREATED="1399677663776" MODIFIED="1399677663995"/>
<node TEXT="returns the root of the window containment tree" ID="ID_177048565" CREATED="1399677670455" MODIFIED="1399677682496"/>
</node>
<node TEXT="attributes, options" ID="ID_1925571417" CREATED="1399677897295" MODIFIED="1399677900108">
<node TEXT="the distinction eludes me" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_425645923" CREATED="1399677900353" MODIFIED="1399677905793"/>
<node TEXT="to initialize" ID="ID_157251699" CREATED="1399677912024" MODIFIED="1399677926796">
<node TEXT="the constructor" ID="ID_1570725084" CREATED="1399677940480" MODIFIED="1399677944971"/>
</node>
<node TEXT="to change" ID="ID_974225764" CREATED="1399677918807" MODIFIED="1399677927908">
<node TEXT="w.config()" ID="ID_64565795" CREATED="1399677933080" MODIFIED="1399677937547"/>
</node>
<node TEXT="list of" ID="ID_47544768" CREATED="1399678044604" MODIFIED="1399678518192">
<font BOLD="true"/>
<node TEXT="units of measure" ID="ID_750689048" CREATED="1399677968431" MODIFIED="1399677970890">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/dimensions.html" ID="ID_1873907603" CREATED="1399677971205" MODIFIED="1399677971205" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/dimensions.html"/>
</node>
<node TEXT="colors" ID="ID_883347442" CREATED="1399678035773" MODIFIED="1399678038880">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/colors.html" ID="ID_995464719" CREATED="1399678039243" MODIFIED="1399678039243" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/colors.html"/>
</node>
<node TEXT="fonts" ID="ID_1458365788" CREATED="1399678096579" MODIFIED="1399678097343">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/fonts.html" ID="ID_1798975244" CREATED="1399678097666" MODIFIED="1399678097666" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/fonts.html"/>
</node>
<node TEXT="anchors (anchor to wall)" ID="ID_1463633073" CREATED="1399678165386" MODIFIED="1399678171117">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/anchors.html" ID="ID_739651157" CREATED="1399678171408" MODIFIED="1399678171408" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/anchors.html"/>
<node TEXT="examples: top, top-left" ID="ID_373755727" CREATED="1399678177273" MODIFIED="1399678185284"/>
</node>
<node TEXT="relief" ID="ID_1789843202" CREATED="1399678214792" MODIFIED="1399678225859">
<node TEXT="faux-3D, esp. for buttons" ID="ID_1339695092" CREATED="1399678226164" MODIFIED="1399678227893"/>
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/relief.html" ID="ID_1397983198" CREATED="1399678223158" MODIFIED="1399678223158" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/relief.html"/>
</node>
<node TEXT="images" ID="ID_234555413" CREATED="1399678347346" MODIFIED="1399678348237">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/images.html" ID="ID_1370187826" CREATED="1399678371556" MODIFIED="1399678371556" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/images.html"/>
<node TEXT="bitmaps" ID="ID_143693464" CREATED="1399678265572" MODIFIED="1399678284642">
<node TEXT="2-color pictures, esp. small square ones" ID="ID_49315017" CREATED="1399678284903" MODIFIED="1399678338402"/>
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/bitmaps.html" ID="ID_457617051" CREATED="1399678273199" MODIFIED="1399678273199" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/bitmaps.html"/>
</node>
</node>
<node TEXT="cursors" ID="ID_1801063524" CREATED="1399678302020" MODIFIED="1399678303142">
<node TEXT="mouse images" ID="ID_1228997106" CREATED="1399678304547" MODIFIED="1399678306094"/>
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/cursors.html" ID="ID_794516866" CREATED="1399678303982" MODIFIED="1399678303982" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/cursors.html"/>
</node>
<node TEXT="geometry strings" ID="ID_1950971985" CREATED="1399678436113" MODIFIED="1399678438539">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/geometry.html" ID="ID_608432002" CREATED="1399678438986" MODIFIED="1399678438986" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/geometry.html"/>
<node TEXT="these describe size and position of top-level windows" ID="ID_1490551500" CREATED="1399678439935" MODIFIED="1399678447896"/>
</node>
<node TEXT="window name" ID="ID_775922632" CREATED="1399678559756" MODIFIED="1399678561103">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/window-names.html" ID="ID_1442895636" CREATED="1399678561414" MODIFIED="1399678561414" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/window-names.html"/>
</node>
<node TEXT="cap and join style" ID="ID_782627603" CREATED="1399678703024" MODIFIED="1399678706147">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/cap-join-styles.html" ID="ID_76702367" CREATED="1399678706851" MODIFIED="1399678706851" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/cap-join-styles.html"/>
<node TEXT="how the ends and intersections of lines look" ID="ID_1676460292" CREATED="1399678713393" MODIFIED="1399678734083"/>
</node>
<node TEXT="dash patterns" ID="ID_787190627" CREATED="1399678750385" MODIFIED="1399678752340">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/dash-patterns.html" ID="ID_727315622" CREATED="1399678752663" MODIFIED="1399678752663" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/dash-patterns.html"/>
</node>
<node TEXT="unlikely" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1825444667" CREATED="1399678801759" MODIFIED="1399678817136">
<node TEXT="matching stipple patterns" ID="ID_1136579883" CREATED="1399678806541" MODIFIED="1399678810187">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/stipple-offset.html" ID="ID_402090772" CREATED="1399678810902" MODIFIED="1399678810902" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/stipple-offset.html"/>
</node>
</node>
</node>
</node>
<node TEXT="exceptions" ID="ID_1113173770" CREATED="1399678839942" MODIFIED="1399678842090">
<node TEXT="are usually tk.TclError" ID="ID_815780028" CREATED="1399678842374" MODIFIED="1399678845450"/>
</node>
<node TEXT="widgets" ID="ID_1847894623" CREATED="1399678859927" MODIFIED="1399681491646">
<font BOLD="true"/>
<node TEXT="many options; only the surprising ones reported here" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1116601943" CREATED="1399679045273" MODIFIED="1399679057337"/>
<node TEXT="controls" ID="ID_1536910031" CREATED="1399681796386" MODIFIED="1399681797769">
<font BOLD="true"/>
<node TEXT="more elsewhere, e.g. under &quot;text&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1801219779" CREATED="1399681986629" MODIFIED="1399682003065"/>
<node TEXT="Button" ID="ID_1573212797" CREATED="1399679043481" MODIFIED="1399681497969">
<font BOLD="true"/>
<node TEXT="selected options" ID="ID_153651314" CREATED="1399679268993" MODIFIED="1399679277830">
<node TEXT="repeatinterval and repeatdelay" ID="ID_1661290278" CREATED="1399679063199" MODIFIED="1399679069484">
<node TEXT="&quot;Normally, a button fires only once when the user releases the mouse button. If you want the button to fire at regular intervals as long as the mouse button is held down ...&quot;" ID="ID_1420163167" CREATED="1399679077616" MODIFIED="1399679079620"/>
</node>
<node TEXT="state" ID="ID_177960672" CREATED="1399679115839" MODIFIED="1399679116386">
<node TEXT="to make unresponsive and gray" ID="ID_1580082576" CREATED="1399679116599" MODIFIED="1399679126250"/>
</node>
<node TEXT="takefocus" ID="ID_1075194345" CREATED="1399679139191" MODIFIED="1399679139490">
<node TEXT="default is true" ID="ID_1084420190" CREATED="1399679140142" MODIFIED="1399679143170"/>
</node>
<node TEXT="textvariable" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1559798323" CREATED="1399679189757" MODIFIED="1399679191710">
<node TEXT="assign a StringVar() object to this option, and when the StringVar changes, so will the displayed text" ID="ID_847485279" CREATED="1399679192197" MODIFIED="1399679213488"/>
</node>
<node TEXT="underline" ID="ID_1894062374" CREATED="1399679229171" MODIFIED="1399679229391">
<node TEXT="underline one character" ID="ID_242745585" CREATED="1399679229732" MODIFIED="1399679240933"/>
</node>
<node TEXT="wraplength" ID="ID_1104533846" CREATED="1399679251244" MODIFIED="1399679251502">
<node TEXT="wrap text within button" ID="ID_501128892" CREATED="1399679251947" MODIFIED="1399679256894"/>
</node>
</node>
<node TEXT="methods" ID="ID_150539456" CREATED="1399679275170" MODIFIED="1399679280859">
<node TEXT=".flash()" ID="ID_687266848" CREATED="1399679282521" MODIFIED="1399679284798"/>
<node TEXT=".invoke()" ID="ID_760748090" CREATED="1399679290585" MODIFIED="1399679292621"/>
</node>
</node>
<node TEXT="Checkbutton" ID="ID_181756553" CREATED="1399681476787" MODIFIED="1399681478310">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/checkbutton.html" ID="ID_579306622" CREATED="1399681478733" MODIFIED="1399681478733" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/checkbutton.html"/>
<node TEXT="toggle indicator and control, with text" ID="ID_1151353142" CREATED="1399681479587" MODIFIED="1399681488326"/>
</node>
<node TEXT="Radiobutton" ID="ID_1039766398" CREATED="1399682444375" MODIFIED="1399682444690">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/radiobutton.html" ID="ID_893399540" CREATED="1399682455105" MODIFIED="1399682455105" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/radiobutton.html"/>
<node TEXT="select one" ID="ID_509234865" CREATED="1399682449719" MODIFIED="1399682451290"/>
</node>
<node TEXT="Scale" ID="ID_1055675852" CREATED="1399682478886" MODIFIED="1399682479825">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/scale.html" ID="ID_240633011" CREATED="1399682480169" MODIFIED="1399682480169" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/scale.html"/>
<node TEXT="user-controlled numeric slider" ID="ID_1760251273" CREATED="1399682480726" MODIFIED="1399682491084"/>
</node>
</node>
<node TEXT="text" ID="ID_1968094529" CREATED="1399681531288" MODIFIED="1399681804448">
<font BOLD="true"/>
<node TEXT="Entry" ID="ID_1894458468" CREATED="1399681529393" MODIFIED="1399681530292">
<node TEXT="doc&apos;n *starts* here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_608590287" CREATED="1399681564528" MODIFIED="1399681575797">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/entry.html" ID="ID_1231912991" CREATED="1399681535795" MODIFIED="1399681535795" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/entry.html"/>
<node TEXT="2 more pages follow" ID="ID_14437336" CREATED="1399681570280" MODIFIED="1399681574020"/>
</node>
<node TEXT="for user to modify a single line of text" ID="ID_1236591735" CREATED="1399681536489" MODIFIED="1399681540916"/>
</node>
<node TEXT="Label" ID="ID_797120133" CREATED="1399681725796" MODIFIED="1399681726855">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/label.html" ID="ID_573812691" CREATED="1399681735430" MODIFIED="1399681735430" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/label.html"/>
<node TEXT="one line of text" ID="ID_831538795" CREATED="1399681727076" MODIFIED="1399682323335"/>
<node TEXT="the user can&apos;t change" ID="ID_1889618608" CREATED="1399682323603" MODIFIED="1399682323885"/>
</node>
<node TEXT="Listbox" ID="ID_843968429" CREATED="1399681873496" MODIFIED="1399681875746">
<node TEXT="doc&apos;n starts here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_918234239" CREATED="1399681964037" MODIFIED="1399681968863">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/listbox.html" ID="ID_369332543" CREATED="1399681876090" MODIFIED="1399681876090" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/listbox.html"/>
</node>
<node TEXT="display a box of lines of text that the user can select" ID="ID_102158924" CREATED="1399681887239" MODIFIED="1399681904449"/>
</node>
<node TEXT="Menu" ID="ID_975348042" CREATED="1399682021746" MODIFIED="1399682022790">
<node TEXT="doc&apos;n starts here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1604208487" CREATED="1399682099561" MODIFIED="1399682104154">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/menu.html" ID="ID_1619571786" CREATED="1399682097756" MODIFIED="1399682097756" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/menu.html"/>
</node>
<node TEXT="distinction from Menubutton" ID="ID_720023954" CREATED="1399682023372" MODIFIED="1399682035366">
<node TEXT="Menu = the full list, only visible when clicked" ID="ID_6420616" CREATED="1399682036531" MODIFIED="1399682047973"/>
<node TEXT="Menubutton = always visible" ID="ID_1038168506" CREATED="1399682039842" MODIFIED="1399682049773"/>
</node>
<node TEXT="Top-level menu" ID="ID_22518404" CREATED="1399682170119" MODIFIED="1399682172570">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/menu-toplevel.html" ID="ID_1893242763" CREATED="1399682194561" MODIFIED="1399682194561" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/menu-toplevel.html"/>
<node TEXT="Mac OS style" ID="ID_697624935" CREATED="1399682175248" MODIFIED="1399682183786"/>
</node>
</node>
<node TEXT="Menubutton" ID="ID_1357984776" CREATED="1399682225582" MODIFIED="1399682228152">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/menubutton.html" ID="ID_1520754744" CREATED="1399682233057" MODIFIED="1399682233057" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/menubutton.html"/>
</node>
<node TEXT="Message" ID="ID_1829661699" CREATED="1399682299692" MODIFIED="1399682300912">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/message.html" ID="ID_690056309" CREATED="1399682334509" MODIFIED="1399682334509" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/message.html"/>
<node TEXT="like Label, but for multiple lines" ID="ID_696013700" CREATED="1399682303692" MODIFIED="1399682328398"/>
<node TEXT="all same font" ID="ID_1624938896" CREATED="1399682328942" MODIFIED="1399682331248"/>
</node>
<node TEXT="OptionMenu" ID="ID_699740463" CREATED="1399682354345" MODIFIED="1399682359061">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/optionmenu.html" ID="ID_442351330" CREATED="1399682359357" MODIFIED="1399682359357" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/optionmenu.html"/>
<node TEXT="drop-down menu" ID="ID_1048859940" CREATED="1399682360441" MODIFIED="1399682362332"/>
</node>
<node TEXT="Text" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1513296085" CREATED="1399682590834" MODIFIED="1399682592748">
<node TEXT="doc&apos;n starts here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_389717425" CREATED="1399682596035" MODIFIED="1399682599998">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/text.html" ID="ID_1623816408" CREATED="1399682593398" MODIFIED="1399682593398" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/text.html"/>
</node>
<node TEXT="can include images" ID="ID_387785746" CREATED="1399765784219" MODIFIED="1399765787078">
<node TEXT="treated like single char&apos;s" ID="ID_1020899373" CREATED="1399765787251" MODIFIED="1399765795254"/>
<node TEXT="see &quot;Text widget images&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_438506634" CREATED="1399765799650" MODIFIED="1399765805359"/>
</node>
<node TEXT="can include whole widgets" ID="ID_1828636487" CREATED="1399766001844" MODIFIED="1399766005864">
<node TEXT="see &apos;text widget windows&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1951498540" CREATED="1399766008789" MODIFIED="1399766022130"/>
</node>
<node TEXT="&quot;indices&quot;" ID="ID_1101453788" CREATED="1399765832538" MODIFIED="1399765845808">
<node TEXT="identify spaces between two char&apos;s" ID="ID_358689218" CREATED="1399765845985" MODIFIED="1399765850980"/>
</node>
<node TEXT="&quot;text widget marks&quot;" ID="ID_1415901475" CREATED="1399765876424" MODIFIED="1399765879227">
<node TEXT="invisible" ID="ID_304184175" CREATED="1399765881328" MODIFIED="1399765884859"/>
</node>
<node TEXT="to ID and treat a region of text" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1366304728" CREATED="1399765909847" MODIFIED="1399769192612">
<node TEXT="use &quot;text widget tags&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_399877276" CREATED="1399765901064" MODIFIED="1399766026598"/>
<node TEXT="some restrictions on valid names apply" ID="ID_1578705473" CREATED="1399767867499" MODIFIED="1399767877070"/>
<node TEXT="conflicts &amp; the stack" LOCALIZED_STYLE_REF="default" ID="ID_1261349046" CREATED="1399767959537" MODIFIED="1399768027627">
<node TEXT="there is a &quot;tag stack&quot;" ID="ID_667541324" CREATED="1399767995088" MODIFIED="1399768002386"/>
<node TEXT="if multiple tags apply to the same element, the one added to the stack latest takes precedence." ID="ID_755570120" CREATED="1399767931624" MODIFIED="1399767994688"/>
<node TEXT="the tag stack&apos;s order can be changed" ID="ID_1861965627" CREATED="1399768003471" MODIFIED="1399768010970"/>
</node>
<node TEXT="selected methods" ID="ID_804127929" CREATED="1399769194680" MODIFIED="1399769197190">
<font BOLD="true"/>
<node TEXT=".tag_cget(tagName, option)" ID="ID_929637995" CREATED="1399769197560" MODIFIED="1399769197560">
<node TEXT="query the option (a property of a tag)" ID="ID_381900002" CREATED="1399769198814" MODIFIED="1399769224860"/>
</node>
<node TEXT=".tag_config(tagName, option, ...)" ID="ID_1422932654" CREATED="1399769235865" MODIFIED="1399769235865">
<node TEXT="change an option" ID="ID_1584989872" CREATED="1399769236805" MODIFIED="1399769238601"/>
</node>
<node TEXT=".tag_*()" ID="ID_491454443" CREATED="1399769270501" MODIFIED="1399769274952">
<node TEXT="many more" ID="ID_955160442" CREATED="1399769275628" MODIFIED="1399769276720"/>
</node>
</node>
</node>
<node TEXT="undo" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_27667761" CREATED="1399766091506" MODIFIED="1399768350782">
<node TEXT="see &#x201c;The Text widget undo/redo stack&#x201d;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_413435810" CREATED="1399766094897" MODIFIED="1399766097485"/>
<node TEXT="use separators" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_1921341637" CREATED="1399768621087" MODIFIED="1399768694272">
<node TEXT="an undo undoes everything since the most recent separator" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_470876294" CREATED="1399768652926" MODIFIED="1399768689308"/>
<node TEXT="can be added to the stack" ID="ID_1606624520" CREATED="1399768624431" MODIFIED="1399768629657"/>
<node TEXT="separate earlier from later op&apos;s" ID="ID_931486026" CREATED="1399768629854" MODIFIED="1399768633569"/>
</node>
<node TEXT="can be unlimited; set &quot;maxundo = -1&quot;" ID="ID_1420987622" CREATED="1399766326052" MODIFIED="1399766339100"/>
<node TEXT="works by recording differences, not states" ID="ID_775327051" CREATED="1399768277966" MODIFIED="1399768285362"/>
<node TEXT="by default is off" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_431273187" CREATED="1399768351812" MODIFIED="1399768364305"/>
<node TEXT="methods" ID="ID_800749278" CREATED="1399768357501" MODIFIED="1399768360196">
<font BOLD="true"/>
<node TEXT=".edit_redo, .edit_reset, .edit_separator, and .edit_undo" ID="ID_258766550" CREATED="1399768358799" MODIFIED="1399768358799"/>
</node>
</node>
<node TEXT="measured in lines, not pixels" ID="ID_658690420" CREATED="1399766214736" MODIFIED="1399766670662">
<node TEXT="height &amp; width options" ID="ID_1393893378" CREATED="1399766670907" MODIFIED="1399766676329"/>
</node>
<node TEXT="to toggle malleability" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1172000571" CREATED="1399766366020" MODIFIED="1399766629341">
<node TEXT="applies both to user and programmer changes" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_2562217" CREATED="1399766618476" MODIFIED="1399766630716"/>
<node TEXT="state = tk.NORMAL or tk.DISABLED" ID="ID_1913275679" CREATED="1399766594180" MODIFIED="1399766603848"/>
</node>
<node TEXT="selected operations" ID="ID_649200305" CREATED="1399768507817" MODIFIED="1399768511392">
<font BOLD="true"/>
<node TEXT=".edit_modified(arg=None)" ID="ID_1550702494" CREATED="1399768511803" MODIFIED="1399768511803">
<node TEXT="queries or sets the identifier for whether the text has been changed" ID="ID_824145293" CREATED="1399768513961" MODIFIED="1399768545567"/>
</node>
<node TEXT=".search(pattern, index, option, ...)" ID="ID_142498063" CREATED="1399769072475" MODIFIED="1399769072854">
<node TEXT="can search for, among other things, regular expressions" ID="ID_1576914914" CREATED="1399769073595" MODIFIED="1399769082421"/>
</node>
<node TEXT=".see(index)" ID="ID_526055431" CREATED="1399769100203" MODIFIED="1399769104076">
<node ID="ID_663652657" CREATED="1399769104389" MODIFIED="1399769104389"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      If the text containing the given index is not visible, scroll the text until that text is visible.
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT=".tag_bind(tagName, sequence, func, add=None)" ID="ID_304703367" CREATED="1399769132458" MODIFIED="1399769132458">
<node TEXT="This method binds an event to all the text tagged with tagName." ID="ID_1721384513" CREATED="1399769132458" MODIFIED="1399769132458"/>
</node>
<node TEXT=".window_*()" ID="ID_1020526184" CREATED="1399769282076" MODIFIED="1399769284679">
<node TEXT="many" ID="ID_767275001" CREATED="1399769285215" MODIFIED="1399769287504"/>
</node>
</node>
</node>
</node>
<node TEXT="window" ID="ID_1703277803" CREATED="1399681768595" MODIFIED="1399681805694">
<font BOLD="true"/>
<node TEXT="Canvas" ID="ID_721348404" CREATED="1399679999476" MODIFIED="1399681492962">
<font BOLD="true"/>
<node TEXT="new" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_347202828" CREATED="1400438430106" MODIFIED="1400438584593">
<node TEXT="coordinates: window vs. canvas" ID="ID_1631494734" CREATED="1400438436625" MODIFIED="1400438488476">
<node TEXT="If the canvas is bigger than the window, some valid canvas coord&apos;s are not visible. All valid window coord&apos;s are visible." ID="ID_852223210" CREATED="1400438451538" MODIFIED="1400438481055"/>
</node>
<node TEXT="display list" ID="ID_161094061" CREATED="1400438519850" MODIFIED="1400438521549">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/display-list.html" ID="ID_788770579" CREATED="1400438543779" MODIFIED="1400438543779" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/display-list.html"/>
<node TEXT="indicates order in which things are drawn" ID="ID_1851137850" CREATED="1400438524026" MODIFIED="1400438530109"/>
<node TEXT="by default, new things obscure old things" ID="ID_237977294" CREATED="1400438530634" MODIFIED="1400438540693"/>
</node>
<node TEXT="tags and IDs" ID="ID_1238218377" CREATED="1400438711655" MODIFIED="1400438714172">
<node TEXT="&quot;object ID&quot;" ID="ID_1189332125" CREATED="1400438611062" MODIFIED="1400438615129">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/canvas-oid.html" ID="ID_1854299842" CREATED="1400438618669" MODIFIED="1400438618669" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/canvas-oid.html"/>
<node TEXT="guests have unique integer IDs" ID="ID_536010747" CREATED="1400438603661" MODIFIED="1400438610808"/>
</node>
<node TEXT="Canvas objects can be given tags." ID="ID_1766922648" CREATED="1400438715919" MODIFIED="1400438746730"/>
<node TEXT="tags and IDs are treated similarly" ID="ID_864966352" CREATED="1400438752064" MODIFIED="1400438756025">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/tag-or-id.html" ID="ID_620079042" CREATED="1400438756335" MODIFIED="1400438756335" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/tag-or-id.html"/>
</node>
</node>
<node TEXT="host other widgets using the &quot;canvas window&quot; object" ID="ID_474483754" CREATED="1400438856848" MODIFIED="1400438869300">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/create_window.html" ID="ID_664641633" CREATED="1400438877432" MODIFIED="1400438877432" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/create_window.html"/>
</node>
</node>
<node TEXT="For drawing, images. Elaborate." ID="ID_385298555" CREATED="1399680003637" MODIFIED="1399680011431"/>
<node TEXT="documentation *starts* here" ID="ID_1209226346" CREATED="1399680156664" MODIFIED="1399680160292">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/canvas.html" ID="ID_941793234" CREATED="1399680001448" MODIFIED="1399680001448" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/canvas.html"/>
</node>
<node TEXT="selected functions" ID="ID_1994584397" CREATED="1399680364001" MODIFIED="1399680370021">
<node TEXT="by what they accomplish; name not recorded here" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_666954158" CREATED="1399680370275" MODIFIED="1399680378661"/>
<node TEXT="return a list of objects within a specified bounding box" ID="ID_899534000" CREATED="1399680379282" MODIFIED="1399680396110"/>
<node TEXT="translate coordinates" ID="ID_1469949966" CREATED="1399680412818" MODIFIED="1399680416372"/>
<node TEXT="delete characters" ID="ID_1821477163" CREATED="1399680421599" MODIFIED="1399680423699"/>
<node TEXT="delete objects" ID="ID_1824938477" CREATED="1399680423904" MODIFIED="1399680425539"/>
<node TEXT="find what&apos;s above" ID="ID_262500921" CREATED="1399680431703" MODIFIED="1399680435779"/>
<node TEXT="find closest" ID="ID_287238550" CREATED="1399680440200" MODIFIED="1399680441963"/>
<node TEXT="find overlapping" ID="ID_1700103951" CREATED="1399680447399" MODIFIED="1399680450157"/>
<node TEXT="manipulate the &quot;insertion cursor&quot;" ID="ID_1912974329" CREATED="1399680473936" MODIFIED="1399680479498"/>
<node TEXT="scale" ID="ID_530702045" CREATED="1399680494702" MODIFIED="1399680495337"/>
<node TEXT="scroll" ID="ID_960897251" CREATED="1399680500646" MODIFIED="1399680621897">
<node TEXT="multiple functions for it, not adjacent in the documentation" ID="ID_685481517" CREATED="1399680622618" MODIFIED="1399680639026"/>
</node>
<node TEXT="select text" ID="ID_38572433" CREATED="1399680527758" MODIFIED="1399680529257"/>
<node TEXT="tag_bind: bind events to objects" ID="ID_1713235500" CREATED="1399680541613" MODIFIED="1399680556184"/>
<node TEXT="return an object&apos;s type" ID="ID_1157698409" CREATED="1399680591292" MODIFIED="1399680595582"/>
</node>
<node TEXT="Canvas arc" ID="ID_1740532784" CREATED="1399680686984" MODIFIED="1399680843587">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/create_arc.html" ID="ID_1392433422" CREATED="1399680693166" MODIFIED="1399680693166" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/create_arc.html"/>
<node TEXT="slices of ellipses" ID="ID_1968961128" CREATED="1399680693648" MODIFIED="1399680698587"/>
<node TEXT="closed or open" ID="ID_1869255837" CREATED="1399680790502" MODIFIED="1399680790881">
<node TEXT="can be just the edge of the ellipse, or can include the chord connecting the two spanned points, or can include a line from each endpoint to the center" ID="ID_528955165" CREATED="1399680791639" MODIFIED="1399680823008"/>
</node>
<node TEXT="topologically 1-dimensional" ID="ID_953596401" CREATED="1399680765528" MODIFIED="1399680790101"/>
</node>
<node TEXT="Canvas bitmap" ID="ID_641967611" CREATED="1399680843845" MODIFIED="1399680847367">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/create_bitmap.html" ID="ID_521721637" CREATED="1399680852607" MODIFIED="1399680852607" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/create_bitmap.html"/>
</node>
<node TEXT="Canvas image" ID="ID_399124065" CREATED="1399680867244" MODIFIED="1399680868839">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/create_image.html" ID="ID_1146512595" CREATED="1399680872726" MODIFIED="1399680872726" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/create_image.html"/>
</node>
<node TEXT="Canvas line" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1174883900" CREATED="1399680933881" MODIFIED="1399680936779">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/create_line.html" ID="ID_1118943459" CREATED="1399680937838" MODIFIED="1399680937838" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/create_line.html"/>
<node TEXT="use option &quot;smooth&quot;, and maybe option &quot;splinesteps&quot;" ID="ID_269220590" CREATED="1399680940137" MODIFIED="1399680969920">
<node TEXT="the latter to preserve CPU" ID="ID_438502245" CREATED="1399680971121" MODIFIED="1399680975293"/>
</node>
</node>
<node TEXT="skipped" ID="ID_1022932889" CREATED="1399681020191" MODIFIED="1399681021710">
<font BOLD="true"/>
<node TEXT="oval" ID="ID_229303050" CREATED="1399681001736" MODIFIED="1399681002827"/>
<node TEXT="polygon" ID="ID_872773935" CREATED="1399681003080" MODIFIED="1399681004347"/>
<node TEXT="rectangle" ID="ID_1991376613" CREATED="1399681016728" MODIFIED="1399681018306"/>
</node>
<node TEXT="Canvas text" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_89013862" CREATED="1399681031959" MODIFIED="1399681034828"/>
<node TEXT="Canvas window" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_643698601" CREATED="1399681299975" MODIFIED="1399681302457">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/create_window.html" ID="ID_217476586" CREATED="1399681303106" MODIFIED="1399681303106" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/create_window.html"/>
<node TEXT="a sub-frame" ID="ID_244471387" CREATED="1399681303640" MODIFIED="1399681305436"/>
</node>
</node>
<node TEXT="Frame" ID="ID_1391157473" CREATED="1399681614990" MODIFIED="1399681616042">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/frame.html" ID="ID_433057585" CREATED="1399681623205" MODIFIED="1399681623205" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/frame.html"/>
</node>
<node TEXT="LabelFrame" ID="ID_1552847335" CREATED="1399681774977" MODIFIED="1399681776726">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/labelframe.html" ID="ID_1274806297" CREATED="1399681771278" MODIFIED="1399681771278" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/labelframe.html"/>
<node TEXT="a frame with a label" ID="ID_716882631" CREATED="1399681782827" MODIFIED="1399681786062"/>
</node>
<node TEXT="PanedWindow" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_656107364" CREATED="1399682382138" MODIFIED="1399682383705">
<node TEXT="doc&apos;n starts here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_889956777" CREATED="1399682421672" MODIFIED="1399682426106">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/panedwindow.html" ID="ID_151759581" CREATED="1399682395980" MODIFIED="1399682395980" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/panedwindow.html"/>
</node>
<node TEXT="allows user to resize" ID="ID_1953733718" CREATED="1399682388857" MODIFIED="1399682391988"/>
</node>
<node TEXT="Scrollbar" ID="ID_618598394" CREATED="1399682509405" MODIFIED="1399682511808">
<node TEXT="doc&apos;n starts here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1659425793" CREATED="1399682524421" MODIFIED="1399682530512">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/scrollbar.html" ID="ID_1103130761" CREATED="1399682512128" MODIFIED="1399682512128" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/scrollbar.html"/>
</node>
</node>
<node TEXT="Spinbox" ID="ID_1331689028" CREATED="1399682557804" MODIFIED="1399682559303">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/spinbox.html" ID="ID_1152719722" CREATED="1399682559615" MODIFIED="1399682559615" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/spinbox.html"/>
<node TEXT="displays one line at a time; user can scroll through" ID="ID_431763340" CREATED="1399682569883" MODIFIED="1399682578817"/>
</node>
<node TEXT="Toplevel" ID="ID_770100678" CREATED="1399769351235" MODIFIED="1399769354605">
<node TEXT="to find a widget&apos;s TopLevel host" ID="ID_810770846" CREATED="1399769404384" MODIFIED="1399769415101">
<node TEXT="w.winfo_toplevel()" ID="ID_806130106" CREATED="1399769415618" MODIFIED="1399769418279"/>
</node>
<node TEXT="the &quot;class_&quot; method" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1929675667" CREATED="1399769467647" MODIFIED="1399769572621">
<node TEXT="links in" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_512139109" CREATED="1399769480782" MODIFIED="1399769488306"/>
<node TEXT="did not entirely understand" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_566791693" CREATED="1399769464942" MODIFIED="1399769570541"/>
<node TEXT="allows the setting of properties common across multiple (widgets? windows? toplevel windows only?)" ID="ID_1101253949" CREATED="1399769574556" MODIFIED="1399769599563"/>
</node>
<node TEXT="selected methods" ID="ID_989360265" CREATED="1399769701264" MODIFIED="1399769703912">
<font BOLD="true"/>
<node TEXT=".lift(aboveThis=None)" ID="ID_108341454" CREATED="1399769711832" MODIFIED="1399769712453">
<node TEXT="lifts app, relative to other apps, in window manager" ID="ID_113996545" CREATED="1399769847829" MODIFIED="1399769864712"/>
</node>
<node TEXT=".lower(...)" ID="ID_1521863632" CREATED="1399769874196" MODIFIED="1399769877576">
<node TEXT="similar to .lift()" ID="ID_1505710861" CREATED="1399769877756" MODIFIED="1399769880543"/>
</node>
<node TEXT=".overrideredirect(flag=None)" ID="ID_343391700" CREATED="1399769958522" MODIFIED="1399769960976">
<node TEXT="prevents WM from modifying window appearance" ID="ID_1976595279" CREATED="1399769961457" MODIFIED="1399769967668"/>
</node>
<node TEXT="visibility changes" ID="ID_28918578" CREATED="1399770069302" MODIFIED="1399770084921">
<font BOLD="true"/>
<node TEXT=".state(newstate=None)" ID="ID_1454731072" CREATED="1399770030656" MODIFIED="1399770032267">
<node TEXT="make visible, iconified, or hidden" ID="ID_1326511559" CREATED="1399770032487" MODIFIED="1399770037683"/>
</node>
<node TEXT=".withdraw()" ID="ID_1257734276" CREATED="1399770063310" MODIFIED="1399770063730">
<node TEXT="hides window" ID="ID_1615062636" CREATED="1399770065991" MODIFIED="1399770068122"/>
</node>
</node>
</node>
</node>
</node>
</node>
<node TEXT="methods, universal" ID="ID_1383179304" CREATED="1399770101037" MODIFIED="1399770115923">
<font BOLD="true"/>
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/universal.html" ID="ID_1885625548" CREATED="1399840846932" MODIFIED="1399840846932" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/universal.html"/>
<node TEXT="links in" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1738761350" CREATED="1399840793130" MODIFIED="1399840798795"/>
<node TEXT="def&apos;n" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1248494314" CREATED="1399770146356" MODIFIED="1399770152045">
<node TEXT="methods applicable to all widgets" LOCALIZED_STYLE_REF="default" ID="ID_1637278437" CREATED="1399770116821" MODIFIED="1399770153173"/>
<node TEXT="selected ones only" LOCALIZED_STYLE_REF="default" ID="ID_556194784" CREATED="1399770139748" MODIFIED="1399770153174"/>
</node>
<node TEXT="w.*config*()" ID="ID_1202735834" CREATED="1400281757982" MODIFIED="1400282269120">
<font BOLD="true"/>
</node>
<node TEXT="query" ID="ID_891047092" CREATED="1400281641018" MODIFIED="1400281932381">
<font BOLD="true"/>
<node LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_163163285" CREATED="1400281932686" MODIFIED="1400281936132"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      cget, or []
    </p>
  </body>
</html>
</richcontent>
<node TEXT="syntax choices" ID="ID_1883657920" CREATED="1400281647979" MODIFIED="1400281650620">
<node TEXT="w.cget(option)" ID="ID_280639484" CREATED="1400281625787" MODIFIED="1400281625991"/>
<node TEXT="w[option]" ID="ID_492030567" CREATED="1400281656222" MODIFIED="1400281657421"/>
</node>
<node TEXT="Returns the current value of option as a string." ID="ID_1588256520" CREATED="1400281638443" MODIFIED="1400281660829"/>
</node>
<node TEXT="w.image_names()" ID="ID_370037482" CREATED="1400281928890" MODIFIED="1400281929253"/>
<node TEXT="w.keys()" ID="ID_1991099649" CREATED="1400281959235" MODIFIED="1400281959235">
<node TEXT="Returns the option names for the widget as a sequence of strings." ID="ID_258515022" CREATED="1400281959235" MODIFIED="1400281959235"/>
</node>
<node TEXT="w.nametowidget(name)" ID="ID_1114929017" CREATED="1400282101272" MODIFIED="1400282101272">
<node TEXT="This method returns the actual widget whose path name is name. See Section 5.11, &#x201c;Window names&#x201d;." ID="ID_299338547" CREATED="1400282101272" MODIFIED="1400282101272"/>
</node>
<node TEXT="w.winfo*" ID="ID_1370710995" CREATED="1400282431964" MODIFIED="1400282444298"/>
</node>
<node TEXT="timing, scheduling" ID="ID_513759622" CREATED="1399770213236" MODIFIED="1399770218550">
<font BOLD="true"/>
<node TEXT="w.after(delay_ms, callback=None, *args)" ID="ID_1582574559" CREATED="1399770136693" MODIFIED="1399770137088">
<node TEXT="set delay for callback" ID="ID_1567264054" CREATED="1399770158334" MODIFIED="1399770162712"/>
</node>
<node TEXT="w.after_cancel(id)" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_498845256" CREATED="1399770178068" MODIFIED="1400281596469">
<node TEXT="cancels a callback" ID="ID_722677285" CREATED="1399770178956" MODIFIED="1399770181816"/>
</node>
<node TEXT="w.after_idle(func, *args)" ID="ID_324045357" CREATED="1399770203108" MODIFIED="1399770203398">
<node TEXT="call func next time idle" ID="ID_5006117" CREATED="1399770205379" MODIFIED="1399770212647"/>
</node>
<node TEXT="w.wait*()" ID="ID_519226645" CREATED="1400282403036" MODIFIED="1400282405841">
<font BOLD="true"/>
</node>
</node>
<node TEXT="events, binding" ID="ID_777170750" CREATED="1400281774166" MODIFIED="1400281777781">
<font BOLD="true"/>
<node TEXT="w.bind*()" ID="ID_1151511458" CREATED="1399770230363" MODIFIED="1400282310014"/>
<node TEXT="w.unbind*()" ID="ID_1845103892" CREATED="1400282295904" MODIFIED="1400282315722"/>
<node TEXT="w.*event*" ID="ID_1330177896" CREATED="1400281799837" MODIFIED="1400281801817">
<node TEXT="manipulate the event registry" ID="ID_495892579" CREATED="1400281802342" MODIFIED="1400281808345"/>
</node>
</node>
<node TEXT="window stack" ID="ID_899015880" CREATED="1400281978201" MODIFIED="1400282059185">
<font BOLD="true"/>
<node TEXT="w.lift()" ID="ID_1862215274" CREATED="1400281984256" MODIFIED="1400281986836"/>
<node TEXT="w.lower()" ID="ID_1533154648" CREATED="1400281992015" MODIFIED="1400281993501"/>
</node>
<node TEXT="main loop" ID="ID_129898828" CREATED="1400282054176" MODIFIED="1400282058001">
<font BOLD="true"/>
<node TEXT="w.mainloop()" ID="ID_1669876395" CREATED="1400282054176" MODIFIED="1400282054176">
<node TEXT="... You can also call this method inside an event handler to resume the main loop." ID="ID_842013065" CREATED="1400282054176" MODIFIED="1400282054176"/>
</node>
<node TEXT="w.quit()" ID="ID_1830761303" CREATED="1400282054176" MODIFIED="1400282054176"/>
</node>
<node TEXT="w.option*()" ID="ID_1555330660" CREATED="1400282121958" MODIFIED="1400282168146">
<font BOLD="true"/>
<node TEXT="w.option_readfile(fileName, priority=None)" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_135767733" CREATED="1400282189604" MODIFIED="1400282192499"/>
</node>
<node TEXT="w.selection*()" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_670498114" CREATED="1400282244562" MODIFIED="1400282249881">
<node TEXT="for highlights" ID="ID_721411402" CREATED="1400282247410" MODIFIED="1400282249020"/>
</node>
<node TEXT="w.*focus*()" ID="ID_540960434" CREATED="1400281854379" MODIFIED="1400282284315">
<font BOLD="true"/>
</node>
<node TEXT="w.grab*()" ID="ID_180470749" CREATED="1400281885843" MODIFIED="1400282264168">
<font BOLD="true"/>
</node>
<node TEXT="w.grid*()" ID="ID_262452292" CREATED="1400281907972" MODIFIED="1400282265897">
<font BOLD="true"/>
</node>
<node TEXT="w.clipboard*()" ID="ID_117635792" CREATED="1400281669090" MODIFIED="1400282267344">
<font BOLD="true"/>
</node>
<node TEXT="w.update()" ID="ID_1071211478" CREATED="1400282339999" MODIFIED="1400282342374">
<font BOLD="true"/>
<node TEXT="to redraw" ID="ID_1619828057" CREATED="1400282374526" MODIFIED="1400282376290"/>
<node TEXT="dangerous" ID="ID_1629698573" CREATED="1400282342775" MODIFIED="1400282344273">
<node TEXT="&quot;It should never be called from an event callback or a function that is called from an event callback.&quot;" ID="ID_1494117553" CREATED="1400282354670" MODIFIED="1400282357794"/>
</node>
</node>
<node TEXT="w.register(function)" ID="ID_263401701" CREATED="1400282230531" MODIFIED="1400282230531">
<node TEXT="This method creates a Tcl wrapper around a Python function, and returns the Tcl wrapper name as a string. For an example of the usage of this method, see Section 10.2, &#x201c;Adding validation to an Entry widget&#x201d;." ID="ID_894001721" CREATED="1400282230531" MODIFIED="1400282230531"/>
</node>
<node TEXT="w.destroy()" ID="ID_1077852716" CREATED="1400281784046" MODIFIED="1400281786337">
<node TEXT="destroys all w&apos;s children, too" ID="ID_826060045" CREATED="1400281786816" MODIFIED="1400281792601"/>
</node>
</node>
<node TEXT="event logic" ID="ID_1109833494" CREATED="1400283262325" MODIFIED="1400283264317">
<font BOLD="true"/>
<node TEXT="main part of NMT doc&apos;n starts here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_838690884" CREATED="1400283270997" MODIFIED="1400283288816">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/connecting.html" ID="ID_98821862" CREATED="1400283273456" MODIFIED="1400283273456" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/connecting.html"/>
</node>
<node TEXT="vocab" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_2796077" CREATED="1400284637464" MODIFIED="1400285365484">
<node TEXT="event" ID="ID_1770136040" CREATED="1400284638279" MODIFIED="1400284639307">
<node TEXT="experience the app recognizes" ID="ID_372974944" CREATED="1400284639472" MODIFIED="1400285526222"/>
<node TEXT="includes more than user input" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_794844574" CREATED="1400285526439" MODIFIED="1400285538235">
<node TEXT="e.g. see the &quot;Activate&quot; entry on this page" ID="ID_824513882" CREATED="1400285543911" MODIFIED="1400285552370"/>
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/event-types.html" ID="ID_113161391" CREATED="1400285552913" MODIFIED="1400285552913" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/event-types.html"/>
</node>
</node>
<node TEXT="event handler" ID="ID_452905318" CREATED="1400284657271" MODIFIED="1400284658738">
<node TEXT="a function triggered by an event" ID="ID_1485524767" CREATED="1400284660567" MODIFIED="1400284667626"/>
</node>
<node TEXT="binding" ID="ID_278371360" CREATED="1400284669327" MODIFIED="1400284670170">
<node TEXT="associating, within a widget, a handler to an event" ID="ID_390204075" CREATED="1400284670439" MODIFIED="1400284680955"/>
</node>
<node TEXT="sequence descriptor" ID="ID_100267350" CREATED="1400284797276" MODIFIED="1400284797559">
<node TEXT="&apos;&lt;Button-2&gt;&apos; is an example" ID="ID_1761533313" CREATED="1400284803123" MODIFIED="1400284815994">
<node TEXT="include the single quotes" ID="ID_1981277825" CREATED="1400284816254" MODIFIED="1400284818983"/>
</node>
</node>
</node>
<node TEXT="new: learned experimenting" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1917671034" CREATED="1406393210013" MODIFIED="1406393345257">
<node TEXT="2014 07 26" ID="ID_1872717294" CREATED="1406393346221" MODIFIED="1406393351058"/>
<node TEXT="if widget W binds &lt;KeyPress&gt; to k() and another letter, say &quot;n&quot;, to function n(), pressing &quot;n&quot; triggers n() and (happily) not k()." ID="ID_1639543395" CREATED="1406393215616" MODIFIED="1406393274271"/>
<node TEXT="I can use Ctrl and Shift, but not Alt, Cmd, Opt or Fn." ID="ID_475458927" CREATED="1406393276202" MODIFIED="1406393322616"/>
</node>
<node TEXT="control variables" ID="ID_623744601" CREATED="1400283364346" MODIFIED="1400283371225">
<font BOLD="false"/>
<node TEXT="purpose" ID="ID_1129259217" CREATED="1400283847205" MODIFIED="1400283848224">
<node TEXT="they know which widgets refer to them" ID="ID_625856518" CREATED="1400283371857" MODIFIED="1400283376773"/>
<node TEXT="they inform those widgets, when updated with .set()" ID="ID_24013914" CREATED="1400283376977" MODIFIED="1400283401348"/>
</node>
<node LOCALIZED_STYLE_REF="default" ID="ID_1413355122" CREATED="1400283852545" MODIFIED="1400283866229"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      instantiation
    </p>
  </body>
</html>
</richcontent>
<node TEXT="v = tk.DoubleVar()   # Holds a float; default value 0.0" ID="ID_1741195815" CREATED="1400283838886" MODIFIED="1400283838886"/>
<node TEXT="v = tk.IntVar()      # Holds an int; default value 0" ID="ID_1854571381" CREATED="1400283838886" MODIFIED="1400283838886"/>
<node TEXT="v = tk.StringVar()   # Holds a string; default value &apos;&apos;" ID="ID_1040796348" CREATED="1400283838890" MODIFIED="1400283838890"/>
</node>
<node TEXT="functions" ID="ID_1492842440" CREATED="1400283867725" MODIFIED="1400283868632">
<node TEXT=".get()" ID="ID_1196883058" CREATED="1400283870315" MODIFIED="1400283871503"/>
<node TEXT=".set()" ID="ID_76637341" CREATED="1400283873757" MODIFIED="1400283874784"/>
</node>
<node TEXT="examples of use" ID="ID_634480342" CREATED="1400283927938" MODIFIED="1400283929558">
<node TEXT="starts at this quote" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_715982620" CREATED="1400283940714" MODIFIED="1400283947787">
<node TEXT="Here are some comments on how control variables are used with specific widgets:" ID="ID_1045890401" CREATED="1400283944362" MODIFIED="1400283944590"/>
</node>
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/control-variables.html" ID="ID_948926633" CREATED="1400283935174" MODIFIED="1400283935174" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/control-variables.html"/>
</node>
</node>
<node TEXT="the &quot;command&quot; attribute" ID="ID_852201136" CREATED="1400283994138" MODIFIED="1400283997092">
<node TEXT="&quot;Some controls such as buttons have a command attribute that lets you specify a procedure, called a handler, that will be called whenever the user clicks that control.&quot;" ID="ID_1783159723" CREATED="1400283999457" MODIFIED="1400284002348"/>
</node>
<node TEXT="focus" ID="ID_1648520002" CREATED="1400284071544" MODIFIED="1400284072459">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/focus.html" ID="ID_1941314157" CREATED="1400284077161" MODIFIED="1400284077161" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/focus.html"/>
<node TEXT="simpler: tk_focusFollowsMouse()" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_509777796" CREATED="1400284479797" MODIFIED="1400284482821"/>
<node TEXT="def&apos;n" ID="ID_1305275293" CREATED="1400284083167" MODIFIED="1400284083802">
<node TEXT="a widget has focus if it hears the keyboard" ID="ID_665759994" CREATED="1400284084007" MODIFIED="1400284089939"/>
</node>
<node TEXT="focus traversal rules" ID="ID_1357156734" CREATED="1400284111934" MODIFIED="1400284115073">
<node TEXT="traversal is depth-first, in order of creation" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1105104459" CREATED="1400284431765" MODIFIED="1400284447885"/>
<node TEXT="traverse : tab, usually ..." LOCALIZED_STYLE_REF="default" ID="ID_850013781" CREATED="1400284125621" MODIFIED="1406391613389">
<node TEXT="exception: in a Text box it&apos;s ctrl-tab" ID="ID_1155007932" CREATED="1400284161093" MODIFIED="1400284170135"/>
</node>
<node TEXT="traverse backwards : shift-tab" ID="ID_205541716" CREATED="1400284115398" MODIFIED="1400284122713"/>
</node>
<node TEXT="key input into a focused widget" ID="ID_1052544003" CREATED="1400284210010" MODIFIED="1400284230430">
<node TEXT="toggle : spacebar" ID="ID_1371610981" CREATED="1400284184420" MODIFIED="1400284233670">
<node TEXT="if applicable, e.g. to a Button" ID="ID_1229007580" CREATED="1400284191645" MODIFIED="1400284198463"/>
</node>
<node TEXT="scroll : arrows, page up/down" ID="ID_725432460" CREATED="1400284222051" MODIFIED="1400284267568"/>
</node>
<node TEXT="the focus highlight" ID="ID_747193042" CREATED="1400284347327" MODIFIED="1400284349370">
<node TEXT="search terms" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1412039507" CREATED="1400284357959" MODIFIED="1400284360759"/>
<node TEXT="focus highlight" ID="ID_1465618387" CREATED="1400284361440" MODIFIED="1400284363570"/>
<node TEXT="highlightcolor" ID="ID_130936179" CREATED="1400284354303" MODIFIED="1400284354940"/>
</node>
<node TEXT="takefocus" ID="ID_393289384" CREATED="1400284373591" MODIFIED="1400284373826">
<node TEXT="some widgets (e.g. Frames) normally don&apos;t get focus, unless this is changed to 1 from its default 0 value" ID="ID_67493702" CREATED="1400284375222" MODIFIED="1400284394910"/>
<node TEXT="sim., one that normally takes focus can have that property disabled" ID="ID_175024080" CREATED="1400284403142" MODIFIED="1400284414249"/>
</node>
</node>
<node TEXT="binding levels" ID="ID_405801117" CREATED="1400284741741" MODIFIED="1400284743408">
<node TEXT="instance binding" ID="ID_1352661300" CREATED="1400284746269" MODIFIED="1400284747943">
<node TEXT="motivation" ID="ID_25668360" CREATED="1400284770004" MODIFIED="1400284906188">
<node TEXT="you have a canvas widget named self.canv and you want to draw an orange blob on the canvas whenever the user clicks the mouse button 2 (the middle button)." ID="ID_1894496084" CREATED="1400284774787" MODIFIED="1400284777584"/>
</node>
<node TEXT="syntax" ID="ID_1963105593" CREATED="1400284845123" MODIFIED="1400284845941">
<node TEXT="self.canv.bind(&apos;&lt;Button-2&gt;&apos;, self.__drawOrangeBlob)" ID="ID_1137285714" CREATED="1400284748565" MODIFIED="1400284750896"/>
<node TEXT="omit the parentheses after the handler name" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1376114378" CREATED="1400284848665" MODIFIED="1400284850532"/>
</node>
</node>
<node TEXT="class binding" ID="ID_987799986" CREATED="1400284874384" MODIFIED="1400284875796">
<node TEXT="motivation" ID="ID_89351025" CREATED="1400284889928" MODIFIED="1400284895500">
<node TEXT="suppose you have several canvases, and you want to set up mouse button 2 to draw an orange blob in any of them." ID="ID_1788794012" CREATED="1400284892528" MODIFIED="1400284892932"/>
</node>
<node TEXT="syntax" ID="ID_600190988" CREATED="1400284920264" MODIFIED="1400284921284">
<node TEXT="self.bind_class(&apos;Canvas&apos;, &apos;&lt;Button-2&gt;&apos;, self.__drawOrangeBlob)" ID="ID_1722892608" CREATED="1400284921554" MODIFIED="1400284921554"/>
<node TEXT="can be called from any widget" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_707192317" CREATED="1400284947919" MODIFIED="1400284951824">
<node TEXT="even one that&apos;s not a Canvas, I think" ID="ID_1870455135" CREATED="1400284954911" MODIFIED="1400284960875"/>
</node>
</node>
</node>
<node TEXT="application binding" ID="ID_992010971" CREATED="1400284989430" MODIFIED="1400284991041">
<node TEXT="motivation" ID="ID_1246337625" CREATED="1400285003294" MODIFIED="1400285004497">
<node TEXT="you might bind the PrintScrn key to all the widgets of an application, so that it prints the screen no matter what widget gets that key" ID="ID_1916852404" CREATED="1400285004718" MODIFIED="1400285006154"/>
</node>
<node TEXT="syntax" ID="ID_1432355793" CREATED="1400285014461" MODIFIED="1400285015304">
<node TEXT="self.bind_all(&apos;&lt;Key-Print&gt;&apos;, self.__printScreen)" ID="ID_172835639" CREATED="1400285015654" MODIFIED="1400285020504"/>
<node TEXT="can call from any widget" ID="ID_144203484" CREATED="1400285016382" MODIFIED="1400285019033"/>
</node>
</node>
</node>
<node TEXT="event sequences" ID="ID_1804303266" CREATED="1400285373069" MODIFIED="1400285374887">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/event-sequences.html" ID="ID_1326907419" CREATED="1400285375231" MODIFIED="1400285375231" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/event-sequences.html"/>
<node TEXT="describes how to notate, for example, Ctrl-Shift-H" ID="ID_1571435269" CREATED="1400285386107" MODIFIED="1400285397838"/>
</node>
<node TEXT="event catalogs" ID="ID_1584644474" CREATED="1400285455873" MODIFIED="1400285901845">
<font BOLD="true"/>
<node TEXT="event types" ID="ID_1063779921" CREATED="1400285911701" MODIFIED="1400285931459">
<font BOLD="false"/>
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/event-types.html" ID="ID_68891129" CREATED="1400285483387" MODIFIED="1400285483387" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/event-types.html"/>
<node TEXT="the page is incomplete" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1924026476" CREATED="1400285463553" MODIFIED="1400285605896">
<node TEXT="but good coverage, believes the author" ID="ID_273047853" CREATED="1400285474642" MODIFIED="1400285508419"/>
</node>
<node TEXT="these notes are an incomplete image of that page" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_525893854" CREATED="1400285607198" MODIFIED="1400285616084"/>
<node TEXT="ButtonRelease" ID="ID_537673530" CREATED="1400285599789" MODIFIED="1400285600048">
<node TEXT="better than Button, because it allows the user to move the mouse away from the widget if they accidentally click" ID="ID_295823378" CREATED="1400285620365" MODIFIED="1400285642423"/>
</node>
</node>
<node TEXT="event modifiers" ID="ID_1778933691" CREATED="1400285923940" MODIFIED="1400285931127">
<font BOLD="false"/>
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/event-modifiers.html" ID="ID_430938802" CREATED="1400285927639" MODIFIED="1400285927639" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/event-modifiers.html"/>
</node>
<node TEXT="key names" ID="ID_1932399166" CREATED="1400285946757" MODIFIED="1400285948207">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/key-names.html" ID="ID_116743041" CREATED="1400285948534" MODIFIED="1400285948534" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/key-names.html"/>
</node>
</node>
<node TEXT="writing handlers" ID="ID_1480076066" CREATED="1400286696487" MODIFIED="1400286715425">
<font BOLD="true"/>
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/event-handlers.html" ID="ID_247552636" CREATED="1400286793866" MODIFIED="1400286793866" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/event-handlers.html"/>
<node TEXT="handlers can be functions or methods" ID="ID_548382437" CREATED="1400286731934" MODIFIED="1400286736225"/>
<node TEXT="handlers receive Event objects" ID="ID_409830902" CREATED="1400286707655" MODIFIED="1400286722297"/>
<node TEXT="attributes of the received Event" ID="ID_146628324" CREATED="1400286771549" MODIFIED="1400286778480">
<node TEXT="not always applicable" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_289448956" CREATED="1400286785837" MODIFIED="1400286790157"/>
<node TEXT="examples" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1903601478" CREATED="1400286874795" MODIFIED="1400286878386"/>
<node TEXT=".char" ID="ID_386467667" CREATED="1400286783892" MODIFIED="1400286784761"/>
<node TEXT=".delta" ID="ID_653917003" CREATED="1400286816684" MODIFIED="1400286818207">
<node TEXT="for mousewheel" ID="ID_1501668003" CREATED="1400286818412" MODIFIED="1400286830202"/>
</node>
<node TEXT=".time" ID="ID_476615157" CREATED="1400286895098" MODIFIED="1400286895910"/>
<node TEXT=".type" ID="ID_1884343670" CREATED="1400286909153" MODIFIED="1400286910036"/>
<node TEXT=".widget" ID="ID_207780114" CREATED="1400286914962" MODIFIED="1400286916069"/>
<node TEXT=".x* and .y*" ID="ID_1243057461" CREATED="1400286923274" MODIFIED="1400286934619">
<node TEXT="mouse" ID="ID_101358253" CREATED="1400286925401" MODIFIED="1400286925932"/>
</node>
</node>
<node TEXT="testing modifier keys" ID="ID_758219246" CREATED="1400286964384" MODIFIED="1400286966987">
<node TEXT="complicated" ID="ID_1808861407" CREATED="1400286967216" MODIFIED="1400286968499"/>
<node TEXT="search for &quot;.state&quot;" ID="ID_933680771" CREATED="1400286975656" MODIFIED="1400286979554">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/event-handlers.html" ID="ID_120194036" CREATED="1400286793866" MODIFIED="1400286793866" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/event-handlers.html"/>
</node>
</node>
<node TEXT="using additional arguments" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1973737403" CREATED="1400287277439" MODIFIED="1400287282160">
<node TEXT="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/extra-args.html" ID="ID_1806597181" CREATED="1400287283681" MODIFIED="1400287283681" LINK="http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/extra-args.html"/>
<node TEXT="I don&apos;t get it." ID="ID_1366006664" CREATED="1400287284288" MODIFIED="1400287286139"/>
</node>
</node>
<node TEXT="virtual events" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_183994007" CREATED="1400287357510" MODIFIED="1400287360493">
<node TEXT="defined by the programmer" ID="ID_1529710223" CREATED="1400287362597" MODIFIED="1400287371376"/>
<node TEXT="creating one" ID="ID_1997423638" CREATED="1400287391164" MODIFIED="1400287470632">
<node TEXT="suppose you want to create a new event called &lt;&lt;panic&gt;&gt;, that is triggered either by mouse button 3 or by the pause key. To create this event, call this method on any widget w:" ID="ID_1379055690" CREATED="1400287422091" MODIFIED="1400287422574"/>
<node TEXT="w.event_add(&apos;&lt;&lt;panic&gt;&gt;&apos;, &apos;&lt;Button-3&gt;&apos;, &apos;&lt;KeyPress-Pause&gt;&apos;)" ID="ID_1547408161" CREATED="1400287406868" MODIFIED="1400287406868"/>
</node>
<node TEXT="using it" ID="ID_1708031337" CREATED="1400287471443" MODIFIED="1400287472461">
<node TEXT="w.bind(&apos;&lt;&lt;panic&gt;&gt;&apos;, h)" ID="ID_1615154794" CREATED="1400287473579" MODIFIED="1400287475565"/>
<node TEXT="=&gt; any mouse button 3 or pause keypress in widget w will trigger the handler h." ID="ID_1802957732" CREATED="1400287482297" MODIFIED="1400287484630"/>
</node>
<node TEXT="for more: see .event*() functions, under &quot;universal widget methods&quot;" ID="ID_21173074" CREATED="1400287504009" MODIFIED="1400287516931"/>
</node>
</node>
<node TEXT="tags, ids" ID="ID_539356207" CREATED="1399680168855" MODIFIED="1399680181130">
<node TEXT="can be associated with Canvas elements" ID="ID_1586094998" CREATED="1399680169824" MODIFIED="1399680179586">
<node TEXT="and, I&apos;m guessing, other kinds too" ID="ID_712794196" CREATED="1399680184806" MODIFIED="1399680190338"/>
</node>
<node TEXT="can be handy for selecting, say, all objects sharing a tag" ID="ID_14685696" CREATED="1399680195887" MODIFIED="1399680208985"/>
</node>
<node TEXT="vocab" ID="ID_497432148" CREATED="1399678565571" MODIFIED="1399678566439">
<node TEXT="top-level window: one recognized by the OS. can have many." ID="ID_927609626" CREATED="1399678566668" MODIFIED="1399678586446"/>
<node TEXT="application window" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_305786213" CREATED="1399678576643" MODIFIED="1399678626246">
<node TEXT="this is only my best guess" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1137313017" CREATED="1399678617810" MODIFIED="1399678624645"/>
<node TEXT="unique child of top-level window" ID="ID_426235641" CREATED="1399678611133" MODIFIED="1399678617512"/>
</node>
</node>
</node>
<node TEXT="class reference" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1612398838" CREATED="1405712912729" MODIFIED="1405712919804">
<node TEXT="[root]" ID="ID_1446830451" CREATED="1406067096964" MODIFIED="1406067099679">
<node TEXT="http://tkinter.unpythonic.net/wiki/" ID="ID_1056976564" CREATED="1406072764994" MODIFIED="1406072764994" LINK="http://tkinter.unpythonic.net/wiki/"/>
</node>
<node TEXT="Frame" ID="ID_795351108" CREATED="1406067094532" MODIFIED="1406067095647">
<node TEXT="http://tkinter.unpythonic.net/pydoc/Tkinter.Frame.html" ID="ID_684952233" CREATED="1405712914925" MODIFIED="1405712914925" LINK="http://tkinter.unpythonic.net/pydoc/Tkinter.Frame.html"/>
</node>
<node TEXT="Text" ID="ID_60231992" CREATED="1406067090741" MODIFIED="1406067093880">
<node TEXT="http://tkinter.unpythonic.net/pydoc/Tkinter.Text.html" ID="ID_581559178" CREATED="1406067089668" MODIFIED="1406067089668" LINK="http://tkinter.unpythonic.net/pydoc/Tkinter.Text.html"/>
</node>
</node>
<node TEXT="display: it&apos;s like one would hope" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1463701484" CREATED="1406961075680" MODIFIED="1407101345677">
<node TEXT="display research, 2014 08 03" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_258715942" CREATED="1407101201932" MODIFIED="1407101209510"/>
<node TEXT="questions" ID="ID_1065437249" CREATED="1407101159221" MODIFIED="1407101160096">
<node TEXT="Overlarchy-generated" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_160825430" CREATED="1407101353257" MODIFIED="1407101359108"/>
<node TEXT="if a, b and c are stacked vertically and I regrid b&apos;s contents, do I just have to regrid b, and then its master, without a and c?" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1381937301" CREATED="1406960169562" MODIFIED="1406960199993"/>
<node TEXT="should calls to grid be passed from tk-children to tk-parents!?" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_670690505" CREATED="1406959857538" MODIFIED="1406959880220"/>
<node TEXT="partial regrid?" LOCALIZED_STYLE_REF="default" ID="ID_1720000046" CREATED="1406785678125" MODIFIED="1406785730396">
<node TEXT="if I grid not from topnode, just some node, does what&apos;s above (parentward) it need to be regridded too?" ID="ID_672149370" CREATED="1406785687460" MODIFIED="1406785727813"/>
</node>
<node TEXT="partial grid_forget?" ID="ID_1446827793" CREATED="1406880894115" MODIFIED="1406880897853"/>
<node TEXT="why display flashes?" ID="ID_203028926" CREATED="1406881205386" MODIFIED="1406961153968">
<node TEXT="internet" ID="ID_612598511" CREATED="1406961154274" MODIFIED="1406961156286"/>
</node>
</node>
<node TEXT="answers" ID="ID_254626908" CREATED="1407101175557" MODIFIED="1407101177528">
<node TEXT="size options ignored once contents gridded" ID="ID_1951053530" CREATED="1407100003322" MODIFIED="1407100020470">
<node TEXT="example" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1066729014" CREATED="1407099931315" MODIFIED="1407099937532">
<node TEXT="^/tkinter/nesting, partial redraw.py" ID="ID_1219454255" CREATED="1407100060121" MODIFIED="1407100060580"/>
<node TEXT="r201 (first appearance)" ID="ID_525514291" CREATED="1407100037481" MODIFIED="1407100061852"/>
</node>
<node TEXT="if frame A contains frame B, and initially A is rendered without contents gridded, the size option given to A is adhered to" ID="ID_1812751628" CREATED="1407099768125" MODIFIED="1407099797457"/>
<node TEXT="but as soon as something within A is gridded, the boundary sizes given as options to A are ignored" ID="ID_878883585" CREATED="1407099797662" MODIFIED="1407099878456"/>
<node TEXT="the boundary of A will then be determined both by what is inside it and what is outside it" ID="ID_1656580339" CREATED="1407099878676" MODIFIED="1407099894455"/>
</node>
<node TEXT="gridding something twice, even with other grid events intervening, the second time changes nothing" ID="ID_537841134" CREATED="1407100113895" MODIFIED="1407100458680"/>
<node TEXT="neither peers nor parent have to be regridded for change to present" ID="ID_1054918008" CREATED="1407100238192" MODIFIED="1407100254971"/>
<node TEXT="a container grid-forgotten and regridded will reappear with the same contents; while their master is hidden, they do not themselves need to be hidden also" ID="ID_1391072164" CREATED="1407101803594" MODIFIED="1407101841988"/>
<node TEXT="replace = append unless indices given" ID="ID_1822695929" CREATED="1407101039687" MODIFIED="1407101050692">
<node TEXT="if a thing is grid_forgot and then gridded, it appears at the bottom, even if previously it was in the middle" ID="ID_1712386162" CREATED="1407100641942" MODIFIED="1407100660378"/>
<node TEXT="but if the arguments to grid indicate its position, it will reappear in the same place" ID="ID_1139865183" CREATED="1407101053735" MODIFIED="1407101072634"/>
</node>
</node>
<node TEXT="implications" ID="ID_1726867098" CREATED="1407101367113" MODIFIED="1407101368501"/>
</node>
<node TEXT="catch option" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1177211716" CREATED="1407610036172" MODIFIED="1408402686740"/>
</node>
<node TEXT="wx" ID="ID_340364735" CREATED="1424570190608" MODIFIED="1424570191073">
<node TEXT="asking SO about overlap" ID="ID_1449725065" CREATED="1424556720029" MODIFIED="1424556736965">
<node TEXT="http://stackoverflow.com/questions/22592281/is-it-possible-to-draw-on-a-textctrl-and-if-so-how/28651972#28651972" ID="ID_1513483267" CREATED="1424556719011" MODIFIED="1424556719011" LINK="http://stackoverflow.com/questions/22592281/is-it-possible-to-draw-on-a-textctrl-and-if-so-how/28651972#28651972"/>
</node>
<node TEXT="I have learned enough wx to characterize it." ID="ID_1764862491" CREATED="1424298496444" MODIFIED="1424298501954">
<node TEXT="tedious, redundant" ID="ID_1023415737" CREATED="1424298502436" MODIFIED="1424298510210"/>
<node TEXT="&quot;be connected to x. and then (in a separate function called soon thereafter but written elsewhere) do the thing that I connected you to x for.&quot;" ID="ID_4741206" CREATED="1424298519613" MODIFIED="1424298561654"/>
<node TEXT="paternalistically, not helping and perhaps gaining by that: &quot;I&apos;m sorry you&apos;re stuck.&quot;" ID="ID_765817176" CREATED="1424298624717" MODIFIED="1424298680893">
<node TEXT="howtoread that prev, it next" ID="ID_1254277284" CREATED="1424298681652" MODIFIED="1424298699716"/>
</node>
</node>
<node TEXT="read tutorial for feature, not language" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_429859208" CREATED="1424235121812" MODIFIED="1424235141675"/>
<node TEXT="from tutorial" ID="ID_1331476535" CREATED="1424235237627" MODIFIED="1424235239730">
<node TEXT="! includes bundled demos" ID="ID_1834402738" CREATED="1424160415242" MODIFIED="1424160439324">
<node TEXT="quot" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1222460200" CREATED="1424160452298" MODIFIED="1424160453662"/>
<node TEXT="Drag and Drop." ID="ID_1754748913" CREATED="1424160447333" MODIFIED="1424160447333"/>
<node TEXT="MDI" ID="ID_1170917023" CREATED="1424160447333" MODIFIED="1424160447333"/>
<node TEXT="Tab view/multiple files" ID="ID_972196541" CREATED="1424160447337" MODIFIED="1424160447337"/>
<node TEXT="Find/Replace dialog" ID="ID_1042636448" CREATED="1424160447339" MODIFIED="1424160447339"/>
<node TEXT="Print dialog (Printing)" ID="ID_154806139" CREATED="1424160447340" MODIFIED="1424160447340"/>
<node TEXT="Macro-commands in python ( using the eval function)" ID="ID_1497541108" CREATED="1424160447341" MODIFIED="1424160447341"/>
</node>
<node TEXT="frame = top-level window" ID="ID_407145878" CREATED="1424157147040" MODIFIED="1424157154152"/>
<node TEXT="window = {button, menu, ...} in a frame" ID="ID_1033639659" CREATED="1424157243057" MODIFIED="1424157262741"/>
<node TEXT="types confusing" ID="ID_186949184" CREATED="1424158889728" MODIFIED="1424158896590">
<node TEXT="filemenu.Append returns an object of type &quot;command in a filemenu&quot;" ID="ID_1281878955" CREATED="1424158724273" MODIFIED="1424158743192">
<node TEXT="example" ID="ID_612244324" CREATED="1424158746473" MODIFIED="1424158747416">
<node TEXT="from &quot;4.popup+quit.py&quot;, from" ID="ID_1582063621" CREATED="1424158863129" MODIFIED="1424158871028">
<node TEXT="wiki.wxpython.org/Getting Started" ID="ID_682914846" CREATED="1424158874993" MODIFIED="1424158874993"/>
</node>
<node TEXT="class MainWindow(wx.Frame):" ID="ID_20855962" CREATED="1424158828093" MODIFIED="1424158828093">
<node TEXT="def OnAbout(self,e):" ID="ID_620539311" CREATED="1424158789762" MODIFIED="1424158789762">
<node TEXT="# A message dialog box with an OK button. wx.OK is a standard ID in wxWidgets." ID="ID_193072240" CREATED="1424158789762" MODIFIED="1424158789762"/>
<node TEXT="dlg = wx.MessageDialog( self, &quot;A small text editor&quot;, &quot;About Sample Editor&quot;, wx.OK)" ID="ID_421872426" CREATED="1424158789762" MODIFIED="1424158789762"/>
<node TEXT="dlg.ShowModal() # Show it" ID="ID_1492592623" CREATED="1424158789762" MODIFIED="1424158789762"/>
<node TEXT="dlg.Destroy() # finally destroy it when finished." ID="ID_50712733" CREATED="1424158789762" MODIFIED="1424158789762"/>
</node>
<node TEXT="def __init__(self, parent, title):" ID="ID_444571392" CREATED="1424158801228" MODIFIED="1424158801228">
<node TEXT="... skip some ..." LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1982289417" CREATED="1424158805953" MODIFIED="1424158809552"/>
<node TEXT="filemenu= wx.Menu()" ID="ID_1730288350" CREATED="1424158744591" MODIFIED="1424158744591"/>
<node TEXT="menuAbout = filemenu.Append(wx.ID_ABOUT, &quot;&amp;About&quot;,&quot; Information about this program&quot;)" ID="ID_1553068520" CREATED="1424158744600" MODIFIED="1424158744600"/>
<node TEXT="self.Bind(wx.EVT_MENU, self.OnAbout, menuAbout)" ID="ID_200197182" CREATED="1424158770797" MODIFIED="1424158770797"/>
<node TEXT="... skip some ..." LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1717743799" CREATED="1424158805953" MODIFIED="1424158809552"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="believed common" ID="ID_840702824" CREATED="1424224101317" MODIFIED="1424224103170">
<node TEXT="wx.{ToolBar, MenuBar, StatusBar}" ID="ID_1753187158" CREATED="1424224104310" MODIFIED="1424224124324"/>
<node TEXT="wx.Control" ID="ID_1902341849" CREATED="1424224077846" MODIFIED="1424224080444">
<node TEXT="subclasses include &quot;wx.Button, wx.StaticText, wx.TextCtrl and wx.ComboBox&quot;" ID="ID_123553330" CREATED="1424224080726" MODIFIED="1424224088595"/>
</node>
<node TEXT="wx.Panel" ID="ID_703297466" CREATED="1424224143589" MODIFIED="1424224146228">
<node TEXT="holds wx.Control objects; allows tabbing among" ID="ID_1804507553" CREATED="1424224147526" MODIFIED="1424224156227"/>
</node>
</node>
<node TEXT="several layout options" ID="ID_1487381358" CREATED="1424224244309" MODIFIED="1424224246852">
<node TEXT="wiki.wxpython.org/Getting Started" ID="ID_1824049739" CREATED="1424224247281" MODIFIED="1424224247281"/>
<node TEXT="I am only learning the last listed, &quot;wxSizer&quot;" ID="ID_1547477096" CREATED="1424224247886" MODIFIED="1424224278772"/>
</node>
<node TEXT="to assign a sizer to a window" ID="ID_213403671" CREATED="1424226088023" MODIFIED="1424226091973">
<node TEXT="first create and populate sizer" ID="ID_1383669967" CREATED="1424226104487" MODIFIED="1424226108813"/>
<node TEXT="then, three steps" ID="ID_233775254" CREATED="1424226096552" MODIFIED="1424226102646">
<node TEXT="window.SetSizer(sizer)&#xa;window.SetAutoLayout(True)&#xa;sizer.Fit(window)" ID="ID_1665085438" CREATED="1424226094167" MODIFIED="1424226095540"/>
</node>
</node>
<node TEXT="vocab - did I not need to write it down?" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1933657399" CREATED="1424158163561" MODIFIED="1424235229012">
<node TEXT=".vocab" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_112998883" CREATED="1424159352617" MODIFIED="1424159354350"/>
<node TEXT="event ID" ID="ID_612693534" CREATED="1424158080144" MODIFIED="1424158103673">
<node TEXT="usually use ID_ANY" ID="ID_784335108" CREATED="1424158150185" MODIFIED="1424158155098"/>
<node TEXT="there are standard ones" ID="ID_671459669" CREATED="1424158110009" MODIFIED="1424158135534">
<node TEXT="that help with look and feel" ID="ID_1051774763" CREATED="1424158136561" MODIFIED="1424158144710"/>
<node ID="ID_1408028732" CREATED="1424158135897" MODIFIED="1424158135897"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      -- e.g. ABOUT_ID, OPEN_ID ...
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="Modal" ID="ID_164015425" CREATED="1424159355673" MODIFIED="1424159356536">
<node TEXT="quot" ID="ID_764133632" CREATED="1424159359961" MODIFIED="1424159360688"/>
<node TEXT="&quot;Modal&quot; means that the user cannot do anything on the application until he clicks OK or Cancel." ID="ID_1065245601" CREATED="1424159350516" MODIFIED="1424159350516"/>
</node>
</node>
</node>
<node TEXT="! I need" LOCALIZED_STYLE_REF="styles.subtopic" ID="ID_361486956" CREATED="1424235488396" MODIFIED="1424235507807">
<node TEXT="in wx" ID="ID_245735897" CREATED="1424235248891" MODIFIED="1424305035533">
<node TEXT="display" ID="ID_638518573" CREATED="1424235390684" MODIFIED="1424235391825">
<node TEXT="draw shapes" ID="ID_1876307069" CREATED="1424235261531" MODIFIED="1424235270404"/>
<node TEXT="nest windows" LOCALIZED_STYLE_REF="styles.subsubtopic" ID="ID_1077186657" CREATED="1424235274925" MODIFIED="1424235337639">
<font BOLD="false"/>
<node TEXT="read but still not deeply tried" ID="ID_890097962" CREATED="1424235289052" MODIFIED="1424235300030"/>
</node>
<node TEXT="draw semitransparent window over other" ID="ID_539524655" CREATED="1424235324244" MODIFIED="1424235363829"/>
<node TEXT="represent windows, subsystems" ID="ID_1705927435" CREATED="1424235383051" MODIFIED="1424235388418"/>
<node TEXT="compute coordinates" ID="ID_589854482" CREATED="1424235469436" MODIFIED="1424235607862">
<node TEXT="of textboxes, for arrows" ID="ID_1288032927" CREATED="1424235598020" MODIFIED="1424235602579"/>
</node>
<node TEXT="later" LOCALIZED_STYLE_REF="default" ID="ID_98903262" CREATED="1424235624140" MODIFIED="1424235640155">
<font BOLD="true"/>
<node TEXT="scroll" ID="ID_987968391" CREATED="1424235629292" MODIFIED="1424235630579"/>
</node>
</node>
<node TEXT="gui" ID="ID_76115666" CREATED="1424235393867" MODIFIED="1424235394658"/>
</node>
</node>
<node TEXT="! I found" LOCALIZED_STYLE_REF="styles.subtopic" ID="ID_592172396" CREATED="1424247333620" MODIFIED="1424247337902">
<node TEXT="notebook" ID="ID_819056488" CREATED="1424245560226" MODIFIED="1424245562694">
<node TEXT="for tabs" ID="ID_1209869032" CREATED="1424245562890" MODIFIED="1424245563830"/>
</node>
<node TEXT="DC" ID="ID_1646434417" CREATED="1424247477267" MODIFIED="1424247489725">
<font BOLD="true"/>
<node TEXT="can sort by what is queried" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1320494943" CREATED="1424249044373" MODIFIED="1424249050773"/>
<node TEXT="http://www.wxpython.org/docs/api/wx.DC-class.html" ID="ID_135040609" CREATED="1424247479010" MODIFIED="1424247479010" LINK="http://www.wxpython.org/docs/api/wx.DC-class.html"/>
<node TEXT="draw point, line(s), circle, elliptic arc" ID="ID_996653676" CREATED="1424247497555" MODIFIED="1424247813164">
<node TEXT="drawLines optimized for speed" ID="ID_1194132964" CREATED="1424247799543" MODIFIED="1424247803280"/>
</node>
<node TEXT="draw bitmap, inc. transparency" ID="ID_189980645" CREATED="1424247538843" MODIFIED="1424247544617">
<node TEXT="fourth coordinate, alpha" ID="ID_389986238" CREATED="1424247546571" MODIFIED="1424247561300"/>
</node>
<node TEXT="clipping" ID="ID_741670749" CREATED="1424247342890" MODIFIED="1424247344055">
<node TEXT="the set of things on the DC to render" ID="ID_797401836" CREATED="1424247344731" MODIFIED="1424247367740"/>
</node>
<node TEXT="convert coordinates" ID="ID_172145919" CREATED="1424247429507" MODIFIED="1424247434648">
<node TEXT="two rep systems: device and logical" ID="ID_53829757" CREATED="1424247434899" MODIFIED="1424247450500"/>
</node>
<node TEXT="mono bitmaps" LOCALIZED_STYLE_REF="default" ID="ID_1352434082" CREATED="1424247595891" MODIFIED="1424247629906">
<node TEXT="uses text foreground and background colors" ID="ID_175830469" CREATED="1424247611027" MODIFIED="1424247623593"/>
</node>
<node TEXT="draw rotated text" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1331452564" CREATED="1424247852604" MODIFIED="1424247855325"/>
<node TEXT="draw spline" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_669066996" CREATED="1424247922916" MODIFIED="1424247926478"/>
<node TEXT="draw text?" ID="ID_1015894213" CREATED="1424247979716" MODIFIED="1424247981577">
<node TEXT="I think textctrl better" ID="ID_913759972" CREATED="1424247982252" MODIFIED="1424247985609"/>
</node>
<node TEXT="getbackground (brush used for)" ID="ID_970312391" CREATED="1424248112132" MODIFIED="1424248117962"/>
<node TEXT="get font" ID="ID_1750206294" CREATED="1424248139596" MODIFIED="1424248141618"/>
<node TEXT="get brush" ID="ID_534557729" CREATED="1424248143740" MODIFIED="1424248145248"/>
<node TEXT="SetLogicalFunction" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_170650740" CREATED="1424248192316" MODIFIED="1424248194774">
<node TEXT="&quot;determines how a source pixel ... combines with a destination pixel&quot;" ID="ID_634565497" CREATED="1424248196004" MODIFIED="1424248218232"/>
</node>
<node TEXT="GetMultiLineTextExtent" ID="ID_1724111702" CREATED="1424248904940" MODIFIED="1424248905682"/>
<node TEXT="MaxX" ID="ID_1901365545" CREATED="1424249011572" MODIFIED="1424249013114">
<node TEXT="Gets the maximum horizontal extent used in drawing commands so far." ID="ID_1487113348" CREATED="1424249022742" MODIFIED="1424249022742"/>
</node>
<node TEXT="clear?" ID="ID_780639574" CREATED="1424249095876" MODIFIED="1424249098435">
<node TEXT="reset bounding box" ID="ID_535517553" CREATED="1424249099724" MODIFIED="1424249102744">
<node TEXT="Resets the bounding box: after a call to this function, the bounding box doesn&apos;t contain anything." ID="ID_1824379536" CREATED="1424249098992" MODIFIED="1424249098992"/>
</node>
<node TEXT="flood" ID="ID_927931977" CREATED="1424248026164" MODIFIED="1424248027064">
<node TEXT="one color, erase everything, maybe?" ID="ID_1822486684" CREATED="1424248027924" MODIFIED="1424249114010"/>
</node>
</node>
<node TEXT="axes run right and up" ID="ID_1316594793" CREATED="1424249135876" MODIFIED="1424249139921"/>
<node TEXT="setFont" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_393978870" CREATED="1424249233244" MODIFIED="1424249236163"/>
<node TEXT="SetMapMode" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1056119690" CREATED="1424249423396" MODIFIED="1424249424760">
<node TEXT="set measurement units, e.g. mm" ID="ID_1540681250" CREATED="1424249425285" MODIFIED="1424249429706"/>
</node>
<node TEXT="SetUserScale" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1477292639" CREATED="1424249509165" MODIFIED="1424249512031">
<node TEXT="zoom" ID="ID_1082834073" CREATED="1424249512933" MODIFIED="1424249513809"/>
</node>
</node>
<node TEXT="isOK()" ID="ID_1666007207" CREATED="1424249204844" MODIFIED="1424249209145">
<node TEXT="common method among widgets, indicating ready to use" ID="ID_1845318698" CREATED="1424249209889" MODIFIED="1424249218082"/>
</node>
<node TEXT="drawing + textCtrl" ID="ID_1947016538" CREATED="1424248517468" MODIFIED="1424248524970">
<node TEXT="http://stackoverflow.com/questions/8714444/creating-a-self-truncating-elliptic-text-ctrl-how-to-force-paint-event" ID="ID_1283809860" CREATED="1424248516710" MODIFIED="1424248516710" LINK="http://stackoverflow.com/questions/8714444/creating-a-self-truncating-elliptic-text-ctrl-how-to-force-paint-event"/>
</node>
</node>
<node TEXT="good demos!" LOCALIZED_STYLE_REF="styles.subtopic" ID="ID_899146550" CREATED="1424250759116" MODIFIED="1424250762624">
<node TEXT="at folder wxPython.2.8.[something]/" ID="ID_785376466" CREATED="1424250763701" MODIFIED="1424250779867"/>
</node>
<node TEXT="PaintDC" ID="ID_1694846869" CREATED="1424295909123" MODIFIED="1424295911184">
<node TEXT="remembver: PaintDC, not just DC" LOCALIZED_STYLE_REF="styles.topic" ID="ID_684145883" CREATED="1424293426130" MODIFIED="1424295916237"/>
<node TEXT="constructor takes a window, which it draws on" ID="ID_1431749296" CREATED="1424295917282" MODIFIED="1424295927864"/>
<node TEXT="should be temporary" ID="ID_931676885" CREATED="1424295980890" MODIFIED="1424295984255">
<node TEXT="&quot;must be constructed if an application wishes to paint on the client area of a window from within an EVT_PAINT event handler. This should normally be constructed as a temporary stack object; don&apos;t store a wx.PaintDC object.&quot;" ID="ID_447718239" CREATED="1424295984506" MODIFIED="1424295987031"/>
</node>
<node TEXT="examples" ID="ID_277768200" CREATED="1424296318451" MODIFIED="1424296321105">
<node TEXT="SystemSettingsDemo.py" ID="ID_1194434334" CREATED="1424296321576" MODIFIED="1424296321576">
<node TEXT="complicated" ID="ID_1402867014" CREATED="1424296322531" MODIFIED="1424296324615"/>
<node TEXT="paints both the text and colored boxes; does not paint over another control&apos;s text" ID="ID_1440227893" CREATED="1424296325427" MODIFIED="1424296347528"/>
</node>
</node>
</node>
<node TEXT="ClientDC" ID="ID_1446693178" CREATED="1424296213627" MODIFIED="1424296215417">
<node TEXT="for painting on a window, outside EVT_PAINT ctx" ID="ID_156057129" CREATED="1424296218579" MODIFIED="1424296232633">
<node TEXT="&quot;A wx.ClientDC must be constructed if an application wishes to paint on the client area of a window from outside an EVT_PAINT event&quot;" ID="ID_802919958" CREATED="1424296215882" MODIFIED="1424296229196"/>
</node>
</node>
<node TEXT="use RichTextCtrl -- needs to be pure wx, whereas TextCtrl is FFI" ID="ID_371891986" CREATED="1424251068942" MODIFIED="1424251093612"/>
<node TEXT="asking" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_879718634" CREATED="1424719777653" MODIFIED="1424719780742">
<node TEXT="https://groups.google.com/forum/#!forum/wxpython-users" ID="ID_375930431" CREATED="1424719787686" MODIFIED="1424719787686" LINK="https://groups.google.com/forum/#!forum/wxpython-users"/>
<node TEXT="http://stackoverflow.com/questions/22592281/is-it-possible-to-draw-on-a-textctrl-and-if-so-how/28651972#28651972" ID="ID_1694828497" CREATED="1424719795427" MODIFIED="1424719795427" LINK="http://stackoverflow.com/questions/22592281/is-it-possible-to-draw-on-a-textctrl-and-if-so-how/28651972#28651972"/>
</node>
<node TEXT="check demos" ID="ID_207694620" CREATED="1424248974988" MODIFIED="1424248982528"/>
<node TEXT="ForwardEvent" ID="ID_829001249" CREATED="1424551467785" MODIFIED="1424551471136">
<node TEXT="from RichTextCtrl.py" ID="ID_925051720" CREATED="1424551473898" MODIFIED="1424551477679"/>
<node TEXT="def ForwardEvent(self, evt):" ID="ID_1266357145" CREATED="1424551471844" MODIFIED="1424551471844">
<node TEXT="# The RichTextCtrl can handle menu and update events for undo," ID="ID_1594317248" CREATED="1424551471844" MODIFIED="1424551471844"/>
<node TEXT="# redo, cut, copy, paste, delete, and select all, so just" ID="ID_1157274796" CREATED="1424551471844" MODIFIED="1424551471844"/>
<node TEXT="# forward the event to it." ID="ID_1903630822" CREATED="1424551471844" MODIFIED="1424551471844"/>
<node TEXT="self.rtc.ProcessEvent(evt)" ID="ID_320219605" CREATED="1424551471844" MODIFIED="1424551471844"/>
</node>
</node>
<node TEXT="events" ID="ID_187100087" CREATED="1424743033193" MODIFIED="1424743034144">
<node TEXT="&quot;Skip&quot; = keep processing with another applicable handler" ID="ID_8787761" CREATED="1424743056586" MODIFIED="1424743073963">
<node TEXT="horrible language, no?" ID="ID_1608053356" CREATED="1424743074786" MODIFIED="1424743077608"/>
</node>
</node>
</node>
<node TEXT="Qt, PySide" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1952005969" CREATED="1407702622062" MODIFIED="1433281249968">
<node TEXT="threading" ID="ID_319902126" CREATED="1411971323709" MODIFIED="1411971324736">
<node TEXT="Creating and destroying threads frequently can be expensive." ID="ID_1707546722" CREATED="1411971325124" MODIFIED="1411971327412">
<node TEXT="QThreadPool and QRunnable: Reusing Threads" ID="ID_1343942252" CREATED="1411971364778" MODIFIED="1411971365566"/>
</node>
</node>
<node TEXT="old, broad" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_211955445" CREATED="1411971329909" MODIFIED="1411971349388"/>
<node TEXT="to try, test" ID="ID_506992200" CREATED="1408919905313" MODIFIED="1410845900697">
<node TEXT="try Qt Designer" ID="ID_332979635" CREATED="1408134463878" MODIFIED="1408134478919"/>
<node TEXT="try .ui -&gt; .py" ID="ID_1039007046" CREATED="1408134479116" MODIFIED="1408134484582"/>
</node>
<node TEXT="import PySide" ID="ID_1296150826" CREATED="1410896525764" MODIFIED="1410896527990"/>
<node TEXT="how it works" ID="ID_1467366041" CREATED="1410853524065" MODIFIED="1410907058131">
<font BOLD="true"/>
<node TEXT="top" LOCALIZED_STYLE_REF="default" ID="ID_1316449986" CREATED="1410899845530" MODIFIED="1410921344269">
<node TEXT="QApplication object" ID="ID_1199736226" CREATED="1410853533104" MODIFIED="1410853533364">
<node TEXT="mandatory" ID="ID_426772484" CREATED="1410853526580" MODIFIED="1410853539430"/>
<node TEXT="why" ID="ID_1246223433" CREATED="1410853561888" MODIFIED="1410853562593">
<node TEXT="quote, rapid book" ID="ID_1595025126" CREATED="1410853565206" MODIFIED="1410853569097"/>
<node TEXT="This object provides access to global-like informa- tion such as the application&#x2019;s directory, the screen size (and which screen the application is on, in a multihead system), and so on. This object also provides the event loop, discussed shortly." ID="ID_379712260" CREATED="1410853562965" MODIFIED="1410853563722"/>
</node>
<node TEXT="command-line arg&apos;s" ID="ID_1048019886" CREATED="1410853691738" MODIFIED="1410853694269">
<node TEXT="rapid book, pdf 128" ID="ID_153708949" CREATED="1410853763452" MODIFIED="1410853766951"/>
</node>
<node TEXT="QApplication.exec_()" ID="ID_1254174015" CREATED="1410854649477" MODIFIED="1410854687003">
<node TEXT="starts its event loop" ID="ID_1402539597" CREATED="1410854664579" MODIFIED="1410854670373"/>
</node>
<node TEXT="QApplication.quit()" ID="ID_267475868" CREATED="1410854679112" MODIFIED="1410854681044"/>
</node>
<node TEXT="usually subclass" ID="ID_865922773" CREATED="1410899839923" MODIFIED="1410899842237">
<node TEXT="in most cases when we create a top-level window we subclass QDialog, or QMainWindow, or occasionally, QWidget" ID="ID_377720000" CREATED="1410899842623" MODIFIED="1410899842623"/>
</node>
<node TEXT="A widget that has no parent becomes a top-level window" ID="ID_991555156" CREATED="1410899983954" MODIFIED="1410899989689"/>
</node>
<node TEXT="nesting" LOCALIZED_STYLE_REF="default" ID="ID_1274224646" CREATED="1410914456282" MODIFIED="1410921344268">
<node TEXT="non-top, orphaned widgets are memory leaks" ID="ID_1012852510" CREATED="1410914434516" MODIFIED="1410914445846"/>
<node TEXT="layouts give parents to their content" ID="ID_1962240215" CREATED="1410901140686" MODIFIED="1410901147961">
<node TEXT="example (esp. see comment at bottom)" LOCALIZED_STYLE_REF="default" ID="ID_1521581500" CREATED="1410901290644" MODIFIED="1410914607150">
<node TEXT="def __init__(self, parent=None):&#xa;  super(Form, self).__init__(parent)&#xa;  self.browser = QTextBrowser()&#xa;  self.lineedit = QLineEdit(&quot;Type an expression and press Enter&quot;)&#xa;  self.lineedit.selectAll()&#xa;  layout = QVBoxLayout()&#xa;  layout.addWidget(self.browser)&#xa;  layout.addWidget(self.lineedit)&#xa;  self.setLayout(layout)&#xa;    # now self.browser and self.lineedit have parents:, self" ID="ID_523871431" CREATED="1410901286285" MODIFIED="1410901287297"/>
</node>
<node TEXT="most widgets are given parents this way, not at construction" ID="ID_1347761672" CREATED="1410914613858" MODIFIED="1410914627604"/>
</node>
<node TEXT="destruction flows from parent to child" ID="ID_1880599769" CREATED="1410907162080" MODIFIED="1410907180658">
<node TEXT="&quot;[as a result of the layout&apos;s making some widgets that had no parents into children of the form], when the form is deleted, all its child widgets and layouts will be deleted with it, in the correct order.&quot;" ID="ID_1698008054" CREATED="1410907180967" MODIFIED="1410907230836"/>
</node>
</node>
<node TEXT="signal-slot connection" LOCALIZED_STYLE_REF="default" ID="ID_1087099742" CREATED="1410919067312" MODIFIED="1410921344267">
<node TEXT="signatures" ID="ID_1112803930" CREATED="1410919342951" MODIFIED="1410919344076">
<node TEXT="The signalSignature is the name of the signal and a (possibly empty) comma- separated list of parameter type names in parentheses." ID="ID_984915583" CREATED="1410919170086" MODIFIED="1410919170922"/>
<node TEXT="If the signal is a Qt sig- nal, the type names must be the C++ type names, such as int and QString. C++ type names can be rather complex, with each type name possibly including one or more of const, *, and &amp;. When we write them as signal (or slot) signatures we can drop any consts and &amp;s, but must keep any *s. Fo" ID="ID_55599376" CREATED="1410919365644" MODIFIED="1410919367621"/>
</node>
<node TEXT="slots" ID="ID_1487710148" CREATED="1410919345543" MODIFIED="1410919346194">
<node TEXT="slots = methods passed as arguments" ID="ID_883413547" CREATED="1410854606529" MODIFIED="1410854629631">
<node TEXT="Qt slots &#x2260; Python slots" ID="ID_117582250" CREATED="1410854594240" MODIFIED="1410854605404"/>
</node>
<node TEXT="The slotSignature has the same form as a signalSignature except that the name is of a Qt slot. A slot may not have more arguments than the signal that is connected to it, but may have less; the additional parameters are then discarded." ID="ID_532245914" CREATED="1410919346558" MODIFIED="1410919347315"/>
</node>
<node TEXT="connect()" ID="ID_1086013880" CREATED="1410919180133" MODIFIED="1410919771351">
<node ID="ID_1771081822" CREATED="1410919771982" MODIFIED="1410919771982"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      3 varieties
    </p>
  </body>
</html>
</richcontent>
<node TEXT="where" ID="ID_323234161" CREATED="1410920873116" MODIFIED="1410920873931">
<font BOLD="true"/>
<node TEXT="s and w are widgets" LOCALIZED_STYLE_REF="default" ID="ID_1879415131" CREATED="1410920844571" MODIFIED="1410920875028"/>
</node>
<node TEXT="s.connect(w, SIGNAL(&quot;signalSignature&quot;), functionName)" ID="ID_584439912" CREATED="1410919102836" MODIFIED="1410919102836"/>
<node TEXT="s.connect(w, SIGNAL(&quot;signalSignature&quot;), instance.methodName)" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_585456100" CREATED="1410919102836" MODIFIED="1410919105647">
<node TEXT="I like that it&apos;s an instance, not a class." ID="ID_1183892517" CREATED="1410919106077" MODIFIED="1410919112564"/>
</node>
<node TEXT="s.connect(w, SIGNAL(&quot;signalSignature&quot;), instance, SLOT(&quot;slotSignature&quot;))" ID="ID_1903787188" CREATED="1410919102837" MODIFIED="1410919102837"/>
</node>
<node TEXT="all reasonable connections valid" ID="ID_328362881" CREATED="1410919602362" MODIFIED="1410919621302">
<node TEXT="(slot to slot I consider unreasonable)" LOCALIZED_STYLE_REF="default" ID="ID_845256371" CREATED="1410919622984" MODIFIED="1410919636134"/>
<node TEXT="1 signal to many slots: valid" ID="ID_1734131359" CREATED="1410919576161" MODIFIED="1410919592278"/>
<node TEXT="1 slot to many signals: valid" ID="ID_323047746" CREATED="1410919584499" MODIFIED="1410919590774"/>
<node TEXT="signal to signal: valid" ID="ID_1865363846" CREATED="1410919592923" MODIFIED="1410919597174">
<node TEXT="causes the second to trigger" ID="ID_1526426567" CREATED="1410919597315" MODIFIED="1410919600710"/>
</node>
</node>
</node>
<node TEXT="disconnect()" ID="ID_180893586" CREATED="1410919649716" MODIFIED="1410919693502">
<node TEXT="PyQt will automatically disconnect any connections involv- ing an object that has been deleted." ID="ID_1081780265" CREATED="1410919680941" MODIFIED="1410919680941"/>
</node>
<node TEXT="emit()" ID="ID_1992362221" CREATED="1410919782939" MODIFIED="1410919783958">
<node TEXT="for user-defined signals" ID="ID_206318756" CREATED="1410919790602" MODIFIED="1410919794301"/>
<node TEXT="can send more than the signal name" ID="ID_9690359" CREATED="1410919883200" MODIFIED="1410919890218">
<node TEXT="self.emit(SIGNAL(&quot;atzero&quot;), self.zeros)" ID="ID_92049070" CREATED="1410919852864" MODIFIED="1410919852864"/>
<node TEXT="&quot;passing additional data like this is optional&quot;" ID="ID_1293982996" CREATED="1410919899550" MODIFIED="1410919904905"/>
</node>
</node>
<node TEXT="short-circuit signals" ID="ID_861914419" CREATED="1410919921972" MODIFIED="1410919925703">
<node TEXT="&quot;A signal with no arguments (and therefore no parentheses) is a short-circuit Python signal.&quot;" ID="ID_395360620" CREATED="1410919926883" MODIFIED="1410919929679"/>
<node TEXT="advantages" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_759324031" CREATED="1410920002530" MODIFIED="1410920004518">
<node TEXT="avoids the overhead of converting the arguments to and from C++ data types, and also means that arbitrary Python objects can be passed" ID="ID_961806617" CREATED="1410920005537" MODIFIED="1410920005537"/>
</node>
<node TEXT="&quot;If we use parentheses, even for Python signals, the argu- ments must be convertible to C++ data types.&quot;" ID="ID_750363376" CREATED="1410920136096" MODIFIED="1410920141263"/>
</node>
<node TEXT="learning a signal&apos;s origin" ID="ID_525071570" CREATED="1410920928890" MODIFIED="1410920933630">
<node TEXT="rapid book, pdf 147, starts at bottom of page, continues past it" ID="ID_306679732" CREATED="1410920934015" MODIFIED="1410920957015"/>
</node>
<node TEXT="infinite loop debugging" ID="ID_616274072" CREATED="1410921099599" MODIFIED="1410921107243">
<node TEXT="null value changes cause no signal emission" ID="ID_1495815644" CREATED="1410918974860" MODIFIED="1410918980129">
<node TEXT="rapid book, pdf 144" ID="ID_1573799531" CREATED="1410918990092" MODIFIED="1410918993248"/>
<node TEXT="this strategy, which reduces the likelihood of inf. loops, is built into Qt" ID="ID_1589070227" CREATED="1410921309341" MODIFIED="1410921338966"/>
</node>
<node TEXT="rapid book, pdf 150" ID="ID_1166759387" CREATED="1410921107578" MODIFIED="1410921111194"/>
</node>
</node>
<node TEXT="order of execution" LOCALIZED_STYLE_REF="default" ID="ID_560154283" CREATED="1410921275383" MODIFIED="1410921344265">
<node TEXT="Label.show() does not show it yet." ID="ID_1076331340" CREATED="1410854436126" MODIFIED="1410854453904">
<node TEXT="it schedules a paint event" ID="ID_1474333811" CREATED="1410854454125" MODIFIED="1410854457656"/>
<node TEXT="to the QApplication&apos;s event queue" ID="ID_973013596" CREATED="1410854474636" MODIFIED="1410854488989"/>
</node>
</node>
<node TEXT="strange" ID="ID_471568498" CREATED="1410921292198" MODIFIED="1410921298632">
<node TEXT="to avoid deletion on closing window" ID="ID_279271664" CREATED="1410915280739" MODIFIED="1410915297545">
<node TEXT="QApplication.setQuitOnLastWindowClosed(False)" ID="ID_1729091295" CREATED="1410915298374" MODIFIED="1410915310259"/>
</node>
<node TEXT="the &quot;existing-by-defualt&quot; quit button does not appear on all platforms; sometimes must be made explicit" ID="ID_327255026" CREATED="1410915358119" MODIFIED="1410915394067"/>
</node>
<node TEXT="widgets" ID="ID_34509751" CREATED="1411235375551" MODIFIED="1411235378042">
<node TEXT="TextEdit" ID="ID_1773432726" CREATED="1411235378798" MODIFIED="1411235387761">
<node TEXT="functions" ID="ID_1830388276" CREATED="1411235697138" MODIFIED="1411235698261">
<node TEXT="clear(): delete text" ID="ID_1488689142" CREATED="1411235392885" MODIFIED="1411235396824"/>
<node TEXT="insertHtml(): add HTML text" ID="ID_1397946933" CREATED="1411235419627" MODIFIED="1411235951828"/>
<node TEXT="toPlainText(): retrieve text, font-free" ID="ID_1549211362" CREATED="1411235942469" MODIFIED="1411235964531"/>
</node>
<node TEXT="signals emitted" ID="ID_1039657778" CREATED="1411235699482" MODIFIED="1411235701469">
<node TEXT="PySide.QtGui.QTextEdit.textChanged()" ID="ID_466325776" CREATED="1411235701810" MODIFIED="1411235702973"/>
</node>
</node>
<node TEXT="TabWidget" ID="ID_1898525569" CREATED="1411237921996" MODIFIED="1411237924023"/>
<node TEXT="GridLayout" ID="ID_1270868105" CREATED="1411238929784" MODIFIED="1411238932107">
<node TEXT="rows behave identically" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_84493875" CREATED="1411238933912" MODIFIED="1411238941129"/>
<node TEXT="order of operations" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_56316827" CREATED="1411239307964" MODIFIED="1411239311749">
<node TEXT="must add it to its parent layout when you create it, but before you do anything with it" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_464830338" CREATED="1411239320563" MODIFIED="1411240552095"/>
<node TEXT="The normal way to add a layout is by calling PySide.QtGui.QGridLayout.addLayout() on the parent layout." LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1163388890" CREATED="1411239312883" MODIFIED="1411240548791">
<node TEXT="This did not work for me -- many widgets do not have the addLayout() method." ID="ID_1148987575" CREATED="1411240555155" MODIFIED="1411240566997"/>
<node TEXT="setLayout(), however, they do." ID="ID_1959418483" CREATED="1411240567218" MODIFIED="1411240571221"/>
</node>
</node>
<node TEXT="minimum width" ID="ID_439389027" CREATED="1411238932471" MODIFIED="1411238948435">
<node ID="ID_444644643" CREATED="1411238948688" MODIFIED="1411238948688"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      is the greatest of that set using PySide.QtGui.QGridLayout.setColumnMinimumWidth() and the minimum width of each widget in that column
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="stretch factor" ID="ID_407629172" CREATED="1411238962461" MODIFIED="1411238964656">
<node TEXT="set using PySide.QtGui.QGridLayout.setColumnStretch()" ID="ID_1683924898" CREATED="1411238965012" MODIFIED="1411238968828"/>
</node>
<node TEXT="0-indexed" ID="ID_435457741" CREATED="1411239187375" MODIFIED="1411239189066"/>
<node TEXT="add" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1370306487" CREATED="1411239353224" MODIFIED="1411239561006">
<node TEXT="args: item, row, column[, optional things]" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_369621167" CREATED="1411239627431" MODIFIED="1411239650194"/>
<node TEXT="PySide.QtGui.QGridLayout.addWidget()" ID="ID_220836803" CREATED="1411239374864" MODIFIED="1411239374864"/>
<node TEXT="PySide.QtGui.QGridLayout.addItem()" ID="ID_1719285110" CREATED="1411239374864" MODIFIED="1411239620910"/>
<node TEXT="PySide.QtGui.QGridLayout.addLayout()" ID="ID_609750760" CREATED="1411239374865" MODIFIED="1411239374865"/>
</node>
<node TEXT="show, hide, remove" ID="ID_1913196942" CREATED="1411239046646" MODIFIED="1411239544434">
<node TEXT="removeWidget()" ID="ID_1731735451" CREATED="1411239051812" MODIFIED="1411239054272"/>
<node TEXT="hide()" ID="ID_1205948030" CREATED="1411239054493" MODIFIED="1411239055422"/>
<node TEXT="show()" ID="ID_827059122" CREATED="1411239055627" MODIFIED="1411239056414"/>
</node>
<node TEXT="&quot;the empty item&quot;" ID="ID_1601498809" CREATED="1411239232875" MODIFIED="1411239554348">
<node TEXT="are made by specifying their minimum width but not putting a widget there" ID="ID_932380899" CREATED="1411239235515" MODIFIED="1411239247301"/>
<node TEXT="e.g. PySide.QtGui.QGridLayout.setColumnMinimumWidth()" ID="ID_1963281555" CREATED="1411239248082" MODIFIED="1411239250957"/>
</node>
<node TEXT="includes two margins" ID="ID_983064628" CREATED="1411239417314" MODIFIED="1411239420525">
<node TEXT="interior: &quot;contents margin&quot;" ID="ID_784823989" CREATED="1411239425378" MODIFIED="1411239435044"/>
<node TEXT="exterior: &quot;spacing()&quot;" ID="ID_886795414" CREATED="1411239436633" MODIFIED="1411239443307"/>
</node>
</node>
</node>
</node>
<node TEXT="questions" ID="ID_1599398276" CREATED="1410915182149" MODIFIED="1410915183105">
<node TEXT="&quot;QApplication&quot; not made explicitly aware of widgets?" ID="ID_513567330" CREATED="1410915134866" MODIFIED="1410915161555">
<node TEXT="rapid book, p 121, pdf 136, top of page" ID="ID_947756646" CREATED="1410915191717" MODIFIED="1410915209625"/>
<node TEXT="app = QApplication(sys.argv)&#xa;form = Form()&#xa;form.show()&#xa;app.exec_()" ID="ID_590232219" CREATED="1410915175534" MODIFIED="1410915175970"/>
</node>
</node>
<node TEXT="tools" ID="ID_857011787" CREATED="1410846036527" MODIFIED="1410846037322">
<node TEXT="QtDesigner" ID="ID_1194996374" CREATED="1408036435301" MODIFIED="1408172699881">
<node TEXT="why" ID="ID_778859947" CREATED="1410845997451" MODIFIED="1410845998510">
<node TEXT="it generates Python code" ID="ID_1085323759" CREATED="1408036439540" MODIFIED="1408036443975"/>
</node>
<node TEXT="how" ID="ID_1374708725" CREATED="1410846006953" MODIFIED="1410846007469">
<node TEXT="pyqt4-devel-tools: to turn a .ui file into a .py one" ID="ID_980952118" CREATED="1408127354525" MODIFIED="1408127370255">
<node TEXT="ref" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_828098944" CREATED="1408127538228" MODIFIED="1408127551781">
<node TEXT="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=video&amp;cd=5&amp;ved=0CDwQtwIwBA&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJOuCuLHmk3o&amp;ei=dk_uU__LJpDvoASphoBA&amp;usg=AFQjCNEp55PDblRwh4-ul3JAm4nSiGYZWg&amp;sig2=1bDrAAQh7k8To5vIfxeK5g&amp;bvm=bv.73231344,d.cGE&amp;cad=rja" ID="ID_1677450904" CREATED="1408127537641" MODIFIED="1408127537641" LINK="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=video&amp;cd=5&amp;ved=0CDwQtwIwBA&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJOuCuLHmk3o&amp;ei=dk_uU__LJpDvoASphoBA&amp;usg=AFQjCNEp55PDblRwh4-ul3JAm4nSiGYZWg&amp;sig2=1bDrAAQh7k8To5vIfxeK5g&amp;bvm=bv.73231344,d.cGE&amp;cad=rja"/>
</node>
<node TEXT="once that package is installed, call &quot;pyuic4&quot; (if in qt4)" ID="ID_1571272779" CREATED="1408127395777" MODIFIED="1408127411557"/>
<node TEXT="pyuic -x hello.ui -o hello.py" ID="ID_1536821732" CREATED="1408127431296" MODIFIED="1408127457613">
<node TEXT="-x: make it an executable" ID="ID_700392406" CREATED="1408127439159" MODIFIED="1408127443778"/>
<node TEXT="-o for &quot;output&quot;, followed by output file name" ID="ID_4434751" CREATED="1408127458430" MODIFIED="1408127465528"/>
</node>
</node>
<node TEXT="ref&apos;s" ID="ID_1641861351" CREATED="1410846012258" MODIFIED="1410846012940">
<node TEXT="an intro video I liked" ID="ID_713977463" CREATED="1408127538228" MODIFIED="1408127543279">
<node TEXT="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=video&amp;cd=5&amp;ved=0CDwQtwIwBA&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJOuCuLHmk3o&amp;ei=dk_uU__LJpDvoASphoBA&amp;usg=AFQjCNEp55PDblRwh4-ul3JAm4nSiGYZWg&amp;sig2=1bDrAAQh7k8To5vIfxeK5g&amp;bvm=bv.73231344,d.cGE&amp;cad=rja" ID="ID_31690003" CREATED="1408127537641" MODIFIED="1408127537641" LINK="https://www.google.com/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=video&amp;cd=5&amp;ved=0CDwQtwIwBA&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DJOuCuLHmk3o&amp;ei=dk_uU__LJpDvoASphoBA&amp;usg=AFQjCNEp55PDblRwh4-ul3JAm4nSiGYZWg&amp;sig2=1bDrAAQh7k8To5vIfxeK5g&amp;bvm=bv.73231344,d.cGE&amp;cad=rja"/>
</node>
<node TEXT="3rd video in that series" ID="ID_304606228" CREATED="1408128908768" MODIFIED="1408128911820">
<node TEXT="the first I haven&apos;t watched" ID="ID_1745175817" CREATED="1408128913241" MODIFIED="1408128916267"/>
<node TEXT="on menus, menu bars" ID="ID_1643895622" CREATED="1408128916752" MODIFIED="1408128919522"/>
<node TEXT="https://www.youtube.com/watch?v=U2vvLAPmpeA" ID="ID_1822250231" CREATED="1408128912110" MODIFIED="1408128912110" LINK="https://www.youtube.com/watch?v=U2vvLAPmpeA"/>
</node>
</node>
</node>
</node>
<node TEXT="more" ID="ID_1581753960" CREATED="1408173762893" MODIFIED="1410846061058">
<node LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_39644542" CREATED="1410846061304" MODIFIED="1410846063878"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      more things that work with Qt
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="links out" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1961806864" CREATED="1407000261901" MODIFIED="1407000275470">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_518798113" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node ID="ID_1258243067" CREATED="1408173781108" MODIFIED="1408173781108"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      list of Python GUI Design Tools and IDEs
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="ref&apos;s" ID="ID_863837380" CREATED="1410845962806" MODIFIED="1410845963841">
<node TEXT="see PyQt for its ref&apos;s" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_233422327" CREATED="1410933933961" MODIFIED="1410933938812"/>
<node TEXT="&quot;rapid book&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1625941493" CREATED="1411237000695" MODIFIED="1411237042458">
<node TEXT="resume pdf 288" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_804619960" CREATED="1411238381248" MODIFIED="1411238399520"/>
<node TEXT="&quot;Rapid GUI Programming With Python and QT&quot;" LOCALIZED_STYLE_REF="default" ID="ID_398852972" CREATED="1405709612443" MODIFIED="1411237047862">
<node TEXT="in computer/.../Python/Qt" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1204973681" CREATED="1405709631257" MODIFIED="1410916248171"/>
<node TEXT="http://www.qtrac.eu/pyqtbook.html" ID="ID_774281887" CREATED="1405649410161" MODIFIED="1405649410161" LINK="http://www.qtrac.eu/pyqtbook.html"/>
<node TEXT="errata" ID="ID_1373138170" CREATED="1410916235641" MODIFIED="1410916236724">
<node TEXT="http://www.qtrac.eu/pyqtbook-errata.html" ID="ID_1216903051" CREATED="1410916237106" MODIFIED="1410916237106" LINK="http://www.qtrac.eu/pyqtbook-errata.html"/>
</node>
</node>
<node TEXT="skipped: ch&apos;s 1-3, 5" ID="ID_795767431" CREATED="1411237006126" MODIFIED="1411237010633"/>
<node TEXT="to read" ID="ID_1984283980" CREATED="1411237044235" MODIFIED="1411237054309">
<node TEXT="def." ID="ID_570804923" CREATED="1411237141370" MODIFIED="1411237142661">
<node TEXT="ch 6 (main)" ID="ID_1434566984" CREATED="1411237054890" MODIFIED="1411237057765"/>
<node TEXT="ch 9 (layout)" ID="ID_1232776648" CREATED="1411237057977" MODIFIED="1411237060981"/>
</node>
<node TEXT="maybe" ID="ID_358739965" CREATED="1411237143938" MODIFIED="1411237144653">
<node TEXT="14, and 16 (model-view)" ID="ID_538310580" CREATED="1411237147954" MODIFIED="1411237154380"/>
</node>
</node>
</node>
<node TEXT="PySide&apos;s main page" ID="ID_906557014" CREATED="1410933904724" MODIFIED="1410933908168">
<node TEXT="http://qt-project.org/wiki/PySide" ID="ID_850076759" CREATED="1410933899653" MODIFIED="1410933899653" LINK="http://qt-project.org/wiki/PySide"/>
</node>
<node TEXT="PySide 1.2.1 ref" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_356677619" CREATED="1410934009939" MODIFIED="1410934968810">
<node TEXT="My version is newer (1.2.2), but I think this might be the most recent documentation." LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1228326528" CREATED="1410934016442" MODIFIED="1410934080779"/>
<node TEXT="http://pyside.github.io/docs/pyside/" ID="ID_140015020" CREATED="1410934008265" MODIFIED="1410934008265" LINK="http://pyside.github.io/docs/pyside/"/>
<node TEXT="how to read it" ID="ID_1624361847" CREATED="1410934161054" MODIFIED="1410934163489">
<node TEXT="let 0 represent None" ID="ID_1464028" CREATED="1410934163669" MODIFIED="1410934171297">
<node TEXT="quote" ID="ID_518310915" CREATED="1410934174149" MODIFIED="1410934175505"/>
<node TEXT="The PySide class reference documentation is automatically generated from the original Qt documentation for C++, some parts were tuned to fit the Python world. However, it&apos;s not possible to rewrite all Qt docs as it would require a really huge effort, so if the documentation says you can use 0 on an QObject argument, interpret it as None." ID="ID_453320168" CREATED="1410934171550" MODIFIED="1410934172369"/>
</node>
</node>
<node TEXT="libraries of interest" ID="ID_124470542" CREATED="1410934369820" MODIFIED="1410934372199">
<node TEXT="Core" ID="ID_1094365898" CREATED="1410934381308" MODIFIED="1410934381958">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/index.html" ID="ID_153200231" CREATED="1410934382289" MODIFIED="1410934382289" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/index.html"/>
</node>
<node TEXT="UI" ID="ID_686994707" CREATED="1410934386747" MODIFIED="1410934436394">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtGui/index.html" ID="ID_1858253628" CREATED="1410934389455" MODIFIED="1410934389455" LINK="http://pyside.github.io/docs/pyside/PySide/QtGui/index.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtUiTools/index.html" ID="ID_1184554415" CREATED="1410934436707" MODIFIED="1410934436707" LINK="http://pyside.github.io/docs/pyside/PySide/QtUiTools/index.html"/>
</node>
<node TEXT="Declarative" ID="ID_1033810119" CREATED="1410934404769" MODIFIED="1410934407500">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtDeclarative/index.html" ID="ID_455665700" CREATED="1410934407845" MODIFIED="1410934407845" LINK="http://pyside.github.io/docs/pyside/PySide/QtDeclarative/index.html"/>
</node>
<node TEXT="Help" ID="ID_1120220847" CREATED="1410934397289" MODIFIED="1410934398669">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtHelp/index.html" ID="ID_722196425" CREATED="1410934399135" MODIFIED="1410934399135" LINK="http://pyside.github.io/docs/pyside/PySide/QtHelp/index.html"/>
</node>
<node TEXT="Script" ID="ID_525743053" CREATED="1410934417496" MODIFIED="1410934418771">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtScript/index.html" ID="ID_264274596" CREATED="1410934419101" MODIFIED="1410934419101" LINK="http://pyside.github.io/docs/pyside/PySide/QtScript/index.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtScriptTools/index.html" ID="ID_1533365206" CREATED="1410934423716" MODIFIED="1410934423716" LINK="http://pyside.github.io/docs/pyside/PySide/QtScriptTools/index.html"/>
</node>
<node TEXT="those and more" ID="ID_1649056061" CREATED="1410934372388" MODIFIED="1410934449860">
<font BOLD="true"/>
<node TEXT="http://pyside.github.io/docs/pyside/" ID="ID_1428648475" CREATED="1410934374918" MODIFIED="1410934374918" LINK="http://pyside.github.io/docs/pyside/"/>
</node>
</node>
<node TEXT="State Machine Framework" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1484951354" CREATED="1410934976681" MODIFIED="1410936283690">
<node TEXT="is cool" ID="ID_1758488385" CREATED="1410936281250" MODIFIED="1410936282901"/>
<node TEXT="I imagine it is ..." ID="ID_505034597" CREATED="1410936354363" MODIFIED="1410936357479">
<node TEXT="a matrix of states, transitions, what triggers a transition and what happens during a transition; each of them potentially knowing about the others" ID="ID_147428057" CREATED="1410936284608" MODIFIED="1410936317778"/>
</node>
</node>
<node TEXT="Core" ID="ID_1630679808" CREATED="1410935479949" MODIFIED="1410935602375">
<node TEXT="methods of interest (long unread list)" ID="ID_737014929" CREATED="1410935602888" MODIFIED="1410935678154">
<font BOLD="true"/>
<node TEXT="animation" ID="ID_670501080" CREATED="1410935682322" MODIFIED="1410935683973">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QAbstractAnimation.html" ID="ID_1735394324" CREATED="1410935488609" MODIFIED="1410935488609" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QAbstractAnimation.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QParallelAnimationGroup.html" ID="ID_958181895" CREATED="1410935488629" MODIFIED="1410935488629" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QParallelAnimationGroup.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QPauseAnimation.html" ID="ID_529064542" CREATED="1410935488630" MODIFIED="1410935488630" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QPauseAnimation.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QPropertyAnimation.html" ID="ID_1213821930" CREATED="1410935488636" MODIFIED="1410935488636" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QPropertyAnimation.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QVariantAnimation.html" ID="ID_1383050444" CREATED="1410935488648" MODIFIED="1410935488648" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QVariantAnimation.html"/>
</node>
<node TEXT="event" ID="ID_1765031887" CREATED="1410935697345" MODIFIED="1410935699332">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QEvent.html" ID="ID_667099401" CREATED="1410935488614" MODIFIED="1410935488614" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QEvent.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QEventLoop.html" ID="ID_1471619030" CREATED="1410935488615" MODIFIED="1410935488615" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QEventLoop.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QEventTransition.html" ID="ID_1025979473" CREATED="1410935488616" MODIFIED="1410935488616" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QEventTransition.html"/>
</node>
<node TEXT="argument" ID="ID_573072672" CREATED="1410935710783" MODIFIED="1410935712235">
<node TEXT="arg" ID="ID_59106679" CREATED="1410938301502" MODIFIED="1410938302377">
<node TEXT="internal; not to be used" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1742946031" CREATED="1410938276640" MODIFIED="1410938312894">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QGenericArgument.html" ID="ID_959365551" CREATED="1410935488619" MODIFIED="1410935488619" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QGenericArgument.html"/>
</node>
<node TEXT="&quot;Please use the Q_ARG() macro instead.&quot;" ID="ID_940641004" CREATED="1410938349753" MODIFIED="1410938351013"/>
</node>
<node TEXT="return arg" ID="ID_640733448" CREATED="1410938303469" MODIFIED="1410938304841">
<node LOCALIZED_STYLE_REF="styles.topic" ID="ID_1669360328" CREATED="1410938297701" MODIFIED="1410938310670"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      internal; not to be used
    </p>
  </body>
</html>
</richcontent>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QGenericReturnArgument.html" ID="ID_1642518580" CREATED="1410935488620" MODIFIED="1410935488620" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QGenericReturnArgument.html"/>
</node>
<node TEXT="&quot;Please use the Q_RETURN_ARG() macro instead.&quot;" LOCALIZED_STYLE_REF="default" ID="ID_890551525" CREATED="1410938307126" MODIFIED="1410938338294"/>
</node>
</node>
<node TEXT="info, settings" ID="ID_1587042841" CREATED="1410935728669" MODIFIED="1410935864613">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QLibraryInfo.html" ID="ID_1637351121" CREATED="1410935488621" MODIFIED="1410935488621" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QLibraryInfo.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QMetaClassInfo.html" ID="ID_59217067" CREATED="1410935488625" MODIFIED="1410935488625" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QMetaClassInfo.html">
<node TEXT="link in from inert copy" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_739310967" CREATED="1410935771602" MODIFIED="1410935778801"/>
</node>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/ClassInfo.html" ID="ID_1631713874" CREATED="1410935488641" MODIFIED="1410935488641" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/ClassInfo.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QSettings.html" ID="ID_1915429271" CREATED="1410935488642" MODIFIED="1410935488642" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QSettings.html"/>
</node>
<node TEXT="meta" ID="ID_1740587523" CREATED="1410935746628" MODIFIED="1410935747376">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QMetaClassInfo.html" ID="ID_346448653" CREATED="1410935488625" MODIFIED="1410935488625" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QMetaClassInfo.html">
<node TEXT="main one here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_980682294" CREATED="1410935765947" MODIFIED="1410935778798">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_739310967" STARTINCLINATION="193;0;" ENDINCLINATION="193;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QMetaMethod.html" ID="ID_441410533" CREATED="1410935488626" MODIFIED="1410935488626" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QMetaMethod.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QMetaProperty.html" ID="ID_1708379858" CREATED="1410935488627" MODIFIED="1410935488627" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QMetaProperty.html"/>
</node>
<node TEXT="geometry?" ID="ID_458763265" CREATED="1410935788433" MODIFIED="1410935790539">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QLine.html" ID="ID_416367886" CREATED="1410935488622" MODIFIED="1410935488622" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QLine.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QLocale.html" ID="ID_917811776" CREATED="1410935488623" MODIFIED="1410935488623" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QLocale.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QMargins.html" ID="ID_648489875" CREATED="1410935488623" MODIFIED="1410935488623" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QMargins.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QPoint.html" ID="ID_1723056020" CREATED="1410935488633" MODIFIED="1410935488633" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QPoint.html"/>
</node>
<node TEXT="process" LOCALIZED_STYLE_REF="styles.topic" ID="ID_253354530" CREATED="1410935840307" MODIFIED="1410938177613">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QThread.html" ID="ID_1759863029" CREATED="1410935488645" MODIFIED="1410935488645" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QThread.html"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QtConcurrent.html" ID="ID_164948524" CREATED="1410935488649" MODIFIED="1410935488649" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QtConcurrent.html"/>
</node>
</node>
<node TEXT="signals" ID="ID_539412145" CREATED="1410937917050" MODIFIED="1410937917989">
<node TEXT="signal mapper" ID="ID_1494784174" CREATED="1410937899024" MODIFIED="1410937902023">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QSignalMapper.html" ID="ID_1312307769" CREATED="1410935488643" MODIFIED="1410935488643" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QSignalMapper.html"/>
<node TEXT="collects a set of parameterless signals, and re-emits them with integer, string or widget parameters corresponding to the object that sent the signal." ID="ID_1752837193" CREATED="1410937896909" MODIFIED="1410937898287"/>
</node>
<node TEXT="transition" ID="ID_975878228" CREATED="1410938045098" MODIFIED="1410938046261">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QSignalTransition.html" ID="ID_1601523620" CREATED="1410935488644" MODIFIED="1410935488644" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QSignalTransition.html"/>
<node TEXT="not typically instantiated by the user;&#xa;instead, created by the state machine framework,&#xa;  via QState.addTransition()" ID="ID_67713427" CREATED="1410938047450" MODIFIED="1410938089878"/>
<node TEXT="can be usefully subclassed, supposedly" ID="ID_638163306" CREATED="1410938140119" MODIFIED="1410938148567">
<node TEXT="C++ example used; I didn&apos;t follow" ID="ID_1207496308" CREATED="1410938148868" MODIFIED="1410938163200"/>
</node>
</node>
</node>
<node TEXT="process environment" ID="ID_1313631377" CREATED="1410937442182" MODIFIED="1410937548709">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QProcessEnvironment.html" ID="ID_515864151" CREATED="1410935488635" MODIFIED="1410935488635" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QProcessEnvironment.html"/>
<node TEXT="a dictionary, a set of &quot;environment variables&quot; and their values" ID="ID_1088834882" CREATED="1410937549570" MODIFIED="1410937586469"/>
</node>
<node TEXT="processes" ID="ID_44152499" CREATED="1410937373762" MODIFIED="1410937382013">
<node TEXT="external, where threads is internal" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_911741531" CREATED="1410937382922" MODIFIED="1410937398133"/>
<node TEXT="call other applications" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_336164283" CREATED="1410937357941" MODIFIED="1410937370830">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QProcess.html" ID="ID_1711210478" CREATED="1410935488634" MODIFIED="1410935488634" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QProcess.html"/>
<node TEXT="can include command-line arguments, given as Python strings" ID="ID_123985388" CREATED="1410937415849" MODIFIED="1410937432208"/>
<node TEXT="??? -- allows reading from and writing to that process" ID="ID_746757876" CREATED="1410937473817" MODIFIED="1410937484134"/>
</node>
</node>
<node TEXT="threads" ID="ID_1308707741" CREATED="1410936897860" MODIFIED="1410937379962">
<font BOLD="false"/>
<node TEXT="internal, where processes is external" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_276843604" CREATED="1410937390345" MODIFIED="1410937398131">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_911741531" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="mutex" ID="ID_1655762404" CREATED="1410936682704" MODIFIED="1410936683652">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QMutex.html" ID="ID_647006503" CREATED="1410935488628" MODIFIED="1410935488628" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QMutex.html"/>
<node TEXT="&quot;provides access serialization between threads.&quot;" ID="ID_1423634589" CREATED="1410936685624" MODIFIED="1410936687988"/>
<node TEXT="&quot;protect an object, data structure or section of code so that only one thread can access it at a time &quot;" ID="ID_1906697965" CREATED="1410936704006" MODIFIED="1410936705170"/>
<node TEXT="usually best to use a mutex with a PySide.QtCore.QMutexLocker" ID="ID_575482404" CREATED="1410936720101" MODIFIED="1410936721097"/>
<node TEXT="Can ensure neither method starts in the middle of the other." LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1975284813" CREATED="1410936822330" MODIFIED="1410936845081">
<node TEXT="example" ID="ID_39147502" CREATED="1410936795333" MODIFIED="1410936796384"/>
<node TEXT="mutex = QMutex()&#xa;number = 6&#xa;&#xa;def method1():&#xa;    mutex.lock()&#xa;    number *= 5&#xa;    number /= 4&#xa;    mutex.unlock()&#xa;&#xa;def method2():&#xa;    mutex.lock()&#xa;    number *= 3&#xa;    number /= 2&#xa;    mutex.unlock()" ID="ID_1767758734" CREATED="1410936796629" MODIFIED="1410936797307"/>
</node>
</node>
<node TEXT="wait condition" ID="ID_1930322079" CREATED="1410936518360" MODIFIED="1410936520100">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QWaitCondition.html" LOCALIZED_STYLE_REF="default" ID="ID_230634083" CREATED="1410935488648" MODIFIED="1410935919230" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QWaitCondition.html"/>
<node TEXT="Provides a condition variable for synchronizing threads." ID="ID_939386987" CREATED="1410936514675" MODIFIED="1410936516685"/>
<node TEXT="Allows a thread to tell other threads that some sort of condition has been met." ID="ID_906922473" CREATED="1410936548486" MODIFIED="1410936552377"/>
</node>
<node LOCALIZED_STYLE_REF="styles.topic" ID="ID_942818010" CREATED="1410937054958" MODIFIED="1410937057584"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      gibberish to me
    </p>
  </body>
</html>
</richcontent>
<node TEXT="runnable" ID="ID_108869056" CREATED="1410937039857" MODIFIED="1410937054492">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QRunnable.html" ID="ID_1539140447" CREATED="1410935488640" MODIFIED="1410935488640" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QRunnable.html"/>
</node>
</node>
</node>
<node TEXT="i/o" ID="ID_1080971442" CREATED="1410937209829" MODIFIED="1410937210866">
<node TEXT="resource" ID="ID_916301067" CREATED="1410937204343" MODIFIED="1410937205905">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QResource.html" ID="ID_1628674189" CREATED="1410935488638" MODIFIED="1410935488638" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QResource.html"/>
<node TEXT="provides an interface for reading directly from resources." ID="ID_133274533" CREATED="1410937202711" MODIFIED="1410937203257"/>
</node>
<node TEXT="folder iterator" ID="ID_978584977" CREATED="1410937258749" MODIFIED="1410937277656">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QDirIterator.html" ID="ID_90888963" CREATED="1410937262626" MODIFIED="1410937262626" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QDirIterator.html"/>
</node>
<node TEXT="locks" ID="ID_1119089089" CREATED="1410935920093" MODIFIED="1410937312971">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QReadLocker.html" ID="ID_1910374055" CREATED="1410935488637" MODIFIED="1410935488637" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QReadLocker.html"/>
</node>
</node>
<node TEXT="child event" ID="ID_1686268408" CREATED="1410935619433" MODIFIED="1410935620589">
<node TEXT="ref" ID="ID_1501078062" CREATED="1410935624513" MODIFIED="1410935624925">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QChildEvent.html" ID="ID_824734420" CREATED="1410935488611" MODIFIED="1410935488611" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QChildEvent.html"/>
</node>
<node TEXT="sent to a parent (I think) when it gains a child" ID="ID_618016974" CREATED="1410935627848" MODIFIED="1410935657271"/>
</node>
<node TEXT="models" ID="ID_281765521" CREATED="1410938253555" MODIFIED="1410938254574">
<node TEXT="abstract item model" ID="ID_708494432" CREATED="1410936051073" MODIFIED="1410936054396">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QAbstractItemModel.html" ID="ID_1812984421" CREATED="1410935488609" MODIFIED="1410935488609" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QAbstractItemModel.html"/>
<node TEXT="subclass to make a model in a model-view architecture" ID="ID_835368247" CREATED="1410936018556" MODIFIED="1410936027862"/>
</node>
<node TEXT="persistent model index" ID="ID_639950867" CREATED="1410938237796" MODIFIED="1410938241183">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QPersistentModelIndex.html" ID="ID_562111070" CREATED="1410935488632" MODIFIED="1410935488632" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QPersistentModelIndex.html"/>
<node TEXT="an index into a model&apos;s data" ID="ID_182133649" CREATED="1410938242252" MODIFIED="1410938245758"/>
</node>
</node>
<node TEXT="unique identifier" ID="ID_1047164712" CREATED="1410937126213" MODIFIED="1410937130496">
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QUuid.html" ID="ID_583073908" CREATED="1410935488647" MODIFIED="1410935488647" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QUuid.html"/>
</node>
<node TEXT="empty documentation" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1871070063" CREATED="1410936911122" MODIFIED="1410936966294">
<node TEXT="could investigate elsewhere" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1568092720" CREATED="1410936970373" MODIFIED="1410936973825"/>
<node TEXT="http://pyside.github.io/docs/pyside/PySide/QtCore/QFactoryInterface.html" ID="ID_1119516059" CREATED="1410935488617" MODIFIED="1410935488617" LINK="http://pyside.github.io/docs/pyside/PySide/QtCore/QFactoryInterface.html"/>
</node>
</node>
</node>
<node TEXT="https://wiki.python.org/moin/PyQt" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_713454213" CREATED="1407699055844" MODIFIED="1410845969221" LINK="https://wiki.python.org/moin/PyQt"/>
<node TEXT="PySide and/vs PyQt" LOCALIZED_STYLE_REF="default" ID="ID_354556690" CREATED="1410896010952" MODIFIED="1410896589897">
<node TEXT="http://qt-project.org/wiki/Differences_Between_PySide_and_PyQt" ID="ID_201731283" CREATED="1410896024316" MODIFIED="1410896024316" LINK="http://qt-project.org/wiki/Differences_Between_PySide_and_PyQt"/>
<node TEXT="describes differences" ID="ID_1330729710" CREATED="1410896025390" MODIFIED="1410896029921"/>
<node TEXT="includes a section &quot;Supporting Both APIs&quot;" ID="ID_440762329" CREATED="1410896042429" MODIFIED="1410896045512"/>
<node TEXT="includes a section &quot;Converting PyQt4 code to PySide&quot;" ID="ID_163727504" CREATED="1410896034413" MODIFIED="1410896037426"/>
</node>
<node TEXT="a tutorial" ID="ID_1327641804" CREATED="1407703040202" MODIFIED="1407703041487">
<node TEXT="http://zetcode.com/gui/pyqt4/" ID="ID_488319734" CREATED="1407703047989" MODIFIED="1407703047989" LINK="http://zetcode.com/gui/pyqt4/"/>
<node TEXT="modules" ID="ID_1797978171" CREATED="1407703144026" MODIFIED="1407703145116">
<node TEXT="QtCore" ID="ID_660982270" CREATED="1407703145403" MODIFIED="1407703145403"/>
<node TEXT="QtGui" ID="ID_1330198363" CREATED="1407703145403" MODIFIED="1407703145403"/>
<node TEXT="QtNetwork" ID="ID_1958209032" CREATED="1407703145403" MODIFIED="1407703145403"/>
<node TEXT="QtXml" ID="ID_1514021657" CREATED="1407703145403" MODIFIED="1407703145403"/>
<node TEXT="QtSvg" ID="ID_312305674" CREATED="1407703145404" MODIFIED="1407703145404"/>
<node TEXT="QtOpenGL" ID="ID_334694102" CREATED="1407703145404" MODIFIED="1407703145404"/>
<node TEXT="QtSql" ID="ID_1046293715" CREATED="1407703145404" MODIFIED="1407703145404"/>
</node>
</node>
</node>
<node TEXT="PyQt" LOCALIZED_STYLE_REF="styles.topic" ID="ID_215470135" CREATED="1410896532314" MODIFIED="1410896545508">
<node TEXT="must run it from MacPorts/IDLE" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1216336113" CREATED="1407700210109" MODIFIED="1410896564074">
<node TEXT="which crashes a lot" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1336911756" CREATED="1410896555747" MODIFIED="1410896559118"/>
<node TEXT="Applications/MacPorts/Python 3.4/IDLE" ID="ID_255176606" CREATED="1407700222852" MODIFIED="1407700248753"/>
</node>
<node TEXT="import PyQt4" LOCALIZED_STYLE_REF="default" ID="ID_968124880" CREATED="1410815696764" MODIFIED="1410845979164"/>
</node>
<node TEXT="u" ID="ID_1049093571" CREATED="1413791522049" MODIFIED="1413791579174">
<node TEXT="get coordinates" ID="ID_1630581639" CREATED="1411848480269" MODIFIED="1413791525492">
<node TEXT="http://qt-project.org/forums/viewthread/29728" ID="ID_711221387" CREATED="1411848484883" MODIFIED="1411848484883" LINK="http://qt-project.org/forums/viewthread/29728"/>
<node TEXT="point" ID="ID_167013229" CREATED="1411848684049" MODIFIED="1411848684948">
<node TEXT="http://srinikom.github.io/pyside-docs/PySide/QtCore/QPoint.html" ID="ID_182573458" CREATED="1411848682376" MODIFIED="1411848682376" LINK="http://srinikom.github.io/pyside-docs/PySide/QtCore/QPoint.html"/>
<node TEXT="x and y" ID="ID_146609436" CREATED="1411848688609" MODIFIED="1411848689716">
<node TEXT="http://srinikom.github.io/pyside-docs/PySide/QtCore/QPoint.html#PySide.QtCore.PySide.QtCore.QPoint.x" ID="ID_1328378260" CREATED="1411848641467" MODIFIED="1411848641467" LINK="http://srinikom.github.io/pyside-docs/PySide/QtCore/QPoint.html#PySide.QtCore.PySide.QtCore.QPoint.x"/>
<node TEXT="http://srinikom.github.io/pyside-docs/PySide/QtCore/QPoint.html#PySide.QtCore.PySide.QtCore.QPoint.y" ID="ID_709227324" CREATED="1411848650890" MODIFIED="1411848650890" LINK="http://srinikom.github.io/pyside-docs/PySide/QtCore/QPoint.html#PySide.QtCore.PySide.QtCore.QPoint.y"/>
</node>
</node>
<node TEXT="geometry" ID="ID_1605975980" CREATED="1411848773888" MODIFIED="1411848775780">
<node TEXT="http://srinikom.github.io/pyside-docs/PySide/QtGui/QWidget.html#PySide.QtGui.PySide.QtGui.QWidget.geometry" ID="ID_1118460026" CREATED="1411848776046" MODIFIED="1411848776046" LINK="http://srinikom.github.io/pyside-docs/PySide/QtGui/QWidget.html#PySide.QtGui.PySide.QtGui.QWidget.geometry"/>
</node>
<node TEXT="a graph-drawing program" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_573451589" CREATED="1411848847930" MODIFIED="1411848942227">
<node TEXT="C++ tutorial" ID="ID_536001111" CREATED="1411849093436" MODIFIED="1411849097199">
<node TEXT="http://qt-project.org/doc/qt-4.8/graphicsview-elasticnodes.html" ID="ID_1960355273" CREATED="1411848933352" MODIFIED="1411848933352" LINK="http://qt-project.org/doc/qt-4.8/graphicsview-elasticnodes.html"/>
</node>
<node TEXT="Python code" ID="ID_685214017" CREATED="1411849098124" MODIFIED="1411849099751">
<node TEXT="a little broken" ID="ID_291118792" CREATED="1411849232295" MODIFIED="1411849237178"/>
<node TEXT="http://ftp.ics.uci.edu/pub/centos0/ics-custom-build/BUILD/PyQt-x11-gpl-4.7.2/examples/graphicsview/elasticnodes.py" ID="ID_556930788" CREATED="1411849092801" MODIFIED="1411849092801" LINK="http://ftp.ics.uci.edu/pub/centos0/ics-custom-build/BUILD/PyQt-x11-gpl-4.7.2/examples/graphicsview/elasticnodes.py"/>
</node>
</node>
</node>
</node>
</node>
</node>
<node TEXT="testing" ID="ID_414266095" CREATED="1409778742667" MODIFIED="1409778789374">
<font BOLD="true"/>
<node TEXT="logging method calls" ID="ID_1312277224" CREATED="1409270753582" MODIFIED="1409270757152">
<node TEXT="http://stackoverflow.com/questions/5103735/better-way-to-log-method-calls-in-python" ID="ID_1208241572" CREATED="1409270749051" MODIFIED="1409270749051" LINK="http://stackoverflow.com/questions/5103735/better-way-to-log-method-calls-in-python"/>
<node TEXT="http://stackoverflow.com/questions/3467526/attaching-a-decorator-to-all-functions-within-a-class" LOCALIZED_STYLE_REF="default" ID="ID_1721504083" CREATED="1409270763429" MODIFIED="1410241162463" LINK="http://stackoverflow.com/questions/3467526/attaching-a-decorator-to-all-functions-within-a-class"/>
</node>
<node TEXT="mock: dummy objects?" ID="ID_798665074" CREATED="1408907913979" MODIFIED="1408907984946">
<node TEXT="https://docs.python.org/3/library/unittest.mock.html" ID="ID_805306069" CREATED="1408907925030" MODIFIED="1408907925030" LINK="https://docs.python.org/3/library/unittest.mock.html"/>
</node>
<node TEXT="regression: &quot;try to break it&quot;" ID="ID_433652930" CREATED="1408907939729" MODIFIED="1408907991263">
<node TEXT="https://docs.python.org/3/library/test.html" ID="ID_1821122906" CREATED="1408907941547" MODIFIED="1408907941547" LINK="https://docs.python.org/3/library/test.html"/>
<node TEXT="https://docs.python.org/3/library/test.html#module-test.support" ID="ID_50147109" CREATED="1408908016588" MODIFIED="1408908016588" LINK="https://docs.python.org/3/library/test.html#module-test.support"/>
</node>
<node TEXT="assert: shorthand for test and exception, + __debug__" ID="ID_1627777729" CREATED="1408906977160" MODIFIED="1408917050567">
<node TEXT="not novel enough to justify the language expense; I&apos;ll never use those optimizations, so I should just write it myself" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_27941709" CREATED="1408917098216" MODIFIED="1408917123142"/>
<node TEXT="https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement" ID="ID_605692543" CREATED="1408917014581" MODIFIED="1408917014581" LINK="https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement"/>
<node TEXT="if __debug__:&#xa;   if not expression: raise AssertionError" ID="ID_450722701" CREATED="1408917006008" MODIFIED="1408917009444"/>
<node TEXT="__debug__ is in general True, but off if one asks for certain optimizations" ID="ID_377554869" CREATED="1408917051684" MODIFIED="1408917070685"/>
</node>
<node TEXT="PyUnit" ID="ID_1708285161" CREATED="1409264779070" MODIFIED="1433283298568">
<font BOLD="true"/>
<node TEXT="https://docs.python.org/2/library/unittest.html" ID="ID_1389682032" CREATED="1409264776537" MODIFIED="1409264776537" LINK="https://docs.python.org/2/library/unittest.html"/>
<node TEXT="import unittest" ID="ID_1799245609" CREATED="1409962177161" MODIFIED="1409962179316"/>
<node TEXT="3 ways to assert" ID="ID_1614378918" CREATED="1409264929024" MODIFIED="1409264933827">
<node TEXT="assertTrue" ID="ID_909714146" CREATED="1409264934336" MODIFIED="1409264936019"/>
<node TEXT="assertEqual" ID="ID_382842254" CREATED="1409264936224" MODIFIED="1409264940130"/>
<node TEXT="assertRaises( [exception type] )" ID="ID_1433822169" CREATED="1409264940783" MODIFIED="1409264954249"/>
</node>
<node ID="ID_1508527305" CREATED="1409264989477" MODIFIED="1409264989477"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      unittest.TestCase
    </p>
  </body>
</html>
</richcontent>
<node TEXT="a suite of tests should inherit from it" ID="ID_1195744613" CREATED="1409264967461" MODIFIED="1409264992750"/>
<node TEXT="if present, setUp is called before each test, and tearDown after" ID="ID_725254582" CREATED="1409264995890" MODIFIED="1409265019863"/>
<node TEXT="tests should start with &quot;test_&quot; to let it know they are tests" ID="ID_481931216" CREATED="1409265002450" MODIFIED="1409265010940"/>
</node>
<node TEXT="program layout" ID="ID_915187534" CREATED="1409265037791" MODIFIED="1409265600322">
<node TEXT="import unittest" ID="ID_36742609" CREATED="1409265057533" MODIFIED="1409265057816"/>
<node TEXT="(import more things)" ID="ID_469161702" CREATED="1409265059741" MODIFIED="1409265066127"/>
<node TEXT="class TestMyThing(unittest.TestCase):&#xa;  ..." ID="ID_953255923" CREATED="1409265066324" MODIFIED="1409265083021"/>
<node TEXT="then to run it" ID="ID_5294115" CREATED="1409265140029" MODIFIED="1409265142736">
<node TEXT="alternatives" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_279013271" CREATED="1409265144893" MODIFIED="1409265147031"/>
<node TEXT="if __name__ == &apos;__main__&apos;:&#xa;    unittest.main()" ID="ID_715668021" CREATED="1409265090274" MODIFIED="1409265091014">
<node TEXT="terse" ID="ID_1086238955" CREATED="1409265170987" MODIFIED="1409265172182"/>
</node>
<node TEXT="suite = unittest.TestLoader().loadTestsFromTestCase(TestSequenceFunctions)&#xa;unittest.TextTestRunner(verbosity=2).run(suite)" ID="ID_1840193745" CREATED="1409265137005" MODIFIED="1409265166582">
<node TEXT="more verbose" ID="ID_546343176" CREATED="1409265175595" MODIFIED="1409265177477"/>
</node>
</node>
</node>
<node TEXT="setup/teardown" ID="ID_940780844" CREATED="1409265519178" MODIFIED="1409265595699">
<node TEXT="    def setUp(self):&#xa;        self.widget = Widget(&apos;The widget&apos;)&#xa;&#xa;    def tearDown(self):&#xa;        self.widget.dispose()&#xa;        self.widget = None" ID="ID_889651205" CREATED="1409265527234" MODIFIED="1409265527718"/>
</node>
<node TEXT="collecting tests into a suite" ID="ID_289089390" CREATED="1409265576446" MODIFIED="1409265580198">
<node TEXT="alternatives" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1638017395" CREATED="1409265590596" MODIFIED="1409265592518"/>
<node TEXT="def suite():&#xa;    suite = unittest.TestSuite()&#xa;    suite.addTest(WidgetTestCase(&apos;test_default_size&apos;))&#xa;    suite.addTest(WidgetTestCase(&apos;test_resize&apos;))&#xa;    return suite" ID="ID_1576234303" CREATED="1409265580477" MODIFIED="1409265588403"/>
<node TEXT="def suite():&#xa;    tests = [&apos;test_default_size&apos;, &apos;test_resize&apos;]&#xa;&#xa;    return unittest.TestSuite(map(WidgetTestCase, tests))" ID="ID_553200729" CREATED="1409265589180" MODIFIED="1409265589520"/>
</node>
</node>
</node>
<node TEXT="debugging and profiling" LOCALIZED_STYLE_REF="default" ID="ID_156692737" CREATED="1408908029249" MODIFIED="1433283002871">
<node TEXT="-1 reviewed" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1458445628" CREATED="1433284556785" MODIFIED="1433284559878"/>
<node TEXT="." ID="ID_622016318" CREATED="1433284374466" MODIFIED="1433284374981">
<node TEXT="&quot;list&quot; is ambiguous" ID="ID_6357812" CREATED="1433283819374" MODIFIED="1433283823384">
<node TEXT="in debugger, list (contents of file) overrides list (data type); use !" ID="ID_762658879" CREATED="1409000103236" MODIFIED="1412369766827"/>
</node>
<node TEXT="https://docs.python.org/3/library/debug.html" ID="ID_911979142" CREATED="1408908035146" MODIFIED="1408908035146" LINK="https://docs.python.org/3/library/debug.html"/>
<node TEXT="profile-hooks" ID="ID_1643660057" CREATED="1415855870160" MODIFIED="1415855873692">
<node TEXT="is a library" ID="ID_433421868" CREATED="1415855874241" MODIFIED="1415855875796"/>
<node TEXT="wrapper applied to function, gives profile information on it recursively, hence also everything it calls ..." ID="ID_955413495" CREATED="1415855877441" MODIFIED="1415855895588"/>
</node>
</node>
<node TEXT="the debugger" LOCALIZED_STYLE_REF="default" ID="ID_1691704141" CREATED="1406680894374" MODIFIED="1433284384986">
<font BOLD="true"/>
<node TEXT="class: pdb" ID="ID_1535048898" CREATED="1406681176498" MODIFIED="1406681182838"/>
<node TEXT="debugger: pdb.Pdb" ID="ID_1357346746" CREATED="1406681170842" MODIFIED="1406681180924"/>
<node TEXT="don&apos;t do it from within interpreter" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_182430527" CREATED="1406740203336" MODIFIED="1408587935913">
<node TEXT="I could not get open code to work that way." ID="ID_1819970273" CREATED="1406740230573" MODIFIED="1406740240225"/>
<node TEXT="but if I do what this tutorial says, starting it from the command line, it works" ID="ID_1896530659" CREATED="1406740240445" MODIFIED="1406740255672">
<node TEXT="http://sontek.net/blog/detail/debugging-python-with-pdb" ID="ID_1321521120" CREATED="1406740256049" MODIFIED="1406740256049" LINK="http://sontek.net/blog/detail/debugging-python-with-pdb"/>
</node>
</node>
<node TEXT="commands" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_407105329" CREATED="1406740586116" MODIFIED="1408587932177">
<node TEXT="locals()" ID="ID_336539585" CREATED="1406740460685" MODIFIED="1406740462057">
<node TEXT="prints dictionary of local variables" ID="ID_692577583" CREATED="1406740462261" MODIFIED="1406740473475"/>
</node>
<node TEXT="args" ID="ID_444693918" CREATED="1406740582820" MODIFIED="1406740583592">
<node TEXT="prints the values of variables in a line" ID="ID_1089266497" CREATED="1406740590931" MODIFIED="1406740607486"/>
</node>
<node TEXT="w(here): print stack trace" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1579667382" CREATED="1406756308953" MODIFIED="1406756333808">
<node TEXT="most recent frame at bottom" ID="ID_127183122" CREATED="1406756325736" MODIFIED="1406756329827"/>
</node>
<node TEXT="up, down" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1136297777" CREATED="1406756370783" MODIFIED="1406757134798">
<node TEXT="what it does" ID="ID_1139216256" CREATED="1406757141221" MODIFIED="1406757143265">
<node TEXT="move up (older) or down (newer) a frame in the stack trace" ID="ID_870785591" CREATED="1406756375694" MODIFIED="1406756397753"/>
<node TEXT="default is 1 frame, but a numerical argument can be supplied" ID="ID_1282163961" CREATED="1406756401118" MODIFIED="1406756420834"/>
</node>
<node TEXT="inspection during this: safe" ID="ID_423269860" CREATED="1406757147573" MODIFIED="1406757214436">
<node TEXT="e.g. running locals() after changing frames is informative and clearly does no harm" ID="ID_1635878785" CREATED="1406757164444" MODIFIED="1406757174966"/>
</node>
<node TEXT="stepping during this: safe" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1438050770" CREATED="1406758570799" MODIFIED="1406758574720">
<node TEXT="if I have descended too far, I don&apos;t need to step through everything; I can press &quot;u&quot; and then &quot;n&quot; to skip everything below" ID="ID_647391817" CREATED="1406758575143" MODIFIED="1406758597635"/>
</node>
<node TEXT="execution during this: dangerous?" ID="ID_548452663" CREATED="1406757163724" MODIFIED="1406757218686">
<node TEXT="running code from any frame but the newest seems like it could break things, but I have not actually tried, nor do I recall reading that" ID="ID_850540653" CREATED="1406757176243" MODIFIED="1406757204340"/>
</node>
</node>
<node TEXT="tbreak" ID="ID_1531574816" CREATED="1406757342263" MODIFIED="1406757344682">
<node TEXT="temporary breakpoint" ID="ID_1227725886" CREATED="1406757351302" MODIFIED="1406757353786"/>
<node TEXT="disappears after first encounter" ID="ID_217475637" CREATED="1406757346175" MODIFIED="1406757365001"/>
</node>
</node>
<node TEXT="for minimal key-typing" ID="ID_1307303759" CREATED="1407175764423" MODIFIED="1433284906432">
<node TEXT="for debugging, just break the code into chunks, so I can step through the chunk that precedes the point of interest with a single &quot;n&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1114330257" CREATED="1406687753433" MODIFIED="1406687786397"/>
</node>
</node>
</node>
<node TEXT="sys" ID="ID_1801117330" CREATED="1433284786398" MODIFIED="1433284787120">
<node TEXT="conditioning on version, method availability" ID="ID_1622696128" CREATED="1405708881952" MODIFIED="1407438152876">
<node TEXT="if Python version is greater than 2.4, it includes the sorted() function" ID="ID_671820949" CREATED="1405708922541" MODIFIED="1405708948542"/>
<node TEXT="import sys&#xa;&#xa;if sys.version_info[:2] &lt; (2, 4):&#xa;  def sorted(items):&#xa;    items = list(items)&#xa;    items.sort()&#xa;    return items" ID="ID_1728022180" CREATED="1405708886727" MODIFIED="1405709536622"/>
</node>
</node>
<node TEXT="os  # esp. file tree" LOCALIZED_STYLE_REF="default" ID="ID_1055625141" CREATED="1407703766171" MODIFIED="1433285126760">
<node TEXT="tag folder, tag directory" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_824862850" CREATED="1410846529291" MODIFIED="1410846534480"/>
<node TEXT="https://docs.python.org/2/library/os.html" ID="ID_1070780808" CREATED="1407704096287" MODIFIED="1407704096287" LINK="https://docs.python.org/2/library/os.html"/>
<node TEXT="import os" ID="ID_1048644305" CREATED="1407703772387" MODIFIED="1407703774822"/>
<node TEXT="os.getcwd" ID="ID_206858124" CREATED="1407703776811" MODIFIED="1407703780950"/>
<node TEXT="os.listdir" ID="ID_764019801" CREATED="1407703847228" MODIFIED="1407703849664"/>
<node TEXT="os.chdir" ID="ID_664238445" CREATED="1407703775074" MODIFIED="1407703776615"/>
</node>
<node TEXT="infreq or far" LOCALIZED_STYLE_REF="styles.topic" ID="ID_165235258" CREATED="1433283526692" MODIFIED="1433283537976">
<node TEXT="music" ID="ID_1661512783" CREATED="1433281256808" MODIFIED="1433283681318">
<font BOLD="true"/>
<node TEXT="pymonome" LOCALIZED_STYLE_REF="default" ID="ID_1868719211" CREATED="1408420561007" MODIFIED="1410894745679">
<node TEXT="perhaps belong elsewhere" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_220072143" CREATED="1408747958228" MODIFIED="1408747963660"/>
<node TEXT="ref&apos;s" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1359015557" CREATED="1408423501198" MODIFIED="1408426804464">
<node TEXT="source" ID="ID_216919724" CREATED="1408424984869" MODIFIED="1408424985736">
<node TEXT="https://pypi.python.org/pypi/pymonome" LOCALIZED_STYLE_REF="default" ID="ID_1775105387" CREATED="1408420694876" MODIFIED="1408424979827" LINK="https://pypi.python.org/pypi/pymonome"/>
</node>
<node TEXT="resources, inc. help" ID="ID_1204791426" CREATED="1408424989496" MODIFIED="1408424992056">
<node TEXT="links out" ID="ID_1171102416" CREATED="1408425045080" MODIFIED="1408425048030">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1435070606" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="supposedly, monome-test.py exists" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1363684900" CREATED="1408423990890" MODIFIED="1408426829374">
<node TEXT="links in" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_483977692" CREATED="1408424019550" MODIFIED="1408424024400"/>
</node>
</node>
<node TEXT="one of my versions of the source is edited" ID="ID_1607483070" CREATED="1408425280666" MODIFIED="1408425285069">
<node TEXT="currently in Downloads" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_535173278" CREATED="1408425286969" MODIFIED="1408425290179"/>
<node TEXT="# Jeff Brown edited this, August 2014" ID="ID_1762408702" CREATED="1408425285572" MODIFIED="1408425285572"/>
</node>
<node TEXT="in both pyhon 2 and 3" ID="ID_359779957" CREATED="1412128570737" MODIFIED="1412129796721">
<node TEXT="I think the version in python3 is 0.2.3, which uses asyncio instead of something else" ID="ID_835153693" CREATED="1412129799746" MODIFIED="1412129814333"/>
</node>
<node TEXT="using it in python2" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1353277437" CREATED="1408426791736" MODIFIED="1412130447721">
<node TEXT="might have to, b/c simplecoremidi is stuck there" ID="ID_746996922" CREATED="1412130449168" MODIFIED="1412130456274"/>
<node TEXT="input code" ID="ID_432389018" CREATED="1412128567905" MODIFIED="1412128569173">
<node TEXT="import monome as m" ID="ID_1959337652" CREATED="1408426794097" MODIFIED="1412128549280"/>
<node TEXT="m.Monome( m.list_monomes().values()[0] )" ID="ID_596250741" CREATED="1408426794097" MODIFIED="1412128514917"/>
</node>
<node TEXT="shell transcript" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_240476125" CREATED="1412128559811" MODIFIED="1412128565667">
<node TEXT="jbbs-mbp:~ dopethatwantscash$ pwd" ID="ID_1395820609" CREATED="1412128560956" MODIFIED="1412128560956"/>
<node TEXT="/Users/dopethatwantscash" ID="ID_426752296" CREATED="1412128560956" MODIFIED="1412128560956"/>
<node TEXT="jbbs-mbp:~ dopethatwantscash$ python" ID="ID_1103563133" CREATED="1412128560956" MODIFIED="1412128560956"/>
<node TEXT="Python 2.7.5 (default, Mar  9 2014, 22:15:05)" ID="ID_110858916" CREATED="1412128560957" MODIFIED="1412128560957"/>
<node TEXT="[GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)] on darwin" ID="ID_869522689" CREATED="1412128560957" MODIFIED="1412128560957"/>
<node TEXT="Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information." ID="ID_535436378" CREATED="1412128560957" MODIFIED="1412128560957"/>
<node TEXT="&gt;&gt;&gt; import monome as m" ID="ID_773499728" CREATED="1412128560958" MODIFIED="1412128560958"/>
<node TEXT="&gt;&gt;&gt; m.Monome( m.list_monomes().values()[0] )" ID="ID_1087650067" CREATED="1412128560958" MODIFIED="1412128560958"/>
<node TEXT="&lt;monome.Monome instance at 0x10edf58c0&gt;" ID="ID_274498994" CREATED="1412128560959" MODIFIED="1412128560959"/>
</node>
</node>
<node TEXT="in python3" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1080535008" CREATED="1412129864573" MODIFIED="1412129866533">
<node TEXT="build from these examples" ID="ID_349381638" CREATED="1412130459047" MODIFIED="1412130461786">
<node TEXT="/Users/dopethatwantscash/Mine/by project/computer/languages, coding apps/Python/music/pymonome/0.2.3/examples" ID="ID_1290534444" CREATED="1412130458256" MODIFIED="1412130458256"/>
</node>
</node>
<node TEXT="above: version 0.2.2" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1989799098" CREATED="1408420696770" MODIFIED="1408426809673"/>
<node TEXT="0.2.3" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1583472924" CREATED="1408420565823" MODIFIED="1408424936117">
<node TEXT="https://github.com/artfwo/pymonome" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1474283661" CREATED="1408420789394" MODIFIED="1408420798248" LINK="https://github.com/artfwo/pymonome"/>
<node TEXT="I need coremidi compatibility" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1130119419" CREATED="1408421127868" MODIFIED="1412128194123">
<node TEXT="and it is constrained to Python 2.7" ID="ID_1021763801" CREATED="1408424940400" MODIFIED="1408424952540"/>
</node>
<node TEXT="requires Python 3.4" ID="ID_886821965" CREATED="1408420579519" MODIFIED="1408420582721"/>
<node TEXT="trying ordinary Python3 first" ID="ID_1383903212" CREATED="1408420582916" MODIFIED="1408420600399">
<node ID="ID_283547144" CREATED="1408420596389" MODIFIED="1408420596389"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      could try MacPorts version too
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node TEXT="monome" LOCALIZED_STYLE_REF="default" ID="ID_697880480" CREATED="1408425028944" MODIFIED="1410894745889">
<node TEXT="perhaps belong elsewhere" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_532592827" CREATED="1408747958228" MODIFIED="1408747963660"/>
<node TEXT="links in" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1435070606" CREATED="1408425046216" MODIFIED="1408425053744"/>
<node TEXT="see also pymonome" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1889309655" CREATED="1408425032440" MODIFIED="1408425036162"/>
<node TEXT="resources, inc. help" ID="ID_1033548934" CREATED="1408424989496" MODIFIED="1408424992056">
<node TEXT="http://monome.org/docs/dev:python" ID="ID_1823402808" CREATED="1408423496463" MODIFIED="1408423496463" LINK="http://monome.org/docs/dev:python"/>
</node>
</node>
<node TEXT="OSC" ID="ID_292743771" CREATED="1412129470089" MODIFIED="1412129470900">
<node TEXT="python2: &quot;import OSC&quot;" ID="ID_73989358" CREATED="1412129471080" MODIFIED="1412129477683"/>
</node>
</node>
<node TEXT="parsing, interpreters" LOCALIZED_STYLE_REF="default" ID="ID_158037297" CREATED="1408908061708" MODIFIED="1433282995457">
<node TEXT="&quot;language&quot;, inc. &quot;code disassembly&quot; (analysis)" ID="ID_1784276944" CREATED="1408908144534" MODIFIED="1408908294689">
<font BOLD="true"/>
<node TEXT="https://docs.python.org/3/library/language.html" ID="ID_1753872754" CREATED="1408908137553" MODIFIED="1408908137553" LINK="https://docs.python.org/3/library/language.html"/>
</node>
<node TEXT="custom interp&apos;r" ID="ID_1588527120" CREATED="1408908138214" MODIFIED="1408908140657">
<node TEXT="https://docs.python.org/3/library/custominterp.html" ID="ID_14594951" CREATED="1408908064487" MODIFIED="1408908064487" LINK="https://docs.python.org/3/library/custominterp.html"/>
</node>
</node>
<node TEXT="to make standalone apps from Python scripts" ID="ID_1196078178" CREATED="1398375350685" MODIFIED="1398375355402">
<node TEXT="https://pypi.python.org/pypi/py2app/" ID="ID_1804964128" CREATED="1398375355786" MODIFIED="1398375355786" LINK="https://pypi.python.org/pypi/py2app/"/>
</node>
<node TEXT="parallel" ID="ID_412062444" CREATED="1433283664162" MODIFIED="1433283666451">
<node TEXT="when sleep &gt; pass" ID="ID_1487815765" CREATED="1410854184447" MODIFIED="1410854187609">
<node TEXT="from rapid py qt book" ID="ID_1771247650" CREATED="1410854190373" MODIFIED="1410854195696"/>
<node TEXT="We could have simply put a pass statement inside the loop, but if we did that Python would loop as quickly as possible, gobbling up processor cycles for no good reason. The time.sleep() command tells Python to suspend processing for the specified number of seconds, 20 in this case. This gives other programs more opportunity to run" ID="ID_602106449" CREATED="1410854187957" MODIFIED="1410854188585"/>
</node>
</node>
<node TEXT="Unix" ID="ID_1250202366" CREATED="1408908319446" MODIFIED="1408908320569">
<node TEXT="https://docs.python.org/3/library/unix.html" ID="ID_243526536" CREATED="1408908322024" MODIFIED="1408908322024" LINK="https://docs.python.org/3/library/unix.html"/>
</node>
<node TEXT="garbage collector interface" LOCALIZED_STYLE_REF="default" ID="ID_1085636292" CREATED="1408908051982" MODIFIED="1433283230776">
<node TEXT="https://docs.python.org/3/library/gc.html" ID="ID_1529627287" CREATED="1408908057384" MODIFIED="1408908057384" LINK="https://docs.python.org/3/library/gc.html"/>
</node>
<node TEXT="refactoring" LOCALIZED_STYLE_REF="default" ID="ID_366843697" CREATED="1409277478999" MODIFIED="1433281408212">
<node TEXT="IDLE: not immediately Googleable" ID="ID_399217109" CREATED="1409277698484" MODIFIED="1409277704775"/>
<node TEXT="Rope" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1383033008" CREATED="1409277524924" MODIFIED="1409277526694">
<node TEXT="more up to date" ID="ID_746919755" CREATED="1409277521355" MODIFIED="1409277523839">
<node TEXT="https://github.com/python-rope/rope" LOCALIZED_STYLE_REF="default" ID="ID_1891337645" CREATED="1409277517455" MODIFIED="1409277520893" LINK="https://github.com/python-rope/rope"/>
</node>
<node TEXT="more words, friendly" ID="ID_639652491" CREATED="1409277529220" MODIFIED="1409277537526">
<node TEXT="http://rope.sourceforge.net/" LOCALIZED_STYLE_REF="default" ID="ID_1295515342" CREATED="1409277483259" MODIFIED="1409277520189" LINK="http://rope.sourceforge.net/"/>
</node>
</node>
<node TEXT="bicycle repair man" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1791234244" CREATED="1409277595493" MODIFIED="1409279322983">
<node TEXT="can itegrate with IDLE (and vi and emacs)" ID="ID_1860200598" CREATED="1409277602069" MODIFIED="1409279341049"/>
<node TEXT="http://bicyclerepair.sourceforge.net/" ID="ID_688323475" CREATED="1409277594865" MODIFIED="1409277594865" LINK="http://bicyclerepair.sourceforge.net/"/>
</node>
</node>
</node>
</node>
<node TEXT="IDEs" ID="ID_1596772209" CREATED="1433281307855" MODIFIED="1433282754510">
<node TEXT="PyCharm" LOCALIZED_STYLE_REF="default" ID="ID_507064324" CREATED="1412621303455" MODIFIED="1433281266787">
<node TEXT="link from app/PyCharm" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1863557375" CREATED="1412621294536" MODIFIED="1412621328011"/>
<node TEXT="why" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1281629541" CREATED="1411573457500" MODIFIED="1411573460069">
<node TEXT="editor with code completion, type checking" ID="ID_1160049253" CREATED="1411571212105" MODIFIED="1411571218485"/>
</node>
<node TEXT="code" ID="ID_1103417268" CREATED="1412464518806" MODIFIED="1412464519482">
<node TEXT="find declaration" ID="ID_1175928149" CREATED="1411573461108" MODIFIED="1412466990108">
<node ID="ID_739643352" CREATED="1412466990876" MODIFIED="1412466990876"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      from usage
    </p>
  </body>
</html>
</richcontent>
<node TEXT="alternatives" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1243209705" CREATED="1411573472061" MODIFIED="1412466993840"/>
<node TEXT="cmd-b" ID="ID_1357218213" CREATED="1412465626401" MODIFIED="1412465640455"/>
<node TEXT="cmd-click" ID="ID_568740059" CREATED="1412465640867" MODIFIED="1412465649286"/>
</node>
<node TEXT="by typing it" ID="ID_1895366047" CREATED="1412466964722" MODIFIED="1412467000914">
<node TEXT="cmd-opt-o" ID="ID_747040261" CREATED="1412466966634" MODIFIED="1412466968989"/>
</node>
</node>
<node TEXT="next/prev method: ctrl-up/down" ID="ID_1170188267" CREATED="1412467308624" MODIFIED="1412467317749"/>
<node TEXT="code completion" ID="ID_681808258" CREATED="1412468742993" MODIFIED="1412468805213">
<node TEXT="if automatic suggestion disabled, ctrl-space" ID="ID_879367751" CREATED="1412468805476" MODIFIED="1412468836318"/>
</node>
<node TEXT="refactor" ID="ID_1618353883" CREATED="1412473477316" MODIFIED="1412473478852">
<font BOLD="true"/>
<node TEXT="http://www.jetbrains.com/pycharm/webhelp/refactoring-source-code.html" ID="ID_1679741814" CREATED="1412473480022" MODIFIED="1412473480022" LINK="http://www.jetbrains.com/pycharm/webhelp/refactoring-source-code.html"/>
</node>
</node>
<node TEXT="search, replace" ID="ID_291613265" CREATED="1412463259556" MODIFIED="1412463263178">
<node TEXT="find: cmd-f" ID="ID_1838225109" CREATED="1412463260661" MODIFIED="1412463270967"/>
<node TEXT="replace: cmd-r" ID="ID_476252815" CREATED="1412463286307" MODIFIED="1412463289646"/>
<node TEXT="find next: cmd-g" ID="ID_1338642196" CREATED="1412463289994" MODIFIED="1412463294437"/>
<node TEXT="find prev: cmd-shift-g" ID="ID_1518432076" CREATED="1412463294650" MODIFIED="1412463299357"/>
</node>
<node TEXT="run, debug" LOCALIZED_STYLE_REF="default" ID="ID_9358168" CREATED="1412462842928" MODIFIED="1412582074761">
<node TEXT="run: ctrl-r" ID="ID_465623181" CREATED="1412462855311" MODIFIED="1412463501053">
<node TEXT="ctrl-opt-r (presents choices) if ctrl-r (runs default) not available" ID="ID_1551953211" CREATED="1412463501612" MODIFIED="1412463516803"/>
</node>
<node TEXT="stop: cmd-f2" ID="ID_453366371" CREATED="1412463456190" MODIFIED="1412463459958"/>
<node TEXT="the debugger is beautiful" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1930674348" CREATED="1412464452668" MODIFIED="1412464570836"/>
<node TEXT="debug: ctrl-d" ID="ID_1774714141" CREATED="1412463490960" MODIFIED="1412463493675"/>
<node TEXT="set breakpoint: click rightmost left gutter" ID="ID_1453444388" CREATED="1412464552753" MODIFIED="1412464590417"/>
<node TEXT="step" ID="ID_1493590654" CREATED="1412464772498" MODIFIED="1412465058246">
<font BOLD="true"/>
<node TEXT="show execution point: opt-F10" ID="ID_985397381" CREATED="1412464888547" MODIFIED="1412464899861"/>
<node TEXT="step into: F7" ID="ID_624708347" CREATED="1412464774923" MODIFIED="1412464781129"/>
<node TEXT="step to next: F8" ID="ID_1242102244" CREATED="1412464781234" MODIFIED="1412464787477"/>
<node TEXT="step out: Shift-F8" ID="ID_1740980401" CREATED="1412464922495" MODIFIED="1412464927930"/>
<node TEXT="run to cursor: opt-F9" ID="ID_385455421" CREATED="1412464973787" MODIFIED="1412464981960"/>
</node>
</node>
<node TEXT="text" ID="ID_1868821572" CREATED="1412462837880" MODIFIED="1412462838812">
<node TEXT="find last edit location: cmd-shift-backspace" ID="ID_1356208656" CREATED="1412465249056" MODIFIED="1412465302855"/>
<node TEXT="duplicate line" ID="ID_935360517" CREATED="1412389125292" MODIFIED="1412389128743">
<node TEXT="cmd-d" ID="ID_672364746" CREATED="1412389128941" MODIFIED="1412389133007"/>
</node>
<node TEXT="highlight to next word" ID="ID_695735182" CREATED="1412389240747" MODIFIED="1412389244734">
<node TEXT="opt-shift-arrow" ID="ID_969993558" CREATED="1412389247026" MODIFIED="1412389402215"/>
<node TEXT="not JEdit&apos;s" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1937285069" CREATED="1412389397020" MODIFIED="1412389424906">
<node ID="ID_54294371" CREATED="1412389402749" MODIFIED="1412389402749"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      cmd-shift-arrow
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="highlight to end of line" ID="ID_666075757" CREATED="1412389273971" MODIFIED="1412389276827">
<node TEXT="cmd-shift-arrow" ID="ID_1041162245" CREATED="1412389247026" MODIFIED="1412389280562"/>
</node>
<node TEXT="delete line" ID="ID_447417954" CREATED="1412389393036" MODIFIED="1412389406990">
<node TEXT="cmd-delete" ID="ID_1892514127" CREATED="1412389408354" MODIFIED="1412389410942"/>
<node TEXT="not JEdit&apos;s" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1800009356" CREATED="1412389411874" MODIFIED="1412389422188">
<node TEXT="cmd-d" ID="ID_1879433420" CREATED="1412389414618" MODIFIED="1412389418005"/>
</node>
</node>
</node>
<node TEXT="views" ID="ID_257081798" CREATED="1412463096055" MODIFIED="1412535467637">
<node TEXT="gray = unused" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_573811320" CREATED="1412389172928" MODIFIED="1412464486388"/>
<node TEXT="view library" ID="ID_1251066216" CREATED="1412621342060" MODIFIED="1412621343703">
<node TEXT="cmd-down, from import statement" ID="ID_255618695" CREATED="1412621343916" MODIFIED="1412621350431"/>
</node>
<node TEXT="folding" ID="ID_756578909" CREATED="1412462805516" MODIFIED="1412463133363">
<font BOLD="false"/>
<node TEXT="surround with (XML?) fold marks" ID="ID_132157165" CREATED="1412473123191" MODIFIED="1412473199627">
<node TEXT="is better than &quot;temporarily fold an arbitrary block&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1479671791" CREATED="1412473217462" MODIFIED="1412473247850"/>
<node TEXT="good for where I used to use &quot;if 1: # title&quot; blocks" ID="ID_416787175" CREATED="1412473268889" MODIFIED="1412473282924"/>
<node TEXT="cmd-opt-t, select it" ID="ID_2271680" CREATED="1412473147189" MODIFIED="1412473154984"/>
<node TEXT="works for a top-level if statement if it is surrounded by an empty line on either side" ID="ID_562597203" CREATED="1412473157956" MODIFIED="1412473189372"/>
</node>
<node TEXT="temporarily fold an arbitrary block" ID="ID_824200603" CREATED="1412401328302" MODIFIED="1412473225161">
<node TEXT="is worse than &quot;surround with (XML?) fold marks&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_26866119" CREATED="1412473238956" MODIFIED="1412473253332">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1479671791" STARTINCLINATION="52;0;" ENDINCLINATION="52;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="ctrl-." ID="ID_1227045352" CREATED="1412401332037" MODIFIED="1412401341631"/>
<node TEXT="fails under strange conditions" ID="ID_280667578" CREATED="1412401796114" MODIFIED="1412401962159">
<node TEXT="I tried to map, got nowhere in ten minutes; not worth it." ID="ID_421536146" CREATED="1412401804794" MODIFIED="1412401979989"/>
</node>
</node>
<node TEXT="mouse over fold to view" ID="ID_920150704" CREATED="1412402065442" MODIFIED="1412462821117">
<node TEXT="in a pop-up window" ID="ID_241321530" CREATED="1412462816215" MODIFIED="1412462823327"/>
<node TEXT="in same font size!" ID="ID_390847872" CREATED="1412402073186" MODIFIED="1412462819294"/>
</node>
</node>
<node TEXT="soft wrap" ID="ID_1798526261" CREATED="1412463100430" MODIFIED="1412463101986">
<node TEXT="right-click gutter, check it" ID="ID_1299870231" CREATED="1412463102278" MODIFIED="1412463108361"/>
</node>
<node TEXT="files window: cmd-1" ID="ID_366888212" CREATED="1412535485317" MODIFIED="1412535521101"/>
<node TEXT="structure window: cmd-7" ID="ID_1954503093" CREATED="1412535509443" MODIFIED="1412535524949"/>
<node TEXT="debug: cmd-5" ID="ID_1262909797" CREATED="1412465417066" MODIFIED="1412465428974"/>
</node>
<node TEXT="vcs" ID="ID_1371126768" CREATED="1411695664135" MODIFIED="1412388383971">
<node TEXT="the problem" ID="ID_1145280303" CREATED="1411695683725" MODIFIED="1411695685304">
<node TEXT="using SVN and loca repo fails" ID="ID_10547662" CREATED="1411695685508" MODIFIED="1411695691039"/>
</node>
<node TEXT="strategies" ID="ID_639570557" CREATED="1411695692731" MODIFIED="1411695693855">
<node TEXT="alternatives" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1362440542" CREATED="1411695700971" MODIFIED="1411695703981"/>
<node TEXT="port to Github" ID="ID_1132762158" CREATED="1411695712070" MODIFIED="1411695719201"/>
<node TEXT="put SVN repo online" ID="ID_175496720" CREATED="1411695676356" MODIFIED="1411695683191"/>
</node>
</node>
<node TEXT="professional version" ID="ID_1324795931" CREATED="1412473433247" MODIFIED="1412473446635">
<node TEXT="UML diagram for refactorings" ID="ID_1844676003" CREATED="1412473439744" MODIFIED="1412473452265"/>
</node>
</node>
<node TEXT="IDLE extensions" ID="ID_1284474996" CREATED="1408132999413" MODIFIED="1409708196023">
<node ID="ID_1194393996" CREATED="1408172897207" MODIFIED="1408172897207"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      e.g. command recall with up key
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="https://sourceforge.net/projects/idlex/?source=directory" ID="ID_1411829420" CREATED="1408132998449" MODIFIED="1408132998449" LINK="https://sourceforge.net/projects/idlex/?source=directory"/>
</node>
<node TEXT="python IDE for Mac" LOCALIZED_STYLE_REF="styles.topic" ID="Freemind_Link_1148976657" CREATED="1276282288608" MODIFIED="1433283585693">
<node TEXT="http://www.python.org/download/mac/" ID="Freemind_Link_509034197" CREATED="1276282286661" MODIFIED="1276282288348" LINK="http://www.python.org/download/mac/"/>
</node>
</node>
<node TEXT="u" ID="ID_1343749375" CREATED="1436325148324" MODIFIED="1436325149427">
<font BOLD="true"/>
<node TEXT="2015 07 07" ID="ID_1291842062" CREATED="1436325152636" MODIFIED="1436325178509"/>
<node TEXT="native list copy" ID="ID_1805800190" CREATED="1436325136364" MODIFIED="1436325139618">
<node TEXT="&gt;&gt;&gt; x = [1,2]" ID="ID_863054596" CREATED="1436325140058" MODIFIED="1436325140058"/>
<node TEXT="&gt;&gt;&gt; x[1] = &quot;a&quot;" ID="ID_843933662" CREATED="1436325140058" MODIFIED="1436325140058"/>
<node TEXT="&gt;&gt;&gt; x" ID="ID_1771684529" CREATED="1436325140059" MODIFIED="1436325140059"/>
<node TEXT="[1, &apos;a&apos;]" ID="ID_942172055" CREATED="1436325140060" MODIFIED="1436325140060"/>
<node TEXT="&gt;&gt;&gt; y = x[:]" ID="ID_1214729910" CREATED="1436325140061" MODIFIED="1436325140061"/>
<node TEXT="&gt;&gt;&gt; y[1] = &quot;b&quot;" ID="ID_969703055" CREATED="1436325140062" MODIFIED="1436325140062"/>
<node TEXT="&gt;&gt;&gt; x" ID="ID_1977028644" CREATED="1436325140063" MODIFIED="1436325140063"/>
<node TEXT="[1, &apos;a&apos;]" ID="ID_1707326282" CREATED="1436325140064" MODIFIED="1436325140064"/>
<node TEXT="&gt;&gt;&gt; y" ID="ID_54099963" CREATED="1436325140065" MODIFIED="1436325140065"/>
<node TEXT="[1, &apos;b&apos;]" ID="ID_124257229" CREATED="1436325140066" MODIFIED="1436325140066"/>
<node TEXT="&gt;&gt;&gt;" ID="ID_266842836" CREATED="1436325140067" MODIFIED="1436325140067"/>
</node>
</node>
<node TEXT="&lt;- (big) Python" ID="ID_860994309" CREATED="1408250409537" MODIFIED="1433284155593">
<font BOLD="true"/>
<node TEXT="brief topics" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1339322293" CREATED="1398454548895" MODIFIED="1398454578417">
<node TEXT="my notes, at least, are brief" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_564941646" CREATED="1398455999417" MODIFIED="1398456017283">
<node TEXT="they might be shallow" ID="ID_1905745980" CREATED="1398456014064" MODIFIED="1398456018237"/>
</node>
<node TEXT="built-in functions, operators" ID="ID_1784762543" CREATED="1374328935015" MODIFIED="1398454489387">
<node TEXT="modulo : &quot;a % b&quot;" ID="ID_1017738221" CREATED="1374299994764" MODIFIED="1374328966268">
<node TEXT="infix notation" ID="ID_836050466" CREATED="1374300002004" MODIFIED="1374328960811"/>
</node>
</node>
<node TEXT="memory management" LOCALIZED_STYLE_REF="default" ID="ID_1238042731" CREATED="1346099922445" MODIFIED="1348891639599">
<node TEXT="is clever enough that you don&apos;t need to think about it" ID="ID_523036949" CREATED="1346099925197" MODIFIED="1346099932439"/>
<node TEXT="memory is freed when the objects occupying it are no longer referenced by anything" ID="ID_1042025988" CREATED="1346099933708" MODIFIED="1346099950647"/>
</node>
<node TEXT="interpretation, formatting" LOCALIZED_STYLE_REF="default" ID="ID_1413731889" CREATED="1345853045657" MODIFIED="1398455710586">
<node TEXT="code blocks" ID="ID_1132037664" CREATED="1345853851681" MODIFIED="1346045939006">
<node TEXT="are defined by indentation (and the initial &quot;:&quot; in a definition)" ID="ID_591000915" CREATED="1345853854433" MODIFIED="1345853867972"/>
</node>
<node TEXT="class names are usually capitalized" ID="ID_1766888181" CREATED="1346098371104" MODIFIED="1346098375819"/>
<node TEXT="triple quotes are for multi-line strings" ID="ID_1415196626" CREATED="1345853047368" MODIFIED="1345853058672"/>
<node TEXT="doc strings" ID="ID_912193983" CREATED="1345853143316" MODIFIED="1345853145510">
<node TEXT="must be the first thing after the colon in a function definition" ID="ID_181725384" CREATED="1345853147140" MODIFIED="1345853155326"/>
</node>
<node TEXT="multi-line statements" ID="ID_6379000" CREATED="1345858713986" MODIFIED="1345858715093">
<node TEXT="if they are defined by paren&apos;s, braces, etc." ID="ID_126848185" CREATED="1345858716345" MODIFIED="1345858803195">
<node TEXT="then they need no explicit handling" ID="ID_270036005" CREATED="1345858803488" MODIFIED="1345858806645"/>
<node TEXT="but backslashes don&apos;t hurt" ID="ID_458668161" CREATED="1345858806865" MODIFIED="1345858812316"/>
</node>
<node TEXT="otherwise, use &quot;\&quot; to continue" ID="ID_873750005" CREATED="1345858734481" MODIFIED="1345858774827">
<node TEXT="When a command is split among several lines with the line-continuation marker (&#x201c;\&#x201d;), the continued lines can be indented in any manner; Python&apos;s normally stringent indentation rules do not apply." ID="ID_1547758906" CREATED="1345858644687" MODIFIED="1345858644687"/>
</node>
</node>
<node TEXT="trailing commas for sequences" ID="ID_477618579" CREATED="1345859524735" MODIFIED="1345859531090">
<node TEXT="You can always include a comma after the last element when defining a list, tuple, or dictionary." ID="ID_1079811096" CREATED="1345859529237" MODIFIED="1374296641238"/>
<node TEXT="The comma is *required* when defining a tuple with one element." ID="ID_195475433" CREATED="1374296644690" MODIFIED="1374296650293">
<node TEXT="tag pitfall" ID="ID_550712438" CREATED="1374296652098" MODIFIED="1374296671591"/>
</node>
</node>
<node TEXT="Don&apos;t start and end a name with &quot;__&quot;." ID="ID_1019628332" CREATED="1346108084747" MODIFIED="1346108109054">
<node TEXT="That&apos;s supposed to be for builtin functions only." ID="ID_1243948746" CREATED="1346108093243" MODIFIED="1346108106196"/>
</node>
<node TEXT="in interactive mode, a blank line ends all preceding indentation" ID="ID_1028120211" CREATED="1383460151792" MODIFIED="1398455736811"/>
</node>
<node TEXT="logic" ID="ID_1975148704" CREATED="1398454617125" MODIFIED="1398454618032">
<node TEXT="and, or" LOCALIZED_STYLE_REF="default" ID="ID_1440800041" CREATED="1346052657699" MODIFIED="1348891639598">
<node TEXT="returns the value read at which certainty was reached" ID="ID_1304395033" CREATED="1346052805170" MODIFIED="1346052845405"/>
<node TEXT="evaluated left to right" ID="ID_254371787" CREATED="1346052997383" MODIFIED="1346053000219">
<node TEXT="that is, these are equivalent" ID="ID_1139863121" CREATED="1346053002864" MODIFIED="1346053009426"/>
<node TEXT="a and b or c" ID="ID_914296434" CREATED="1346053009687" MODIFIED="1346053022907">
<font ITALIC="true"/>
</node>
<node TEXT="(a and b) or c" ID="ID_435038326" CREATED="1346053017272" MODIFIED="1346053022906">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="&quot;the and-or trick&quot;" ID="ID_1148714125" CREATED="1346103788217" MODIFIED="1346103796820">
<node TEXT="the idiom" ID="ID_616271659" CREATED="1346053785540" MODIFIED="1346053788159">
<node TEXT="a and b or c" ID="ID_762384488" CREATED="1346053779620" MODIFIED="1346053784834">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="how it works" ID="ID_1327710580" CREATED="1346053749485" MODIFIED="1346103705638">
<node TEXT="a is intended as a variable, true or false" ID="ID_1270049461" CREATED="1346053753650" MODIFIED="1346053765486"/>
<node TEXT="b and c are intended as return values, to depend on a" ID="ID_1355739901" CREATED="1346053765757" MODIFIED="1346053774151"/>
<node TEXT="if a is false, then (a and b) evaluates to false, so c is returned" ID="ID_530322199" CREATED="1346053795356" MODIFIED="1346053814310">
<node TEXT="even if c is false, because it has to be read" ID="ID_237217820" CREATED="1346053828994" MODIFIED="1346053847074"/>
</node>
<node TEXT="if a is true, then (a and b) evaluates to true, UNLESS" ID="ID_128778373" CREATED="1346053848727" MODIFIED="1346053864338">
<node TEXT="b is false" ID="ID_139366676" CREATED="1346053864567" MODIFIED="1346053866378"/>
<node TEXT="so don&apos;t do that" ID="ID_832534950" CREATED="1346053867895" MODIFIED="1346053870786"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="scope" ID="ID_1106252762" CREATED="1398453462498" MODIFIED="1398453763284">
<node TEXT="&quot;var&quot; keyword: makes a var local" ID="Freemind_Link_794132679" CREATED="1277586099170" MODIFIED="1398453476214">
<node TEXT="Otherwise even in a function its global." ID="ID_306229391" CREATED="1277586116713" MODIFIED="1277586116713"/>
</node>
<node TEXT="nested functions" LOCALIZED_STYLE_REF="default" ID="ID_1965916071" CREATED="1398386669658" MODIFIED="1398454132923">
<node TEXT="the inner can only be called from the outer" ID="ID_573593610" CREATED="1398386672602" MODIFIED="1398386677318"/>
</node>
</node>
</node>
<node TEXT="control flow" ID="ID_1116567575" CREATED="1398454043244" MODIFIED="1398454044951">
<node TEXT="apply &amp; brethren" ID="ID_594238215" CREATED="1376861790360" MODIFIED="1398453547870">
<node TEXT="apply" ID="ID_1733003140" CREATED="1376861621082" MODIFIED="1376861621990">
<node TEXT="(another?) example" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_104016319" CREATED="1376112608206" MODIFIED="1398453567229">
<node ID="ID_1826289149" CREATED="1398453563240" MODIFIED="1398453563240"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      at bottom of here
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="http://effbot.org/tkinterbook/tkinter-widget-configuration.htm" ID="ID_856403750" CREATED="1376112617042" MODIFIED="1376112617042" LINK="http://effbot.org/tkinterbook/tkinter-widget-configuration.htm"/>
</node>
<node TEXT="pitfall" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1681018589" CREATED="1377060389118" MODIFIED="1377060392383">
<node TEXT="the second argument must be a list (of arguments), even if a singleton" ID="ID_312927090" CREATED="1377060392871" MODIFIED="1377060419887"/>
</node>
<node TEXT="this" ID="ID_1156022341" CREATED="1376861357364" MODIFIED="1376861358079">
<node TEXT="&gt;&gt;&gt; xi = O.imNode()" ID="ID_1121909451" CREATED="1376861345061" MODIFIED="1376861351752"/>
<node TEXT="&gt;&gt;&gt; f = O.imNode.showContents" ID="ID_814070249" CREATED="1376861336280" MODIFIED="1376861336280"/>
<node TEXT="&gt;&gt;&gt; apply(f,[xi])" ID="ID_907556474" CREATED="1376861336280" MODIFIED="1376861336280"/>
</node>
<node TEXT="has the same effect as" ID="ID_866377665" CREATED="1376861359532" MODIFIED="1376861362255">
<node TEXT="&gt;&gt;&gt; xi = O.imNode()" ID="ID_783178838" CREATED="1376861364059" MODIFIED="1376861372189"/>
<node TEXT="&gt;&gt;&gt; xi.showContents()" ID="ID_612291834" CREATED="1376861372419" MODIFIED="1376861378709"/>
</node>
</node>
<node TEXT="reduce" ID="ID_291350922" CREATED="1376861624955" MODIFIED="1376861626245">
<node TEXT="def. and syntax, by example" ID="ID_414826265" CREATED="1376861643681" MODIFIED="1376861676360">
<node TEXT="reduce(lambda x, y: x+y, [1, 2, 3, 4, 5])" ID="ID_421816574" CREATED="1376861638449" MODIFIED="1376861654690"/>
<node TEXT="computes this: ((((1+2)+3)+4)+5)" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_215904598" CREATED="1376861655695" MODIFIED="1376861668183"/>
</node>
<node TEXT="syntax" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1040328290" CREATED="1376861679796" MODIFIED="1376861681477">
<node TEXT="reduce(function, iterable[, initializer])" ID="ID_177510283" CREATED="1376861627034" MODIFIED="1376861627757"/>
</node>
</node>
</node>
<node TEXT="exceptions" ID="ID_1186037793" CREATED="1398382339497" MODIFIED="1398382341069">
<node TEXT="keywords" ID="ID_872875897" CREATED="1398454229207" MODIFIED="1398454230474">
<node TEXT="throw with &quot;raise&quot;" ID="ID_1403966094" CREATED="1398382443014" MODIFIED="1398382447082"/>
<node TEXT="catch with &quot;try ... except&quot; blocks" ID="ID_1899027812" CREATED="1398382341263" MODIFIED="1398382442625">
<node TEXT="like &quot;try .. catch&quot; in Java or C++" ID="ID_1207669393" CREATED="1398382431351" MODIFIED="1398382438914"/>
</node>
<node TEXT="&quot;finally&quot;" ID="ID_1921215319" CREATED="1398383934748" MODIFIED="1398383936458">
<node TEXT="a sub-block of a try block" ID="ID_319559054" CREATED="1398383936654" MODIFIED="1398383942943"/>
<node TEXT="should be last if present, I think" ID="ID_1484940038" CREATED="1398383945891" MODIFIED="1398383949478"/>
<node TEXT="code that executes even if an exception arises" ID="ID_1959330190" CREATED="1398383943171" MODIFIED="1398383956710"/>
</node>
<node TEXT="&quot;pass&quot;" ID="ID_1256808152" CREATED="1398383977394" MODIFIED="1398383980589">
<node TEXT="do nothing" ID="ID_336629677" CREATED="1398383980762" MODIFIED="1398383983117"/>
<node TEXT="is a valid response; the exception will be considered &quot;handled&quot;" ID="ID_21724750" CREATED="1398383986298" MODIFIED="1398383999253"/>
</node>
</node>
<node TEXT="use" ID="ID_523671008" CREATED="1398454225902" MODIFIED="1398454246009">
<node TEXT="raise only anticipable exceptions" ID="ID_967931442" CREATED="1398382518429" MODIFIED="1398382530959">
<node TEXT="data problems, not code problems (bugs)" ID="ID_309629207" CREATED="1398382531148" MODIFIED="1398382541359"/>
</node>
<node TEXT="example" ID="ID_1989504837" CREATED="1398382598435" MODIFIED="1398382600532">
<node TEXT="intent, without exceptions" ID="ID_1420627631" CREATED="1398382603226" MODIFIED="1398454155868">
<node ID="ID_1878021458" CREATED="1398382601053" MODIFIED="1398382601053"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <pre style="padding-right: 0px; margin-top: 0; margin-bottom: 0px; line-height: 23.200000762939453px; letter-spacing: normal; margin-left: 0; text-align: start; padding-left: 0px; text-transform: none; color: rgb(34, 34, 34); font-style: normal; font-weight: normal; padding-top: 0px; padding-bottom: 0px; font-variant: normal; background-color: rgb(255, 255, 255); text-indent: 0px; margin-right: 0; word-spacing: 0px" class="screen" charset="utf-8"><tt class="prompt">&gt;&gt;&gt; </tt><span class="userinput">fsock = open(</span><font color="olive"><span style="color: olive; background-color: white" class="pystring">&quot;/notthere&quot;</span></font><span class="userinput">, </span><font color="olive"><span style="color: olive; background-color: white" class="pystring">&quot;r&quot;</span></font><span class="userinput">)</span>      <a name="fileinfo.exceptions.1.1">
</a>
</pre>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_259886573" CREATED="1398382601055" MODIFIED="1398382601055"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <pre style="padding-right: 0px; margin-top: 0; margin-bottom: 0px; line-height: 23.200000762939453px; letter-spacing: normal; margin-left: 0; text-align: start; padding-left: 0px; text-transform: none; color: rgb(34, 34, 34); font-style: normal; font-weight: normal; padding-top: 0px; padding-bottom: 0px; font-variant: normal; background-color: rgb(255, 255, 255); text-indent: 0px; margin-right: 0; word-spacing: 0px" class="screen" charset="utf-8"><font color="red"><span style="color: red; background-color: white" class="traceback">Traceback (innermost last):</span></font></pre>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1449984618" CREATED="1398382601063" MODIFIED="1398382601063"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <pre style="padding-right: 0px; margin-top: 0; margin-bottom: 0px; line-height: 23.200000762939453px; letter-spacing: normal; margin-left: 0; text-align: start; padding-left: 0px; text-transform: none; color: rgb(34, 34, 34); font-style: normal; font-weight: normal; padding-top: 0px; padding-bottom: 0px; font-variant: normal; background-color: rgb(255, 255, 255); text-indent: 0px; margin-right: 0; word-spacing: 0px" class="screen" charset="utf-8"><font color="red"><span style="color: red; background-color: white" class="traceback">  File &quot;&lt;interactive input&gt;&quot;, line 1, in ?</span></font></pre>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_304687284" CREATED="1398382601068" MODIFIED="1398382601068"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <pre style="padding-right: 0px; margin-top: 0; margin-bottom: 0px; line-height: 23.200000762939453px; letter-spacing: normal; margin-left: 0; text-align: start; padding-left: 0px; text-transform: none; color: rgb(34, 34, 34); font-style: normal; font-weight: normal; padding-top: 0px; padding-bottom: 0px; font-variant: normal; background-color: rgb(255, 255, 255); text-indent: 0px; margin-right: 0; word-spacing: 0px" class="screen" charset="utf-8"><font color="red"><span style="color: red; background-color: white" class="traceback">IOError: [Errno 2] No such file or directory: '/notthere'</span></font>
</pre>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="rewritten using exceptions" ID="ID_84466977" CREATED="1398382625097" MODIFIED="1398454159180">
<node ID="ID_1115657809" CREATED="1398382601073" MODIFIED="1398382601073"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <pre style="padding-right: 0px; margin-top: 0; margin-bottom: 0px; line-height: 23.200000762939453px; letter-spacing: normal; margin-left: 0; text-align: start; padding-left: 0px; text-transform: none; color: rgb(34, 34, 34); font-style: normal; font-weight: normal; padding-top: 0px; padding-bottom: 0px; font-variant: normal; background-color: rgb(255, 255, 255); text-indent: 0px; margin-right: 0; word-spacing: 0px" class="screen" charset="utf-8"><tt class="prompt">&gt;&gt;&gt; </tt><font color="navy"><b><span style="color: navy; font-weight: bold; background-color: white" class="pykeyword">try</span></b></font><span class="userinput">:</span>
</pre>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_822990104" CREATED="1398382601078" MODIFIED="1398382601078"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <pre style="padding-right: 0px; margin-top: 0; margin-bottom: 0px; line-height: 23.200000762939453px; letter-spacing: normal; margin-left: 0; text-align: start; padding-left: 0px; text-transform: none; color: rgb(34, 34, 34); font-style: normal; font-weight: normal; padding-top: 0px; padding-bottom: 0px; font-variant: normal; background-color: rgb(255, 255, 255); text-indent: 0px; margin-right: 0; word-spacing: 0px" class="screen" charset="utf-8"><tt class="prompt">...     </tt><span class="userinput">fsock = open(</span><font color="olive"><span style="color: olive; background-color: white" class="pystring">&quot;/notthere&quot;</span></font><span class="userinput">)</span>       <a name="fileinfo.exceptions.1.2">
</a>
</pre>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1510454017" CREATED="1398382601084" MODIFIED="1398382601084"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <pre style="padding-right: 0px; margin-top: 0; margin-bottom: 0px; line-height: 23.200000762939453px; letter-spacing: normal; margin-left: 0; text-align: start; padding-left: 0px; text-transform: none; color: rgb(34, 34, 34); font-style: normal; font-weight: normal; padding-top: 0px; padding-bottom: 0px; font-variant: normal; background-color: rgb(255, 255, 255); text-indent: 0px; margin-right: 0; word-spacing: 0px" class="screen" charset="utf-8"><tt class="prompt">... </tt><font color="navy"><b><span style="color: navy; font-weight: bold; background-color: white" class="pykeyword">except</span></b></font><span class="userinput"> IOError:</span>                     <a name="fileinfo.exceptions.1.3">
</a>
</pre>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1488616274" CREATED="1398382601092" MODIFIED="1398382601092"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <pre style="padding-right: 0px; margin-top: 0; margin-bottom: 0px; line-height: 23.200000762939453px; letter-spacing: normal; margin-left: 0; text-align: start; padding-left: 0px; text-transform: none; color: rgb(34, 34, 34); font-style: normal; font-weight: normal; padding-top: 0px; padding-bottom: 0px; font-variant: normal; background-color: rgb(255, 255, 255); text-indent: 0px; margin-right: 0; word-spacing: 0px" class="screen" charset="utf-8"><tt class="prompt">...     </tt><font color="navy"><b><span style="color: navy; font-weight: bold; background-color: white" class="pykeyword">print</span></b></font><span class="userinput"> </span><font color="olive"><span style="color: olive; background-color: white" class="pystring">&quot;The file does not exist, exiting gracefully&quot;</span></font>
</pre>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_231403945" CREATED="1398382601099" MODIFIED="1398382601099"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <pre style="padding-right: 0px; margin-top: 0; margin-bottom: 0px; line-height: 23.200000762939453px; letter-spacing: normal; margin-left: 0; text-align: start; padding-left: 0px; text-transform: none; color: rgb(34, 34, 34); font-style: normal; font-weight: normal; padding-top: 0px; padding-bottom: 0px; font-variant: normal; background-color: rgb(255, 255, 255); text-indent: 0px; margin-right: 0; word-spacing: 0px" class="screen" charset="utf-8"><tt class="prompt">... </tt><font color="navy"><b><span style="color: navy; font-weight: bold; background-color: white" class="pykeyword">print</span></b></font><span class="userinput"> </span><font color="olive"><span style="color: olive; background-color: white" class="pystring">&quot;This line will always print&quot;</span></font> <a name="fileinfo.exceptions.1.4">
</a>
</pre>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1798873829" CREATED="1398382601106" MODIFIED="1398382601106"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <pre style="padding-right: 0px; margin-top: 0; margin-bottom: 0px; line-height: 23.200000762939453px; letter-spacing: normal; margin-left: 0; text-align: start; padding-left: 0px; text-transform: none; color: rgb(34, 34, 34); font-style: normal; font-weight: normal; padding-top: 0px; padding-bottom: 0px; font-variant: normal; background-color: rgb(255, 255, 255); text-indent: 0px; margin-right: 0; word-spacing: 0px" class="screen" charset="utf-8"><font color="teal"><span style="color: teal; background-color: white" class="computeroutput">The file does not exist, exiting gracefully</span></font></pre>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_889059617" CREATED="1398382601112" MODIFIED="1398382601112"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <pre style="padding-right: 0px; margin-top: 0; margin-bottom: 0px; line-height: 23.200000762939453px; letter-spacing: normal; margin-left: 0; text-align: start; padding-left: 0px; text-transform: none; color: rgb(34, 34, 34); font-style: normal; font-weight: normal; padding-top: 0px; padding-bottom: 0px; font-variant: normal; background-color: rgb(255, 255, 255); text-indent: 0px; margin-right: 0; word-spacing: 0px" class="screen" charset="utf-8"><font color="teal"><span style="color: teal; background-color: white" class="computeroutput">This line will always print</span></font></pre>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="using them to condition on module availability" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1622966041" CREATED="1398382846452" MODIFIED="1398382996070">
<node TEXT="example" ID="ID_1060480171" CREATED="1398383005543" MODIFIED="1398383006819">
<node TEXT="http://www.diveintopython.net/file_handling/index.html" ID="ID_126877526" CREATED="1398383004766" MODIFIED="1398383004766" LINK="http://www.diveintopython.net/file_handling/index.html"/>
<node TEXT="Example 6.2. Supporting Platform-Specific Functionality" ID="ID_802082516" CREATED="1398383016350" MODIFIED="1398383016914"/>
</node>
<node TEXT="&quot;A common use in the standard Python library is to try to import a module, and then check whether it worked. Importing a module that does not exist will raise an ImportError exception. You can use this to define multiple levels of functionality based on which modules are available at run-time, or to support multiple platforms&quot;" ID="ID_1851150347" CREATED="1398382855987" MODIFIED="1398382859298"/>
</node>
<node TEXT="inherit from Exception" ID="ID_732180709" CREATED="1398382889418" MODIFIED="1398454195899">
<node TEXT="to make your own" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1130444265" CREATED="1398454196251" MODIFIED="1398454199813"/>
<node TEXT="link to outside reference was broken" ID="ID_1042017428" CREATED="1398383084005" MODIFIED="1398383093537">
<node ID="ID_995110403" CREATED="1398383098541" MODIFIED="1398383098541" LINK="http://www.diveintopython.net/doc/current/tut/tut.html"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <ul style="line-height: 23.200000762939453px; letter-spacing: normal; font-size: medium; text-align: start; text-transform: none; color: rgb(34, 34, 34); font-style: normal; font-weight: normal; white-space: normal; font-variant: normal; font-family: Book Antiqua, Georgia, Palatino, Times, Times New Roman, serif; background-color: rgb(255, 255, 255); text-indent: 0px; word-spacing: 0px" charset="utf-8">
      <li>
        <span class="application"><a href="http://www.diveintopython.net/doc/current/tut/tut.html"><i class="citetitle">Python</i></a></span><a href="http://www.diveintopython.net/doc/current/tut/tut.html"><i class="citetitle"><span class="Apple-converted-space">&#160;</span>Tutorial</i></a><span class="Apple-converted-space">&#160;</span>discusses<span class="Apple-converted-space">&#160;</span><a href="http://www.diveintopython.net/doc/current/tut/node10.html#SECTION0010400000000000000000">defining and raising your own exceptions, and handling multiple exceptions at once</a>.
      </li>
    </ul>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="&quot;You can also define your own exceptions by creating a class that inherits from the built-in Exception class, and then raise your exceptions with the raise command.&quot;" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1217206795" CREATED="1398382912738" MODIFIED="1398454212347"/>
</node>
</node>
</node>
<node TEXT="getattr as dispatcher" ID="ID_940528602" CREATED="1346050840876" MODIFIED="1346050844885">
<node TEXT="define 3 functions in a module called M" ID="ID_186251155" CREATED="1346050846706" MODIFIED="1346050854741"/>
<node TEXT="then use this" ID="ID_1341490567" CREATED="1346050873691" MODIFIED="1346050875436">
<node TEXT="def output( data, format=&quot;text&quot; ):                              &#xa;    output_function = getattr( M, &quot;%s&quot; % format ) &#xa;    return output_function( data )" ID="ID_1397041729" CREATED="1346050886428" MODIFIED="1346052522324">
<font ITALIC="true"/>
</node>
</node>
</node>
<node TEXT="for loops" ID="ID_386565472" CREATED="1398384362419" MODIFIED="1398384364619">
<node TEXT="over elts of a list" ID="ID_1520818309" CREATED="1398384366393" MODIFIED="1398384369710">
<node TEXT="&gt;&gt;&gt; li = [&apos;a&apos;, &apos;b&apos;, &apos;e&apos;]&#xa;&gt;&gt;&gt; for s in li:&#xa;...     print s" ID="ID_1828094987" CREATED="1398384371874" MODIFIED="1398384377215"/>
</node>
<node TEXT="over a range" ID="ID_1997449821" CREATED="1398384417265" MODIFIED="1398384421108">
<node TEXT="&gt;&gt;&gt; for i in range(5):&#xa;...     print i" ID="ID_279343332" CREATED="1398384421601" MODIFIED="1398384425142"/>
</node>
</node>
<node TEXT="iterating over a dictionary" ID="ID_1228904938" CREATED="1398384787071" MODIFIED="1398384790114">
<node TEXT="import os&#xa;for k, v in os.environ.items():&#xa;   print &quot;%s=%s&quot; % (k, v)" ID="ID_1590290356" CREATED="1398384832445" MODIFIED="1398384833393"/>
</node>
</node>
<node TEXT="data, types" ID="ID_975799904" CREATED="1398453838881" MODIFIED="1398455296919">
<node TEXT="assignment, instantiation" ID="ID_1988723289" CREATED="1398455023808" MODIFIED="1398455177618">
<node TEXT="multiple assignment" ID="ID_1394592410" CREATED="1345859137650" MODIFIED="1398454994764">
<node LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_692667970" CREATED="1398454995572" MODIFIED="1398454998505"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      assigning multiple values at once
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="&gt;&gt;&gt; v = (&apos;a&apos;, &apos;b&apos;, &apos;e&apos;)&#xa;&gt;&gt;&gt; (x, y, z) = v&#xa;&gt;&gt;&gt; x&#xa;&apos;a&apos;" ID="ID_687375613" CREATED="1345859160034" MODIFIED="1345859161101"/>
<node TEXT="&gt;&gt;&gt; (mon, tues, wed, thur, fri, sat, sun) = range(7) &#xa;&gt;&gt;&gt; mon&#xa;0" ID="ID_1668236208" CREATED="1345859196695" MODIFIED="1345859229132"/>
</node>
<node TEXT="no explicit type declarations" ID="ID_1127668570" CREATED="1345858409962" MODIFIED="1398454943189">
<node TEXT="Variables spring into existence by being assigned a value, and they are automatically destroyed when they go out of scope." ID="ID_396558420" CREATED="1345858409386" MODIFIED="1345858414950"/>
</node>
</node>
<node TEXT="classes" ID="ID_371066950" CREATED="1398455304451" MODIFIED="1398470635954">
<font BOLD="true"/>
<node TEXT="abstract" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1746456462" CREATED="1398455158407" MODIFIED="1398455161000">
<node TEXT="Python&apos;s typing is &quot;strong&quot; and &quot;dynamic&quot;" ID="ID_354277184" CREATED="1345853012287" MODIFIED="1398455385054">
<node TEXT="Python is both dynamically typed (because it doesn&apos;t use explicit datatype declarations) and strongly typed (because once a variable has a datatype, it actually matters)." ID="ID_1384492378" CREATED="1345853013673" MODIFIED="1345853017508"/>
</node>
</node>
<node TEXT="the empty definition" ID="ID_1259371882" CREATED="1346098312627" MODIFIED="1346098315334">
<node TEXT="class name:&#xa;    pass" ID="ID_779290790" CREATED="1346098287821" MODIFIED="1346098295112">
<font ITALIC="true"/>
</node>
<node TEXT="&quot;pass&quot; is a reserved word used to indicate empty instructions" ID="ID_381837908" CREATED="1346098317082" MODIFIED="1346098354731"/>
</node>
<node TEXT="the comment string" ID="ID_645296089" CREATED="1376843114905" MODIFIED="1398456119236">
<node TEXT="is called the &quot;docstring&quot;" ID="ID_1939812968" CREATED="1376843121769" MODIFIED="1376843130891"/>
<node TEXT="can be retrieved with class.__doc__" ID="ID_986001672" CREATED="1376843131177" MODIFIED="1376843149538"/>
</node>
<node TEXT="privacy" ID="ID_652030741" CREATED="1346107869896" MODIFIED="1346107870979">
<node TEXT="is this convention or enforced?" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_877503093" CREATED="1398470190637" MODIFIED="1398470198566"/>
<node TEXT="is a characteristic of everything with &quot;__&quot; on the left and not on the right of its name" ID="ID_316906350" CREATED="1346107892568" MODIFIED="1346107926962"/>
</node>
<node TEXT="objectlessness" ID="ID_865754107" CREATED="1398470176901" MODIFIED="1398470179233">
<node TEXT="static methods" ID="ID_619803126" CREATED="1376861948827" MODIFIED="1398456170157">
<node TEXT="http://docs.python.org/2/library/functions.html#staticmethod" ID="ID_1690234453" CREATED="1376861967844" MODIFIED="1376861967844" LINK="http://docs.python.org/2/library/functions.html#staticmethod"/>
<node TEXT="why" ID="ID_1120638707" CREATED="1408239585038" MODIFIED="1408239591009">
<node TEXT="belongs to the class, but to no member of it" ID="ID_1706924385" CREATED="1398456178441" MODIFIED="1398456206652"/>
<node TEXT="is a method without implicit first argument" ID="ID_1857003160" CREATED="1376861970160" MODIFIED="1398456204340">
<node TEXT="recall &quot;method&quot; def&apos;n: if it is a method, it is part of a class" ID="ID_265917592" CREATED="1376861954514" MODIFIED="1398453826821"/>
</node>
</node>
<node TEXT="how" ID="ID_1755650489" CREATED="1408239580335" MODIFIED="1408239593521">
<node TEXT="@staticmethod" ID="ID_1408964395" CREATED="1408239611020" MODIFIED="1408239611375"/>
<node TEXT="put that before func. def." ID="ID_1970345626" CREATED="1408239571303" MODIFIED="1408239610634"/>
</node>
</node>
<node TEXT="class vs. instance var&apos;s" ID="ID_1461534894" CREATED="1374332968485" MODIFIED="1374332973072">
<node TEXT="this code" ID="ID_208511522" CREATED="1374332996037" MODIFIED="1374332997200">
<node TEXT="class Seq:&#xa;  &quot;This is the introductory comment for the class.&quot;&#xa;  classValue = 5&#xa;  def __init__(self,x):&#xa;    self.instanceValue = x&#xa;    self.__class__.classValue = x&#xa;  def readIV(self):&#xa;    print self.instanceValue&#xa;  def readCV(self):&#xa;    print self.classValue&#xa;&#xa;x = Seq(353)&#xa;y = Seq(99)&#xa;x.readIV()&#xa;x.readCV()&#xa;y.readIV()&#xa;y.readCV()" ID="ID_427949187" CREATED="1374332997517" MODIFIED="1374333023339"/>
</node>
<node TEXT="only class values need to be declared" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_957841551" CREATED="1375960325159" MODIFIED="1375961166225"/>
<node TEXT="produces this" ID="ID_1052618652" CREATED="1374333024788" MODIFIED="1374333047966">
<node TEXT="353&#xa;99&#xa;99&#xa;99" ID="ID_1686145459" CREATED="1374333043787" MODIFIED="1374333044303"/>
</node>
</node>
</node>
<node TEXT="inheritance" ID="ID_809488239" CREATED="1346098469601" MODIFIED="1346098471223">
<node TEXT="syntax" ID="ID_1953708320" CREATED="1346098512499" MODIFIED="1398470278350">
<node TEXT="class name (ancestor):" ID="ID_1962305597" CREATED="1346098471699" MODIFIED="1346098485878">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="inheriting from common data types" ID="ID_1507348155" CREATED="1346098516796" MODIFIED="1346098578034">
<node TEXT="some useful ancestors" ID="ID_1684126070" CREATED="1346099101363" MODIFIED="1398470237311">
<node TEXT="UserDict, UserList, UserString" ID="ID_1311887435" CREATED="1346098532178" MODIFIED="1346098560243">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="example" ID="ID_1000629212" CREATED="1346099098244" MODIFIED="1346099099270">
<node TEXT="class FileInfo(UserDict):&#xa;    &quot;store file metadata&quot;&#xa;    def __init__(self, filename=None):&#xa;        UserDict.__init__(self)        1&#xa;        self[&quot;name&quot;] = filename" ID="ID_1102224940" CREATED="1346099093860" MODIFIED="1346099096987">
<font ITALIC="true"/>
</node>
</node>
</node>
<node TEXT="extending a superclass&apos;s work" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1727033194" CREATED="1346099243774" MODIFIED="1398470307285">
<node TEXT="weird" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_285307692" CREATED="1398470308022" MODIFIED="1398470313066"/>
<node TEXT="if" ID="ID_1892024749" CREATED="1346099249325" MODIFIED="1346099285046">
<node TEXT="Child and Parent are two classes, both with functions F" ID="ID_1621270432" CREATED="1346099282330" MODIFIED="1346099282330"/>
<node TEXT="Child wants to extend F" ID="ID_1043524674" CREATED="1346099266820" MODIFIED="1346099279598"/>
</node>
<node TEXT="then Child&apos;s definition of F must call Parent&apos;s" ID="ID_273821894" CREATED="1346099283675" MODIFIED="1398470298542"/>
</node>
</node>
<node TEXT="construcor" ID="ID_800165376" CREATED="1346098747799" MODIFIED="1398470362412">
<node TEXT="it must be called __init__" ID="ID_1692310900" CREATED="1346098749762" MODIFIED="1398470330853">
<font ITALIC="false"/>
</node>
<node TEXT="to use an ancestor&apos;s __init__" ID="ID_798410841" CREATED="1346098978157" MODIFIED="1346098988597">
<node TEXT="class FileInfo(UserDict):&#xa;    def __init__(self):&#xa;        UserDict.__init__(self)" ID="ID_941083800" CREATED="1346098997146" MODIFIED="1346099019353">
<font ITALIC="true"/>
</node>
<node TEXT="that is, call the ancestor&apos;s __init__ from the descendent&apos;s __init__" ID="ID_1497870370" CREATED="1346099021323" MODIFIED="1346099052253"/>
</node>
</node>
<node TEXT="instantiation" ID="ID_1493707689" CREATED="1346099624492" MODIFIED="1346099626223">
<node TEXT="f = class( ... )" ID="ID_980205093" CREATED="1346099634937" MODIFIED="1346099645720">
<font ITALIC="true"/>
</node>
<node TEXT="maybe no arguments" ID="ID_8729970" CREATED="1346099642041" MODIFIED="1346099644692"/>
</node>
<node TEXT="&quot;self&quot;: explicit in definitions, implicit in calls" ID="ID_781701901" CREATED="1374331608004" MODIFIED="1374331620341">
<node TEXT="tag pitfall" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_501661919" CREATED="1374331586500" MODIFIED="1374331590723"/>
<node TEXT="in a method definition, &quot;self&quot; is always the first argument" ID="ID_690481271" CREATED="1346098717671" MODIFIED="1374331628445">
<node TEXT="not just constructors, but all methods" ID="ID_1448066287" CREATED="1374331649434" MODIFIED="1374331658260"/>
</node>
<node TEXT="The first argument of every class method is always a reference to the current instance of the class." ID="ID_569613795" CREATED="1346098694880" MODIFIED="1346098706644"/>
<node TEXT="Calling it &quot;self&quot; is a convention." ID="ID_882379985" CREATED="1346098728847" MODIFIED="1346098736949"/>
<node TEXT="It&apos;s implicit when calling the method." LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1433481101" CREATED="1346098815942" MODIFIED="1374331187791">
<icon BUILTIN="yes"/>
<node TEXT="that is, don&apos;t do this" ID="ID_1983397512" CREATED="1346098856533" MODIFIED="1346098866488">
<node TEXT="instance . function( instance, ...)" ID="ID_1124955337" CREATED="1346098866925" MODIFIED="1346098900931">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="instead, do this" ID="ID_1951281353" CREATED="1346098891780" MODIFIED="1346098893559">
<node TEXT="instance . function( ...)" ID="ID_1059750408" CREATED="1346098866925" MODIFIED="1346098900933">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="so I don&apos;t really understand why it&apos;s part of the method&apos;s definition" ID="ID_1340349106" CREATED="1346098832582" MODIFIED="1346098845466"/>
</node>
</node>
<node TEXT="special methods" ID="ID_1657687410" CREATED="1346103916909" MODIFIED="1346103918977">
<node TEXT="__getitem__" ID="ID_1318869031" CREATED="1346103928654" MODIFIED="1346103944627">
<font ITALIC="true"/>
<node TEXT="sample def&apos;n" ID="ID_1762613131" CREATED="1346104010341" MODIFIED="1346104011847">
<node TEXT="def __getitem__(self, key): return self.data[key]" ID="ID_1320441478" CREATED="1346104012174" MODIFIED="1346104014348">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="can be called by using brackets, like a dictionary" ID="ID_1742838605" CREATED="1346103945174" MODIFIED="1346104055694">
<node TEXT="as well as directly, like an ordinary method" ID="ID_1138433116" CREATED="1346104056411" MODIFIED="1346104061598"/>
</node>
</node>
<node TEXT="__setitem__" ID="ID_199566906" CREATED="1346104023060" MODIFIED="1346104027090">
<font ITALIC="true"/>
<node TEXT="sample def&apos;n" ID="ID_181550582" CREATED="1346104010341" MODIFIED="1346104011847">
<node TEXT="def __setitem__(self, key, item): self.data[key] = item" ID="ID_970650282" CREATED="1346104026038" MODIFIED="1346104026038"/>
</node>
<node TEXT="can be called by assigning something to the right of brackets" ID="ID_1501526763" CREATED="1346104044852" MODIFIED="1346104072670">
<node TEXT="as well as directly, like an ordinary method" ID="ID_598081628" CREATED="1346104056411" MODIFIED="1346104061598"/>
</node>
</node>
<node TEXT="less common" ID="ID_53787606" CREATED="1346104907073" MODIFIED="1346104909817">
<node TEXT="link" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_471263688" CREATED="1346104989448" MODIFIED="1374332833377">
<node TEXT="http://www.diveintopython.net/object_oriented_framework/special_class_methods2.html" ID="ID_1362057012" CREATED="1346104983335" MODIFIED="1346104983363" LINK="http://www.diveintopython.net/object_oriented_framework/special_class_methods2.html"/>
</node>
<node TEXT="__repr__" ID="ID_1230940988" CREATED="1346104913457" MODIFIED="1346104919399">
<font ITALIC="true"/>
<node TEXT="return a string representation of an object" ID="ID_1829318283" CREATED="1346104920248" MODIFIED="1346104929563"/>
</node>
<node TEXT="__cmp__" ID="ID_147063620" CREATED="1346104960737" MODIFIED="1346104968031">
<font ITALIC="true"/>
<node TEXT="compare two objects, ala &quot;==&quot;" ID="ID_1925031712" CREATED="1346104968600" MODIFIED="1346107468740"/>
</node>
<node TEXT="__len__" ID="ID_202723645" CREATED="1346105038758" MODIFIED="1346105040949">
<font ITALIC="true"/>
<node TEXT="length" ID="ID_653625412" CREATED="1346105042222" MODIFIED="1346105043456"/>
</node>
<node TEXT="__delitem__" ID="ID_825942185" CREATED="1346105145747" MODIFIED="1346105150498">
<font ITALIC="true"/>
<node TEXT="delete something (e.g. an entry in a dictionary)" ID="ID_1802488151" CREATED="1346105150852" MODIFIED="1346105161181"/>
</node>
</node>
</node>
<node TEXT="attributes (data)" ID="ID_130590632" CREATED="1398470584348" MODIFIED="1398470587847">
<node TEXT="member attributes" ID="ID_1970184311" CREATED="1346101086615" MODIFIED="1398470602000">
<node TEXT="&quot;data attributes&quot;?" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_555875150" CREATED="1398470603861" MODIFIED="1398470610637">
<node TEXT="I think the book may have called them data attributes, not member attributes." ID="ID_1076625366" CREATED="1398470608812" MODIFIED="1398470624071"/>
</node>
<node TEXT="initializing them" ID="ID_181241308" CREATED="1346101185819" MODIFIED="1346101188910">
<node TEXT="is recommended, from the __init__ function" ID="ID_905887408" CREATED="1346101189112" MODIFIED="1346101199269"/>
<node TEXT="but is unnecessary" ID="ID_263732560" CREATED="1346101199481" MODIFIED="1346101203318"/>
</node>
<node TEXT="referencing them" ID="ID_1676310449" CREATED="1346101182443" MODIFIED="1346101184211">
<node TEXT="if" ID="ID_374441776" CREATED="1346101089040" MODIFIED="1374331787276">
<node TEXT="there&apos;s a class Class" ID="ID_1279160543" CREATED="1346101096924" MODIFIED="1346101103981"/>
<node TEXT="with a data field Data" ID="ID_1286890184" CREATED="1346101105725" MODIFIED="1346101109472"/>
</node>
<node TEXT="then to reference Data" ID="ID_136961842" CREATED="1346101110900" MODIFIED="1398470502539">
<node TEXT="from outside the class def&apos;n" ID="ID_1155071980" CREATED="1346101112892" MODIFIED="1398470513715">
<node TEXT="Class.Data" ID="ID_702019799" CREATED="1346101121957" MODIFIED="1346101139367">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="from within the class def&apos;n" ID="ID_1396993761" CREATED="1346101125499" MODIFIED="1398470518674">
<node TEXT="self.Data" ID="ID_83596408" CREATED="1346101129987" MODIFIED="1346101139368">
<font ITALIC="true"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="class attributes" ID="ID_1470852825" CREATED="1346107566654" MODIFIED="1346107568698">
<node TEXT="belong to the class, even absent any instances of it" ID="ID_297680347" CREATED="1346107568894" MODIFIED="1346107576825"/>
<node TEXT="can be referenced from the class itself, or from an instance of it" ID="ID_1858028333" CREATED="1346107606638" MODIFIED="1346107627168"/>
<node TEXT="modifying one" ID="ID_1543152929" CREATED="1346107718880" MODIFIED="1346107791322">
<node TEXT="class counter:&#xa;     count = 0&#xa;     def __init__(self):&#xa;         self.__class__.count += 1" ID="ID_1479743148" CREATED="1346107727419" MODIFIED="1346107821272">
<font ITALIC="true"/>
</node>
<node TEXT="Here a constructor modifies the class attribute, but it could be an ordinary method." LOCALIZED_STYLE_REF="default" ID="ID_1895454510" CREATED="1346107791841" MODIFIED="1374331815797"/>
</node>
</node>
</node>
</node>
<node TEXT="coercion" LOCALIZED_STYLE_REF="default" ID="ID_77326170" CREATED="1346048677942" MODIFIED="1348891639596">
<node TEXT="str()" ID="ID_951131049" CREATED="1346047671420" MODIFIED="1398454745183"/>
<node TEXT="coercing None" ID="ID_1341148104" CREATED="1346054106727" MODIFIED="1398454740391">
<node TEXT="&quot;But a doc string is always a string, so why bother with the str function? The answer is that not every function has a doc string, and if it doesn&apos;t, its __doc__ attribute is None.&quot;" ID="ID_1862984806" CREATED="1346054123518" MODIFIED="1346054124833"/>
</node>
</node>
<node TEXT="strange values" LOCALIZED_STYLE_REF="default" ID="Freemind_Link_54346044" CREATED="1277586184402" MODIFIED="1398454291076">
<node TEXT="Null != Undefined" ID="Freemind_Link_324303680" CREATED="1277586159324" MODIFIED="1277586167382">
<node TEXT="Null means &quot;defined to be empty&quot;" ID="Freemind_Link_1293626542" CREATED="1277586154343" MODIFIED="1277586180373"/>
</node>
<node TEXT="Nan, negative infinity, infinity." ID="ID_1033134522" CREATED="1277586154343" MODIFIED="1277586154343"/>
</node>
<node TEXT="built-in data types" ID="ID_1657008040" CREATED="1398454759961" MODIFIED="1398455136973">
<font BOLD="true"/>
<node TEXT="boolean" ID="ID_1743984685" CREATED="1345857582291" MODIFIED="1345857583406">
<node TEXT="are named True and False" ID="ID_645753865" CREATED="1345857600755" MODIFIED="1346052738879">
<node TEXT="case sensitive" ID="ID_1334973045" CREATED="1345857615412" MODIFIED="1345857622999"/>
</node>
<node TEXT="anything can be treated as one" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_383799394" CREATED="1346052739799" MODIFIED="1398455590706">
<node TEXT="0, &apos;&apos;, [], (), {}, and None are false in a boolean context; everything else is true, unless you make an exception ..." ID="ID_440772249" CREATED="1346052660386" MODIFIED="1346052680939"/>
<node TEXT="By default, instances of classes are true in a boolean context, but you can define special methods in your class to make an instance evaluate to false." ID="ID_1593054524" CREATED="1346052681231" MODIFIED="1346052681231"/>
</node>
</node>
<node TEXT="dictionaries" ID="ID_1995256591" CREATED="1345854439538" MODIFIED="1345854440988">
<node TEXT="d = { &quot;key&quot; : &quot;value&quot;, ... }&#xa;d[key]" ID="ID_486645503" CREATED="1376112297637" MODIFIED="1398455528720"/>
<node TEXT="methods" ID="ID_1893455902" CREATED="1345854574165" MODIFIED="1345854576136">
<node TEXT="defining one" ID="ID_1305885658" CREATED="1345854480704" MODIFIED="1345854482427">
<node TEXT="d = {&quot;key1&quot; : &quot;val1&quot;, &quot;key2&quot; : &quot;val2&quot;, ...}" ID="ID_1576669447" CREATED="1345854448057" MODIFIED="1346052442574">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="accessing one" ID="ID_308428221" CREATED="1345854483559" MODIFIED="1345854485394">
<node TEXT="d[val]" ID="ID_1537398160" CREATED="1345854477473" MODIFIED="1346052443981">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="adding to one" ID="ID_800239659" CREATED="1345854524796" MODIFIED="1345854527686">
<node TEXT="d[ newKey ] = value" ID="ID_228002528" CREATED="1345854527923" MODIFIED="1346052445461">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="removing an entry" ID="ID_179884879" CREATED="1345854676735" MODIFIED="1345854681850">
<node TEXT="del dictionary[ key ]" ID="ID_564973948" CREATED="1345854683439" MODIFIED="1346052447317">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="emptying the entire thing" ID="ID_37442590" CREATED="1345854695871" MODIFIED="1345854707204">
<node TEXT="dictionary.clear()" ID="ID_1915231039" CREATED="1345854709928" MODIFIED="1346052448828">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="characterizing one" ID="ID_601696505" CREATED="1345860079621" MODIFIED="1345860090471">
<node TEXT="&gt;&gt;&gt; params = {&quot;server&quot;:&quot;mpilgrim&quot;, &quot;database&quot;:&quot;master&quot;, &quot;uid&quot;:&quot;sa&quot;, &quot;pwd&quot;:&quot;secret&quot;}" ID="ID_869440364" CREATED="1345860090772" MODIFIED="1345860090772"/>
<node TEXT="&gt;&gt;&gt; params.keys()&#xa;[&apos;server&apos;, &apos;uid&apos;, &apos;database&apos;, &apos;pwd&apos;]" ID="ID_1336293147" CREATED="1345860103003" MODIFIED="1345860104072"/>
<node TEXT="&gt;&gt;&gt; params.values()&#xa;[&apos;mpilgrim&apos;, &apos;sa&apos;, &apos;master&apos;, &apos;secret&apos;]" ID="ID_1751873828" CREATED="1345860108075" MODIFIED="1345860108670"/>
<node TEXT="&gt;&gt;&gt; params.items()&#xa;[(&apos;server&apos;, &apos;mpilgrim&apos;), (&apos;uid&apos;, &apos;sa&apos;), (&apos;database&apos;, &apos;master&apos;), (&apos;pwd&apos;, &apos;secret&apos;)]" ID="ID_1931142965" CREATED="1345860110259" MODIFIED="1345860113351">
<node TEXT="that&apos;s a list of tuples" ID="ID_927694952" CREATED="1345860144971" MODIFIED="1345860148149"/>
</node>
</node>
<node TEXT="duplicating one" ID="ID_607645462" CREATED="1346101292157" MODIFIED="1346101294515">
<node TEXT="dict.update( anotherDict )" ID="ID_820799696" CREATED="1346101307112" MODIFIED="1346101317237">
<font ITALIC="true"/>
</node>
<node TEXT="copies everything in anotherDict to dict" ID="ID_767832322" CREATED="1346101317656" MODIFIED="1346101325922"/>
<node TEXT="does not empty dict first" ID="ID_847811500" CREATED="1346101327895" MODIFIED="1346101333426"/>
</node>
</node>
<node TEXT="properties" ID="ID_94705231" CREATED="1345854577468" MODIFIED="1345854578895">
<node TEXT="no order" ID="ID_1328381011" CREATED="1345854579117" MODIFIED="1345854581887"/>
<node TEXT="case sensitive" ID="ID_1285696979" CREATED="1345854587685" MODIFIED="1345854589360"/>
<node TEXT="types" ID="ID_1319929610" CREATED="1345854621176" MODIFIED="1345854643930">
<node TEXT="values can be anything" ID="ID_1343605875" CREATED="1345854644120" MODIFIED="1345854647794"/>
<node TEXT="keys are more restricted, but they can be strings, integers, &quot;and a few other types&quot;" ID="ID_1885657824" CREATED="1345854648008" MODIFIED="1345854663194"/>
<node TEXT="all can be mixed" ID="ID_72299089" CREATED="1345854665639" MODIFIED="1345854667562"/>
</node>
</node>
</node>
<node TEXT="lists" ID="ID_280339741" CREATED="1345854791052" MODIFIED="1345854791734">
<node TEXT="pitfalls" ID="ID_1504142974" CREATED="1345857910164" MODIFIED="1345857912064">
<node TEXT="use brackets" ID="ID_54727502" CREATED="1345857905558" MODIFIED="1345857908097"/>
</node>
<node TEXT="defining one" ID="ID_640373841" CREATED="1345854796268" MODIFIED="1345854798134">
<node TEXT="list = [ value, value, ...]" ID="ID_1555922086" CREATED="1345854798596" MODIFIED="1346052459221">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="methods" ID="ID_940062695" CREATED="1345854829400" MODIFIED="1345854830259">
<node TEXT="accessing one" ID="ID_1475618369" CREATED="1345854809330" MODIFIED="1345854810791">
<node TEXT="list[ integer ]" ID="ID_618607849" CREATED="1345854813651" MODIFIED="1346052460381">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="accessing a continguous subset" ID="ID_1265416475" CREATED="1345854935492" MODIFIED="1345854949161">
<node TEXT="list[ first included : first excluded ]" ID="ID_636071011" CREATED="1345854951009" MODIFIED="1346052462100">
<font ITALIC="true"/>
</node>
<node TEXT="if either argument is not included (the colon still needs to be there), the subset extends as far in the omitted index&apos;s direction as possible" ID="ID_1606745782" CREATED="1345856823037" MODIFIED="1345856871639"/>
</node>
<node TEXT="copying one" ID="ID_1166203497" CREATED="1345856902971" MODIFIED="1345856904894">
<node TEXT="list[ : ]" ID="ID_646645375" CREATED="1345856905092" MODIFIED="1346052465301">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="append" ID="ID_337208293" CREATED="1345856928980" MODIFIED="1345856929910">
<node TEXT="li.append(&quot;new&quot;)" ID="ID_458542255" CREATED="1345856930177" MODIFIED="1346052468108">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="insert" ID="ID_1101777189" CREATED="1345856942275" MODIFIED="1345856943260">
<node TEXT="li.insert(2, &quot;new&quot;)" ID="ID_930135898" CREATED="1345856941677" MODIFIED="1346052469724">
<font ITALIC="true"/>
</node>
<node TEXT="the first two (in this case) elements are left unchanged" ID="ID_847668814" CREATED="1345856945499" MODIFIED="1345856962935"/>
</node>
<node TEXT="extend (append multiple)" ID="ID_1528488892" CREATED="1345856976962" MODIFIED="1345856983413">
<node TEXT="li.extend([&quot;first new thing&quot;, &quot;second new thing&quot;])" ID="ID_480419779" CREATED="1345856983670" MODIFIED="1346052472016">
<font ITALIC="true"/>
</node>
<node TEXT="sticks them onto the end" ID="ID_243504985" CREATED="1345856998218" MODIFIED="1345857000997"/>
</node>
<node TEXT="search" ID="ID_1681622195" CREATED="1345857430161" MODIFIED="1345857432396">
<node TEXT="li.index(&quot;value&quot;)" ID="ID_1897259597" CREATED="1345857438610" MODIFIED="1346052473701">
<font ITALIC="true"/>
</node>
<node TEXT="returns the index (e.g. 0 if it&apos;s first) corresponding to the first instance of the value" ID="ID_1658574473" CREATED="1345857442145" MODIFIED="1345857469840"/>
</node>
<node TEXT="test for membership" ID="ID_879535019" CREATED="1345857542524" MODIFIED="1345857547663">
<node TEXT="li.in(value)" ID="ID_1767344312" CREATED="1345857548588" MODIFIED="1346052475949">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="remove first instance" ID="ID_1202359689" CREATED="1345857664916" MODIFIED="1345857667679">
<node TEXT="li.remove( value )" ID="ID_1368319357" CREATED="1345857669634" MODIFIED="1346052477180">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="remove and return last value" ID="ID_1808066416" CREATED="1345857676731" MODIFIED="1345857705621">
<node TEXT="li.pop()" ID="ID_340723866" CREATED="1345857683827" MODIFIED="1346052478229">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="concatenate" ID="ID_117775196" CREATED="1345857773145" MODIFIED="1345857787940">
<node TEXT="&quot;extend&quot; is faster, and does not create a new list" ID="ID_765986757" CREATED="1345857838463" MODIFIED="1345857850271" COLOR="#669900">
<font NAME="SansSerif" SIZE="14" BOLD="true"/>
</node>
<node TEXT="list1 + list2" ID="ID_286346872" CREATED="1345857776962" MODIFIED="1346052480291">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="repeating one" ID="ID_1580212983" CREATED="1345857795401" MODIFIED="1345857799362">
<node TEXT="li * n" ID="ID_979797136" CREATED="1345857799616" MODIFIED="1346052481909">
<font ITALIC="true"/>
</node>
<node TEXT="if li = [1,2], this returns [1,2,1,2,1,2 ...], n copies" ID="ID_456189171" CREATED="1345857808632" MODIFIED="1345857824345"/>
</node>
<node TEXT="+=" ID="ID_1129054375" CREATED="1345857868711" MODIFIED="1345857869778">
<node TEXT="same as append, I guess" ID="ID_211482418" CREATED="1345857870070" MODIFIED="1345857873817"/>
</node>
</node>
<node TEXT="properties" ID="ID_861584337" CREATED="1345854831976" MODIFIED="1345854833203">
<node TEXT="zero-indexed" ID="ID_142437317" CREATED="1345854834015" MODIFIED="1345854836115"/>
<node TEXT="negative indices work" ID="ID_1585292409" CREATED="1345854865282" MODIFIED="1345854869767">
<node TEXT="-1 gives the last elt, etc." ID="ID_666485827" CREATED="1345854870768" MODIFIED="1345854876029"/>
</node>
</node>
<node TEXT="list comprehensions" ID="ID_421356688" CREATED="1345859865040" MODIFIED="1345859998298">
<node TEXT="one variable" ID="ID_519667418" CREATED="1345859940640" MODIFIED="1345860459590">
<node TEXT="from a list" ID="ID_657288206" CREATED="1345860459988" MODIFIED="1345860462140" COLOR="#669900">
<font NAME="SansSerif" SIZE="14" BOLD="true"/>
</node>
<node TEXT="&gt;&gt;&gt; li = [1, 9, 8, 4]&#xa;&gt;&gt;&gt; [elem*2 for elem in li]&#xa;[2, 18, 16, 8]" ID="ID_1913451007" CREATED="1345859869586" MODIFIED="1346052327828">
<font NAME="SansSerif" SIZE="14" BOLD="false" ITALIC="false"/>
</node>
</node>
<node TEXT="two variables" ID="ID_586319311" CREATED="1345859936257" MODIFIED="1345860455487">
<node TEXT="from a list of 2-tuples from a dictionary" ID="ID_1953847731" CREATED="1345860455791" MODIFIED="1345860456749" COLOR="#669900">
<font NAME="SansSerif" SIZE="14" BOLD="true"/>
</node>
<node TEXT="[&quot;%s=%s&quot; % (k, v) for k, v in params.items()]" ID="ID_428979415" CREATED="1345859935415" MODIFIED="1346052321528">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="flitered" ID="ID_631246596" CREATED="1346052079686" MODIFIED="1346052081249">
<node TEXT="[mapping-expression for element in source-list if filter-expression]" ID="ID_1074430310" CREATED="1346052070601" MODIFIED="1346052318904">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="filtered using &quot;callable&quot;" ID="ID_1464025305" CREATED="1346052254391" MODIFIED="1346052263012">
<node TEXT="methodList = [method for method in dir(object) if callable(getattr(object, method))]" ID="ID_1102905346" CREATED="1346052263322" MODIFIED="1346052312472">
<font ITALIC="true"/>
</node>
<node TEXT="dir(object) returns a list of attributes" ID="ID_227146176" CREATED="1346052266998" MODIFIED="1346052276643"/>
<node TEXT="getattr(object, method) is like object.method" ID="ID_1389956987" CREATED="1346052286385" MODIFIED="1346052296135">
<node TEXT="except it works for variable names" ID="ID_752699348" CREATED="1346052296348" MODIFIED="1346052300671"/>
</node>
</node>
</node>
<node TEXT="list filtering" ID="ID_1814986379" CREATED="1398470686827" MODIFIED="1398470695449">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1422063840" STARTINCLINATION="61;0;" ENDINCLINATION="61;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="tuples" ID="ID_4457424" CREATED="1345857894046" MODIFIED="1345857894944">
<node TEXT="pitfalls" ID="ID_9531763" CREATED="1345857899662" MODIFIED="1345857919681">
<node TEXT="use paren&apos;s" ID="ID_756385308" CREATED="1345857919861" MODIFIED="1345857921833"/>
<node TEXT="single element tuples" ID="ID_1788516821" CREATED="1345859499632" MODIFIED="1345859505099">
<node TEXT="need to be defined with a trailing comma inside the paren&apos;s" ID="ID_1501833412" CREATED="1345859505528" MODIFIED="1345859513970"/>
<node TEXT="otherwise it wouldn&apos;t be clear that it&apos;s a tuple" ID="ID_21988660" CREATED="1345859514207" MODIFIED="1345859520466"/>
</node>
</node>
<node TEXT="methods" ID="ID_1577784064" CREATED="1345857926302" MODIFIED="1345857927120">
<node TEXT="define" ID="ID_763841380" CREATED="1345857927318" MODIFIED="1345857928320">
<node TEXT="t = (1,2,&quot;thugs&quot;)" ID="ID_608115341" CREATED="1345857929158" MODIFIED="1346052336760">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="in" ID="ID_885190243" CREATED="1345858016484" MODIFIED="1345858018302">
<node TEXT="just like lists" ID="ID_192658256" CREATED="1345858018842" MODIFIED="1345858020446"/>
</node>
<node TEXT="No other methods!" ID="ID_826565056" CREATED="1345857972829" MODIFIED="1345858082405" COLOR="#669900">
<font NAME="SansSerif" SIZE="14" BOLD="true" ITALIC="false"/>
</node>
</node>
<node TEXT="functions" ID="ID_159925175" CREATED="1345858077899" MODIFIED="1345858079412">
<node TEXT="tuple( list )" ID="ID_666579979" CREATED="1345858084682" MODIFIED="1346052342056">
<font ITALIC="true"/>
<node TEXT="returns a tuple" ID="ID_67547986" CREATED="1345858088138" MODIFIED="1345858090708"/>
</node>
<node TEXT="list( tuple )" ID="ID_1077793578" CREATED="1345858091539" MODIFIED="1346052343415">
<font ITALIC="true"/>
<node TEXT="returns a list" ID="ID_422851719" CREATED="1345858095465" MODIFIED="1345858097660"/>
</node>
</node>
<node TEXT="properties" ID="ID_814642440" CREATED="1345857993484" MODIFIED="1345857996477">
<node TEXT="not modifiable" ID="ID_895184446" CREATED="1345857996731" MODIFIED="1345857998895"/>
<node TEXT="fast" ID="ID_1863378189" CREATED="1345857999101" MODIFIED="1345857999655"/>
</node>
</node>
<node TEXT="strings" ID="ID_378298719" CREATED="1345859367349" MODIFIED="1345859369551">
<node TEXT="methods" ID="ID_1320884149" CREATED="1345860535489" MODIFIED="1346052367176" COLOR="#669900">
<font NAME="SansSerif" SIZE="14" BOLD="true"/>
</node>
<node TEXT="concatenations" ID="ID_182683821" CREATED="1345859437276" MODIFIED="1345859439157">
<node TEXT="print pwd + &quot; is not a good password for &quot; + uid" ID="ID_1178338833" CREATED="1345859439436" MODIFIED="1346052354599">
<font NAME="SansSerif" SIZE="14" BOLD="false" ITALIC="true"/>
</node>
<node TEXT="only works when everything is a string" ID="ID_778974821" CREATED="1345859619269" MODIFIED="1345859629077" COLOR="#ff0000">
<icon BUILTIN="yes"/>
<font NAME="SansSerif" SIZE="14" BOLD="false"/>
</node>
</node>
<node TEXT="substitution" ID="ID_1298876122" CREATED="1398471351281" MODIFIED="1398471363918">
<node TEXT="alternatives" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_926982252" CREATED="1398471382223" MODIFIED="1398471384665"/>
<node TEXT="%" ID="ID_47393538" CREATED="1398471364880" MODIFIED="1398471366042">
<node TEXT="example" ID="ID_1340791097" CREATED="1398471438551" MODIFIED="1398471439657">
<node TEXT="&gt;&gt;&gt; &quot;%d.%d&quot; % (3,2)" ID="ID_1499819910" CREATED="1398471352140" MODIFIED="1398471352140"/>
<node TEXT="&apos;3.2&apos;" ID="ID_567491558" CREATED="1398471352140" MODIFIED="1398471352140"/>
</node>
<node TEXT="%s for a string" ID="ID_830630105" CREATED="1345859561920" MODIFIED="1345859565579"/>
<node TEXT="%d for an integer" ID="ID_379004201" CREATED="1345859555777" MODIFIED="1345859561468"/>
</node>
<node TEXT="string.format()" ID="ID_932393310" CREATED="1398471379904" MODIFIED="1398471386187"/>
</node>
<node TEXT="joining, with separator x" ID="ID_1938946924" CREATED="1398385304520" MODIFIED="1398454099398">
<node TEXT="x.join(strings)" ID="ID_1841771151" CREATED="1398385317112" MODIFIED="1398385322267"/>
<node TEXT="x is often &apos;\n&apos;" ID="ID_731763213" CREATED="1398385330662" MODIFIED="1398385345106"/>
<node TEXT="example" ID="ID_1226069452" CREATED="1345860548193" MODIFIED="1398455448370">
<node TEXT="&gt;&gt;&gt; &quot; /// &quot;.join([&quot;a&quot;,&quot;b&quot;,&quot;c&quot;])&#xa;&apos;a /// b /// c&apos;" ID="ID_1641127420" CREATED="1345860554058" MODIFIED="1345860579435"/>
</node>
</node>
<node TEXT="split" ID="ID_1133005396" CREATED="1345860643999" MODIFIED="1345860644794">
<node TEXT="&gt;&gt;&gt; s&#xa;&apos;server=mpilgrim;uid=sa;database=master;pwd=secret&apos;&#xa;&gt;&gt;&gt; s.split(&quot;;&quot;)    &#xa;[&apos;server=mpilgrim&apos;, &apos;uid=sa&apos;, &apos;database=master&apos;, &apos;pwd=secret&apos;]" ID="ID_259792010" CREATED="1345860682383" MODIFIED="1345860683113"/>
<node TEXT="splits a string according to some delimiter (which usually appears in the string multiple times)" ID="ID_1817879819" CREATED="1345860645176" MODIFIED="1345860670265"/>
<node TEXT="optional second argument indicates how many times to split" ID="ID_1349990007" CREATED="1345860696822" MODIFIED="1345860704144">
<node TEXT="defaults to &quot;everywhere possible&quot;" ID="ID_552264768" CREATED="1345860705005" MODIFIED="1345860710816"/>
</node>
</node>
<node TEXT="ljust( length )" ID="ID_621891874" CREATED="1346054404297" MODIFIED="1346054442820">
<node TEXT="(l as in labor)" ID="ID_1352622160" CREATED="1346054406170" MODIFIED="1346054413954" COLOR="#669900">
<font NAME="SansSerif" SIZE="14" BOLD="true"/>
</node>
<node TEXT="adds space to achieve the given string length" ID="ID_539753177" CREATED="1346054414537" MODIFIED="1346054453003"/>
</node>
<node TEXT="rjust" ID="ID_387005064" CREATED="1346054462553" MODIFIED="1346054464323">
<node TEXT="I&apos;m guessing it exists, similar to ljust" ID="ID_123383378" CREATED="1346054464569" MODIFIED="1346054475082"/>
</node>
<node TEXT="string filtering" LOCALIZED_STYLE_REF="default" ID="ID_1216812537" CREATED="1398470721329" MODIFIED="1398470736722">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1200544472" STARTINCLINATION="80;0;" ENDINCLINATION="80;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="None" ID="ID_1493210120" CREATED="1345852888699" MODIFIED="1345852898012">
<node TEXT="the null value" ID="ID_292403534" CREATED="1345852898450" MODIFIED="1346049798214"/>
<node TEXT="If an expression evaluates to None, it won&apos;t echo to the screen!" ID="ID_1842303541" CREATED="1346054224633" MODIFIED="1346054241520">
<node TEXT="&gt;&gt;&gt; def foo(): print 2&#xa;&gt;&gt;&gt; foo()&#xa;2&#xa;&gt;&gt;&gt; foo.__doc__     &#xa;&gt;&gt;&gt; foo.__doc__ == None &#xa;True&#xa;&gt;&gt;&gt; str(foo.__doc__)    &#xa;&apos;None&apos;" ID="ID_1224169860" CREATED="1346054251535" MODIFIED="1346054278488"/>
</node>
</node>
</node>
<node TEXT="querying, testing" ID="ID_1824376704" CREATED="1398453710778" MODIFIED="1398455262994">
<node TEXT="attributes" LOCALIZED_STYLE_REF="default" ID="ID_876204348" CREATED="1346099667665" MODIFIED="1348891639591">
<node TEXT="__class__" ID="ID_268900365" CREATED="1346099669202" MODIFIED="1346099723409">
<font ITALIC="true"/>
</node>
<node TEXT="__doc__" ID="ID_1144201664" CREATED="1346099673177" MODIFIED="1346099723410">
<font ITALIC="true"/>
</node>
<node TEXT="__name__" ID="ID_841805784" CREATED="1346099717161" MODIFIED="1346099723411">
<font ITALIC="true"/>
</node>
<node TEXT="__bases__" ID="ID_384877759" CREATED="1346099719458" MODIFIED="1346099723411">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="identity and equivalence" ID="ID_756215440" CREATED="1346107357322" MODIFIED="1346107396731">
<node TEXT="is" ID="ID_141292950" CREATED="1346107358882" MODIFIED="1346107370146">
<font ITALIC="true"/>
<node TEXT="tests whether two objects reference the same memory" ID="ID_33170030" CREATED="1346107368360" MODIFIED="1346107382285"/>
<node TEXT="stricter than ==" ID="ID_1605931261" CREATED="1346107382874" MODIFIED="1346107385141"/>
</node>
<node TEXT="==" ID="ID_1821440196" CREATED="1346107385978" MODIFIED="1346107397569">
<font ITALIC="true"/>
<node TEXT="tests for equivalence, not identity" ID="ID_808553368" CREATED="1346107387617" MODIFIED="1346107393061"/>
</node>
<node TEXT="&quot;===&quot; :: enforces type check" ID="Freemind_Link_750708488" CREATED="1277586128768" MODIFIED="1277586140833"/>
</node>
<node TEXT="list filtering" ID="ID_1956027550" CREATED="1375846256105" MODIFIED="1398453097007">
<node TEXT="links in" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1422063840" CREATED="1398470692122" MODIFIED="1398470698591"/>
<node TEXT="&quot;list filtering&quot; is a technical term" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_442247988" CREATED="1398453261912" MODIFIED="1398453268715"/>
<node LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1288805379" CREATED="1398453097340" MODIFIED="1398453098939"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      to select from a list (surprisingly brief)
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="example" ID="ID_957610744" CREATED="1376858480700" MODIFIED="1376858484511">
<node TEXT="mylist = [(25,7),(26,9),(55,10),(&quot;horb&quot;,10)]" ID="ID_227838929" CREATED="1375846256106" MODIFIED="1376799845467"/>
<node TEXT="[age for (age,person_id) in mylist if person_id == 10]" ID="ID_1227660095" CREATED="1375846256106" MODIFIED="1375846256106"/>
<node TEXT="output: [55, &apos;horb&apos;]" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_558993447" CREATED="1375846256106" MODIFIED="1376858648796"/>
</node>
<node TEXT="example" ID="ID_1126106083" CREATED="1376858484723" MODIFIED="1376858485631">
<node TEXT="myList = [(1,2),(3,4)]" ID="ID_1780973952" CREATED="1376858489540" MODIFIED="1376858501581"/>
<node TEXT="[(x,y**2) for (x,y) in myList]" ID="ID_1248177682" CREATED="1376858501834" MODIFIED="1376858775446"/>
<node TEXT="output: [(1, 4), (3, 16)]" ID="ID_195021977" CREATED="1376858649612" MODIFIED="1376858719872"/>
</node>
</node>
<node TEXT="string filtering" ID="ID_118442571" CREATED="1398453251369" MODIFIED="1398453253372">
<node TEXT="links in" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1200544472" CREATED="1398470718362" MODIFIED="1398470720817"/>
<node TEXT="&quot;string filtering&quot; is my own invented term" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1245571662" CREATED="1398453270360" MODIFIED="1398453276593"/>
<node TEXT="to find all substrings bearing a pattern" ID="ID_1120116488" CREATED="1375846256105" MODIFIED="1375846256105">
<node TEXT="&gt;&gt;&gt; import re" ID="ID_52645372" CREATED="1375846256105" MODIFIED="1375846256105"/>
<node TEXT="&gt;&gt;&gt; re.findall(r&apos;\d+&apos;, &apos;hello 42 I\&apos;m a 32 string 30&apos;)" ID="ID_1988615233" CREATED="1375846256105" MODIFIED="1375846256105"/>
<node TEXT="[&apos;42&apos;, &apos;32&apos;, &apos;30&apos;]" ID="ID_206530250" CREATED="1375846256105" MODIFIED="1375846256105"/>
</node>
</node>
<node TEXT="functions for it" LOCALIZED_STYLE_REF="default" ID="ID_1979784740" CREATED="1346050826004" MODIFIED="1398454876622">
<node TEXT="type" ID="ID_1688703508" CREATED="1346047163394" MODIFIED="1346047166477">
<node TEXT="self-explanatory" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_112332323" CREATED="1346047170378" MODIFIED="1398454777218">
<edge STYLE="bezier" COLOR="#808080" WIDTH="thin"/>
</node>
</node>
<node TEXT="dir" ID="ID_1685236267" CREATED="1346047762275" MODIFIED="1346047762958">
<node TEXT="lists a thing&apos;s attributes" ID="ID_1225464625" CREATED="1346047763251" MODIFIED="1346047770582"/>
</node>
<node TEXT="callable" ID="ID_1372948783" CREATED="1346048024726" MODIFIED="1346048026201">
<node TEXT="returns True if a thing can be called" ID="ID_69554061" CREATED="1346048026413" MODIFIED="1346048033032"/>
</node>
<node TEXT="info" ID="ID_1266734073" CREATED="1346048674630" MODIFIED="1346048675553">
<node TEXT="couldn&apos;t get it to work in the Google interpreter" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1743166284" CREATED="1346048772401" MODIFIED="1398454790578"/>
</node>
<node TEXT="getattr( object, attr )" ID="ID_261324916" CREATED="1346049940286" MODIFIED="1346049952761">
<node TEXT="Returns the &apos;attr&apos; attribute of &apos;object&apos;." ID="ID_1763779209" CREATED="1346049953054" MODIFIED="1346050225699"/>
<node TEXT="optional 3rd arg for lookup failure" ID="ID_132348712" CREATED="1346051685580" MODIFIED="1346051692438">
<node TEXT="The third argument is a default value that is returned if the attribute or method specified by the second argument wasn&apos;t found." ID="ID_191929993" CREATED="1346051692793" MODIFIED="1346051692793"/>
</node>
</node>
<node TEXT="__module__" ID="ID_295952453" CREATED="1398385508018" MODIFIED="1398454853370">
<node LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_66573222" CREATED="1398454111563" MODIFIED="1398454113347"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      finding the module something came from
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="&gt;&gt;&gt; import tkinter" ID="ID_1825168717" CREATED="1398385524208" MODIFIED="1398385524208"/>
<node TEXT="&gt;&gt;&gt; x = tkinter.Frame" ID="ID_564566851" CREATED="1398385524208" MODIFIED="1398385524208"/>
<node TEXT="&gt;&gt;&gt; x.__module__" ID="ID_906731119" CREATED="1398385524213" MODIFIED="1398385524213"/>
<node TEXT="&apos;tkinter&apos;" ID="ID_1204210887" CREATED="1398385524214" MODIFIED="1398385524214"/>
</node>
<node TEXT="repr( thing )" ID="ID_1784254658" CREATED="1376861794762" MODIFIED="1376861800916">
<node TEXT="returns a string containing a printable representation of an object" ID="ID_364990567" CREATED="1376861802641" MODIFIED="1376861830537"/>
<node TEXT="(optional, I think): &quot;A class can control what this function returns for its instances by defining a __repr__() method.&quot;" ID="ID_581738729" CREATED="1376861839389" MODIFIED="1376861848504"/>
</node>
<node TEXT="print( str( [1,2,3].__class__ ) )" ID="ID_1634251662" CREATED="1374299442716" MODIFIED="1398470078708"/>
<node TEXT="vars([object])" ID="ID_1064681071" CREATED="1376862054073" MODIFIED="1376862057851">
<node TEXT="returns a class or object&apos;s __dict__ attribute" ID="ID_243931017" CREATED="1376862058072" MODIFIED="1376862072237"/>
</node>
</node>
</node>
</node>
<node TEXT="functions" LOCALIZED_STYLE_REF="default" ID="ID_1684380987" CREATED="1345852849381" MODIFIED="1398455761130">
<node TEXT="defining" ID="ID_1722425503" CREATED="1398455811398" MODIFIED="1398455818745">
<node TEXT="first line" ID="ID_156286262" CREATED="1374298542149" MODIFIED="1374298543112">
<node TEXT="def functionName (parameters);" ID="ID_1800584461" CREATED="1345852852906" MODIFIED="1346052409904">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="arguments" ID="ID_1327732309" CREATED="1346046960025" MODIFIED="1346046961098">
<node TEXT="optional arguments" ID="ID_1366349244" CREATED="1346046874101" MODIFIED="1346046877024">
<node TEXT="def method( arg1, arg2 = 0 )" ID="ID_597255844" CREATED="1346046877244" MODIFIED="1346052412442">
<font ITALIC="true"/>
</node>
<node TEXT="arg2 defaults to 0" LOCALIZED_STYLE_REF="default" ID="ID_1875273015" CREATED="1346046907215" MODIFIED="1351183327784"/>
</node>
<node TEXT="arg&apos;s named, and perhaps out of order" LOCALIZED_STYLE_REF="default" ID="ID_1018735074" CREATED="1346046964153" MODIFIED="1374296746727">
<node TEXT="suppose f expects arguments x,y,z, and all have default values" ID="ID_1380270513" CREATED="1346046996464" MODIFIED="1346047019347"/>
<node TEXT="you could call f( 4, z = 3 ), and y would take its default value" ID="ID_832646937" CREATED="1346047019568" MODIFIED="1346047053210"/>
</node>
</node>
<node TEXT="variable-length argument lists" ID="ID_545848914" CREATED="1407440589335" MODIFIED="1407440595218">
<node TEXT="argument notation: *args, **keywords, and option=value" ID="ID_503390931" CREATED="1400364735042" MODIFIED="1400364752726">
<node TEXT="http://stackoverflow.com/questions/36901/what-does-double-star-and-star-do-for-python-parameters" ID="ID_109910083" CREATED="1400364733335" MODIFIED="1400364733335" LINK="http://stackoverflow.com/questions/36901/what-does-double-star-and-star-do-for-python-parameters"/>
</node>
</node>
<node TEXT="local variables" ID="ID_1711573429" CREATED="1374328998790" MODIFIED="1374329011448">
<node TEXT="introduce ala &quot;x = 3&quot;" ID="ID_1084847413" CREATED="1374329011669" MODIFIED="1374329021384"/>
</node>
<node TEXT="body" ID="ID_195106894" CREATED="1374298534029" MODIFIED="1374298535480">
<node TEXT="defined by tab indentation" ID="ID_1576552360" CREATED="1374298546661" MODIFIED="1374298550440"/>
</node>
<node TEXT="return" ID="ID_1282423508" CREATED="1374328982990" MODIFIED="1374328984057">
<node TEXT="a line of the form &quot;return x&quot; will do that" ID="ID_35572842" CREATED="1374328984229" MODIFIED="1374328994265"/>
<node TEXT="no paren&apos;s" ID="ID_259235474" CREATED="1374328994469" MODIFIED="1374328995985"/>
</node>
</node>
<node TEXT="lambda functions" ID="ID_938724500" CREATED="1346053241116" MODIFIED="1398455831192">
<node TEXT="lambda = nameless" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1364279838" CREATED="1398455834270" MODIFIED="1398455844993"/>
<node TEXT="def&apos;n / example" ID="ID_911885345" CREATED="1346053288995" MODIFIED="1346053294998">
<node TEXT="&gt;&gt;&gt; (lambda x: x*2) (3)&#xa;6" ID="ID_213135370" CREATED="1346053270010" MODIFIED="1346053300192">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="restrictions" ID="ID_1775411245" CREATED="1346053416966" MODIFIED="1346053418913">
<node TEXT="can only be one expression" ID="ID_932859935" CREATED="1346053332467" MODIFIED="1346053424496">
<node TEXT="hence no return statement" ID="ID_1192337586" CREATED="1346053348860" MODIFIED="1346053355330"/>
</node>
<node TEXT="can&apos;t contain commands" ID="ID_687102808" CREATED="1346053415086" MODIFIED="1346053427520">
<node TEXT="what&apos;s a command?" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1234097296" CREATED="1346053428475" MODIFIED="1374296815198">
<icon BUILTIN="yes"/>
</node>
</node>
</node>
<node TEXT="a problem they solve" ID="ID_1601166040" CREATED="1346053461073" MODIFIED="1374296855191">
<node TEXT="incomplete" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1124738214" CREATED="1374296840885" MODIFIED="1374296842621"/>
<node TEXT="&quot;I use them in places where I want to encapsulate specific, non-reusable code without littering my code with a lot of little one-line functions.&quot;" ID="ID_1888702915" CREATED="1346053462781" MODIFIED="1346053465687"/>
</node>
</node>
</node>
<node TEXT="I/O" LOCALIZED_STYLE_REF="default" ID="ID_232356176" CREATED="1376861334062" MODIFIED="1398453958511">
<node TEXT="input()" ID="ID_330507209" CREATED="1376861166591" MODIFIED="1376861168410">
<node TEXT="http://docs.python.org/2/library/functions.html#input" ID="ID_1132255115" CREATED="1376861176707" MODIFIED="1376861176707" LINK="http://docs.python.org/2/library/functions.html#input"/>
<node TEXT="lets you evaluate keyboard-inputted code from compiled (not interactive) mode" ID="ID_1587062328" CREATED="1376861177341" MODIFIED="1376861214079"/>
</node>
<node TEXT="files" ID="ID_111823414" CREATED="1398383222202" MODIFIED="1398383222893">
<node TEXT="to open" ID="ID_913498621" CREATED="1398383225257" MODIFIED="1398383559507">
<node TEXT="f = open(&quot;/music/_singles/kairo.mp3&quot;, &quot;rb&quot;)" ID="ID_1459326308" CREATED="1398383223962" MODIFIED="1398383224413"/>
<node TEXT="&quot;file&quot; is a synonym for &quot;open&quot;" ID="ID_1841339297" CREATED="1398384140046" MODIFIED="1398384145513"/>
</node>
<node TEXT="attributes" ID="ID_1835325484" CREATED="1398383559704" MODIFIED="1398383560812">
<node TEXT="f.mode" ID="ID_634336161" CREATED="1398383233384" MODIFIED="1398383235261">
<node TEXT="read, write, etc." ID="ID_1184430710" CREATED="1398383322919" MODIFIED="1398383329346"/>
<node TEXT="[print open.__doc__] &quot;displays a great explanation of all the possible modes&quot;" ID="ID_1219810674" CREATED="1398383329526" MODIFIED="1398383338490"/>
</node>
<node TEXT="f.name" ID="ID_433586972" CREATED="1398383235488" MODIFIED="1398383238869"/>
<node TEXT="f.closed" ID="ID_233753897" CREATED="1398383754072" MODIFIED="1398383755323">
<node TEXT="whether it&apos;s closed" ID="ID_1172344313" CREATED="1398383755496" MODIFIED="1398383757547"/>
</node>
</node>
<node TEXT="read" ID="ID_827928929" CREATED="1398383548200" MODIFIED="1398383549163">
<node TEXT="f.tell()" ID="ID_1459505608" CREATED="1398383565599" MODIFIED="1398383567548">
<node TEXT="reports current position; starts at 0" ID="ID_1624565755" CREATED="1398383620854" MODIFIED="1398383625570"/>
</node>
<node TEXT="f.seek(where, how)" ID="ID_1711871148" CREATED="1398383571151" MODIFIED="1398383662654">
<node TEXT="move to another position" ID="ID_925887596" CREATED="1398383653558" MODIFIED="1398383659713"/>
<node TEXT="2nd argument is how to interpret first" ID="ID_1090225247" CREATED="1398383663227" MODIFIED="1398383668239"/>
</node>
<node TEXT="f.read()" ID="ID_1362762508" CREATED="1398383575455" MODIFIED="1398383577320"/>
</node>
<node TEXT="close ASAP" ID="ID_436769306" CREATED="1398383730105" MODIFIED="1398383734021">
<node TEXT="open files are cpu-costly" ID="ID_148214814" CREATED="1398383734664" MODIFIED="1398383746540"/>
<node TEXT="f.close()" ID="ID_642266242" CREATED="1398383767504" MODIFIED="1398383769267"/>
</node>
<node TEXT="write" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_605626970" CREATED="1398384055504" MODIFIED="1398384058749">
<node TEXT="two modes: append and overwrite" ID="ID_1981274123" CREATED="1398384059184" MODIFIED="1398384063131"/>
<node TEXT="creates the file if it doesn&apos;t exist" ID="ID_702407870" CREATED="1398384072928" MODIFIED="1398384080243"/>
</node>
</node>
<node TEXT="the file tree" ID="ID_205547900" CREATED="1398386321796" MODIFIED="1398386323311">
<node TEXT="sec. 6.5, &quot;Working with Directories&quot;" ID="ID_1946950223" CREATED="1398386530646" MODIFIED="1398386541096"/>
<node TEXT="isfile" ID="ID_829070660" CREATED="1398386328796" MODIFIED="1398386329422">
<node TEXT="folders are not" ID="ID_1649486034" CREATED="1398386331284" MODIFIED="1398386336854"/>
</node>
<node TEXT="&quot;glob&quot;, for wildcards" ID="ID_866835395" CREATED="1398386519638" MODIFIED="1398386551856">
<node TEXT="glob.glob(&apos;c:\\music\\*\\*.mp3&apos;)" ID="ID_712637738" CREATED="1398386569741" MODIFIED="1398386570224"/>
<node TEXT="returns a list of everything matching the expr" ID="ID_1768908173" CREATED="1398386556205" MODIFIED="1398386561048"/>
</node>
</node>
</node>
<node TEXT="modules and import" LOCALIZED_STYLE_REF="default" ID="ID_877827816" CREATED="1345853496831" MODIFIED="1398455939462">
<node TEXT="import" ID="ID_283578154" CREATED="1398453920296" MODIFIED="1398453921282">
<node TEXT="import Tkinter" ID="ID_126494705" CREATED="1375559472731" MODIFIED="1375559472731"/>
<node TEXT="from Tkinter import *" ID="ID_593515395" CREATED="1375559472731" MODIFIED="1375559472731"/>
<node TEXT="import Tkinter as Tk" LOCALIZED_STYLE_REF="default" ID="ID_467184764" CREATED="1375559472732" MODIFIED="1398453303665"/>
</node>
<node TEXT="reload()" ID="ID_29869595" CREATED="1376861713881" MODIFIED="1376861715276">
<node TEXT="tag reimport" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1612603474" CREATED="1408735154149" MODIFIED="1408735157496"/>
<node TEXT="Python 2" ID="ID_247353659" CREATED="1408735113505" MODIFIED="1408735116613">
<node TEXT="import Overlarchy as O" ID="ID_1763988658" CREATED="1376861749357" MODIFIED="1376861753480"/>
<node TEXT="[modify Overlarchy.py]" ID="ID_984868279" CREATED="1376861754356" MODIFIED="1376861759864"/>
<node TEXT="reload( O )" ID="ID_404126920" CREATED="1376861760109" MODIFIED="1376861763304"/>
</node>
<node TEXT="Python 3" ID="ID_269145656" CREATED="1408735118081" MODIFIED="1408735119436">
<node TEXT="import imp" ID="ID_672693824" CREATED="1408735120112" MODIFIED="1408735123684"/>
<node TEXT="import Overlarchy as O" ID="ID_1195850023" CREATED="1408735123896" MODIFIED="1408735145497"/>
<node TEXT="[modify Overlarchy.py]" ID="ID_1820783005" CREATED="1408735129152" MODIFIED="1408735135314"/>
<node TEXT="imp.reload( O )" ID="ID_924924457" CREATED="1408735135607" MODIFIED="1408735143523"/>
</node>
</node>
<node TEXT="modules" ID="ID_93225033" CREATED="1398455943482" MODIFIED="1398455952457">
<font BOLD="true"/>
<node TEXT="A module is a file of Python code." ID="ID_800604403" CREATED="1346045696190" MODIFIED="1398455860599"/>
<node TEXT="importing them" ID="ID_151351712" CREATED="1345853529967" MODIFIED="1345853535473">
<node TEXT="import the module as its own namespace" ID="ID_1908333881" CREATED="1346097470975" MODIFIED="1346097477962">
<node TEXT="how to" ID="ID_1460947882" CREATED="1374297090989" MODIFIED="1374297095377">
<node TEXT="import module" ID="ID_97139904" CREATED="1345853506524" MODIFIED="1346097378051">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="future syntax incured" ID="ID_1308360388" CREATED="1374297069783" MODIFIED="1374297085041">
<node TEXT="if a module named &quot;module&quot; is imported this way" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_758851206" CREATED="1374297110844" MODIFIED="1374297124264"/>
<node TEXT="functions from module must be called as in &quot;module.function&quot;" ID="ID_1816258659" CREATED="1346097368580" MODIFIED="1374297100025"/>
</node>
</node>
<node TEXT="import some of the module into the local namespace" ID="ID_334233983" CREATED="1346097480774" MODIFIED="1346097489337">
<node TEXT="how to" ID="ID_120334976" CREATED="1374297139324" MODIFIED="1374297141576">
<node TEXT="from module import stuff" ID="ID_1111324231" CREATED="1346097348186" MODIFIED="1346097355727">
<font ITALIC="true"/>
</node>
</node>
<node TEXT="future syntax incured" ID="ID_295583092" CREATED="1374297069783" MODIFIED="1374297085041">
<node TEXT="if a module named &quot;module&quot; is imported this way" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1601719951" CREATED="1374297110844" MODIFIED="1374297124264"/>
<node TEXT="its functions can be called directly, without specifying their origin" ID="ID_1150731679" CREATED="1346097396256" MODIFIED="1374297165752"/>
</node>
</node>
<node TEXT="import all of a module into the local namespace" ID="ID_1532367747" CREATED="1346097459438" MODIFIED="1374297196489">
<node TEXT="deprecated" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1955554748" CREATED="1374297215754" MODIFIED="1374297218715">
<node TEXT="makes it hard to know where a function came from" ID="ID_748299153" CREATED="1346097635553" MODIFIED="1346097649265"/>
</node>
<node TEXT="from module import *" ID="ID_1703938747" CREATED="1346097453487" MODIFIED="1346097457982">
<font ITALIC="true"/>
</node>
</node>
</node>
<node TEXT="using functions from one" ID="ID_743187910" CREATED="1345853539134" MODIFIED="1374297235089">
<node TEXT="A module&apos;s functions are attributes of it." ID="ID_1112534799" CREATED="1346051337141" MODIFIED="1374297263452"/>
<node TEXT="Therefore the dot calls them." ID="ID_581735081" CREATED="1346051368196" MODIFIED="1374297282470">
<node TEXT="module.function" ID="ID_1933240112" CREATED="1345853543927" MODIFIED="1346052377745">
<font ITALIC="true"/>
</node>
</node>
</node>
<node TEXT="where to put them : the &quot;search path&quot;" ID="ID_49469201" CREATED="1374297311271" MODIFIED="1374334667041">
<node TEXT="tag pitfall" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1215391545" CREATED="1374334644855" MODIFIED="1374334655081"/>
<node TEXT="viewing my search path" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1290421628" CREATED="1374334646903" MODIFIED="1374334653704">
<node TEXT="import sys&#xa;print sys.path" ID="ID_1890156098" CREATED="1374334656263" MODIFIED="1374334657730"/>
</node>
<node TEXT="adding to my search path" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_693081888" CREATED="1374334713661" MODIFIED="1374334721200">
<node TEXT="import sys&#xa;sys.path.append(&apos;/Users/nick/programming/&apos;)" ID="ID_12084004" CREATED="1374334728740" MODIFIED="1374334729280"/>
</node>
<node TEXT="commercial ones seem to be going here" ID="ID_854503518" CREATED="1374367254074" MODIFIED="1374367260565">
<node TEXT="/Library/Python/2.7/site-packages" ID="ID_1432383520" CREATED="1374367260932" MODIFIED="1374367260932"/>
</node>
<node TEXT="most modules are in one of those places" ID="ID_448449813" CREATED="1345853643880" MODIFIED="1374334695296">
<node TEXT="a path is a collection of places" ID="ID_139561318" CREATED="1374334695494" MODIFIED="1374334701025"/>
</node>
<node TEXT="the rest are built in" ID="ID_967313665" CREATED="1345853725045" MODIFIED="1345853738832"/>
<node TEXT="the folder hosting the program running is listed first in it" ID="ID_152439932" CREATED="1374335113321" MODIFIED="1374335126599"/>
</node>
<node TEXT="to measure the current module : __name__" ID="ID_1657367520" CREATED="1345854188852" MODIFIED="1374328704568">
<node TEXT="http://www.diveintopython.net/getting_to_know_python/testing_modules.html" ID="ID_152961019" CREATED="1345854187441" MODIFIED="1345854187441" LINK="http://www.diveintopython.net/getting_to_know_python/testing_modules.html"/>
<node TEXT="what __name__ is" ID="ID_1268715703" CREATED="1374328709341" MODIFIED="1374328714072">
<node TEXT="It is an attribute of a module." ID="ID_149070139" CREATED="1346045737994" MODIFIED="1346045831787"/>
<node TEXT="It is &quot;__main__&quot; if the module is itself being run as the main code body." ID="ID_189797186" CREATED="1346045738511" MODIFIED="1346045867461"/>
<node TEXT="It is the module&apos;s filename if the module is an import to the main code body." ID="ID_1267437670" CREATED="1346045832456" MODIFIED="1346045863317"/>
</node>
<node TEXT="a problem it solves" ID="ID_1539631411" CREATED="1374328717341" MODIFIED="1374328727352">
<node TEXT="if __name__ == &quot;__main__&quot;:" ID="ID_636359279" CREATED="1346045893236" MODIFIED="1346052388721">
<font ITALIC="true"/>
</node>
<node TEXT="it will execute if the module is the main code body, and not otherwise" ID="ID_727759246" CREATED="1346045909348" MODIFIED="1374328583916"/>
</node>
</node>
<node TEXT="automatically imported : __builtin__" LOCALIZED_STYLE_REF="default" ID="ID_1497984385" CREATED="1346048448240" MODIFIED="1374328742775">
<font ITALIC="false"/>
<node TEXT="no need to import" ID="ID_1403672209" CREATED="1346048452543" MODIFIED="1346048459263"/>
<node TEXT="as if &quot;from __builtin__ import *&quot; runs implicitly on startup" ID="ID_430126978" CREATED="1346048490461" MODIFIED="1346048502432"/>
</node>
<node TEXT="privacy" ID="ID_1234614466" CREATED="1346107845608" MODIFIED="1346107846927">
<node TEXT="is this true? elsewhere I thought I read that Python does not support privacy." ID="ID_1669829272" CREATED="1398455893875" MODIFIED="1398455904998"/>
<node TEXT="use" ID="ID_45483921" CREATED="1374328833818" MODIFIED="1374328835013">
<node TEXT="Private functions can&apos;t be called from outside the module that defines them." ID="ID_830535856" CREATED="1346107847160" MODIFIED="1346107937793"/>
</node>
<node TEXT="syntax" ID="ID_689688662" CREATED="1374328837242" MODIFIED="1374328838621">
<node TEXT="Everything with &quot;__&quot; on the left and not on the right of its name is private." ID="ID_238083560" CREATED="1346107892568" MODIFIED="1374328847005"/>
</node>
</node>
</node>
</node>
<node TEXT="non-core topics" ID="ID_1348715266" CREATED="1398455205510" MODIFIED="1398455209084">
<font BOLD="true"/>
<node TEXT="regular expressions" ID="ID_549336457" CREATED="1375844467101" MODIFIED="1375844470113">
<node TEXT="pitfall : usually, prefix the string with r" ID="ID_851308278" CREATED="1375845672159" MODIFIED="1375845684670">
<node TEXT="argument" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_178630369" CREATED="1375844507338" MODIFIED="1375845689838"/>
<node TEXT="ordinarily, inside Python strings, \\ represents \" ID="ID_893251649" CREATED="1375844525295" MODIFIED="1375844639334">
<node TEXT="that is, the \ escapes itslef" ID="ID_269262943" CREATED="1375844589924" MODIFIED="1375844595401"/>
<node TEXT="without the first, the second \ would be a special character" ID="ID_1663023674" CREATED="1375844595645" MODIFIED="1375844612817"/>
</node>
<node TEXT="to avoid \&apos;s being an escape character, prefix the string with r" ID="ID_1492349924" CREATED="1375844654272" MODIFIED="1375844665999">
<node TEXT="http://docs.python.org/2/library/re.html" ID="ID_1259322793" CREATED="1375844686519" MODIFIED="1375844686519" LINK="http://docs.python.org/2/library/re.html"/>
<node TEXT="r&quot;\n&quot; is a two-character string containing &apos;\&apos; and &apos;n&apos;, while &quot;\n&quot; is a one-character string containing a newline." ID="ID_751677817" CREATED="1375844680208" MODIFIED="1375844682028"/>
</node>
<node TEXT="in ordinary reg exp&apos;s, \ is the backslash" LOCALIZED_STYLE_REF="styles.topic" ID="ID_669907992" CREATED="1375844470342" MODIFIED="1375844544676"/>
</node>
<node TEXT="special characters" ID="ID_396451182" CREATED="1375844799405" MODIFIED="1375844802745">
<node TEXT="special characters not special in sets" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_53708184" CREATED="1375845185191" MODIFIED="1375845210119">
<node TEXT="except -, which is only special in a set" ID="ID_1407282965" CREATED="1375845219265" MODIFIED="1375845225591"/>
</node>
<node TEXT="." ID="ID_272926469" CREATED="1375844817883" MODIFIED="1375844819175">
<node TEXT="one char" ID="ID_1831858344" CREATED="1375844871380" MODIFIED="1375844873616"/>
<node TEXT="with exceptions" ID="ID_1406410695" CREATED="1375844875133" MODIFIED="1375844876969"/>
</node>
<node TEXT="^" ID="ID_658278453" CREATED="1375844840706" MODIFIED="1375844844182">
<node TEXT="start, or after newline" ID="ID_1335716949" CREATED="1375844886641" MODIFIED="1375844891389"/>
</node>
<node TEXT="$" ID="ID_159025858" CREATED="1375844850229" MODIFIED="1375844853009">
<node TEXT="end, or before newline" ID="ID_266733357" CREATED="1375844896147" MODIFIED="1375844899624"/>
</node>
<node TEXT="*" ID="ID_1998300609" CREATED="1375844865155" MODIFIED="1375844866237">
<node TEXT="0 or more of the preceding" ID="ID_1915237232" CREATED="1375844904911" MODIFIED="1375844920455"/>
</node>
<node TEXT="+" ID="ID_413351968" CREATED="1375844929494" MODIFIED="1375844930458">
<node TEXT="1 or more" ID="ID_749893597" CREATED="1375844930839" MODIFIED="1375844931978"/>
</node>
<node TEXT="?" ID="ID_1596644277" CREATED="1375844941202" MODIFIED="1375844942269">
<node TEXT="0 or 1" ID="ID_953804197" CREATED="1375844942483" MODIFIED="1375844943734"/>
</node>
<node TEXT="*?, +?, ??" ID="ID_858724497" CREATED="1375844969066" MODIFIED="1375844984691">
<node TEXT="minimal, whereas those operations without the ? are greedy" ID="ID_1494907957" CREATED="1375844985872" MODIFIED="1375845001984"/>
</node>
<node TEXT="{m}" ID="ID_588276923" CREATED="1375845013457" MODIFIED="1375845017109">
<node TEXT="match exactly m of the previous" ID="ID_1562121585" CREATED="1375845017538" MODIFIED="1375845022022"/>
</node>
<node TEXT="{m,n}" ID="ID_605100732" CREATED="1375845013457" MODIFIED="1375845031081">
<node TEXT="match from m to n of the previous" ID="ID_163289797" CREATED="1375845017538" MODIFIED="1375845036275"/>
</node>
<node TEXT="{m,n}?" ID="ID_1840210278" CREATED="1375845013457" MODIFIED="1375845048447">
<node TEXT="match as few as possible" ID="ID_499801845" CREATED="1375845017538" MODIFIED="1375845052216"/>
</node>
<node TEXT="\" ID="ID_1177409468" CREATED="1375845064928" MODIFIED="1375845069893">
<node TEXT="escaoe" ID="ID_1952578309" CREATED="1375845071219" MODIFIED="1375845072077"/>
</node>
<node TEXT="[]" ID="ID_1823771114" CREATED="1375845255605" MODIFIED="1375845257425">
<node TEXT="see &quot;sets&quot;" ID="ID_1202483628" CREATED="1375845257638" MODIFIED="1375845533567"/>
</node>
<node TEXT="|" ID="ID_893073627" CREATED="1375845318520" MODIFIED="1375845320308">
<node TEXT="see &quot;or&quot;" ID="ID_1588411819" CREATED="1375845257638" MODIFIED="1375845526605"/>
</node>
<node TEXT="()" ID="ID_496009795" CREATED="1375845400386" MODIFIED="1375845403022">
<node TEXT="see &quot;groups&quot;" ID="ID_1841216699" CREATED="1375845403619" MODIFIED="1375845532303"/>
</node>
</node>
<node TEXT="\d" ID="ID_129816537" CREATED="1375845594327" MODIFIED="1375845606926">
<node TEXT="any digit" ID="ID_160491990" CREATED="1375845607411" MODIFIED="1375845608782"/>
</node>
<node TEXT="groups" ID="ID_1333788066" CREATED="1375845411766" MODIFIED="1375845412649">
<node TEXT="(...)" ID="ID_918271002" CREATED="1375845414551" MODIFIED="1375845415930"/>
</node>
<node TEXT="or" ID="ID_1728481599" CREATED="1375845335685" MODIFIED="1375845336057">
<node TEXT="|" ID="ID_174683427" CREATED="1375845334534" MODIFIED="1375845335521"/>
<node TEXT="&quot;never greedy&quot;" ID="ID_1803125326" CREATED="1375845370153" MODIFIED="1375845386597"/>
</node>
<node TEXT="sets" ID="ID_603395466" CREATED="1375845077140" MODIFIED="1375845267875">
<node ID="ID_201776412" CREATED="1375845268239" MODIFIED="1375845268239"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      [...]
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="anything in the set denoted by the ellipsis" ID="ID_87117145" CREATED="1375845079773" MODIFIED="1375845103912"/>
<node TEXT="character ranges" ID="ID_197000080" CREATED="1375845124508" MODIFIED="1375845272385">
<node TEXT="[0-9] will match any digit" ID="ID_956140998" CREATED="1375845129005" MODIFIED="1375845159970"/>
<node TEXT="[0-9A-Fa-f] will match any hexadecimal digit" ID="ID_603685492" CREATED="1375845152132" MODIFIED="1375845152727"/>
</node>
<node TEXT="complements" ID="ID_1836058092" CREATED="1375845284669" MODIFIED="1375845289322">
<node TEXT="make ^ the first character" ID="ID_1061997851" CREATED="1375845289704" MODIFIED="1375845298045"/>
</node>
</node>
<node TEXT="u" ID="ID_1410791716" CREATED="1376105616806" MODIFIED="1376105617464">
<node TEXT="count digits" ID="ID_1893176663" CREATED="1375768176979" MODIFIED="1375768178623">
<node TEXT="&quot;The most complicated repeated qualifier is {m,n}, where m and n are decimal integers. This qualifier means there must be at least m repetitions, and at most n. For example, a/{1,3}b will match a/b, a//b, and a///b. It won&#x2019;t match ab, which has no slashes, or a////b, which has four&quot;" ID="ID_915228411" CREATED="1375768179348" MODIFIED="1375768182215"/>
</node>
</node>
</node>
</node>
<node TEXT="u,p: class methods" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1262590263" CREATED="1405799841386" MODIFIED="1406309490756">
<node TEXT="https://julien.danjou.info/blog/2013/guide-python-static-class-abstract-methods" ID="ID_1948883819" CREATED="1405800453649" MODIFIED="1405800453649" LINK="https://julien.danjou.info/blog/2013/guide-python-static-class-abstract-methods"/>
<node TEXT="ordinary methods, surprising facts about" ID="ID_341254235" CREATED="1405799708306" MODIFIED="1405799737143">
<font BOLD="false"/>
<node TEXT="unbound methods" ID="ID_671404536" CREATED="1405799674261" MODIFIED="1405799685734">
<font BOLD="true"/>
<node TEXT="unbound method = one with no associated instance of the class" ID="ID_1384733059" CREATED="1405799467333" MODIFIED="1405799483960"/>
<node TEXT="&quot;In Python 3, the functions attached to a class are not considered as unbound method anymore, but as simple functions, that are bound to an object if required. S&quot;" ID="ID_1638045393" CREATED="1405799679124" MODIFIED="1405799680583"/>
</node>
<node TEXT="&gt;&gt;&gt; class Pizza(object):&#xa;...     def __init__(self, size):&#xa;...         self.size = size&#xa;...     def get_size(self):&#xa;...         return self.size&#xa;...&#xa;&gt;&gt;&gt; Pizza.get_size&#xa;&lt;unbound method Pizza.get_size&gt;" ID="ID_1696167548" CREATED="1405799460027" MODIFIED="1405799460696"/>
<node TEXT="&gt;&gt;&gt; m = Pizza(42).get_size&#xa;&gt;&gt;&gt; m()&#xa;42" ID="ID_941274362" CREATED="1405799421302" MODIFIED="1405799422130"/>
<node TEXT="&gt;&gt;&gt; Pizza.get_size(Pizza(42))&#xa;42" ID="ID_1834414864" CREATED="1405799442550" MODIFIED="1405799442976"/>
<node TEXT="how to find a lost reference" ID="ID_332717661" CREATED="1405799547460" MODIFIED="1405799581245">
<font BOLD="true"/>
<node TEXT="&gt;&gt;&gt; m = Pizza(42).get_size&#xa;&gt;&gt;&gt; m.__self__&#xa;&lt;__main__.Pizza object at 0x7f3138827910&gt;&#xa;&gt;&gt;&gt; # You could guess, look at this:&#xa;...&#xa;&gt;&gt;&gt; m == m.__self__.get_size&#xa;True" ID="ID_802928962" CREATED="1405799551501" MODIFIED="1405799552129"/>
</node>
</node>
<node TEXT="static methods" ID="ID_777513808" CREATED="1405799742344" MODIFIED="1405799743931">
<node TEXT="motivations" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1874260356" CREATED="1405799793139" MODIFIED="1405799797916">
<node TEXT="Python doesn&apos;t have to instantiate a bound-method for each Pizza object we instiantiate. Bound methods are objects too, and creating them has a cost." ID="ID_512390808" CREATED="1405799798514" MODIFIED="1405799808538"/>
<node TEXT="It eases the readability of the code: seeing @staticmethod, we know that the method does not depend on the state of object itself;" ID="ID_79273195" CREATED="1405799929554" MODIFIED="1405799938894"/>
<node TEXT="It allows us to override the mix_ingredients method in a subclass. If we used a function mix_ingredients defined at the top-level of our module, a class inheriting from Pizza wouldn&apos;t be able to change the way we mix ingredients for our pizza without overriding cook itself." ID="ID_68897733" CREATED="1405799985071" MODIFIED="1405799985682">
<node TEXT="this is why to use a static method instead of a non-class function, not why to use a static method over an ordinary (non-static) class method" ID="ID_1842950337" CREATED="1405799987510" MODIFIED="1405800021239"/>
</node>
</node>
<node TEXT="example" ID="ID_1235294978" CREATED="1405799933274" MODIFIED="1405799935293">
<node TEXT="class Pizza(object):&#xa;    @staticmethod&#xa;    def mix_ingredients(x, y):&#xa;        return x + y&#xa; &#xa;    def cook(self):&#xa;        return self.mix_ingredients(self.cheese, self.vegetables)" ID="ID_5827610" CREATED="1405799765005" MODIFIED="1405799765724"/>
</node>
</node>
<node TEXT="class methods" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_798301569" CREATED="1405800124236" MODIFIED="1405800425151">
<node TEXT="motivations?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_470530853" CREATED="1405800418791" MODIFIED="1405800424016">
<node TEXT="https://julien.danjou.info/blog/2013/guide-python-static-class-abstract-methods" ID="ID_350274487" CREATED="1405800446909" MODIFIED="1405800446909" LINK="https://julien.danjou.info/blog/2013/guide-python-static-class-abstract-methods"/>
<node TEXT="I don&apos;t get it" ID="ID_744245530" CREATED="1405800457212" MODIFIED="1405800459351"/>
</node>
<node TEXT="example" ID="ID_74991178" CREATED="1405800127188" MODIFIED="1405800128991">
<node TEXT="&gt;&gt;&gt; class Pizza(object):&#xa;...     radius = 42&#xa;...     @classmethod&#xa;...     def get_radius(cls):&#xa;...         return cls.radius&#xa;...&#xa;&gt;&gt;&gt;&#xa;&gt;&gt;&gt; Pizza.get_radius&#xa;&lt;bound method type.get_radius of &lt;class &apos;__main__.Pizza&apos;&gt;&gt;&#xa;&gt;&gt;&gt; Pizza().get_radius&#xa;&lt;bound method type.get_radius of &lt;class &apos;__main__.Pizza&apos;&gt;&gt;&#xa;&gt;&gt;&gt; Pizza.get_radius is Pizza().get_radius&#xa;True&#xa;&gt;&gt;&gt; Pizza.get_radius()&#xa;42" ID="ID_681135843" CREATED="1405800130211" MODIFIED="1405800131008"/>
</node>
<node TEXT="accesses class-level data, not instance-level data" ID="ID_272889725" CREATED="1405800135900" MODIFIED="1405800143662"/>
<node TEXT="first (implicit) arg is always the class itself" ID="ID_315231604" CREATED="1405800160489" MODIFIED="1405800170892"/>
</node>
<node TEXT="abstract methods" ID="ID_1906353959" CREATED="1405800477075" MODIFIED="1405800479022">
<node TEXT="a dangerous way" ID="ID_273962413" CREATED="1405800510576" MODIFIED="1405800513901">
<node TEXT="class Pizza(object):&#xa;    def get_radius(self):&#xa;        raise NotImplementedError" ID="ID_1687688622" CREATED="1405800479235" MODIFIED="1405800479815"/>
<node TEXT="dangerous because the exception is only raised when the function is called" ID="ID_1787544403" CREATED="1405800515080" MODIFIED="1405800523507"/>
</node>
<node TEXT="a better way" ID="ID_1738838003" CREATED="1405800525983" MODIFIED="1405800527555">
<node TEXT="use &quot;abc&quot; library" ID="ID_670498823" CREATED="1405800550717" MODIFIED="1405800556041"/>
<node TEXT="import abc&#xa; &#xa;class BasePizza(object):&#xa;    __metaclass__  = abc.ABCMeta&#xa; &#xa;    @abc.abstractmethod&#xa;    def get_radius(self):&#xa;         &quot;&quot;&quot;Method that should do something.&quot;&quot;&quot;" ID="ID_512260231" CREATED="1405800545365" MODIFIED="1405800546081"/>
</node>
<node TEXT="can include implementation" ID="ID_296484043" CREATED="1405800829282" MODIFIED="1405800833668">
<node TEXT="&quot;An implementation in an abstract method? Yes! In Python, contrary to methods in Java interfaces, you can have code in your abstract methods and call it via super():&quot;" ID="ID_151073511" CREATED="1405800834033" MODIFIED="1405800839437"/>
<node TEXT="import abc&#xa; &#xa;class BasePizza(object):&#xa;    __metaclass__  = abc.ABCMeta&#xa; &#xa;    default_ingredients = [&apos;cheese&apos;]&#xa; &#xa;    @classmethod&#xa;    @abc.abstractmethod&#xa;    def get_ingredients(cls):&#xa;         &quot;&quot;&quot;Returns the ingredient list.&quot;&quot;&quot;&#xa;         return cls.default_ingredients&#xa; &#xa;class DietPizza(BasePizza):&#xa;    def get_ingredients(self):&#xa;        return [&apos;egg&apos;] + super(DietPizza, self).get_ingredients()" ID="ID_1650856739" CREATED="1405800846944" MODIFIED="1405800847309"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="Scala" ID="ID_1657348094" CREATED="1428520953020" MODIFIED="1429165246100">
<node TEXT="rather than keep my book notes organized by book shape, keep the notes and an image of (my reading history of) the book" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_178761388" CREATED="1429856424557" MODIFIED="1429856464032">
<node TEXT="! is dup; main currently at live.mm" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1795382986" CREATED="1429856474885" MODIFIED="1429856485067"/>
</node>
<node TEXT="scala/sbt: future-proofing" ID="ID_840181775" CREATED="1429762674826" MODIFIED="1429762683603">
<node TEXT="http://stackoverflow.com/questions/29813574/future-proofing-a-scala-sbt-project" ID="ID_347763300" CREATED="1429762661005" MODIFIED="1429762661005" LINK="http://stackoverflow.com/questions/29813574/future-proofing-a-scala-sbt-project"/>
<node TEXT="done" LOCALIZED_STYLE_REF="styles.topic" ID="ID_388917195" CREATED="1429762688643" MODIFIED="1429762690213">
<node TEXT="ask Scala whether the sbt swing-graph arrangement will ever go stale" LOCALIZED_STYLE_REF="default" ID="ID_289569263" CREATED="1429753745302" MODIFIED="1429762686285">
<node TEXT="specifying the question" ID="ID_1028018354" CREATED="1429756167398" MODIFIED="1429756173221">
<node TEXT="even if I upgrade my scala and all the libraries upgrade too, will the old ones persist, and be available to sbt" ID="ID_892905508" CREATED="1429753759029" MODIFIED="1429753779603"/>
</node>
<node TEXT="use the email already started in scala+swing/email" ID="ID_753320234" CREATED="1429756163455" MODIFIED="1429756189282"/>
</node>
</node>
</node>
<node TEXT="community" ID="ID_1014981473" CREATED="1429687966021" MODIFIED="1429763326970">
<node TEXT="mailg lists" ID="ID_883066135" CREATED="1429563266055" MODIFIED="1429563274955">
<node TEXT="scala-graph" LOCALIZED_STYLE_REF="default" ID="ID_784342490" CREATED="1429563282199" MODIFIED="1429763314823">
<node TEXT="https://groups.google.com/forum/?fromgroups#!forum/scala-graph" ID="ID_595758501" CREATED="1429563281160" MODIFIED="1429563281160" LINK="https://groups.google.com/forum/?fromgroups#!forum/scala-graph"/>
<node TEXT="I joined" ID="ID_84858095" CREATED="1429563288990" MODIFIED="1429563290331"/>
</node>
<node TEXT="&gt; joined" ID="ID_357933432" CREATED="1429763315554" MODIFIED="1429763317276"/>
<node TEXT="sbt" ID="ID_304614550" CREATED="1429563373999" MODIFIED="1429563374724">
<node TEXT="stackov" ID="ID_1714469028" CREATED="1429563382263" MODIFIED="1429563383483">
<node TEXT="http://stackoverflow.com/tags/sbt" ID="ID_522488458" CREATED="1429563381832" MODIFIED="1429563381832" LINK="http://stackoverflow.com/tags/sbt"/>
</node>
<node TEXT="mail list, dep" ID="ID_1059565187" CREATED="1429563388920" MODIFIED="1429563397483">
<node TEXT="https://groups.google.com/forum/#!forum/simple-build-tool" ID="ID_1947813119" CREATED="1429563397971" MODIFIED="1429563397971" LINK="https://groups.google.com/forum/#!forum/simple-build-tool"/>
<node TEXT="3K+ topics, but deprecated since 2013" ID="ID_493200847" CREATED="1429563418671" MODIFIED="1429563471089"/>
</node>
</node>
</node>
</node>
<node TEXT="?" ID="ID_1677674488" CREATED="1429779974082" MODIFIED="1429779974568">
<node TEXT="&quot;case class&quot; (noun)" ID="ID_292551920" CREATED="1429779966994" MODIFIED="1429779971520"/>
</node>
<node TEXT="pattern matching chapter would help understand swing" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_687594136" CREATED="1429856821605" MODIFIED="1429856934722">
<node TEXT="example of need" ID="ID_1914341550" CREATED="1429856897093" MODIFIED="1429856924909">
<node TEXT="&quot;case EditDone(`celsius`)&#xa;As was explained in Section 15.2, the back ticks around celsius ensure that&#xa;the pattern matches only if the source of the event was the celsius object. &quot;" ID="ID_271288736" CREATED="1429856888885" MODIFIED="1429856891901"/>
</node>
<node TEXT="which would teach me about PartialFunctions, which I also need:" LOCALIZED_STYLE_REF="default" ID="ID_1214310126" CREATED="1429855920364" MODIFIED="1429856921217">
<node TEXT="&quot;a handler is a PartialFunction that matches on events and&#xa;performs some actions.&quot;" ID="ID_23271055" CREATED="1429855917349" MODIFIED="1429855941861"/>
</node>
</node>
<node TEXT="libs" ID="ID_1646670013" CREATED="1429682178641" MODIFIED="1429687963381">
<node TEXT="swing" LOCALIZED_STYLE_REF="default" ID="ID_236904658" CREATED="1429165246751" MODIFIED="1429687958571">
<node TEXT="-&gt; Java Swing" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_995624053" CREATED="1429857214013" MODIFIED="1429857232599">
<node TEXT="that documentation could help" ID="ID_490538716" CREATED="1429857232921" MODIFIED="1429857233935"/>
</node>
<node TEXT="?" ID="ID_1576212092" CREATED="1429854637436" MODIFIED="1429854688387">
<node TEXT="? requires" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1073072714" CREATED="1429855553749" MODIFIED="1429855909468">
<node TEXT="? actors chapter (for message passing)" ID="ID_517944820" CREATED="1429855909887" MODIFIED="1429855937687"/>
</node>
<node TEXT="? newline-sepd code as arguments" ID="ID_870135922" CREATED="1429854691540" MODIFIED="1429854707481">
<node TEXT="book, 795" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1053240981" CREATED="1429855494636" MODIFIED="1429855499029"/>
<node TEXT="contents = new BoxPanel(Orientation.Vertical) {&#xa;  contents += button&#xa;  contents += label&#xa;  border = Swing.EmptyBorder(30, 30, 10, 30)&#xa;}" ID="ID_1275452526" CREATED="1429854640844" MODIFIED="1429854660507"/>
</node>
<node TEXT="? remove reactions with -=" ID="ID_535521042" CREATED="1429856208453" MODIFIED="1429856225771">
<node TEXT="but how to specify -- must match code exactly?" ID="ID_1104121684" CREATED="1429856226564" MODIFIED="1429856233427"/>
</node>
<node TEXT="? does the book say this, and then contradict it" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1614073748" CREATED="1429854495404" MODIFIED="1429854719437">
<node TEXT="MainFrame is a Container, so can hold many things." ID="ID_1284217890" CREATED="1429766038283" MODIFIED="1429766050764"/>
</node>
<node TEXT="objects magically indicate their source" ID="ID_1053358702" CREATED="1429856965389" MODIFIED="1429856974360">
<node TEXT="pdf 798" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1492809989" CREATED="1429857036053" MODIFIED="1429857040577"/>
<node TEXT="&quot;case EditDone(`celsius`)&#xa;As was explained in Section 15.2, the back ticks around celsius ensure that&#xa;the pattern matches only if the source of the event was the celsius object. &quot;" ID="ID_1305947083" CREATED="1429857043325" MODIFIED="1429857044893"/>
</node>
<node TEXT="? inconsistent" ID="ID_879077610" CREATED="1429857102493" MODIFIED="1429857111132">
<node TEXT="reading pattern match chapter might solve" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_683416055" CREATED="1429857131989" MODIFIED="1429857138304"/>
<node TEXT="rn" ID="ID_23622191" CREATED="1429857138797" MODIFIED="1429857139516">
<node TEXT="like SAS, context-sensitive effect" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_431790949" CREATED="1429857112461" MODIFIED="1429857121839"/>
<node TEXT="&quot;As was explained in Section 15.2, the back ticks around celsius ensure that&#xa;the pattern matches only if the source of the event was the celsius object. If&#xa;you had omitted the back ticks and just written case EditDone(celsius),&#xa;the pattern would have matched every event of class EditDone. The changed&#xa;field would then be stored in the pattern variable celsius. Obviously, this is&#xa;not what you want. Alternatively, you could have defined the two TextField&#xa;objects starting with upper case characters, i.e., Celsius and Fahrenheit.&#xa;In that case you could have matched them directly without back ticks, as in&#xa;case EditDone(Celsius).&quot;" ID="ID_317301401" CREATED="1429857122765" MODIFIED="1429857125935"/>
</node>
</node>
</node>
<node TEXT="init, layout" ID="ID_1171554528" CREATED="1429854909395" MODIFIED="1429854937766">
<node TEXT="MainFrame" ID="ID_1839966346" CREATED="1429765548153" MODIFIED="1429765549986">
<node TEXT="top-level; closing it closes app" ID="ID_969441505" CREATED="1429765550634" MODIFIED="1429765555948"/>
</node>
<node TEXT="frames have attributes" ID="ID_1536997235" CREATED="1429765564507" MODIFIED="1429765567366">
<node TEXT="attr: title" ID="ID_1965407190" CREATED="1429765568619" MODIFIED="1429765581568"/>
<node TEXT="attr: contents" ID="ID_216401797" CREATED="1429765581770" MODIFIED="1429765583475"/>
</node>
<node TEXT="scala swing models frame attributes as properties" ID="ID_1527463196" CREATED="1429765638222" MODIFIED="1429765649046">
<node TEXT="which are getter/setter pairs" ID="ID_369012432" CREATED="1429765716205" MODIFIED="1429765720010"/>
</node>
<node TEXT="MainFrame.contents" ID="ID_226662662" CREATED="1429854475412" MODIFIED="1429854478707">
<node TEXT="can be a single widget, e.g. a button" ID="ID_474941110" CREATED="1429854479457" MODIFIED="1429854485291"/>
<node TEXT="can be a panel" ID="ID_1614871402" CREATED="1429854485523" MODIFIED="1429854487922"/>
</node>
<node TEXT="Frames can only hold one thing." ID="ID_907632585" CREATED="1429766065700" MODIFIED="1429766070821"/>
<node TEXT="main()" ID="ID_1739324501" CREATED="1429854033835" MODIFIED="1429854336693">
<node ID="ID_1567064714" CREATED="1429854046069" MODIFIED="1429854046069"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      SimpleSwingApp defines
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="main calls top, which user defines" ID="ID_1625727485" CREATED="1429854046539" MODIFIED="1429854050810"/>
</node>
<node TEXT="Panel" ID="ID_1545757137" CREATED="1429854333036" MODIFIED="1429854334970">
<node TEXT="for multiple object layout" ID="ID_1121023555" CREATED="1429854341796" MODIFIED="1429854346434"/>
</node>
</node>
<node TEXT="communication" ID="ID_1739477570" CREATED="1429854905788" MODIFIED="1429854967171">
<node TEXT="&quot;?&quot; contains things this needs and does not have dup&apos;d" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1947131262" CREATED="1429856990517" MODIFIED="1429857026204"/>
<node TEXT="event source, event listener ~ publisher, subscriber" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1004890272" CREATED="1429855035588" MODIFIED="1429855055660"/>
<node TEXT="components can be publishers and subscribers" ID="ID_29762433" CREATED="1429854967948" MODIFIED="1429854974483"/>
<node TEXT="publication is not targeted; subscription is" ID="ID_506259348" CREATED="1429854985844" MODIFIED="1429854999595"/>
<node TEXT="listenTo(source), deafTo(source)" ID="ID_1830868388" CREATED="1429855084556" MODIFIED="1429855093707">
<node TEXT="inverses" ID="ID_1287521075" CREATED="1429855094412" MODIFIED="1429855095745">
<node TEXT="kind of" ID="ID_1014682553" CREATED="1429855116460" MODIFIED="1429855117499"/>
</node>
</node>
<node TEXT="messages are objects" ID="ID_627370366" CREATED="1429855651284" MODIFIED="1429855661202">
<node TEXT="of this class" ID="ID_691887673" CREATED="1429855661940" MODIFIED="1429855663466">
<node TEXT="case class ButtonClicked(source: Button)" ID="ID_976424292" CREATED="1429855664497" MODIFIED="1429855664497"/>
</node>
</node>
<node TEXT="accrete reactions" ID="ID_722322903" CREATED="1429855781028" MODIFIED="1429855804088">
<node TEXT="reactions += {&#xa;  case ButtonClicked(b) =&gt;&#xa;  nClicks += 1&#xa;  label.text = &quot;Number of button clicks: &quot;+ nClicks&#xa;}" ID="ID_1882620118" CREATED="1429855786940" MODIFIED="1429855791094"/>
</node>
<node TEXT="reactions is a stack" ID="ID_816738660" CREATED="1429856044933" MODIFIED="1429856103974">
<node LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1724179967" CREATED="1429856104623" MODIFIED="1429856105896"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      a frame's &quot;reactions&quot; field is a stack
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="last handler added = first checked" ID="ID_788143922" CREATED="1429856085516" MODIFIED="1429856135795"/>
<node TEXT="every handler is checked for applicability, and called if appbl" ID="ID_1528309989" CREATED="1429856136494" MODIFIED="1429856150503"/>
</node>
<node TEXT="TextField issue EditDone messages" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_659014072" CREATED="1429856626005" MODIFIED="1429857065420">
<font BOLD="false"/>
</node>
</node>
<node TEXT="classes" ID="ID_900267591" CREATED="1430440228158" MODIFIED="1430440230372">
<node TEXT="MainFrame.contents is a Seq[Component]" ID="ID_1279308833" CREATED="1430440230854" MODIFIED="1430440232228"/>
<node TEXT="Seq[_] can do :+=, not +=" ID="ID_1326728156" CREATED="1430440250414" MODIFIED="1430440310489"/>
<node TEXT="BoxPanel.contents is a Buffer[Component]" ID="ID_35203845" CREATED="1430440275944" MODIFIED="1430440281959"/>
<node TEXT="Buffer[_] has a += method" ID="ID_460123382" CREATED="1430440282329" MODIFIED="1430440312332"/>
</node>
<node TEXT="libs reqd for funcs" LOCALIZED_STYLE_REF="default" ID="ID_528453023" CREATED="1429855699956" MODIFIED="1430440199873">
<node TEXT="scala.swing.event" ID="ID_348745677" CREATED="1429855703580" MODIFIED="1429855719808">
<node TEXT="every message is an event, so they need this" ID="ID_1880488084" CREATED="1429855724524" MODIFIED="1429855731208"/>
</node>
</node>
<node TEXT="install problems (stale)" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1437374265" CREATED="1429687975309" MODIFIED="1429855471609">
<node TEXT="this makes it compile but not run" ID="ID_155582174" CREATED="1429166490921" MODIFIED="1429166494656">
<node TEXT="http://stackoverflow.com/questions/15696843/how-to-compile-scala-swing-app" ID="ID_1978302774" CREATED="1429166512327" MODIFIED="1429166512327" LINK="http://stackoverflow.com/questions/15696843/how-to-compile-scala-swing-app"/>
<node TEXT="compile by passing explicit swing path to compiler" LOCALIZED_STYLE_REF="default" ID="ID_1658046706" CREATED="1428521200813" MODIFIED="1429166521851">
<node TEXT="% scalac -classpath /usr/share/java/scala-swing.jar HelloGui.scala" ID="ID_1822980812" CREATED="1428521199714" MODIFIED="1428521199714"/>
</node>
<node TEXT="and then this runs it?" ID="ID_594116229" CREATED="1429166523555" MODIFIED="1429166602683">
<node TEXT="I made this up but it seems to work!" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1334422210" CREATED="1429166655578" MODIFIED="1429166661037"/>
<node TEXT="scala -cp /usr/share/java/scala-swing.jar HelloGui" ID="ID_1472546188" CREATED="1429166603103" MODIFIED="1429166603103"/>
</node>
</node>
<node TEXT="a more permanent/elegant solution?" ID="ID_1443221823" CREATED="1429166682098" MODIFIED="1429166686536">
<node TEXT="http://stackoverflow.com/questions/10249139/scala-swing-package-not-found" ID="ID_430271946" CREATED="1429166484358" MODIFIED="1429166484358" LINK="http://stackoverflow.com/questions/10249139/scala-swing-package-not-found"/>
<node TEXT="libraryDependencies += &quot;org.scala-lang&quot; % &quot;scala-swing&quot; % &quot;2.9.2&quot;" ID="ID_826400616" CREATED="1429473015122" MODIFIED="1429473121246"/>
<node TEXT="do I really need the % &quot;2.9.2&quot;?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_569313724" CREATED="1429473124658" MODIFIED="1429473146381"/>
</node>
</node>
</node>
<node TEXT="graph" ID="ID_1769030142" CREATED="1429517059708" MODIFIED="1429682206987">
<node TEXT="?" ID="ID_1752156232" CREATED="1430375072893" MODIFIED="1430375073845">
<node TEXT="if graph depends on X version V, and I use X version Latest &gt; V, can break graph?" LOCALIZED_STYLE_REF="default" ID="ID_187368133" CREATED="1430375041825" MODIFIED="1430375079085"/>
</node>
<node TEXT="API" LOCALIZED_STYLE_REF="default" ID="ID_405481486" CREATED="1430295639424" MODIFIED="1430335434908">
<node TEXT="http://www.scala-graph.org/api/core/api/index.html#scalax.collection.GraphBase" ID="ID_1716082269" CREATED="1430295638031" MODIFIED="1430295638031" LINK="http://www.scala-graph.org/api/core/api/index.html#scalax.collection.GraphBase"/>
</node>
<node TEXT="user guide" ID="ID_412468868" CREATED="1430335438045" MODIFIED="1430335440009">
<node TEXT="http://www.scala-graph.org/guides/core-initializing.html" ID="ID_904874065" CREATED="1430335638822" MODIFIED="1430335638822" LINK="http://www.scala-graph.org/guides/core-initializing.html"/>
<node TEXT="! I did not read" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_648125492" CREATED="1430267765215" MODIFIED="1430267818535">
<node TEXT="in this section" ID="ID_312265916" CREATED="1430267768343" MODIFIED="1430267785117">
<node TEXT="http://www.scala-graph.org/guides/core-operations.html" ID="ID_1823900753" CREATED="1430267781384" MODIFIED="1430267781384" LINK="http://www.scala-graph.org/guides/core-operations.html"/>
<node TEXT="everything past the title &quot;More Edge Patterns&quot;" ID="ID_787586738" CREATED="1430267786080" MODIFIED="1430267805078">
<node TEXT="including that section" ID="ID_1787663318" CREATED="1430267805825" MODIFIED="1430267808589"/>
</node>
</node>
</node>
<node TEXT="? a lot about patterns, traversal" LOCALIZED_STYLE_REF="default" ID="ID_1737799135" CREATED="1430267732110" MODIFIED="1430337586229">
<node TEXT="see here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_16968712" CREATED="1430267747614" MODIFIED="1430267753944">
<node TEXT="http://www.scala-graph.org/guides/core-operations.html" ID="ID_1609859882" CREATED="1430267750958" MODIFIED="1430267750958" LINK="http://www.scala-graph.org/guides/core-operations.html"/>
<node TEXT="section &quot;More Edge Patterns&quot;" ID="ID_354628945" CREATED="1430267740225" MODIFIED="1430267746724"/>
</node>
</node>
<node TEXT="? multi-graphs" ID="ID_1793399067" CREATED="1430338275061" MODIFIED="1430338277467">
<node TEXT="needed for multi-edges" ID="ID_1533736278" CREATED="1430338278468" MODIFIED="1430338281843"/>
<node TEXT="edge types must be prefixed with K" ID="ID_1656611939" CREATED="1430338287580" MODIFIED="1430338307632"/>
</node>
<node TEXT="need" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_297855703" CREATED="1430337491204" MODIFIED="1430445444867">
<node TEXT="modules &amp; importing" ID="ID_632299125" CREATED="1430335673571" MODIFIED="1430335683809">
<node TEXT="&quot;test&quot; module" LOCALIZED_STYLE_REF="default" ID="ID_761112160" CREATED="1430171064821" MODIFIED="1430335698384"/>
<node TEXT="predefd graph classes" ID="ID_866870856" CREATED="1430265367648" MODIFIED="1430335692092">
<node TEXT="&quot; To bring the predefined weighted or labeled edge classes and the corresponding shortcuts into scope you need additional imports, for instance &quot;" ID="ID_1748109446" CREATED="1430265378817" MODIFIED="1430265380246"/>
<node TEXT="import scalax.collection.edge.LDiEdge     // labeled directed edge&#xa;import scalax.collection.edge.Implicits._ // shortcuts" ID="ID_1068065702" CREATED="1430265372401" MODIFIED="1430265373717"/>
</node>
</node>
<node TEXT="pitfalls" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1236101349" CREATED="1430335710051" MODIFIED="1430335712194">
<node TEXT="mutation and hash-equals" LOCALIZED_STYLE_REF="default" ID="ID_1825510781" CREATED="1430171572621" MODIFIED="1430335728704">
<node TEXT="the function(s) equals/hashCode must be constant over their lifetime" ID="ID_1589275694" CREATED="1430171588408" MODIFIED="1430171595555"/>
</node>
<node TEXT="? labels are not typed" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1185952432" CREATED="1430265641909" MODIFIED="1430265903607">
<node TEXT="it&apos;s not clear that this is a problem" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_338413113" CREATED="1430265910074" MODIFIED="1430265915020">
<node TEXT=".serial" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_606412634" CREATED="1430265939075" MODIFIED="1430265940820"/>
<node TEXT="the following might be true" ID="ID_1771832492" CREATED="1430265922266" MODIFIED="1430265927888"/>
<node TEXT="if I am okay with this kind of notation" ID="ID_498377449" CREATED="1430265929842" MODIFIED="1430265934792">
<node TEXT="val four_1 = eOuter.label.i // label must be dereferenced first" ID="ID_1608196035" CREATED="1430265935184" MODIFIED="1430265935184"/>
</node>
<node TEXT="then I needn&apos;t worry" ID="ID_9801641" CREATED="1430265936323" MODIFIED="1430265946416"/>
<node TEXT="but if I want to be able to do this" ID="ID_725642832" CREATED="1430265951204" MODIFIED="1430265955329">
<node TEXT="val four_2 = eOuter.i       // implicitly dereferenced" ID="ID_1333633179" CREATED="1430265955781" MODIFIED="1430265955781"/>
</node>
<node TEXT="then I have to understand this section of the docu&apos;n" ID="ID_133204560" CREATED="1430265961332" MODIFIED="1430265978157"/>
</node>
<node TEXT="quotes" ID="ID_1507358920" CREATED="1430265907177" MODIFIED="1430265907942">
<node TEXT="http://www.scala-graph.org/guides/core-initializing.html" ID="ID_711832642" CREATED="1430265746458" MODIFIED="1430265746458" LINK="http://www.scala-graph.org/guides/core-initializing.html"/>
<node TEXT="&quot;Labeled edges will contain a reference to the label but graph instances do not know about the actual label type.&quot;" ID="ID_1006703228" CREATED="1430265654705" MODIFIED="1430265656853"/>
<node TEXT="&quot;[therefore] if you are utilizing a predefined edge class and want to call label methods, you need to match (cast down) the label value of the edge to your label type.&quot;" ID="ID_1617452896" CREATED="1430265727409" MODIFIED="1430265736309"/>
</node>
</node>
</node>
<node TEXT="creating" ID="ID_1283625161" CREATED="1430335737963" MODIFIED="1430335743882">
<node TEXT="Edge factories" ID="ID_1468419572" CREATED="1430265205409" MODIFIED="1430265210615">
<node TEXT="&quot;Edge factories are simply apply methods of companion objects of edge classes&quot;" ID="ID_1383103065" CREATED="1430265211240" MODIFIED="1430265212975"/>
</node>
<node TEXT="whole graph: template" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1977373910" CREATED="1430336536348" MODIFIED="1430337455590">
<node TEXT="import scalax.collection.Graph&#xa;import scalax.collection.GraphPredef._, scalax.collection.GraphEdge._&#xa;val g = scalax.collection.mutable.Graph(1, 2~3)&#xa;implicit val factory = scalax.collection.edge.LDiEdge&#xa;g.addLEdge(3,4)(Set(1))" ID="ID_1801194530" CREATED="1430336544131" MODIFIED="1430343729720"/>
<node TEXT="surprisingly sensitive" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1939178700" CREATED="1430338087869" MODIFIED="1430338120456">
<node TEXT="the 2~3 cannot be omitted, nor changed to 2~&gt;3" ID="ID_1526692647" CREATED="1430338094132" MODIFIED="1430338114871"/>
</node>
</node>
<node TEXT="directed &amp; labeled edges" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_431823079" CREATED="1430264849153" MODIFIED="1430265009781">
<node TEXT="directed" ID="ID_908179164" CREATED="1430264900467" MODIFIED="1430264901840">
<node TEXT="DiEdge or DiHyperEdge" ID="ID_1468911655" CREATED="1430264904203" MODIFIED="1430264913937"/>
</node>
<node TEXT="labeled" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_323849811" CREATED="1430264926892" MODIFIED="1430337444635">
<node TEXT="type starts with L" ID="ID_1155153210" CREATED="1430264929468" MODIFIED="1430265253324"/>
<node TEXT="equivalent ways to make" ID="ID_538331111" CREATED="1430337386340" MODIFIED="1430337389626">
<node TEXT=".. to make an LDiEdge from 1 to 2, labeled with x" ID="ID_1422327308" CREATED="1430265148079" MODIFIED="1430337410192"/>
<node ID="ID_1183726589" CREATED="1430337382816" MODIFIED="1430337382816"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      (1 ~+&gt; 2)(x)
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_56305124" CREATED="1430337382820" MODIFIED="1430337382820"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      LDiEdge(1,2)(x)
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="key-labeled" ID="ID_1642357771" CREATED="1430265137726" MODIFIED="1430265142635">
<node TEXT="type starts with Lk" ID="ID_655820733" CREATED="1430265155726" MODIFIED="1430265250603"/>
<node TEXT="(1 ~+#&gt; 2)(x)&#xa;creates something of type LkDiEdge(1,2)(x)&#xa;which is a directed edge from 1 to 2 key-labeled with x" ID="ID_1428936504" CREATED="1430265166751" MODIFIED="1430265243356"/>
<node TEXT="example" ID="ID_305733051" CREATED="1430171958767" MODIFIED="1430171959651">
<node TEXT="(jfc ~+#&gt; fra)(Flight(&quot;LH 400&quot; ,10 o 25, 8 h 20))" ID="ID_540479955" CREATED="1430171918528" MODIFIED="1430171920019"/>
</node>
</node>
<node TEXT="? hyper" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1493129895" CREATED="1430264945533" MODIFIED="1430264990221">
<node TEXT="this way I could define the relationship of a node to a collection of nodes with one edge rather than many" ID="ID_952323634" CREATED="1430264951709" MODIFIED="1430264975380"/>
</node>
</node>
</node>
<node TEXT="to|from text" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_26664180" CREATED="1430445753113" MODIFIED="1430445787599">
<node TEXT="http://www.scala-graph.org/guides/json.html" ID="ID_789227481" CREATED="1430445766314" MODIFIED="1430445766314" LINK="http://www.scala-graph.org/guides/json.html"/>
<node TEXT="search for &quot;val bookDescriptor&quot;" ID="ID_873821785" CREATED="1430445781913" MODIFIED="1430445784416"/>
</node>
<node TEXT="get, manip" ID="ID_165319454" CREATED="1430343881328" MODIFIED="1430344380959">
<node TEXT="get edge label" ID="ID_675282392" CREATED="1430343889760" MODIFIED="1430343893452">
<node TEXT="(g get 3~&gt;4).label" ID="ID_73904132" CREATED="1430343883170" MODIFIED="1430343887789">
<node TEXT="res21: Any = Set(1)" ID="ID_558425517" CREATED="1430343883170" MODIFIED="1430343883170"/>
</node>
</node>
<node TEXT="change edge label" ID="ID_1467222463" CREATED="1430344374505" MODIFIED="1430344377399">
<node TEXT="must first cast the label from Any to Set[Int]" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1802759471" CREATED="1430344390400" MODIFIED="1430344405774"/>
<node TEXT="l.asInstanceOf[Set[Int]] union Set(2)" ID="ID_760783357" CREATED="1430344377867" MODIFIED="1430344377867"/>
</node>
</node>
<node TEXT="eq v. ==" ID="ID_462680758" CREATED="1430267387517" MODIFIED="1430267390491">
<node TEXT="see here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_492367833" CREATED="1430267409031" MODIFIED="1430267410665">
<node TEXT="http://www.scala-graph.org/guides/core-operations.html" ID="ID_1949396180" CREATED="1430267395292" MODIFIED="1430267395292" LINK="http://www.scala-graph.org/guides/core-operations.html"/>
<node TEXT="section &quot;Equality of Inner and Outer Objects&quot;" ID="ID_1298064779" CREATED="1430267402407" MODIFIED="1430267408628"/>
</node>
</node>
</node>
<node TEXT="likely no need" ID="ID_1014177661" CREATED="1430337494548" MODIFIED="1430337603724">
<node TEXT="inner &amp; outer nodes" ID="ID_393550275" CREATED="1430295200532" MODIFIED="1430295203601">
<node TEXT="in trees, from wikipedia (irrelevant)" LOCALIZED_STYLE_REF="styles.topic" ID="ID_946923273" CREATED="1430295204955" MODIFIED="1430295217950">
<node TEXT="inner node: has children. outer: does not." ID="ID_923254388" CREATED="1430268032372" MODIFIED="1430268038257"/>
</node>
<node TEXT="inner edges wrap|contain outer edges, and same for nodes" ID="ID_1608867744" CREATED="1430295226357" MODIFIED="1430295244523"/>
</node>
<node TEXT="label class example" ID="ID_268424377" CREATED="1430266368407" MODIFIED="1430266388856">
<node TEXT="http://www.scala-graph.org/guides/core-initializing.html" ID="ID_20694459" CREATED="1430266382132" MODIFIED="1430266382132" LINK="http://www.scala-graph.org/guides/core-initializing.html"/>
<node TEXT="see TEdge.scala" ID="ID_1098792982" CREATED="1430266374927" MODIFIED="1430266377981"/>
<node TEXT="also this" ID="ID_83780574" CREATED="1430266530414" MODIFIED="1430266531907">
<node TEXT="http://www.scala-graph.org/guides/core-initializing.html" ID="ID_1982235140" CREATED="1430266667992" MODIFIED="1430266667992" LINK="http://www.scala-graph.org/guides/core-initializing.html"/>
<node TEXT="val flights = Graph(&#xa;  (jfc ~+#&gt; fra)(Flight(&quot;LH 400&quot; ,10 o 25, 8 h 20)),&#xa;  (fra ~+#&gt; dme)(Flight(&quot;LH 1444&quot;, 7 o 50, 3 h 10)) )" ID="ID_478922548" CREATED="1430266533415" MODIFIED="1430266547367"/>
</node>
</node>
<node TEXT="edge type graph" ID="ID_1475344619" CREATED="1430266894095" MODIFIED="1430266904320">
<node TEXT="&quot;Directed edges inherit from undirected edges but the opposite is not true.&quot;" ID="ID_1748847512" CREATED="1430266896417" MODIFIED="1430266909529"/>
</node>
<node TEXT="extending the library: give type bounds" ID="ID_1784927978" CREATED="1430266948818" MODIFIED="1430266954655">
<node TEXT="http://www.scala-graph.org/guides/core-initializing.html" ID="ID_880701371" CREATED="1430266964531" MODIFIED="1430266964531" LINK="http://www.scala-graph.org/guides/core-initializing.html"/>
<node TEXT="def myFunction[N, E[X] &lt;: EdgeLikeIn[X]](g: Graph[N,E])" ID="ID_834180532" CREATED="1430266955625" MODIFIED="1430266957334"/>
</node>
<node TEXT="find v. get" ID="ID_922565812" CREATED="1430267137730" MODIFIED="1430267140294">
<node TEXT="find returns an Option; can fail elegantly" ID="ID_910169370" CREATED="1430267141258" MODIFIED="1430267149312"/>
<node TEXT="get is probably faster, throws an exception if not found" ID="ID_1840363505" CREATED="1430267150063" MODIFIED="1430267158839"/>
</node>
</node>
</node>
<node TEXT="demo code" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1894988559" CREATED="1430374479578" MODIFIED="1430374482708">
<node TEXT="https://github.com/scala-graph/scala-graph/blob/master/json/src/test/scala/demo/TJsonDemo.scala" ID="ID_1383963310" CREATED="1430374484256" MODIFIED="1430374484256" LINK="https://github.com/scala-graph/scala-graph/blob/master/json/src/test/scala/demo/TJsonDemo.scala"/>
</node>
</node>
<node TEXT="? scalafx &gt; swing" ID="ID_6163604" CREATED="1429687921332" MODIFIED="1429687925619">
<node TEXT="suggested (and disputed) here" ID="ID_306966822" CREATED="1429687938461" MODIFIED="1429687947126">
<node TEXT="http://stackoverflow.com/questions/16514513/simpleguiapplication-in-scala-2-10-1" ID="ID_791402325" CREATED="1429687937137" MODIFIED="1429687937137" LINK="http://stackoverflow.com/questions/16514513/simpleguiapplication-in-scala-2-10-1"/>
</node>
<node TEXT="http://www.scalafx.org/" ID="ID_482985804" CREATED="1429687920208" MODIFIED="1429687920208" LINK="http://www.scalafx.org/"/>
</node>
</node>
<node TEXT="book" ID="ID_1518113872" CREATED="1429387222174" MODIFIED="1429472946761">
<node TEXT="reading" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_62228470" CREATED="1429511994801" MODIFIED="1429511996325">
<node TEXT="most want read" ID="ID_509230568" CREATED="1429511570753" MODIFIED="1429511572736">
<node TEXT="8, functions and closures" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1734571010" CREATED="1429511584489" MODIFIED="1429511893237">
<node TEXT="22 p" ID="ID_40330023" CREATED="1429511595193" MODIFIED="1429511596087"/>
</node>
<node TEXT="9, control abstract" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_481915514" CREATED="1429511601777" MODIFIED="1429511893233">
<node TEXT="14 p" ID="ID_380099133" CREATED="1429511609945" MODIFIED="1429511611199"/>
</node>
<node TEXT="14, assertions, unit test" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_642253901" CREATED="1429511622489" MODIFIED="1429949186503">
<node TEXT="13 p" ID="ID_297249121" CREATED="1429511633169" MODIFIED="1429511634231"/>
</node>
<node TEXT="16, lists" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1258613192" CREATED="1429511657457" MODIFIED="1429916541090">
<font BOLD="false"/>
<node TEXT="25 p" ID="ID_1048324115" CREATED="1429511663193" MODIFIED="1429511664447"/>
</node>
<node TEXT="17, collections" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_216043096" CREATED="1429511669553" MODIFIED="1430003409425">
<font BOLD="false"/>
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_321722431" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
<node TEXT="21 p" ID="ID_1792260503" CREATED="1429511672543" MODIFIED="1429511680269"/>
<node TEXT="I looked; it didn&apos;t seem critical" ID="ID_1827498550" CREATED="1430003410745" MODIFIED="1430003415071"/>
</node>
<node TEXT="20, abstract members" ID="ID_1060387873" CREATED="1429511691785" MODIFIED="1429511696864">
<node TEXT="31 p" ID="ID_714520573" CREATED="1429511701721" MODIFIED="1429511703055"/>
</node>
<node TEXT="21, implic conversion and param" ID="ID_1882906920" CREATED="1429511709865" MODIFIED="1429511718272">
<node TEXT="23 p" ID="ID_1600908305" CREATED="1429511722329" MODIFIED="1429511723415"/>
</node>
<node TEXT="24, collections" LOCALIZED_STYLE_REF="default" ID="ID_321722431" CREATED="1429511749593" MODIFIED="1429949248316">
<node TEXT="74 p" ID="ID_1454690579" CREATED="1429511756561" MODIFIED="1429511759768"/>
</node>
<node TEXT="25, collections, architecture" LOCALIZED_STYLE_REF="default" ID="ID_1767793927" CREATED="1429511768089" MODIFIED="1429949230057">
<node TEXT="23 p" ID="ID_134291644" CREATED="1429511775970" MODIFIED="1429511777022"/>
</node>
<node TEXT="26, extractors" ID="ID_537339295" CREATED="1429511782073" MODIFIED="1429511784086">
<node TEXT="15 p" ID="ID_1608876929" CREATED="1429511786394" MODIFIED="1429511787312"/>
</node>
<node TEXT="30, equality" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1432391427" CREATED="1429511800425" MODIFIED="1429916533566">
<font BOLD="false"/>
<node TEXT="25 p" ID="ID_32720285" CREATED="1429511809417" MODIFIED="1429511811735"/>
<node TEXT="half-read" ID="ID_168387296" CREATED="1430425028338" MODIFIED="1430425030050"/>
</node>
<node TEXT="32, actors, concurrency" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_673568810" CREATED="1429511820377" MODIFIED="1429949196226">
<font BOLD="false"/>
<node TEXT="33 p" ID="ID_1185110105" CREATED="1429511828945" MODIFIED="1429511829855"/>
</node>
<node TEXT="? 33, combinator parsing" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_1122477141" CREATED="1429511835117" MODIFIED="1429949327624">
<node TEXT="27 p" ID="ID_713778490" CREATED="1429511847145" MODIFIED="1429511848264"/>
<node TEXT="to code file i/o faster, safer" ID="ID_1123233831" CREATED="1429949329462" MODIFIED="1429949356736"/>
</node>
</node>
<node TEXT="speed calcs" LOCALIZED_STYLE_REF="default" ID="ID_45269338" CREATED="1429214124127" MODIFIED="1429512011877">
<node TEXT="start (fast)" ID="ID_505758227" CREATED="1429511555626" MODIFIED="1429512030100">
<node TEXT="I started at the start of ch 2" ID="ID_699866197" CREATED="1429214126200" MODIFIED="1429214130828"/>
<node TEXT="2 hours in I was at page 108" ID="ID_1367228939" CREATED="1429214115398" MODIFIED="1429214120043"/>
<node TEXT="half hour later, page 115" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_418452315" CREATED="1429215953524" MODIFIED="1429215971605"/>
</node>
<node TEXT="ch 15: &gt; 17 pp/hr" ID="ID_1946973402" CREATED="1429915212049" MODIFIED="1429915233132">
<node TEXT="I took a few short breaks." ID="ID_1398574242" CREATED="1429915234361" MODIFIED="1429915239175"/>
</node>
<node TEXT="ch 19: 5.4 pp/min" ID="ID_877186423" CREATED="1429512081681" MODIFIED="1429512085624">
<node TEXT="ch 19: 2:10 (2 hours 10 minutes), 24 pages" LOCALIZED_STYLE_REF="default" ID="ID_285937231" CREATED="1429503654589" MODIFIED="1429512081288"/>
</node>
</node>
</node>
<node TEXT="chs 1-3" ID="ID_1689294279" CREATED="1429213522795" MODIFIED="1429213525770">
<node TEXT="Programming in Scala, 2nd Ed" ID="ID_1689793868" CREATED="1429169044663" MODIFIED="1429169051126">
<node TEXT="Scala is an object-oriented language in pure form: every value is an object and every operation is a method call." ID="ID_1128767281" CREATED="1429169011222" MODIFIED="1429169037418"/>
<node TEXT="type operations" ID="ID_1642979090" CREATED="1429170325834" MODIFIED="1429170330033">
<node TEXT="combine types with &quot;intersections&quot;" ID="ID_1947738019" CREATED="1429170330515" MODIFIED="1429170336480"/>
<node TEXT="parameterize types with &quot;generics&quot;" ID="ID_715208700" CREATED="1429170343660" MODIFIED="1429170348400"/>
<node TEXT="omit details with &quot;abstract types&quot;" ID="ID_1154327678" CREATED="1429170348603" MODIFIED="1429170359314"/>
</node>
</node>
<node TEXT="referential transparency: can replace functioncall with its output value without affecting behavior" ID="ID_131317094" CREATED="1429169653523" MODIFIED="1429169668826"/>
<node TEXT="val v. var: cannot reassign val" ID="ID_1502487536" CREATED="1429207408849" MODIFIED="1429207428265"/>
<node TEXT="assign" ID="ID_149002021" CREATED="1429207524263" MODIFIED="1429207525412">
<node TEXT="val x: String = &quot;muon&quot;" ID="ID_1117622158" CREATED="1429207526359" MODIFIED="1429207536773"/>
</node>
<node TEXT="if-else" ID="ID_1142637403" CREATED="1429207675013" MODIFIED="1429207680482">
<node TEXT="def max(x: Int, y: Int): Int = {&#xa;  if (x &gt; y) x&#xa;  else y&#xa;}" ID="ID_941384083" CREATED="1429207681614" MODIFIED="1429207694868"/>
</node>
<node TEXT="compilation not necessary to run from command line" ID="ID_63830978" CREATED="1429207978588" MODIFIED="1429207987525"/>
<node TEXT="get at arrays with (), not []" ID="ID_690128748" CREATED="1429208114321" MODIFIED="1429208119107"/>
<node TEXT="println != print" ID="ID_860903573" CREATED="1429208426960" MODIFIED="1429208430335">
<node TEXT="println appends a newline" ID="ID_1933620106" CREATED="1429208431102" MODIFIED="1429208435597"/>
</node>
<node TEXT="iterate over a collection" ID="ID_635796128" CREATED="1429208657010" MODIFIED="1429208664394">
<node TEXT="as a map" ID="ID_890065119" CREATED="1429208915383" MODIFIED="1429208916852">
<node TEXT="args.foreach(arg =&gt; println(arg))" ID="ID_1222979251" CREATED="1429208665020" MODIFIED="1429208665020"/>
<node TEXT="how it works" ID="ID_1449484569" CREATED="1429208758856" MODIFIED="1429208761286">
<node TEXT="arg here is a variable name, and args the collection" ID="ID_603660395" CREATED="1429208671275" MODIFIED="1429208680394"/>
<node TEXT="in the parens is like a lambda expression" ID="ID_565058249" CREATED="1429208690293" MODIFIED="1429208696547"/>
</node>
<node TEXT="altj, could specify arg&apos;s type" ID="ID_235628023" CREATED="1429208764503" MODIFIED="1429208773085">
<node TEXT="args.foreach((arg: String) =&gt; println(arg))" ID="ID_689995750" CREATED="1429208768750" MODIFIED="1429208768750"/>
</node>
<node TEXT="with only one arg, can omit arg" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1647567448" CREATED="1429208806698" MODIFIED="1429208812437">
<node TEXT="args.foreach(println)" ID="ID_944203534" CREATED="1429208813548" MODIFIED="1429208813548"/>
</node>
</node>
<node TEXT="as a for loop" ID="ID_1622805649" CREATED="1429208881365" MODIFIED="1429208893586">
<node TEXT="syntax" ID="ID_1576108055" CREATED="1429208955017" MODIFIED="1429208956319">
<node TEXT="for (arg &lt;- args)" ID="ID_69297097" CREATED="1429208884106" MODIFIED="1429208884106"/>
<node TEXT="println(arg)" ID="ID_493386713" CREATED="1429208884106" MODIFIED="1429208884106"/>
</node>
<node TEXT="the variable name is a val, not a var" ID="ID_144439991" CREATED="1429208957585" MODIFIED="1429208965247"/>
</node>
</node>
<node TEXT="create an array" ID="ID_1004517684" CREATED="1429209252982" MODIFIED="1429209259189">
<node TEXT="verbose" ID="ID_278165012" CREATED="1429209948871" MODIFIED="1429209955275">
<node TEXT="something in this is deprecated" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_365963439" CREATED="1429209330282" MODIFIED="1429209338646"/>
<node TEXT="val greetStrings = new Array[String](3)" ID="ID_846535922" CREATED="1429209259614" MODIFIED="1429209259614"/>
<node TEXT="has length 3" ID="ID_1339479709" CREATED="1429209261191" MODIFIED="1429209263475"/>
<node TEXT="despite being a val, can have strings assigned to it" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_216655131" CREATED="1429209273671" MODIFIED="1429209973687">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_196588577" STARTINCLINATION="59;0;" ENDINCLINATION="59;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="concise" ID="ID_1790540069" CREATED="1429209927317" MODIFIED="1429209953997">
<node TEXT="val numNames = Array(&quot;zero&quot;, &quot;one&quot;, &quot;two&quot;)" ID="ID_1157224140" CREATED="1429209931431" MODIFIED="1429209931431"/>
</node>
</node>
<node TEXT="iterate over a range" ID="ID_799922220" CREATED="1429209301328" MODIFIED="1429209305791">
<node TEXT="for (i &lt;- 0 to 2)" ID="ID_406533360" CREATED="1429209306231" MODIFIED="1429209306231"/>
<node TEXT="print(greetStrings(i))" ID="ID_1582491598" CREATED="1429209306231" MODIFIED="1429209306231"/>
</node>
<node TEXT="val only means it cannot point to another object" ID="ID_196588577" CREATED="1429209443199" MODIFIED="1429209461314">
<node TEXT="&quot; When you define a variable&#xa;with val, the variable can&#x2019;t be reassigned, but the object to which it refers&#xa;could potentially still be changed.&quot;" ID="ID_1713936111" CREATED="1429209451464" MODIFIED="1429209456668"/>
</node>
<node TEXT="implicit dots" ID="ID_709688802" CREATED="1429209625712" MODIFIED="1429209627636">
<node TEXT="1 + 2 = (1).+(2)" ID="ID_696781544" CREATED="1429209628092" MODIFIED="1429209632150"/>
<node TEXT="0 to 2 = (0).to(2)" ID="ID_1614017462" CREATED="1429209636784" MODIFIED="1429209648479"/>
<node TEXT="() implies &quot;apply&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1262527808" CREATED="1429209807296" MODIFIED="1429209815483">
<node TEXT="obj(arg) = object.apply(arg)" LOCALIZED_STYLE_REF="default" ID="ID_1023614307" CREATED="1429209687914" MODIFIED="1429209816435"/>
</node>
<node TEXT="= implies &quot;update&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_654865476" CREATED="1429209818168" MODIFIED="1429209822643">
<node TEXT="equivalent" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_571438371" CREATED="1429209828841" MODIFIED="1429209832714"/>
<node TEXT="greetStrings(0) = &quot;Hello&quot;" ID="ID_1190905141" CREATED="1429209824278" MODIFIED="1429209824278"/>
<node TEXT="greetStrings.update(0, &quot;Hello&quot;)" ID="ID_185781539" CREATED="1429209824280" MODIFIED="1429209824280"/>
</node>
</node>
<node TEXT="array lengths are fixed" ID="ID_1598049964" CREATED="1429210085924" MODIFIED="1429210091880"/>
<node TEXT="create list" ID="ID_1489700054" CREATED="1429210137767" MODIFIED="1429210139084">
<node TEXT="val oneTwoThree = List(1, 2, 3)" ID="ID_1292556151" CREATED="1429210139506" MODIFIED="1429210139506"/>
</node>
<node TEXT="infix is only *usually* applied to the left operand" ID="ID_1506698954" CREATED="1429210274541" MODIFIED="1429210295181">
<node TEXT="&quot;If a method is used in operator notation, such as a * b, the&#xa;method is invoked on the left operand, as in a.*(b)&#x2014;unless the method&#xa;name ends in a colon. If the method name ends in a colon, the method is&#xa;invoked on the right operand.&quot;" ID="ID_1910687908" CREATED="1429210285869" MODIFIED="1429210288190"/>
</node>
<node TEXT="access first elt of a tuple t with t._1" ID="ID_714044827" CREATED="1429210784437" MODIFIED="1429210799490"/>
<node TEXT="set" ID="ID_1019438900" CREATED="1429211097211" MODIFIED="1429211097882">
<node TEXT="immutable" ID="ID_739085163" CREATED="1429211390393" MODIFIED="1429211391814">
<node TEXT="var jetSet = Set(&quot;Boeing&quot;, &quot;Airbus&quot;)" ID="ID_47195889" CREATED="1429211098308" MODIFIED="1429211098308"/>
<node TEXT="jetSet += &quot;Lear&quot;" ID="ID_1862321537" CREATED="1429211098308" MODIFIED="1429211098308"/>
<node TEXT="println(jetSet.contains(&quot;Cessna&quot;))" ID="ID_1765361389" CREATED="1429211098309" MODIFIED="1429211098309"/>
</node>
<node TEXT="mutable" ID="ID_1087486668" CREATED="1429211402777" MODIFIED="1429211403856">
<node TEXT="import scala.collection.mutable.Set" ID="ID_525437071" CREATED="1429211404422" MODIFIED="1429211404422"/>
<node TEXT="val movieSet = Set(&quot;Hitch&quot;, &quot;Poltergeist&quot;)" ID="ID_719139350" CREATED="1429211404422" MODIFIED="1429211404422"/>
<node TEXT="movieSet += &quot;Shrek&quot;" ID="ID_387691346" CREATED="1429211404424" MODIFIED="1429211404424"/>
<node TEXT="println(movieSet)" ID="ID_1527816698" CREATED="1429211404426" MODIFIED="1429211404426"/>
</node>
</node>
<node TEXT="iterators last only one pass" ID="ID_1873545933" CREATED="1429212869237" MODIFIED="1429212874556">
<node TEXT="quote" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1946897598" CREATED="1429212879917" MODIFIED="1429212881593">
<node TEXT="val lines = Source.fromFile(args(0)).getLines().toList" ID="ID_986890137" CREATED="1429212875007" MODIFIED="1429212875007"/>
<node TEXT="The final toList is required because the getLines method returns an itera-" ID="ID_1329772318" CREATED="1429212875007" MODIFIED="1429212875007"/>
<node TEXT="tor. Once you&#x2019;ve iterated through an iterator, it is spent." ID="ID_51812080" CREATED="1429212875008" MODIFIED="1429212875008"/>
</node>
<node TEXT="where the programmer intends to iterate twice through &quot;lines&quot;" ID="ID_292270970" CREATED="1429212900415" MODIFIED="1429212914590"/>
</node>
<node TEXT="Scala &quot;reduceLeft&quot; ~ Haskell fold" ID="ID_1245660330" CREATED="1429213034461" MODIFIED="1429213048466">
<node TEXT="foldl, I think" ID="ID_184798060" CREATED="1429213054182" MODIFIED="1429213056740"/>
</node>
</node>
<node TEXT="ch 4, classes" ID="ID_59572810" CREATED="1429213533075" MODIFIED="1429213535545">
<node TEXT="&quot;members&quot; = fields + methods" ID="ID_495624615" CREATED="1429213536573" MODIFIED="1429213550243"/>
<node TEXT="privacy exists" ID="ID_1392031837" CREATED="1429213722068" MODIFIED="1429213725626"/>
<node TEXT="method parameters are vals" ID="ID_723882432" CREATED="1429213836977" MODIFIED="1429213841472"/>
<node TEXT="return (the word) is optional" ID="ID_1330847996" CREATED="1429213888044" MODIFIED="1429213894237">
<node TEXT="last statement is returned" ID="ID_800666377" CREATED="1429213896180" MODIFIED="1429213899011"/>
</node>
<node TEXT="method without return type" ID="ID_917114265" CREATED="1429214046683" MODIFIED="1429214052040">
<node TEXT="def add(b: Byte) { sum += b }" ID="ID_1547559652" CREATED="1429214052445" MODIFIED="1429214052445"/>
<node TEXT="works if&#xa;  the return type should be Unit, and&#xa;  curly braces are kept, and&#xa;  type sig and equals sign are dropped" ID="ID_1485585069" CREATED="1429214053036" MODIFIED="1429214244786"/>
</node>
<node TEXT="singleton object" ID="ID_1876018938" CREATED="1429214668920" MODIFIED="1429214670943">
<node TEXT="two kinds" ID="ID_599907892" CREATED="1429215067482" MODIFIED="1429215068891">
<font BOLD="true"/>
<node TEXT="companion object" ID="ID_786434344" CREATED="1429214680121" MODIFIED="1429214685477">
<node TEXT="When a singleton object shares the same name with a class, it is called that class&#x2019;s companion object." ID="ID_1951691530" CREATED="1429214672025" MODIFIED="1429214674661"/>
<node TEXT="both must be defined in same file" ID="ID_1291272653" CREATED="1429214698170" MODIFIED="1429214702616"/>
</node>
<node TEXT="standalone object" ID="ID_434087501" CREATED="1429215070163" MODIFIED="1429215072352"/>
</node>
<node TEXT="houses static fields, kind of" ID="ID_767496289" CREATED="1429214872153" MODIFIED="1429214882648">
<node TEXT="&quot;If you are a Java programmer, one way to think of singleton objects is&#xa;as the home for any static methods you might have written in Java. &quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1892724816" CREATED="1429214866441" MODIFIED="1429214869161"/>
</node>
</node>
<node TEXT="need singleton to run?" ID="ID_1970594112" CREATED="1429215145078" MODIFIED="1429215149578">
<node TEXT="pdf 112" ID="ID_1012362872" CREATED="1429215188960" MODIFIED="1429215190870"/>
<node TEXT="&quot;To run a Scala program, you must supply the name of a standalone singleton&#xa;object with a main method that takes one parameter, an Array[String],&#xa;and has a result type of Unit. &quot;" ID="ID_854580676" CREATED="1429215150390" MODIFIED="1429215152141"/>
</node>
<node TEXT="the Application trait" ID="ID_1475080594" CREATED="1429216016718" MODIFIED="1429216019475">
<node TEXT="for less finger-typing; not critical, I think" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1424288802" CREATED="1429216112618" MODIFIED="1429216127929"/>
<node TEXT="&quot;To use the trait, you first write &#x201c;extends Application&#x201d; after the name&#xa;of your singleton object. Then instead of writing a main method, you place&#xa;the code you would have put in the main method directly between the curly&#xa;braces of the singleton object. That&#x2019;s it. You can compile and run this appli-&#xa;cation just like any other.&quot;" ID="ID_63015610" CREATED="1429216040751" MODIFIED="1429216046965"/>
</node>
</node>
<node TEXT="ch 5, types" ID="ID_1430359885" CREATED="1429217300958" MODIFIED="1429217302868">
<node TEXT="beware numbers starting with 0" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1466159192" CREATED="1429217303686" MODIFIED="1429217314662">
<node TEXT="they are octal: 010 = 8, 012 = 10, etc." ID="ID_188847452" CREATED="1429217315679" MODIFIED="1429217356237"/>
</node>
<node TEXT="many ways to type strings" ID="ID_646445541" CREATED="1429217730985" MODIFIED="1429217737425">
<node TEXT="&quot;&quot;&quot; ... &quot;&quot;&quot;, can cross multiple lines of code" ID="ID_1402678712" CREATED="1429217738063" MODIFIED="1429217750518"/>
</node>
<node TEXT="&apos;a&apos; != &quot;a&quot;" ID="ID_242611003" CREATED="1429217767620" MODIFIED="1429217775682"/>
<node TEXT="&quot;symbol literals&quot;" ID="ID_933580726" CREATED="1429217792599" MODIFIED="1429217797701"/>
<node TEXT="booleans" ID="ID_1882116311" CREATED="1429218584374" MODIFIED="1429218585891">
<node TEXT="invert bool with &quot;!&quot;" ID="ID_284888999" CREATED="1429218541139" MODIFIED="1429218550993"/>
<node TEXT="|| and &amp;&amp;" ID="ID_891533346" CREATED="1429218587209" MODIFIED="1429218590771">
<node TEXT="are short-circuited" ID="ID_23984082" CREATED="1429218603300" MODIFIED="1429218606093"/>
</node>
</node>
</node>
<node TEXT="ch 6, functional objects" ID="ID_91258950" CREATED="1429225960304" MODIFIED="1429225963342">
<node TEXT="= objects sans mutable state" ID="ID_90281339" CREATED="1429225964320" MODIFIED="1429225970263"/>
<node TEXT="&quot;class parameter&quot; = constructor arg" ID="ID_917930591" CREATED="1429226813495" MODIFIED="1429226819982"/>
<node TEXT="code in a class is by default the constructor" ID="ID_168249270" CREATED="1429226347850" MODIFIED="1429226359913">
<node TEXT="&quot;The Scala compiler will compile any code you place in the class body,&#xa;which isn&#x2019;t part of a field or a method definition, into the primary constructor.&quot;" ID="ID_1140325934" CREATED="1429226362003" MODIFIED="1429226364618"/>
</node>
<node TEXT="override a def" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_676855256" CREATED="1429226462143" MODIFIED="1429226470606">
<node TEXT="class Rational(n: Int, d: Int) {&#xa;  override def toString = n +&quot;/&quot;+ d&#xa;}" ID="ID_165561219" CREATED="1429226464663" MODIFIED="1429226468915"/>
</node>
<node TEXT="conditions on constructor arguments" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1809294107" CREATED="1429226543907" MODIFIED="1429226550757">
<node TEXT="class Rational(n: Int, d: Int) {&#xa;  require(d != 0)&#xa;  override def toString = n +&quot;/&quot;+ d&#xa;}" ID="ID_1992129680" CREATED="1429226551596" MODIFIED="1429226556266"/>
</node>
<node TEXT="constructor args are not necj fields" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1368149761" CREATED="1429226716868" MODIFIED="1429226724847">
<node TEXT="an object&apos;s &quot;fields&quot; are accessible by things other than itself" ID="ID_1797236523" CREATED="1429226737844" MODIFIED="1429226763507"/>
<node TEXT="to make a constructor arg a field, declare them, like this" ID="ID_524384037" CREATED="1429226764632" MODIFIED="1429226776666">
<node TEXT="class Rational(n: Int, d: Int) {&#xa;  val numer: Int = n&#xa;  val denom: Int = d&#xa;  ..." ID="ID_652559431" CREATED="1429226778318" MODIFIED="1429226790473"/>
</node>
<node TEXT="they might not need to be declared in order to be fields, if they are used in non-constructor class methods" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_698194893" CREATED="1429226903835" MODIFIED="1429226935120">
<node TEXT="see footnote 4, pdf 144" ID="ID_593015459" CREATED="1429226954158" MODIFIED="1429226957947"/>
<node TEXT="which I don&apos;t entirely understand" ID="ID_138324835" CREATED="1429226986455" MODIFIED="1429226991014"/>
</node>
</node>
<node TEXT="this" ID="ID_569029806" CREATED="1429227103613" MODIFIED="1429227104323">
<node TEXT="implicit &quot;this&quot;" ID="ID_1946343302" CREATED="1429227053170" MODIFIED="1429227055904">
<node TEXT="if object B of class C has field F, then within the class def of C, &quot;F&quot; is equivalent to &quot;this.F&quot;" ID="ID_272888277" CREATED="1429227056347" MODIFIED="1429227080794"/>
</node>
<node TEXT="works as a return value" ID="ID_1054084379" CREATED="1429227106941" MODIFIED="1429227110867"/>
</node>
<node TEXT="auxiliary constructors" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_133248536" CREATED="1429227159087" MODIFIED="1429227163234">
<node TEXT="to use a different set of arguments" ID="ID_1039784556" CREATED="1429227164073" MODIFIED="1429227172705"/>
<node TEXT="example" ID="ID_800494070" CREATED="1429227224947" MODIFIED="1429227225911">
<node TEXT="I mangled this for brevity; it might no longer be valid." LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1531123675" CREATED="1429227317374" MODIFIED="1429227332899"/>
<node TEXT="class Rational(n: Int, d: Int) {&#xa;  def this(n: Int) = this(n, 1) // auxiliary constructor&#xa;  ..." ID="ID_725535112" CREATED="1429227213938" MODIFIED="1429227224018"/>
</node>
</node>
<node TEXT="overloading" ID="ID_17645737" CREATED="1429228321741" MODIFIED="1429228325515">
<node TEXT="same method name, different argument type" ID="ID_437686792" CREATED="1429228326805" MODIFIED="1429228331322"/>
</node>
<node TEXT="implicit conversion" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1395834343" CREATED="1429228426602" MODIFIED="1429228430052">
<node TEXT="handy but dangerous -- can confuse a later reader" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_855049323" CREATED="1429228520438" MODIFIED="1429228528680"/>
<node TEXT="implicit def intToRational(x: Int) = new Rational(x)" ID="ID_1711099909" CREATED="1429228431354" MODIFIED="1429228434255"/>
<node TEXT="will not be in scope if defined in the Rational class def" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1250049224" CREATED="1429228464540" MODIFIED="1429228477686"/>
</node>
</node>
<node TEXT="ch 7, built-in control structs" ID="ID_1658737021" CREATED="1429233042086" MODIFIED="1429233051536">
<node TEXT="keywords" ID="ID_995284637" CREATED="1429244686874" MODIFIED="1429244688488">
<node TEXT="if" ID="ID_1322210390" CREATED="1429233053793" MODIFIED="1429233054308">
<node TEXT="needs no else" ID="ID_664552948" CREATED="1429233055831" MODIFIED="1429233057403">
<node TEXT="if (!args.isEmpty)" ID="ID_1298362708" CREATED="1429233052366" MODIFIED="1429233052366"/>
<node TEXT="filename = args(0)" ID="ID_1473377192" CREATED="1429233052366" MODIFIED="1429233052366"/>
</node>
<node TEXT="can be treated as a value" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1353377880" CREATED="1429233299041" MODIFIED="1429233303490">
<node TEXT="can follow =" ID="ID_81358718" CREATED="1429233111486" MODIFIED="1429233113411">
<node TEXT="val filename =&#xa;  if (!args.isEmpty) args(0)&#xa;  else &quot;default.txt&quot;" ID="ID_915658513" CREATED="1429233114101" MODIFIED="1429233117434"/>
</node>
<node TEXT="or in ()" ID="ID_1074029519" CREATED="1429233305166" MODIFIED="1429233306874">
<node TEXT="println(if (!args.isEmpty) args(0) else &quot;default.txt&quot;)" ID="ID_1219048936" CREATED="1429233307437" MODIFIED="1429233308483"/>
</node>
</node>
</node>
<node TEXT="while : ()" ID="ID_1474993238" CREATED="1429233360741" MODIFIED="1429233495222">
<node TEXT="while (a != 0) {&#xa;  val temp = a&#xa;  a = b % a&#xa;  b = temp&#xa;}" ID="ID_676227844" CREATED="1429233362029" MODIFIED="1429233367025"/>
</node>
<node TEXT="do-while : ()" ID="ID_1848779762" CREATED="1429233401099" MODIFIED="1429233496852">
<node TEXT="like while, but tests after loop" ID="ID_1360492950" CREATED="1429233405520" MODIFIED="1429233409221"/>
<node TEXT="do {&#xa;  line = readLine()&#xa;  println(&quot;Read: &quot;+ line)&#xa;} while (line != &quot;&quot;)" ID="ID_1792387540" CREATED="1429233403065" MODIFIED="1429233404136"/>
</node>
<node TEXT="for" ID="ID_835125120" CREATED="1429233806778" MODIFIED="1429233969007">
<font BOLD="true"/>
<node TEXT="map over coll" ID="ID_1794936767" CREATED="1429233807914" MODIFIED="1429233816240">
<node TEXT="for (file &lt;- filesHere)&#xa;  ..." ID="ID_594037073" CREATED="1429233816674" MODIFIED="1429233819863"/>
</node>
<node TEXT="map over filtered coll" ID="ID_1040537619" CREATED="1429233969617" MODIFIED="1429233975408">
<node TEXT="for (file &lt;- filesHere if file.getName.endsWith(&quot;.scala&quot;))&#xa;  ..." ID="ID_465248339" CREATED="1429233976097" MODIFIED="1429233978414"/>
<node TEXT="multiple filters" ID="ID_1383554109" CREATED="1429234058933" MODIFIED="1429234061324">
<node TEXT="for (&#xa;  file &lt;- filesHere&#xa;  if file.isFile&#xa;  if file.getName.endsWith(&quot;.scala&quot;)&#xa;) println(file)" ID="ID_1904230926" CREATED="1429234061861" MODIFIED="1429234066419"/>
</node>
</node>
<node TEXT="nested map" ID="ID_837568772" CREATED="1429234133392" MODIFIED="1429234137061">
<node TEXT="def grep(pattern: String) =&#xa;  for (&#xa;    file &lt;- filesHere&#xa;    if file.getName.endsWith(&quot;.scala&quot;);&#xa;    line &lt;- fileLines(file)&#xa;    if line.trim.matches(pattern)&#xa;  ) println(file +&quot;: &quot;+ line.trim)" ID="ID_1744834034" CREATED="1429234137473" MODIFIED="1429234138961"/>
</node>
<node TEXT="define val before loop body" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_426945239" CREATED="1429234329242" MODIFIED="1429234418321">
<node TEXT="see the value &quot;trimmed&quot; (the &quot;val&quot; keyword omitted)" ID="ID_1367035677" CREATED="1429234391460" MODIFIED="1429234429052"/>
<node TEXT="def grep(pattern: String) =&#xa;  for {&#xa;    file &lt;- filesHere&#xa;    if file.getName.endsWith(&quot;.scala&quot;)&#xa;    line &lt;- fileLines(file)&#xa;    trimmed = line.trim&#xa;    if trimmed.matches(pattern)&#xa;  } println(file +&quot;: &quot;+ trimmed)" ID="ID_1533751391" CREATED="1429234356906" MODIFIED="1429234358161"/>
</node>
<node TEXT="yield: build an array" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1144881095" CREATED="1429234525219" MODIFIED="1429234626009">
<node TEXT="for clauses yield body" ID="ID_261452830" CREATED="1429234673778" MODIFIED="1429234674950"/>
<node TEXT="example" ID="ID_539223832" CREATED="1429234650713" MODIFIED="1429234651631">
<node TEXT="def scalaFiles =&#xa;  for {&#xa;    file &lt;- filesHere&#xa;    if file.getName.endsWith(&quot;.scala&quot;)&#xa;  } yield file" ID="ID_1886854244" CREATED="1429234530507" MODIFIED="1429234550654"/>
<node TEXT="in this case, because &quot;file&quot; is of type File and filesHere is an array, the result is an array of Files" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1816811331" CREATED="1429234583101" MODIFIED="1429234609114"/>
</node>
<node TEXT="yield leads the entire body" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1265149999" CREATED="1429234655289" MODIFIED="1429234692287">
<node TEXT="&quot;Even if the body is a block sur-&#xa;rounded by curly braces, put the yield before the first curly brace&quot;" ID="ID_637229725" CREATED="1429234659609" MODIFIED="1429234667404"/>
</node>
</node>
</node>
<node TEXT="exceptions" ID="ID_469349377" CREATED="1429235860945" MODIFIED="1429235862614">
<node TEXT="throw" ID="ID_1323496234" CREATED="1429236055474" MODIFIED="1429236056166">
<node TEXT="&quot;throw new IllegalArgumentException&quot;" ID="ID_459751599" CREATED="1429235863128" MODIFIED="1429235947938"/>
<node TEXT="throw has a return type" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1988850521" CREATED="1429235943316" MODIFIED="1429235951214">
<node TEXT="the entire statement below has two possible types, depending on the value of n" ID="ID_430864859" CREATED="1429235965885" MODIFIED="1429235978482"/>
<node TEXT="val half =&#xa;  if (n % 2 == 0)&#xa;    n / 2&#xa;  else&#xa;    throw new RuntimeException(&quot;n must be even&quot;)" ID="ID_1984110287" CREATED="1429235952212" MODIFIED="1429235963154"/>
</node>
</node>
<node TEXT="catch" ID="ID_1515892757" CREATED="1429236057313" MODIFIED="1429236058129">
<node TEXT="try {&#xa;  val f = new FileReader(&quot;input.txt&quot;)&#xa;  // Use and close file&#xa;} catch {&#xa;  case ex: FileNotFoundException =&gt; // Handle missing file&#xa;  case ex: IOException =&gt; // Handle other I/O error&#xa;}" ID="ID_1558950859" CREATED="1429236058617" MODIFIED="1429236076299"/>
</node>
<node TEXT="finally" ID="ID_1812073226" CREATED="1429236162014" MODIFIED="1429236163317">
<node TEXT="&quot;wrap an expression with a finally clause if you want to cause some&#xa;code to execute no matter how the expression terminates&quot;" ID="ID_441643517" CREATED="1429236163822" MODIFIED="1429236166539"/>
<node TEXT="the &quot;standard idiom&quot;" ID="ID_200617890" CREATED="1429236238514" MODIFIED="1429236247049">
<node TEXT="import java.io.FileReader&#xa;val file = new FileReader(&quot;input.txt&quot;)&#xa;try {&#xa;  // Use the file&#xa;} finally {&#xa;  file.close()&#xa;  // Be sure to close the file&#xa;}" ID="ID_709622730" CREATED="1429236233329" MODIFIED="1429236234753"/>
</node>
<node TEXT="is not for returning values" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1204300458" CREATED="1429236374392" MODIFIED="1429236379419">
<node TEXT="that would be confusing" ID="ID_1657943116" CREATED="1429236379976" MODIFIED="1429236382414"/>
<node TEXT="rather, use it to clean up, put away resources" ID="ID_183713232" CREATED="1429236382641" MODIFIED="1429236389679"/>
</node>
</node>
</node>
<node TEXT="match" ID="ID_1519198368" CREATED="1429236465725" MODIFIED="1429236466634">
<node TEXT="results in a value" ID="ID_1856059757" CREATED="1429236552072" MODIFIED="1429236554133"/>
<node TEXT="example" ID="ID_1459752653" CREATED="1429236555056" MODIFIED="1429236556546">
<node TEXT="firstArg match {&#xa;  case &quot;salt&quot; =&gt; println(&quot;pepper&quot;)&#xa;  case &quot;chips&quot; =&gt; println(&quot;salsa&quot;)&#xa;  case &quot;eggs&quot; =&gt; println(&quot;bacon&quot;)&#xa;  case _ =&gt; println(&quot;huh?&quot;)&#xa;}" ID="ID_1422129804" CREATED="1429236467196" MODIFIED="1429236474221"/>
<node TEXT="(This special case does not result in a value, unless it&apos;s ().)" ID="ID_487725485" CREATED="1429236552072" MODIFIED="1429236570381"/>
</node>
<node TEXT="has no &quot;falling through&quot; (unlike Java)" ID="ID_1054074232" CREATED="1429236515086" MODIFIED="1429236526550"/>
</node>
<node TEXT="break" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_836344831" CREATED="1429237131387" MODIFIED="1429244693975">
<node TEXT="is not standard; must come from a library" ID="ID_340199603" CREATED="1429237133547" MODIFIED="1429237146914"/>
<node TEXT="search for &quot;breakable&quot;" ID="ID_1334960405" CREATED="1429237147156" MODIFIED="1429237150994"/>
</node>
</node>
<node TEXT="scope" ID="ID_1210444429" CREATED="1429244683796" MODIFIED="1429244702118">
<node TEXT="curly braces introduce a new one" ID="ID_314354219" CREATED="1429244702918" MODIFIED="1429244706991"/>
<node TEXT="&quot;shadowing&quot;: inner names mask outer" ID="ID_1528977220" CREATED="1429244848368" MODIFIED="1429244902783">
<node TEXT="&quot;[you can] define a variable in an inner scope that has the&#xa;same name as a variable in an outer scope&quot;" ID="ID_1289248604" CREATED="1429244854073" MODIFIED="1429244867583"/>
</node>
<node TEXT="how the interpreter avoids name conflicts" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_747804884" CREATED="1429244988971" MODIFIED="1429245002564">
<node TEXT="&quot;In the interpreter, you can reuse variable names to your heart&#x2019;s content.&#xa;Among other things, this allows you to change your mind if you made a&#xa;mistake when you defined a variable the first time in the interpreter. The rea-&#xa;son you can do this is that, conceptually, the interpreter creates a new nested&#xa;scope for each new statement you type in. &quot;" ID="ID_448716493" CREATED="1429245003644" MODIFIED="1429245006724"/>
</node>
</node>
</node>
<node TEXT="ch 8: functions and closures" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1466436304" CREATED="1429341466223" MODIFIED="1429341472431">
<font BOLD="false"/>
<node TEXT="explains lambdas" ID="ID_1917620075" CREATED="1429341473599" MODIFIED="1429341476461"/>
</node>
<node TEXT="ch 10: compos&apos;n and inher&apos;ce" ID="ID_940434728" CREATED="1429298216788" MODIFIED="1429298287225">
<node TEXT="parameterless method != empty-paren method" ID="ID_532612953" CREATED="1429298467980" MODIFIED="1429298477467">
<node TEXT="&quot;The recommended convention&quot;" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1354339439" CREATED="1429298535435" MODIFIED="1429298553066">
<node TEXT="&quot;is to use a parame-&#xa;terless method whenever there are no parameters and the method accesses&#xa;mutable state only by reading fields of the containing object (in particular, it&#xa;does not change mutable state).&quot;" ID="ID_1864252675" CREATED="1429298517428" MODIFIED="1429298534962"/>
</node>
<node TEXT="they can be conflated" ID="ID_1869749267" CREATED="1429298883628" MODIFIED="1429298887945">
<node TEXT="Scala is &quot;liberal&quot; about letting you use one like the other." ID="ID_1382392959" CREATED="1429298888713" MODIFIED="1429298896755"/>
</node>
<node TEXT="when to omit parens" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1921299524" CREATED="1429298940188" MODIFIED="1429299017577">
<node TEXT="&quot;In principle it&#x2019;s possible to leave out all empty parentheses in Scala func-&#xa;tion calls. However, it is recommended to still write the empty parentheses&#xa;when the invoked method represents more than a property of its receiver ob-&#xa;ject. &quot;" ID="ID_1817955485" CREATED="1429298943284" MODIFIED="1429298947053"/>
</node>
<node TEXT="the danger" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_707896683" CREATED="1429299007532" MODIFIED="1429299016705">
<node TEXT="&quot;never define a method that has side-effects without parentheses, because then invocations&#xa;of that method would look like a field selection.&quot;" ID="ID_19486316" CREATED="1429299018860" MODIFIED="1429299027900"/>
</node>
</node>
<node TEXT="accessor field-method equivalence" ID="ID_1124090467" CREATED="1429298623203" MODIFIED="1429298629897">
<node TEXT="book, p 225" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1803425078" CREATED="1429298743468" MODIFIED="1429298748673"/>
<node TEXT="these are equivalent" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1533490494" CREATED="1429298700316" MODIFIED="1429298704378"/>
<node TEXT="def (methods)" ID="ID_696071712" CREATED="1429298642508" MODIFIED="1429298697751">
<node TEXT="abstract class Element {&#xa;  def contents: Array[String]&#xa;  def height: Int = contents.length&#xa;  def width: Int = if (height == 0) 0 else contents(0).length&#xa;}" ID="ID_927685702" CREATED="1429298675476" MODIFIED="1429298676699"/>
</node>
<node TEXT="val (fields)" ID="ID_172341240" CREATED="1429298643507" MODIFIED="1429298698817">
<node TEXT="abstract class Element {&#xa;  def contents: Array[String]&#xa;  val height = contents.length&#xa;  val width =&#xa;    if (height == 0) 0 else contents(0).length&#xa;}" ID="ID_1290208257" CREATED="1429298658644" MODIFIED="1429298659878"/>
</node>
<node TEXT="the field requires more memory, the method requires computation at each call" ID="ID_85343900" CREATED="1429298705300" MODIFIED="1429298803659"/>
</node>
<node TEXT="subclass" ID="ID_1291478487" CREATED="1429299162884" MODIFIED="1429299164371">
<node TEXT="needs only define methods abstract to its pred" ID="ID_95277664" CREATED="1429299081684" MODIFIED="1429299168683">
<node TEXT="class ArrayElement(conts: Array[String]) extends Element {&#xa;  def contents: Array[String] = conts&#xa;}" ID="ID_287376106" CREATED="1429299103012" MODIFIED="1429299109692"/>
</node>
<node TEXT="private members not inherited" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1504213377" CREATED="1429299183524" MODIFIED="1429299336497"/>
<node TEXT="(name-)overridden members not inherited" ID="ID_435926862" CREATED="1429299337177" MODIFIED="1429299350437"/>
<node TEXT="implement v. override" ID="ID_965655063" CREATED="1429299856276" MODIFIED="1429299859242">
<node TEXT="to implement is to override an abstract member" ID="ID_1595082342" CREATED="1429299859957" MODIFIED="1429299870953"/>
</node>
<node TEXT="a field can override|implement a parameterless method" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_222023755" CREATED="1429299528540" MODIFIED="1429299855183"/>
<node TEXT="(class parameters?) define fields" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_895720417" CREATED="1429299690813" MODIFIED="1429299756523">
<node TEXT="that is, I think, the reason this works" ID="ID_644557921" CREATED="1429299710229" MODIFIED="1429299722211">
<node TEXT="class ArrayElement(conts: Array[String]) extends Element {&#xa;  def contents: Array[String] = conts&#xa;}" ID="ID_1898501203" CREATED="1429299706597" MODIFIED="1429299709093"/>
</node>
<node TEXT="is because contents continues to have access to the field conts throughout the ArrayElement&apos;s existence, not just during creation" ID="ID_1364698358" CREATED="1429299723348" MODIFIED="1429299751700"/>
</node>
</node>
<node TEXT="defining parameteric fields" ID="ID_17758257" CREATED="1429300050341" MODIFIED="1429300054852">
<node TEXT="do this" ID="ID_670170287" CREATED="1429300068917" MODIFIED="1429300073823">
<node TEXT="class ArrayElement(&#xa;  val contents: Array[String]&#xa;) extends Element" ID="ID_1248160503" CREATED="1429300064445" MODIFIED="1429300065554"/>
</node>
<node TEXT="to define &quot;contents&quot; as a parameter and a field" ID="ID_786515374" CREATED="1429300074221" MODIFIED="1429300081011"/>
<node TEXT="the problem it solves" ID="ID_235541386" CREATED="1429300096309" MODIFIED="1429300100051">
<node TEXT="this, earlier, is ugly -- &quot;conts&quot; exists only to be copied" ID="ID_1401916221" CREATED="1429300122708" MODIFIED="1429300131868"/>
<node TEXT="class ArrayElement(conts: Array[String]) extends Element {&#xa;  def contents: Array[String] = conts&#xa;}" ID="ID_1648781644" CREATED="1429299103012" MODIFIED="1429299109692"/>
</node>
<node TEXT="use the word &quot;var&quot; rather than &quot;val&quot; if need mutate" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_766401553" CREATED="1429300179189" MODIFIED="1429300191361"/>
</node>
<node TEXT="invoking superclass constructors" ID="ID_245817821" CREATED="1429300450117" MODIFIED="1429300453772">
<node TEXT="this does it" ID="ID_1769604666" CREATED="1429300454749" MODIFIED="1429300458579">
<node TEXT="class LineElement(s: String) extends ArrayElement(Array(s)) {&#xa;  ..." ID="ID_457352675" CREATED="1429300459278" MODIFIED="1429300461981"/>
<node TEXT="it hands s from LineElement to the superclass ArrayElement" ID="ID_326257545" CREATED="1429300463821" MODIFIED="1429300475485"/>
</node>
</node>
<node TEXT="keyword &quot;override&quot; mitigates the &quot;fragile base class problem&quot;" ID="ID_1532763543" CREATED="1429300962821" MODIFIED="1429300973957">
<node TEXT="if a base class introduces a member that a subclass already uses, then rather than broken execution, one gets a compile time &quot;this is getting overridden without the keyword&quot; error" ID="ID_17543482" CREATED="1429300975421" MODIFIED="1429301013965"/>
</node>
<node TEXT="the &quot;first line&quot; of a class can be long" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_359007358" CREATED="1429301074342" MODIFIED="1429301081185">
<node TEXT="this is valid" ID="ID_1832909831" CREATED="1429301082613" MODIFIED="1429301096820"/>
<node TEXT="class UniformElement(&#xa;  ch: Char,&#xa;  override val width: Int,&#xa;  override val height: Int&#xa;) extends Element {&#xa;  ...&#xa;}" ID="ID_1596814412" CREATED="1429301097773" MODIFIED="1429301138372"/>
</node>
<node TEXT="valid: &quot;var x: Superclass = new Subclass( ... )&quot;" ID="ID_1892441071" CREATED="1429301224318" MODIFIED="1429301250500"/>
<node TEXT="keyword &quot;final&quot; =&gt; &quot;cannot be overridden&quot;" ID="ID_263166425" CREATED="1429301437710" MODIFIED="1429301466038">
<node TEXT="applicable to members or whole classes" ID="ID_67187122" CREATED="1429301466654" MODIFIED="1429301474261"/>
</node>
<node TEXT="factory method" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1083466101" CREATED="1429301989942" MODIFIED="1429302001119">
<node TEXT="book, p. 244" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_202309844" CREATED="1429301985413" MODIFIED="1429301999995"/>
<node TEXT="the book&apos;s example" ID="ID_1116209183" CREATED="1429302025758" MODIFIED="1429302030733">
<node TEXT="the factory is a singleton (&quot;object&quot; rather than &quot;class&quot;) companion to the Element class" ID="ID_1040289177" CREATED="1429302003173" MODIFIED="1429302040118"/>
<node TEXT="clients need then exposure only to the (abstract!) Element class and its (concrete?) companion object, but not its subclasses" ID="ID_929694363" CREATED="1429302041629" MODIFIED="1429302071737"/>
<node TEXT="those subclasses&apos; constructors are called through the companion" ID="ID_391902828" CREATED="1429302055030" MODIFIED="1429302092757"/>
</node>
</node>
</node>
<node TEXT="ch 11: the hierarchy" ID="ID_426309516" CREATED="1429302947421" MODIFIED="1429302952365">
<node TEXT="Any" ID="ID_1323449769" CREATED="1429303132259" MODIFIED="1429303134459">
<node TEXT="all classes descend from Any" ID="ID_779446728" CREATED="1429302982421" MODIFIED="1429303010076"/>
</node>
<node TEXT="AnyVal" ID="ID_508297849" CREATED="1429303144357" MODIFIED="1429303148772">
<node TEXT="&quot;AnyVal is&#xa;the parent class of every built-in value class in Scala. There are nine such&#xa;value classes: Byte, Short, Char, Int, Long, Float, Double, Boolean, and&#xa;Unit.&quot;" ID="ID_1296806890" CREATED="1429303244759" MODIFIED="1429303250504"/>
</node>
<node TEXT="AnyRef" ID="ID_719074592" CREATED="1429303148985" MODIFIED="1429303150358"/>
<node TEXT="Null descends from anything descended from AnyRef" ID="ID_19305372" CREATED="1429303697964" MODIFIED="1429303716167"/>
<node TEXT="Nothing" ID="ID_959775175" CREATED="1429302989687" MODIFIED="1429303811191">
<node ID="ID_727310112" CREATED="1429303811594" MODIFIED="1429303811594"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      descends from everything
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="has no values" ID="ID_1703404997" CREATED="1429303812346" MODIFIED="1429303814209"/>
<node TEXT="signals abnormal execution" ID="ID_346756583" CREATED="1429303918817" MODIFIED="1429303926261"/>
<node TEXT="why it&apos;s good" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1534996768" CREATED="1429303956497" MODIFIED="1429303961706">
<node TEXT="def divide(x: Int, y: Int): Int =&#xa;  if (y != 0) x / y&#xa;  else error(&quot;can&apos;t divide by zero&quot;)" ID="ID_971784857" CREATED="1429303963049" MODIFIED="1429303965318"/>
<node TEXT="&quot;The &#x201c;then&#x201d; branch of the conditional, x / y, has type Int, whereas the else&#xa;branch, the call to error, has type Nothing. Because Nothing is a subtype&#xa;of Int, the type of the whole conditional is Int, as required.&quot;" ID="ID_1075453896" CREATED="1429303972647" MODIFIED="1429303976643"/>
</node>
</node>
</node>
<node TEXT="ch 12: traits" LOCALIZED_STYLE_REF="default" ID="ID_1049989422" CREATED="1429339926141" MODIFIED="1429489299220">
<node TEXT="intro" ID="ID_355608971" CREATED="1429340431342" MODIFIED="1429340433654">
<font BOLD="true"/>
<node TEXT="like Haskell types: can be mixed" ID="ID_1581906437" CREATED="1429339968166" MODIFIED="1429339973156"/>
<node TEXT="trait statement: like class statement" ID="ID_778690741" CREATED="1429340033390" MODIFIED="1429340039132"/>
<node TEXT="usually* use &quot;extends&quot; to mix a trait into a class" ID="ID_418124133" CREATED="1429340042533" MODIFIED="1429340165612">
<node TEXT="* &quot;If you wish to mix a trait into a class that explicitly extends a superclass,&#xa;you use extends to indicate the superclass and with to mix in the trait.&quot;" ID="ID_1097069958" CREATED="1429340172598" MODIFIED="1429340176053"/>
</node>
<node TEXT="traits define types" ID="ID_106981013" CREATED="1429340093902" MODIFIED="1429340096596">
<node TEXT="and anything with that trait can match that type, similar to inheritance" ID="ID_236996768" CREATED="1429340101278" MODIFIED="1429340125188"/>
</node>
<node TEXT="are like classes except" ID="ID_1669665029" CREATED="1429340287470" MODIFIED="1429340295099">
<node TEXT="cannot have class (constructor) parameters" ID="ID_1477751552" CREATED="1429340295853" MODIFIED="1429340308426">
<node TEXT="trait NoPoint(x: Int, y: Int) // Does not compile" ID="ID_212717121" CREATED="1429340322366" MODIFIED="1429340323572"/>
</node>
<node TEXT="the implementation to invoke at super() calls is depends on the concrete class into which the trait is mixed (I think)" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1598236157" CREATED="1429340371111" MODIFIED="1429340423145"/>
</node>
</node>
<node TEXT="thin vs. rich interf" ID="ID_720079914" CREATED="1429340461214" MODIFIED="1429340470017">
<node TEXT="traits can include concrete methods" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1472901918" CREATED="1429340634286" MODIFIED="1429340645825">
<node TEXT="making rich interfaces less work" ID="ID_1794103064" CREATED="1429340656734" MODIFIED="1429340661701"/>
</node>
<node TEXT="define (many) concrete fields in terms of (fewer) abstract ones" ID="ID_1993349659" CREATED="1429340792695" MODIFIED="1429340807981">
<node TEXT="trait Rectangular {&#xa;  def topLeft: Point&#xa;  def bottomRight: Point&#xa;  def left = topLeft.x&#xa;  def right = bottomRight.x&#xa;  def width = right - left&#xa;  // and many more geometric methods...&#xa;}" ID="ID_693602258" CREATED="1429340805423" MODIFIED="1429340806720"/>
</node>
</node>
<node TEXT="might require specifying a &quot;type parameter&quot;" ID="ID_640630669" CREATED="1429341045623" MODIFIED="1429341074067">
<node TEXT="e.g. &quot; Ordered requires you&#xa;to specify a type parameter when you mix it in. Type parameters are not&#xa;discussed in detail until Chapter 19, but for now all you need to know is that&#xa;when you mix in Ordered, you must actually mix in Ordered[C], where C&#xa;is the class whose elements you compare. In this case, Rational mixes in&#xa;Ordered[Rational]&quot;" ID="ID_489753877" CREATED="1429341053678" MODIFIED="1429341069071"/>
</node>
<node TEXT="Ordered" ID="ID_1670987775" CREATED="1429340947999" MODIFIED="1429340950163">
<node TEXT="defines the four &lt;, &gt;=, etc. all in terms of one &quot;compare&quot; op" ID="ID_1146450112" CREATED="1429340950884" MODIFIED="1429340973498"/>
</node>
<node TEXT="stacking, mixing" ID="ID_964812850" CREATED="1429487564868" MODIFIED="1429488100867">
<node TEXT="can limit a trait&apos;s mixblt to a class(&apos;s descendents)" ID="ID_1646010906" CREATED="1429487807437" MODIFIED="1429488094854">
<node TEXT="trait Doubling extends IntQueue {&#xa;  ..." ID="ID_578036969" CREATED="1429487829253" MODIFIED="1429487851738"/>
<node TEXT="says Doubling can only be &quot;mixed in&quot; to a class that also extends IntQueue" ID="ID_1893339630" CREATED="1429487890821" MODIFIED="1429487904554"/>
</node>
<node TEXT="traits can override and call super" ID="ID_895034875" CREATED="1429488046109" MODIFIED="1429488277111">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1593996938" STARTINCLINATION="195;0;" ENDINCLINATION="195;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
<node TEXT="trait Doubling extends IntQueue {&#xa;  abstract override def put(x: Int) { super.put(2 * x) }&#xa;}" ID="ID_1528774431" CREATED="1429488049525" MODIFIED="1429488052216"/>
<node TEXT="succeeds &quot;as long as the trait is mixed in after another trait&#xa;or class that gives a concrete definition to the method [referred to by super]&quot;" ID="ID_546805247" CREATED="1429488103109" MODIFIED="1429488140262"/>
</node>
<node TEXT="&quot;abstract override&quot;" ID="ID_1593996938" CREATED="1429488234509" MODIFIED="1429488236034">
<node TEXT="&quot; only allowed for members of traits, not classes, and it means that&#xa;the trait must be mixed into some class that has a concrete definition of the&#xa;method in question.&quot;" ID="ID_1310449567" CREATED="1429488247500" MODIFIED="1429488249809"/>
</node>
<node TEXT="mixing objects and classes" ID="ID_304581364" CREATED="1429488425013" MODIFIED="1429488430626">
<node TEXT="&quot;class MyQueue extends BasicIntQueue with Doubling&quot;" ID="ID_954919788" CREATED="1429488305969" MODIFIED="1429488307865"/>
<node TEXT="&quot;val queue = new BasicIntQueue with Doubling with Filtering&quot;" ID="ID_33176640" CREATED="1429488436965" MODIFIED="1429488449038"/>
</node>
<node TEXT="linearization" ID="ID_1425164131" CREATED="1429488767806" MODIFIED="1429488770699">
<node TEXT="vaguely" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1805540564" CREATED="1429488773485" MODIFIED="1429488863523">
<node TEXT="traits further right take effect first" ID="ID_1688026949" CREATED="1429488453549" MODIFIED="1429488779185"/>
</node>
<node TEXT="more accurately" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1506221708" CREATED="1429488784237" MODIFIED="1429488863518">
<node TEXT="Scala creates a linearization of not just the mixed-in traits and classes, but all their superclasses and mixed-in traits (a class can have both superclasses and mixed in traits)" ID="ID_193406528" CREATED="1429488732973" MODIFIED="1429488836904"/>
</node>
<node TEXT="linearization rules" ID="ID_783136705" CREATED="1429488855916" MODIFIED="1429488877954">
<node TEXT="each class is listed before its higher-ups" ID="ID_33026701" CREATED="1429488844701" MODIFIED="1429488868992"/>
<node TEXT="they are listed on p. 273, after &quot;note&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_171135074" CREATED="1429488919564" MODIFIED="1429488934031"/>
</node>
</node>
</node>
<node TEXT="whether to trait or class" ID="ID_1847852830" CREATED="1429488980149" MODIFIED="1429488982810">
<node TEXT="p. 275" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1919529407" CREATED="1429488993790" MODIFIED="1429488996439"/>
<node TEXT="my favorite" ID="ID_796854856" CREATED="1429489018958" MODIFIED="1429489021091">
<node TEXT="&quot;If it might be reused in multiple, unrelated classes, make it a trait. Only&#xa;traits can be mixed into different parts of the class hierarchy.&quot;" ID="ID_1802296944" CREATED="1429489021850" MODIFIED="1429489023603"/>
</node>
</node>
</node>
<node TEXT="ch 13: packages and imports" ID="ID_1728958366" CREATED="1429304418180" MODIFIED="1429304422556">
<node TEXT="incredibly flexible" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_533723231" CREATED="1429333258369" MODIFIED="1429333261838"/>
<node TEXT="&quot;package clause&quot;" ID="ID_1693350424" CREATED="1429304513649" MODIFIED="1429304519817">
<node TEXT="is a way to put code into a namespace" ID="ID_1809325893" CREATED="1429304520501" MODIFIED="1429304527592"/>
</node>
<node TEXT="join into package gains brevity" ID="ID_1538506487" CREATED="1429329319488" MODIFIED="1429329368162">
<node TEXT="programs in the same package can refer to each others&apos; contents more briefly" ID="ID_1142889225" CREATED="1429329327736" MODIFIED="1429329346622"/>
</node>
<node TEXT="packages contain classes and packages" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_806759271" CREATED="1429329705144" MODIFIED="1429329748412">
<node TEXT="package bobsrockets {&#xa;  package navigation {&#xa;    class Navigator {&#xa;      // No need to say bobsrockets.navigation.StarMap&#xa;      val map = new StarMap&#xa;    }&#xa;    class StarMap&#xa;  }&#xa;  class Ship {&#xa;    // No need to say bobsrockets.navigation.Navigator&#xa;    val nav = new navigation.Navigator&#xa;  }&#xa;  package fleets {&#xa;    class Fleet {&#xa;      // No need to say bobsrockets.Ship&#xa;      def addShip() { new Ship }&#xa;    }&#xa;  }&#xa;}" ID="ID_11676013" CREATED="1429329739344" MODIFIED="1429329740472"/>
</node>
<node TEXT="symbols in enclosing packages not autoj avail" ID="ID_550876631" CREATED="1429329820336" MODIFIED="1429329833981">
<node TEXT="package bobsrockets {&#xa;  class Ship&#xa;}&#xa;package bobsrockets.fleets {&#xa;  class Fleet {&#xa;    // Doesn&#x2019;t compile! Ship is not in scope.&#xa;    def addShip() { new Ship }&#xa;  }&#xa;}" ID="ID_949717646" CREATED="1429329824744" MODIFIED="1429329825827"/>
</node>
<node TEXT="access shadowed packages" ID="ID_147008536" CREATED="1429329969832" MODIFIED="1429332342045">
<node TEXT="&quot;every top-level&#xa;package you can write is treated as a member of package _root_&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_629382605" CREATED="1429330060089" MODIFIED="1429332314902"/>
<node TEXT="many kinds of shadowing" ID="ID_1335681360" CREATED="1429332342887" MODIFIED="1429332346187"/>
<node TEXT="// In file launch.scala" ID="ID_1381636724" CREATED="1429330045113" MODIFIED="1429330045113">
<node TEXT="package launch {&#xa;  class Booster3&#xa;}" ID="ID_419658229" CREATED="1429330050744" MODIFIED="1429330054616"/>
</node>
<node TEXT="// In file bobsrockets.scala" ID="ID_1639492409" CREATED="1429330114192" MODIFIED="1429330127954">
<node TEXT="package bobsrockets {&#xa;  package navigation {&#xa;    package launch {&#xa;      class Booster1&#xa;    }&#xa;    class MissionControl {&#xa;      val booster1 = new launch.Booster1&#xa;      val booster2 = new bobsrockets.launch.Booster2&#xa;      val booster3 = new _root_.launch.Booster3&#xa;    }&#xa;  }&#xa;  package launch {&#xa;    class Booster2&#xa;  }&#xa;}" ID="ID_1537336735" CREATED="1429330116508" MODIFIED="1429330118232"/>
</node>
</node>
<node TEXT="import statements only make things more briefly referred to" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1017601223" CREATED="1429332437041" MODIFIED="1429332452820"/>
<node TEXT="import package.*._" ID="ID_1897266832" CREATED="1429332534666" MODIFIED="1429332619656">
<node TEXT="* could be a class or another package" ID="ID_1528438539" CREATED="1429332620298" MODIFIED="1429332628880"/>
<node TEXT="imports everything in package" ID="ID_1964419543" CREATED="1429332541281" MODIFIED="1429332546432"/>
</node>
<node TEXT="a function argument&apos;s fields can be imported" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_518402654" CREATED="1429332829426" MODIFIED="1429332892006">
<node TEXT="p. 283" ID="ID_1119759275" CREATED="1429332837057" MODIFIED="1429332842527"/>
<node TEXT="def showFruit(fruit: Fruit) {&#xa;  import fruit._&#xa;  println(name +&quot;s are &quot;+ color)&#xa;}" ID="ID_1962329701" CREATED="1429332894354" MODIFIED="1429332898066"/>
<node TEXT="where the object named fruit has fields &quot;name&quot; and &quot;color&quot;" ID="ID_1608208775" CREATED="1429332902345" MODIFIED="1429332915014"/>
<node TEXT="note that this imports the object fruit, not the (class, library, package?) Fruit" ID="ID_188288864" CREATED="1429332915210" MODIFIED="1429332941029"/>
</node>
<node TEXT="? Some qualification still needed?" ID="ID_695405765" CREATED="1429333169865" MODIFIED="1429333171638">
<node TEXT="import java.util.regex&#xa;class AStarB {&#xa;  // Accesses java.util.regex.Pattern&#xa;  val pat = regex.Pattern.compile(&quot;a*b&quot;)&#xa;}" ID="ID_129115511" CREATED="1429333176298" MODIFIED="1429333177411"/>
</node>
<node TEXT="selective import" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_501718578" CREATED="1429333230122" MODIFIED="1429333232431">
<node TEXT="import Fruits.{Apple, Orange}" ID="ID_521772497" CREATED="1429333233570" MODIFIED="1429333234457"/>
</node>
<node TEXT="rename one of two imports" ID="ID_619462574" CREATED="1429333247706" MODIFIED="1429333253063">
<node TEXT="import Fruits.{Apple =&gt; McIntosh, Orange}" ID="ID_1723045933" CREATED="1429333253682" MODIFIED="1429333254593"/>
</node>
<node TEXT="exclude one member" ID="ID_352757151" CREATED="1429333372267" MODIFIED="1429333376464">
<node TEXT="import Fruits.{Pear =&gt; _, _}" ID="ID_1029070329" CREATED="1429333377866" MODIFIED="1429333378992"/>
<node TEXT="(excludes Pears)" ID="ID_1375787297" CREATED="1429333379258" MODIFIED="1429333383368"/>
</node>
<node TEXT="&quot;access modifiers&quot;" ID="ID_1413078370" CREATED="1429333772690" MODIFIED="1429333776668">
<font BOLD="true"/>
<node TEXT="private members: avail within class that has them, or from classes within class that has them" ID="ID_902259238" CREATED="1429333777634" MODIFIED="1429333805411"/>
<node TEXT="protected member: avail only to subclasses" ID="ID_1110430202" CREATED="1429333822890" MODIFIED="1429333830993"/>
<node TEXT="private[package or class]" ID="ID_795669764" CREATED="1429334206371" MODIFIED="1429334289839">
<node TEXT="means &quot;private outside that place but visible within&quot;, where that place is what&apos;s in the brackets" ID="ID_385532874" CREATED="1429334219458" MODIFIED="1429334247822"/>
</node>
<node TEXT="protected[package or class]" ID="ID_586091961" CREATED="1429334298955" MODIFIED="1429334301704">
<node TEXT="similar to &quot;private&quot;, but in addition to extending visibility to a certain set of classes based on their package-nested relationship to the visibility-limiting branch, it extends visibility to all subclasses in the inheritance scheme (rather than the nesting of packages and classes scheme)" ID="ID_1214582471" CREATED="1429334303850" MODIFIED="1429334618111"/>
</node>
<node TEXT="private[this]" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1512149273" CREATED="1429334732539" MODIFIED="1429334736632">
<node TEXT="access restricted not just to the same class, but the same instance of it (i.e. the same object)" ID="ID_1879572227" CREATED="1429334741034" MODIFIED="1429334768713"/>
</node>
</node>
<node TEXT="companion access" ID="ID_693596487" CREATED="1429334935235" MODIFIED="1429334937584">
<node TEXT="a class can access all of its companion object, and vice versa" ID="ID_1695235965" CREATED="1429334938787" MODIFIED="1429334950160"/>
</node>
<node TEXT="&quot;package object&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_739060653" CREATED="1429335126195" MODIFIED="1429335335136">
<node TEXT="I don&apos;t get it." LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_974403724" CREATED="1429335336500" MODIFIED="1429335343092"/>
<node TEXT="collect widely-needed helper methods there" ID="ID_997547418" CREATED="1429335137739" MODIFIED="1429335147921"/>
<node TEXT="&quot;Each package is allowed&#xa;to have one package object. Any definitions placed in a package object are&#xa;considered members of the package itself.&quot;" ID="ID_1406827964" CREATED="1429335130179" MODIFIED="1429335151452"/>
</node>
</node>
<node TEXT="ch 14: assert, unit test" LOCALIZED_STYLE_REF="styles.subtopic" ID="ID_1608190467" CREATED="1429916658778" MODIFIED="1429916828073">
<node TEXT="295-308" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_751388805" CREATED="1430426518709" MODIFIED="1430426522615"/>
<node TEXT="unary and binary assert" ID="ID_437369137" CREATED="1429916664993" MODIFIED="1429916672758">
<node TEXT="unary: takes a predicate" ID="ID_668820741" CREATED="1429916677914" MODIFIED="1430425594519">
<node TEXT="def above(that: Element): Element = {&#xa;  val this1 = this widen that.width&#xa;  val that1 = that widen this.width&#xa;  assert(this1.width == that1.width)&#xa;  elem(this1.contents ++ that1.contents)&#xa;}" ID="ID_1312907709" CREATED="1429916679898" MODIFIED="1429916685082"/>
</node>
<node TEXT="binary: second arg is an explanation, any object, used if assert fails" ID="ID_506557216" CREATED="1429916686577" MODIFIED="1429916705910"/>
</node>
<node TEXT="ensuring" ID="ID_1239027294" CREATED="1430426197901" MODIFIED="1430426199763">
<node TEXT="purpose" ID="ID_1097789313" CREATED="1430426258781" MODIFIED="1430426259931">
<node TEXT="takes one argument, a predicate" ID="ID_1099348921" CREATED="1430426205037" MODIFIED="1430426210827"/>
<node TEXT="calls that predicate on a function&apos;s result" ID="ID_1094424925" CREATED="1430426227085" MODIFIED="1430426235283"/>
</node>
<node TEXT="return" ID="ID_1150576323" CREATED="1430426409437" MODIFIED="1430426410547">
<node TEXT="if the predicate succeeds, ensuring returns the tested object" ID="ID_173277988" CREATED="1430426380909" MODIFIED="1430426400419"/>
<node TEXT="otherwise it throws an exception" ID="ID_1118132604" CREATED="1430426400725" MODIFIED="1430426403635"/>
</node>
<node TEXT="? object" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_470428293" CREATED="1430426417900" MODIFIED="1430426433096">
<node TEXT="tests the result of whatever code immediately precedes it?" ID="ID_1907463412" CREATED="1430426421573" MODIFIED="1430426430683"/>
</node>
<node TEXT="in predicate (lambda expr?), &quot;_&quot; represents the returned value" ID="ID_1356054485" CREATED="1430426304085" MODIFIED="1430426328551"/>
<node TEXT="example" ID="ID_758660788" CREATED="1430426236069" MODIFIED="1430426237051">
<node TEXT="private def widen(w: Int): Element =&#xa;if (w &lt;= width)&#xa;  this&#xa;else {&#xa;  val left = elem(&apos; &apos;, (w - width) / 2, height)&#xa;  var right = elem(&apos; &apos;, w - width - left.width, height)&#xa;  left beside this beside right&#xa;} ensuring (w &lt;= _.width)" ID="ID_1822338013" CREATED="1430426237925" MODIFIED="1430426248745"/>
</node>
</node>
<node TEXT="ScalaTest" ID="ID_1417582180" CREATED="1430426503163" MODIFIED="1430426645779">
<node TEXT="p 297" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_563754985" CREATED="1430426647021" MODIFIED="1430426661825"/>
</node>
</node>
<node TEXT="ch 15, case class &amp; patt mat" LOCALIZED_STYLE_REF="default" ID="ID_93339778" CREATED="1429338225668" MODIFIED="1429916124002">
<node TEXT="reading" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1589063969" CREATED="1429911557763" MODIFIED="1429911560277">
<node TEXT="ch: 309-343" ID="ID_1873706897" CREATED="1429911554724" MODIFIED="1429911562638"/>
<node TEXT="p, 314 at 2:39 pm" ID="ID_1442637467" CREATED="1429911563456" MODIFIED="1429911582228"/>
</node>
<node TEXT="! skipped last section" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_804905229" CREATED="1429916092986" MODIFIED="1429916106424">
<node TEXT="15.8, pdf 335" ID="ID_1541479682" CREATED="1429916107161" MODIFIED="1429916112364"/>
<node TEXT="it is a long example" ID="ID_217950871" CREATED="1429916116065" MODIFIED="1429916118590"/>
</node>
<node TEXT="case class: advantages" ID="ID_1203314446" CREATED="1429338459845" MODIFIED="1429339236407">
<font BOLD="true"/>
<node TEXT="&gt; prefixing &quot;case &quot; to a class declaration does these" ID="ID_1187754727" CREATED="1429338468421" MODIFIED="1429338486171"/>
<node TEXT="adds a factory method that obviates need for &quot;new&quot;" ID="ID_1738238163" CREATED="1429338493701" MODIFIED="1429339224521">
<node TEXT="which is nice with nesting" ID="ID_804459792" CREATED="1429338497253" MODIFIED="1429338500779"/>
<node TEXT="e.g." ID="ID_890783072" CREATED="1429338514325" MODIFIED="1429338515259">
<node TEXT="val op = BinOp(&quot;+&quot;, Number(1), v)" ID="ID_1308954322" CREATED="1429338512029" MODIFIED="1429338513428"/>
</node>
</node>
<node TEXT="adds accessors for each constructor param" ID="ID_1192394064" CREATED="1429339274181" MODIFIED="1429339287932">
<node TEXT="and setters?" ID="ID_22621450" CREATED="1429339289189" MODIFIED="1429339292868"/>
</node>
<node TEXT="adds a &quot;copy&quot; method" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_270610557" CREATED="1429338678405" MODIFIED="1429338683190">
<node TEXT="need only specify changed parameters" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_472344952" CREATED="1429910306382" MODIFIED="1429910316907"/>
<node TEXT="scala&gt; op.copy(operator = &quot;-&quot;)" ID="ID_975278977" CREATED="1429910304587" MODIFIED="1429910304587"/>
</node>
<node TEXT="lets you pattern match on instances" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1648098578" CREATED="1429338981830" MODIFIED="1429338990071"/>
<node TEXT="adds other functions you would have to otherwise boilerplate" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_719398401" CREATED="1429338635869" MODIFIED="1429338650639"/>
</node>
<node TEXT="example of expression simplification" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_265262598" CREATED="1429338938070" MODIFIED="1429912740963">
<node TEXT=".altvs" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_413642543" CREATED="1429914133896" MODIFIED="1429914137322"/>
<node TEXT="at top level" ID="ID_1701645258" CREATED="1429914125449" MODIFIED="1429914128191">
<node TEXT="pdf 312" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1514236586" CREATED="1429338944189" MODIFIED="1429338947105"/>
<node ID="ID_1459696067" CREATED="1429338969945" MODIFIED="1429338969945"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      using pattern matching
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="recursive" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1880475022" CREATED="1429914129600" MODIFIED="1429914132612">
<node TEXT="def simplifyAll(expr: Expr): Expr = expr match {&#xa;  case UnOp(&quot;-&quot;, UnOp(&quot;-&quot;, e)) =&gt; simplifyAll(e)&#xa;   // &#x2018;-&#x2019; is its own inverse&#xa;  case BinOp(&quot;+&quot;, e, Number(0)) =&gt; simplifyAll(e)&#xa;   // &#x2018;0&#x2019; is a neutral element for &#x2018;+&#x2019;&#xa;  case BinOp(&quot;*&quot;, e, Number(1)) =&gt; simplifyAll(e)&#xa;   // &#x2018;1&#x2019; is a neutral element for &#x2018;*&#x2019;&#xa;  case UnOp(op, e) =&gt; UnOp(op, simplifyAll(e))&#xa;  case BinOp(op, l, r) =&gt; BinOp(op, simplifyAll(l), simplifyAll(r))&#xa;  case _ =&gt; expr&#xa;}" ID="ID_515749760" CREATED="1429914139817" MODIFIED="1429914140757"/>
</node>
</node>
<node TEXT="simplification with pattern matching" ID="ID_1653872618" CREATED="1429910464540" MODIFIED="1429910470202">
<node TEXT="pdf 312" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_48840800" CREATED="1429910478784" MODIFIED="1429910483321"/>
<node TEXT="def simplifyTop(expr: Expr): Expr = expr match {&#xa;  case UnOp(&quot;-&quot;, UnOp(&quot;-&quot;, e)) =&gt; e // Double negation&#xa;  case BinOp(&quot;+&quot;, e, Number(0)) =&gt; e // Adding zero&#xa;  case BinOp(&quot;*&quot;, e, Number(1)) =&gt; e // Multiplying by one&#xa;  case _ =&gt; expr&#xa;}" ID="ID_126198487" CREATED="1429910471607" MODIFIED="1429910473741"/>
<node TEXT="scala&gt; simplifyTop(UnOp(&quot;-&quot;, UnOp(&quot;-&quot;, Var(&quot;x&quot;))))&#xa;res4: Expr = Var(x)" ID="ID_1025161982" CREATED="1429910537631" MODIFIED="1429910539647"/>
</node>
<node TEXT="match expressions return values, but that can be ()" ID="ID_1226292743" CREATED="1429910843047" MODIFIED="1429910855500">
<node TEXT="expr match {&#xa;  case BinOp(op, left, right) =&gt;&#xa;    println(expr +&quot; is a binary operation&quot;)&#xa;  case _ =&gt; // does nothing&#xa;}" ID="ID_1590133375" CREATED="1429910881869" MODIFIED="1429910885328"/>
</node>
<node TEXT="constant patterns" ID="ID_1333405647" CREATED="1429911737217" MODIFIED="1429911739318">
<node TEXT="are literals -- numbers, strings, any val, any singleton object" ID="ID_921147271" CREATED="1429911742510" MODIFIED="1429911779425"/>
</node>
<node TEXT="_ is wildcard" ID="ID_432936078" CREATED="1429911671578" MODIFIED="1429911676557">
<node TEXT="matches anything" ID="ID_1045198621" CREATED="1429911677250" MODIFIED="1429911679490"/>
<node TEXT="can be in a nested structure" ID="ID_1938832957" CREATED="1429911680259" MODIFIED="1429911686605"/>
</node>
<node TEXT="variable pattern" ID="ID_1375874817" CREATED="1429911855950" MODIFIED="1429911857795">
<node TEXT="like _, matches anything -- but then names it" ID="ID_582576969" CREATED="1429911858478" MODIFIED="1429911866670"/>
</node>
<node TEXT="variable or constant" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_463257539" CREATED="1429912122527" MODIFIED="1429913529208">
<node TEXT="pitfall" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1037620658" CREATED="1429913529929" MODIFIED="1429913533978"/>
<node TEXT="pdf 316, 2 pages" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_323821096" CREATED="1429912357895" MODIFIED="1429912362795"/>
<node TEXT="pattern match variable must start lower case" ID="ID_290174143" CREATED="1429912131311" MODIFIED="1429912147716">
<node TEXT="&quot; a simple name starting with&#xa;a lowercase letter is taken to be a pattern variable; all other references are&#xa;taken to be constants.&quot;" ID="ID_1706331150" CREATED="1429912126599" MODIFIED="1429912129110"/>
</node>
<node TEXT="prefixing qualifier to field can help" ID="ID_1282401294" CREATED="1429912396439" MODIFIED="1429912449358">
<node TEXT="this.field interpreted differently from field" ID="ID_1130221013" CREATED="1429912367495" MODIFIED="1429912383958"/>
<node TEXT="field would be variable, this.field would be constant" ID="ID_1391109141" CREATED="1429912384689" MODIFIED="1429912392886"/>
</node>
<node TEXT="backticks can treat a lowercase identifier as a constant" ID="ID_1545205779" CREATED="1429912406039" MODIFIED="1429912435230"/>
</node>
<node TEXT="arbitrary length list match" ID="ID_1763537183" CREATED="1429912716600" MODIFIED="1429912725617">
<node TEXT="expr match {&#xa;  case List(0, _*) =&gt; println(&quot;found it&quot;)&#xa;  case _ =&gt;&#xa;}" ID="ID_176373387" CREATED="1429912721936" MODIFIED="1429912722854"/>
</node>
<node TEXT="typed patterns" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_56207646" CREATED="1429912844560" MODIFIED="1429912855811">
<node TEXT="def generalSize(x: Any) = x match {&#xa;  case s: String =&gt; s.length&#xa;  case m: Map[_, _] =&gt; m.size&#xa;  case _ =&gt; -1&#xa;}" ID="ID_1300202619" CREATED="1429912857951" MODIFIED="1429912859029"/>
<node TEXT="note that if the &quot;case s&quot; branch executes, s and x are the same object, yet x.length will not compile" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_600969628" CREATED="1429912955776" MODIFIED="1429912987099"/>
<node TEXT="Map[_,_] uses type wildcards" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_514105994" CREATED="1429913362960" MODIFIED="1429913388883"/>
</node>
<node TEXT="cannot pattern match on types" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_728480911" CREATED="1429913517280" MODIFIED="1429913538670">
<node TEXT="pitfall" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1420429801" CREATED="1429913529929" MODIFIED="1429913533978"/>
<node TEXT="except for arrays, or using an _ for the type" ID="ID_793746369" CREATED="1429913544112" MODIFIED="1429913648699"/>
<node TEXT="so these work" ID="ID_398240993" CREATED="1429913577503" MODIFIED="1429913652123">
<node TEXT="def isStringArray(x: Any) = x match {&#xa;  case a: Array[String] =&gt; &quot;yes&quot;&#xa;  .." ID="ID_1326966318" CREATED="1429913575224" MODIFIED="1429913672158"/>
<node TEXT="def generalSize(x: Any) = x match {&#xa;  case m: Map[_, _] =&gt; m.size&#xa;  .." ID="ID_1461588623" CREATED="1429912857951" MODIFIED="1429913668611"/>
</node>
<node TEXT="but not this" ID="ID_1485978470" CREATED="1429913584887" MODIFIED="1429913586166">
<node TEXT="def isIntIntMap(x: Any) = x match {&#xa;  case m: Map[Int, Int] =&gt; true&#xa;  .." ID="ID_1341307325" CREATED="1429913613120" MODIFIED="1429913677657"/>
</node>
</node>
<node TEXT="naming a matched expr or subexpr" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1487399420" CREATED="1429913756856" MODIFIED="1429913764603">
<node TEXT="e@x gives x the name e" ID="ID_1812408449" CREATED="1429913776552" MODIFIED="1429913785710"/>
<node TEXT="expr match {&#xa;  case UnOp(&quot;abs&quot;, e @ UnOp(&quot;abs&quot;, _)) =&gt; e&#xa;  .." ID="ID_513198629" CREATED="1429913765456" MODIFIED="1429913772322"/>
</node>
<node TEXT="&quot;pattern guard&quot;: check pattern for properties" ID="ID_1670613360" CREATED="1429913943553" MODIFIED="1429913961551">
<node TEXT="def simplifyAdd(e: Expr) = e match {&#xa;  case BinOp(&quot;+&quot;, x, y) if x == y =&gt;&#xa;    BinOp(&quot;*&quot;, x, Number(2))&#xa;  .." ID="ID_1373078385" CREATED="1429913962888" MODIFIED="1429913970472"/>
</node>
<node TEXT="recursion: catch-all case must succeed special case" ID="ID_1112757207" CREATED="1429914200841" MODIFIED="1429914215268">
<node TEXT="if rules r and s could both apply to expression e, and r is a special case of s, r should be listed first" ID="ID_375448427" CREATED="1429914221864" MODIFIED="1429914290191"/>
</node>
<node TEXT="&quot;sealed classes&quot;" ID="ID_797888806" CREATED="1429914438817" MODIFIED="1429914555163">
<node ID="ID_461449899" CREATED="1429914555986" MODIFIED="1429914555986"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      let the compiler know all possible cases
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="allows warnings like this" ID="ID_786054317" CREATED="1429914544721" MODIFIED="1429914549051">
<node TEXT="warning: match is not exhaustive!&#xa;missing combination&#xa; UnOp&#xa;missing combination&#xa; BinOp" ID="ID_1898251318" CREATED="1429914549058" MODIFIED="1429914550385"/>
</node>
<node TEXT="&quot;[you might want to] make the superclass of your case classes sealed.&#xa;A sealed class cannot have any new subclasses added except the ones in the&#xa;same file.&quot;" LOCALIZED_STYLE_REF="default" ID="ID_999151522" CREATED="1429914453984" MODIFIED="1429914578721"/>
<node TEXT="to suppress the warning" ID="ID_519236002" CREATED="1429914672385" MODIFIED="1429914679765">
<node TEXT="def describe(e: Expr): String = (e: @unchecked) match {&#xa;  case Number(_) =&gt; &quot;a number&quot;&#xa;  case Var(_) =&gt; &quot;a variable&quot;&#xa;}" ID="ID_1698495902" CREATED="1429914680496" MODIFIED="1429914682643"/>
</node>
</node>
<node TEXT="Option type" ID="ID_80522942" CREATED="1429914824441" MODIFIED="1429914842821">
<node TEXT="is like Maybe in Haskell" ID="ID_562085852" CREATED="1429914843863" MODIFIED="1429914846785"/>
<node TEXT="is Some(x) or None" ID="ID_749467631" CREATED="1429914859033" MODIFIED="1429914865777"/>
<node TEXT="matching on it" ID="ID_145935690" CREATED="1429914904857" MODIFIED="1429914906583">
<node TEXT="def show(x: Option[String]) = x match {&#xa;  case Some(s) =&gt; s&#xa;  case None =&gt; &quot;?&quot;&#xa;}" ID="ID_200281736" CREATED="1429914907321" MODIFIED="1429914911508"/>
</node>
</node>
<node TEXT="patterns in variable definitions" ID="ID_887029370" CREATED="1429915077961" MODIFIED="1429915081423">
<node TEXT="the idea" LOCALIZED_STYLE_REF="styles.topic" ID="ID_120687804" CREATED="1429915158881" MODIFIED="1429915162349">
<node TEXT="scala&gt; val myTuple = (123, &quot;abc&quot;)&#xa;myTuple: (Int, java.lang.String) = (123,abc)&#xa;&#xa;After that, this assigns two variables at once:&#xa;&#xa;scala&gt; val (number, string) = myTuple&#xa;number: Int = 123&#xa;string: java.lang.String = abc" ID="ID_1309022474" CREATED="1429915099305" MODIFIED="1429915117809"/>
</node>
<node TEXT="works with arbitrary objects" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_960065547" CREATED="1429915164393" MODIFIED="1429915172788">
<node TEXT="scala&gt; val exp = new BinOp(&quot;*&quot;, Number(5), Number(1))&#xa;exp: BinOp = BinOp(*,Number(5.0),Number(1.0))&#xa;&#xa;scala&gt; val BinOp(op, left, right) = exp&#xa;op: String = *&#xa;left: Expr = Number(5.0)&#xa;right: Expr = Number(1.0)" ID="ID_1832470600" CREATED="1429915174152" MODIFIED="1429915177199"/>
</node>
</node>
<node TEXT="case seq &gt; function literal" ID="ID_1069642374" CREATED="1429915349297" MODIFIED="1429915354399">
<node TEXT="&quot;A sequence of cases (i.e., alternatives) in curly braces can be used anywhere&#xa;a function literal can be used. Essentially, a case sequence is a function&#xa;literal, only more general.&quot;" ID="ID_936215167" CREATED="1429915355086" MODIFIED="1429915357350"/>
</node>
<node TEXT="partial function" ID="ID_1803370558" CREATED="1429915516521" MODIFIED="1429915518367">
<node TEXT="&quot; a sequence of cases gives you a&#xa;partial function. If you apply such a function on a value it does not support,&#xa;it will generate a run-time exception.&quot;" ID="ID_389565111" CREATED="1429915519040" MODIFIED="1429915520856"/>
<node TEXT="functions include partial functions, but not the reverse" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_905472949" CREATED="1429915586601" MODIFIED="1429915621058">
<node TEXT="&quot;The type List[Int] =&gt; Int includes all functions from lists of in-&#xa;tegers to integers, whether or not the functions are partial.&quot;" ID="ID_1215923110" CREATED="1429915591196" MODIFIED="1429915593982"/>
<node TEXT="&quot;The type that&#xa;only includes partial functions from lists of integers to integers is written&#xa;PartialFunction[List[Int],Int]&quot;" ID="ID_538955645" CREATED="1429915622273" MODIFIED="1429915623934"/>
</node>
<node TEXT="functions can be declared partial" ID="ID_1580795282" CREATED="1429915656706" MODIFIED="1429915661407">
<node TEXT="val second: PartialFunction[List[Int],Int] = {&#xa;  case x :: y :: _ =&gt; y&#xa;}" ID="ID_1363698423" CREATED="1429915663049" MODIFIED="1429915667768"/>
</node>
<node TEXT="isDefinedAt" LOCALIZED_STYLE_REF="default" ID="ID_1487820465" CREATED="1429915694265" MODIFIED="1429915704576">
<node TEXT="&quot;Partial functions have a method isDefinedAt, which can be used to test&#xa;whether the function is defined at a particular value.&quot;" ID="ID_505224239" CREATED="1429915698649" MODIFIED="1429915700136"/>
</node>
</node>
<node TEXT="pattern in a for expr" ID="ID_123389627" CREATED="1429915931682" MODIFIED="1429915934391">
<node TEXT="&quot;for ((country, city) &lt;- capitals) ...&quot;" ID="ID_1949182252" CREATED="1429915935185" MODIFIED="1429915942284"/>
<node TEXT="use a pattern to filter" ID="ID_666705073" CREATED="1429916011826" MODIFIED="1429916024364">
<node TEXT="scala&gt; val results = List(Some(&quot;apple&quot;), None,&#xa;Some(&quot;orange&quot;))&#xa;results: List[Option[java.lang.String]] = List(Some(apple),&#xa;None, Some(orange))&#xa;scala&gt; for (Some(fruit) &lt;- results) println(fruit)&#xa;apple&#xa;orange&#xa;scala&gt;" ID="ID_640469757" CREATED="1429916025082" MODIFIED="1429916035796"/>
</node>
</node>
</node>
<node TEXT="ch 18: stateful objects" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1956361856" CREATED="1429335572236" MODIFIED="1429339885206">
<font BOLD="false"/>
<node TEXT="hard to read without understanding &quot;type Action = () =&gt; Unit&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_218596446" CREATED="1429339750223" MODIFIED="1429339825631"/>
<node TEXT="resume reading at pdf 411, top" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_254132199" CREATED="1429338205197" MODIFIED="1429338214617"/>
<node TEXT="var &lt;=!=&gt; mutable" ID="ID_28252137" CREATED="1429336437548" MODIFIED="1429336445026">
<node TEXT="object sans vars !=&gt; immutable" ID="ID_1166854556" CREATED="1429335787548" MODIFIED="1429335803682">
<node TEXT="&quot; a class might be&#xa;stateful without defining or inheriting any vars because it forwards method&#xa;calls to other objects that have mutable state.&quot;" ID="ID_949029194" CREATED="1429335804739" MODIFIED="1429335808354"/>
</node>
<node TEXT="object with vars !=&gt; mutable" ID="ID_1744894881" CREATED="1429335944332" MODIFIED="1429335949242">
<node TEXT="e.g. if object caches results (in a var)" ID="ID_1688177458" CREATED="1429335960316" MODIFIED="1429335971813">
<node TEXT="p. 401, bottom" ID="ID_1590945262" CREATED="1429335957620" MODIFIED="1429335974575"/>
</node>
</node>
</node>
<node TEXT="getters and setters" ID="ID_384578291" CREATED="1429336431307" MODIFIED="1429336434579">
<font BOLD="true"/>
<node TEXT="make var member =&gt; make getter and setter" ID="ID_994410328" CREATED="1429336067884" MODIFIED="1429336110752">
<node TEXT="402: 18.2 is equiv to 18.3" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_517242313" CREATED="1429336173556" MODIFIED="1429336315968"/>
<node TEXT="&quot; every var that is a non-private mem-&#xa;ber of some object implicitly defines a getter and a setter method with it.&quot;" ID="ID_378458625" CREATED="1429336080540" MODIFIED="1429336082483"/>
<node TEXT="&quot;The getter of a var x is just named &#x201c;x&#x201d;, while its setter is named&#xa;&#x201c;x_=&#x201d;&quot;" ID="ID_354946182" CREATED="1429336089820" MODIFIED="1429336091739"/>
<node TEXT="and the original var becomes hidden; only its getter and setter are visible" LOCALIZED_STYLE_REF="default" ID="ID_463846546" CREATED="1429336150699" MODIFIED="1429336285093"/>
</node>
<node TEXT="define your own accessor" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1695557445" CREATED="1429336397468" MODIFIED="1429336400896">
<node TEXT="pdf 403" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_632772509" CREATED="1429336411427" MODIFIED="1429336414321"/>
<node TEXT="class Time {&#xa;  private[this] var h = 12&#xa;  private[this] var m = 0&#xa;  def hour: Int = h&#xa;  def hour_= (x: Int) {&#xa;    require(0 &lt;= x &amp;&amp; x &lt; 24)&#xa;    h = x&#xa;  }&#xa;  ...&#xa;}" ID="ID_22715472" CREATED="1429336401844" MODIFIED="1429336403159"/>
</node>
<node TEXT="in *_= can add notification of subscribers" ID="ID_1258234356" CREATED="1429336547508" MODIFIED="1429336562506"/>
<node TEXT="getter|setter pair with no target field of same name" ID="ID_1455246946" CREATED="1429336779132" MODIFIED="1429336794071">
<node TEXT="farenheit is" ID="ID_1888758351" CREATED="1429336805212" MODIFIED="1429336809826"/>
<node TEXT="it has a target field, the var celsius, which has its own (implicit) getter|setter pair" ID="ID_1219204847" CREATED="1429336841380" MODIFIED="1429336868195"/>
<node TEXT="class Thermometer {&#xa;  var celsius: Float = _&#xa;  def fahrenheit = celsius * 9 / 5 + 32&#xa;  def fahrenheit_= (f: Float) {&#xa;    celsius = (f - 32) * 5 / 9&#xa;  }&#xa;  override def toString = fahrenheit +&quot;F/&quot;+ celsius +&quot;C&quot;&#xa;}" ID="ID_1859841121" CREATED="1429336803524" MODIFIED="1429336804718"/>
</node>
</node>
<node TEXT="case study, in discrete event simulation" ID="ID_1446336344" CREATED="1429337199589" MODIFIED="1429339735684">
<font BOLD="true"/>
<node TEXT="I left off here." LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1226164323" CREATED="1429339738950" MODIFIED="1429339742889"/>
</node>
</node>
<node TEXT="ch 19: type param" ID="ID_190485151" CREATED="1429503556620" MODIFIED="1429503560085">
<node TEXT="feels cumbersome" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1612981803" CREATED="1429511293945" MODIFIED="1429511297269"/>
<node TEXT="did not understand sec 19.4, &quot;checking variance annotations&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1149040409" CREATED="1429508188767" MODIFIED="1429508202392"/>
<node TEXT="section 19.6: did not follow precisely" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_752177295" CREATED="1429510126767" MODIFIED="1429510138789">
<node TEXT="I understand the ideas but did not trace through the logic of why function results are covariant rather than contravariant (e.g. on pdf 440), and why the other direction for function arguments" ID="ID_391700442" CREATED="1429510140456" MODIFIED="1429510232935"/>
</node>
<node TEXT="hide init and rep of class" LOCALIZED_STYLE_REF="default" ID="ID_1086050930" CREATED="1429504953869" MODIFIED="1429505857145">
<node TEXT="alternative ways" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_727506124" CREATED="1429505857821" MODIFIED="1429505862701"/>
<node TEXT="private constructors and factory methods" ID="ID_678526412" CREATED="1429504946101" MODIFIED="1429504950490">
<node TEXT="hide the primary constructor" ID="ID_819574916" CREATED="1429504539941" MODIFIED="1429504685789">
<node TEXT="(note that the primary constructor is defined implicitly by the class parameters and the body of the class def)" ID="ID_1687208739" CREATED="1429504570309" MODIFIED="1429504592157"/>
<node TEXT="syntax" ID="ID_1470482426" CREATED="1429504545205" MODIFIED="1429504546138">
<node TEXT="class Queue[T] private (&#xa;  private val leading: List[T],&#xa;  private val trailing: List[T]&#xa;)" ID="ID_934701890" CREATED="1429504546973" MODIFIED="1429504551279"/>
</node>
</node>
<node TEXT="add an auxiliary constructor" ID="ID_780041270" CREATED="1429504678461" MODIFIED="1429504682725">
<node TEXT="def this(elems: T*) = this(elems.toList, Nil)" ID="ID_55898957" CREATED="1429504683365" MODIFIED="1429504735156"/>
<node TEXT="is defined in terms of the primary constructor (ccalled on the RHS)" ID="ID_13548521" CREATED="1429504703861" MODIFIED="1429504715237"/>
<node TEXT="T* means &quot;repeated paramters&quot;" ID="ID_1144731044" CREATED="1429504737877" MODIFIED="1429504745180"/>
</node>
<node TEXT="add factory method constructor from companion object" ID="ID_656484971" CREATED="1429504796933" MODIFIED="1429504815140">
<node TEXT="object Queue {&#xa;  // constructs a queue with initial elements &#x2018;xs&#x2019;&#xa;  def apply[T](xs: T*) = new Queue[T](xs.toList, Nil)&#xa;}" ID="ID_665530462" CREATED="1429504805413" MODIFIED="1429504809004"/>
<node TEXT="&quot;By placing this object in the same source file as class Queue, you make&#xa;the object a companion object of the class.&quot;" ID="ID_750073957" CREATED="1429504838470" MODIFIED="1429504840085"/>
<node TEXT="&quot;because the factory method is called apply, clients can create&#xa;queues with an expression such as Queue(1, 2, 3).&quot;&apos;" ID="ID_775294640" CREATED="1429504874341" MODIFIED="1429504890527"/>
<node TEXT="&quot;This expression expands&#xa;to Queue.apply(1, 2, 3) since Queue is an object instead of a function.&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1947425535" CREATED="1429504891182" MODIFIED="1429504894603">
<node TEXT="referring to this" ID="ID_181627914" CREATED="1429504897773" MODIFIED="1429504901887">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_775294640" STARTINCLINATION="254;0;" ENDINCLINATION="254;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
</node>
</node>
<node TEXT="private classes" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1466898861" CREATED="1429504960125" MODIFIED="1429505315467">
<node TEXT="intense" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_122966821" CREATED="1429505311910" MODIFIED="1429505317514"/>
<node TEXT="&quot;Queue, as defined [here] is a trait, but not a type ... because it takes a type parameter.&quot;" ID="ID_1114001346" CREATED="1429505669743" MODIFIED="1429505763690"/>
<node TEXT="code" ID="ID_1613065259" CREATED="1429505318462" MODIFIED="1429505319132">
<node TEXT="trait Queue[T] {&#xa;  def head: T&#xa;  def tail: Queue[T]&#xa;  def enqueue(x: T): Queue[T]&#xa;}&#xa;object Queue {&#xa;  def apply[T](xs: T*): Queue[T] =&#xa;    new QueueImpl[T](xs.toList, Nil)&#xa;  private class QueueImpl[T](&#xa;    private val leading: List[T],&#xa;    private val trailing: List[T]&#xa;  ) extends Queue[T] {&#xa;    def mirror =&#xa;      if (leading.isEmpty)&#xa;        new QueueImpl(trailing.reverse, Nil)&#xa;      else&#xa;        this&#xa;    def head: T = mirror.leading.head&#xa;    def tail: QueueImpl[T] = {&#xa;      val q = mirror&#xa;      new QueueImpl(q.leading.tail, q.trailing)&#xa;    }&#xa;    def enqueue(x: T) =&#xa;      new QueueImpl(leading, x :: trailing)&#xa;  }&#xa;}" ID="ID_1213491377" CREATED="1429505319836" MODIFIED="1429505320772"/>
</node>
<node TEXT="my analysis" ID="ID_695050346" CREATED="1429505324258" MODIFIED="1429505327060">
<node TEXT="somehow the privacy works -- to the user is exposed only the interface, and that interface (defined in the Trait) is [available to the trait?] even though the things implementing it are private" ID="ID_1851246197" CREATED="1429505480462" MODIFIED="1429505584964"/>
<node TEXT="the (companion) object Queue has a private inner class called QueueImpl which *extends Queue*." ID="ID_476219084" CREATED="1429505336047" MODIFIED="1429505374813"/>
<node TEXT="Queue.apply, which is invoked like a class constructor (&quot;Queue(args)&quot;, without the word &quot;apply&quot;), returns an object of type QueueImpl, which is valid becuase Impl extends Queue" ID="ID_1688672630" CREATED="1429505375078" MODIFIED="1429505445294"/>
</node>
</node>
</node>
<node TEXT="subtype relps" ID="ID_411703980" CREATED="1429505941774" MODIFIED="1429505946821">
<node TEXT="=" ID="ID_1271302228" CREATED="1429505969133" MODIFIED="1429505969595">
<node TEXT="&quot;if S is a subtype of type T, then should Queue[S] be&#xa;considered a subtype of Queue[T]?&quot;" ID="ID_1433153423" CREATED="1429505964182" MODIFIED="1429505967957"/>
</node>
<node TEXT="type parameter &quot;variance&quot;" LOCALIZED_STYLE_REF="default" ID="ID_1959449702" CREATED="1429506203574" MODIFIED="1429506219243">
<node TEXT="each type parameter has its own" ID="ID_781872037" CREATED="1429506221117" MODIFIED="1429506230253"/>
<node TEXT="three kinds" LOCALIZED_STYLE_REF="default" ID="ID_786663563" CREATED="1429506230758" MODIFIED="1429506287570">
<node TEXT="nonvariance" ID="ID_133700801" CREATED="1429506041846" MODIFIED="1429506049757">
<node TEXT="is the default" ID="ID_1406900429" CREATED="1429506050411" MODIFIED="1429506051989"/>
<node TEXT="X[A] not a subtype of X[B] even if A is subtype of B" ID="ID_1189642962" CREATED="1429506055382" MODIFIED="1429506067621"/>
</node>
<node TEXT="covariance" ID="ID_769157780" CREATED="1429505977102" MODIFIED="1429505978341">
<node TEXT="defn (effect)" ID="ID_1114025812" CREATED="1429506069766" MODIFIED="1429506094769">
<node TEXT="&quot;if S is a subtype of type T, then should Queue[S] be&#xa;considered a subtype of Queue[T]? If so, you could say that trait Queue is&#xa;covariant (or &#x201c;flexible&#x201d;) in its type parameter T. Or, since it just has one&#xa;type parameter, you could say simply that Queues are covariant.&quot;" ID="ID_1986657598" CREATED="1429505950013" MODIFIED="1429505961812"/>
</node>
<node TEXT="syntax" ID="ID_1972559850" CREATED="1429506082351" MODIFIED="1429506086573">
<node TEXT="trait Queue[+T] { ... }" ID="ID_157423347" CREATED="1429506078053" MODIFIED="1429506079683"/>
</node>
</node>
<node TEXT="contravariance" ID="ID_467578369" CREATED="1429506127718" MODIFIED="1429506129573">
<node TEXT="defn: reverse of covariance" ID="ID_1157444797" CREATED="1429506130359" MODIFIED="1429506166044">
<node TEXT="if A subtype of B, then X[B] subtype of X[A]" ID="ID_1292907027" CREATED="1429506170021" MODIFIED="1429506179901"/>
</node>
<node TEXT="syntax: - (contravariance) rather than + (covariance)" ID="ID_829391640" CREATED="1429506137326" MODIFIED="1429506149061"/>
</node>
</node>
<node TEXT="contravariance is safer in functional prog" ID="ID_141917127" CREATED="1429506275414" MODIFIED="1429506296709"/>
</node>
<node TEXT="where covariance breaks" ID="ID_33254144" CREATED="1429507267799" MODIFIED="1429507273395">
<node TEXT="&quot;[if] a generic parameter&#xa;type appears as the type of a method parameter, the containing class or trait&#xa;may not be covariant in that type parameter. &quot;" ID="ID_1236882900" CREATED="1429507274286" MODIFIED="1429507284695"/>
<node TEXT="example: can&apos;t do this" ID="ID_1386962494" CREATED="1429507291519" MODIFIED="1429507302678">
<node TEXT="class Queue[+T] {&#xa;  def enqueue(x: T) =&#xa;  ...&#xa;}" ID="ID_340175040" CREATED="1429507294647" MODIFIED="1429507297888"/>
</node>
<node TEXT="it yields this error" ID="ID_1069239793" CREATED="1429507323111" MODIFIED="1429507325853">
<node TEXT="&quot;Queues.scala:11: error: covariant type T occurs in&#xa;contravariant position in type T of value x&#xa;  def enqueue(x: T) =&quot;" ID="ID_160468767" CREATED="1429507326783" MODIFIED="1429507331503"/>
</node>
<node TEXT="reassignable fields are a special case of this breaking condition" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1769262506" CREATED="1429507381783" MODIFIED="1429507396160">
<node TEXT="because &quot; a reassignable field, &#x201c;var x: T&#x201d;, is treated in Scala as&#xa;a getter method, &#x201c;def x: T&#x201d;, and a setter method, &#x201c;def x_=(y: T)&#x201d;.&quot;" ID="ID_1620558138" CREATED="1429507396935" MODIFIED="1429507401231"/>
<node TEXT="(the setter is the one that breaks it; by contrast, returning something of type T is not problematic)" ID="ID_1695343072" CREATED="1429507422095" MODIFIED="1429507438913"/>
</node>
</node>
</node>
<node TEXT="explicit cast with asInstanceOf" ID="ID_1286602690" CREATED="1429506968431" MODIFIED="1429507003046">
<node TEXT="cast an array &quot;of Ts to an array of any supertype of T&quot;" ID="ID_199737923" CREATED="1429506915799" MODIFIED="1429506961236"/>
<node TEXT="val a2: Array[Object] = a1.asInstanceOf[Array[Object]]" ID="ID_325808721" CREATED="1429506943806" MODIFIED="1429506950222"/>
</node>
<node TEXT="lower bounds" ID="ID_1886293545" CREATED="1429508306335" MODIFIED="1429508308054">
<node TEXT="code" ID="ID_1082230263" CREATED="1429508333079" MODIFIED="1429508333694">
<node TEXT="class Queue[+T] (private val leading: List[T],&#xa;    private val trailing: List[T] ) {&#xa;  def enqueue[U &gt;: T](x: U) =&#xa;    new Queue[U](leading, x :: trailing) // ...&#xa;}" ID="ID_963922956" CREATED="1429508334383" MODIFIED="1429508335711"/>
</node>
<node TEXT="effect" ID="ID_1508710490" CREATED="1429508370751" MODIFIED="1429508371566">
<node TEXT="U &gt;: (&quot;must be a supertype of&quot;) T" ID="ID_1975713821" CREATED="1429508338455" MODIFIED="1429508397028"/>
</node>
<node TEXT="a use" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_144163488" CREATED="1429508456519" MODIFIED="1429508457929">
<node TEXT="&quot;suppose there is a class Fruit with two subclasses,&#xa;Apple and Orange. With the new definition of class Queue, it is possible to&#xa;append an Orange to a Queue[Apple]. The result will be a Queue[Fruit].&quot;" ID="ID_175070969" CREATED="1429508459207" MODIFIED="1429508499679"/>
</node>
<node TEXT="&quot;correct the variance error by adding a lower bound&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1617753182" CREATED="1429508634512" MODIFIED="1429508637315">
<node TEXT="this one: &quot;error: covariant type T occurs in&#xa;contravariant position in type T of value x&quot;" ID="ID_707435492" CREATED="1429508663903" MODIFIED="1429508667710"/>
</node>
</node>
<node TEXT="contravariance" ID="ID_1785552639" CREATED="1429508741432" MODIFIED="1429508743126">
<node TEXT="a class where it&apos;s approp" ID="ID_8661571" CREATED="1429508941032" MODIFIED="1429508952124">
<node TEXT="trait OutputChannel[-T] {&#xa;  def write(x: T)&#xa;}" ID="ID_1680724514" CREATED="1429508952813" MODIFIED="1429508955141"/>
<node TEXT="why" ID="ID_1410488269" CREATED="1429508974152" MODIFIED="1429508974886">
<node TEXT="&quot; con-&#xa;sider what you can do with an OutputChannel[String]. The only sup-&#xa;ported operation is writing a String to it. The same operation can also&#xa;be done on an OutputChannel[AnyRef]. So it is safe to substitute an&#xa;OutputChannel[AnyRef] for an OutputChannel[String]. &quot;" ID="ID_1168323768" CREATED="1429508975585" MODIFIED="1429508977672"/>
</node>
</node>
<node TEXT="Liskov Substitution Principle" ID="ID_1902353884" CREATED="1429508821040" MODIFIED="1429508863636">
<node TEXT="I invent the phrase at left." LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1672166625" CREATED="1429508832976" MODIFIED="1429508850118"/>
<node TEXT="&quot;it&#xa;is safe to assume that a type T is a subtype of a type U if you can sub-&#xa;stitute a value of type T wherever a value of type U is required.&quot;" ID="ID_578903390" CREATED="1429508824391" MODIFIED="1429508829008"/>
<node TEXT="&quot;holds if T supports the&#xa;same operations as U and all of T&#x2019;s operations require less and provide more than the corresponding operations in U&quot;&#xa;&#xa;where&#xa;&#xa;&quot; arguments are something&#xa;that&#x2019;s required, whereas results are something that&#x2019;s provided.&quot;" ID="ID_259033692" CREATED="1429508885168" MODIFIED="1429509222739"/>
</node>
<node TEXT="a class with both contra and cov" ID="ID_926724099" CREATED="1429509116576" MODIFIED="1429509128839">
<node TEXT="trait Function1[-S, +T] {&#xa;  def apply(x: S): T&#xa;}" ID="ID_1102152277" CREATED="1429509134567" MODIFIED="1429509136230"/>
<node TEXT="(A =&gt; B) is repd internally as Function[A,B]" ID="ID_222715578" CREATED="1429509149512" MODIFIED="1429509173686"/>
</node>
</node>
<node TEXT="reassignable fields in covariant type: permitted in exception" ID="ID_1595973903" CREATED="1429510404881" MODIFIED="1429510420623">
<node TEXT="namely, permitted if the field is declared object-private" ID="ID_393943555" CREATED="1429510438097" MODIFIED="1429510451775">
<node TEXT="by preceding the var statements that create them with &quot;private[this]&quot;" ID="ID_1388778805" CREATED="1429510464209" MODIFIED="1429510481346"/>
</node>
<node TEXT="quote" ID="ID_15689354" CREATED="1429510435481" MODIFIED="1429510436127">
<node TEXT="&quot; queues now contain two reassignable fields of the covariant parameter&#xa;type T. Is this not a violation of the variance rules? It would be indeed,&#xa;except for the detail that leading and trailing have a private[this]&#xa;modifier and are thus declared to be object private.&quot;" ID="ID_1336971115" CREATED="1429510421832" MODIFIED="1429510435049"/>
</node>
</node>
<node TEXT="upper bounds &amp; mix trait into class" ID="ID_1509280334" CREATED="1429510687545" MODIFIED="1429510729660">
<node TEXT="mixing in the trait" ID="ID_252610546" CREATED="1429510730752" MODIFIED="1429511106406">
<node TEXT="Listing 19.11, pdf 444&#xa;class Person(val firstName: String, val lastName: String)&#xa;  extends Ordered[Person] {&#xa;  def compare(that: Person) = {&#xa;    val lastNameComparison =&#xa;      lastName.compareToIgnoreCase(that.lastName)&#xa;    if (lastNameComparison != 0)&#xa;      lastNameComparison&#xa;    else&#xa;      firstName.compareToIgnoreCase(that.firstName)&#xa;    }&#xa;  override def toString = firstName +&quot; &quot;+ lastName&#xa;}" ID="ID_613467727" CREATED="1429510689345" MODIFIED="1429510690613"/>
</node>
<node TEXT="requiring the trait" ID="ID_1286578311" CREATED="1429511106929" MODIFIED="1429511109599">
<node TEXT="full code" ID="ID_628832722" CREATED="1429511130129" MODIFIED="1429511131159">
<node TEXT="def orderedMergeSort[T &lt;: Ordered[T]](xs: List[T]): List[T] = {&#xa;  def merge(xs: List[T], ys: List[T]): List[T] =&#xa;    (xs, ys) match {&#xa;      case (Nil, _) =&gt; ys&#xa;      case (_, Nil) =&gt; xs&#xa;      case (x :: xs1, y :: ys1) =&gt;&#xa;      if (x &lt; y) x :: merge(xs1, ys)&#xa;      else y :: merge(xs, ys1)&#xa;  }&#xa;  val n = xs.length / 2&#xa;  if (n == 0) xs&#xa;  else {&#xa;    val (ys, zs) = xs splitAt n&#xa;    merge(orderedMergeSort(ys), orderedMergeSort(zs))&#xa;  }&#xa;}" ID="ID_756486473" CREATED="1429511110377" MODIFIED="1429511114362"/>
</node>
<node TEXT="this line does it" ID="ID_7475310" CREATED="1429511133529" MODIFIED="1429511136543">
<node TEXT="def orderedMergeSort[T &lt;: Ordered[T]](xs: List[T]): List[T] = ..." ID="ID_1217893999" CREATED="1429511137217" MODIFIED="1429511143863"/>
</node>
<node TEXT="its effect" ID="ID_1511359473" CREATED="1429511146705" MODIFIED="1429511148037">
<node TEXT="&quot;you indicate that the type parameter, T, has&#xa;an upper bound, Ordered[T]. This means that the element type of the list&#xa;passed to orderedMergeSort must be a subtype of Ordered. Thus, you&#xa;could pass a List[Person] to orderedMergeSort, because Person mixes&#xa;in Ordered. &quot;" ID="ID_1105356081" CREATED="1429511199817" MODIFIED="1429511201370"/>
</node>
</node>
</node>
<node TEXT="vocab" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1084923519" CREATED="1429505828854" MODIFIED="1429505868546">
<node TEXT="generic v. parameterized" ID="ID_1781026667" CREATED="1429505831093" MODIFIED="1429505835291">
<node TEXT="&quot;(Classes and traits that&#xa;take type parameters are &#x201c;generic,&#x201d; but the types they generate are &#x201c;param-&#xa;eterized,&#x201d; not generic.) &quot;" ID="ID_50746243" CREATED="1429505835926" MODIFIED="1429505837518"/>
</node>
</node>
<node TEXT="???" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1100577306" CREATED="1429507722327" MODIFIED="1429508204431">
<node TEXT="?? what is variance annotation" ID="ID_975591340" CREATED="1429508104711" MODIFIED="1429508110238">
<node TEXT="pdf 436" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_954953275" CREATED="1429508111159" MODIFIED="1429508115068"/>
</node>
<node TEXT="? what is the bracketed W-" ID="ID_1009943736" CREATED="1429507728095" MODIFIED="1429507736549">
<node TEXT="def meow[W&#x2212; ](volume: T&#x2212; , listener: Cat[U+ , T&#x2212; ]&#x2212; )" ID="ID_964072966" CREATED="1429507725376" MODIFIED="1429507725376">
<node TEXT="pdf 436" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_855027867" CREATED="1429507743975" MODIFIED="1429507746275"/>
</node>
</node>
<node TEXT="? what is the bracketed T just after apply" ID="ID_1326669501" CREATED="1429507852047" MODIFIED="1429507954204">
<node TEXT="pdf 427" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1051559173" CREATED="1429507860236" MODIFIED="1429507862139"/>
<node TEXT="object Queue {&#xa;  // constructs a queue with initial elements &#x2018;xs&#x2019;&#xa;  def apply[T](xs: T*) = new Queue[T](xs.toList, Nil)&#xa;}" ID="ID_772271792" CREATED="1429507891839" MODIFIED="1429507892807"/>
</node>
<node TEXT="type parameter for mixed-in trait?" ID="ID_1761246585" CREATED="1429510740744" MODIFIED="1429510796629">
<node TEXT="class Person(val firstName: String, val lastName: String)&#xa;  extends Ordered[Person] {&#xa;  ...&#xa;}" ID="ID_1246447331" CREATED="1429510756137" MODIFIED="1429510768781"/>
</node>
</node>
<node TEXT="my thoughts" ID="ID_43958265" CREATED="1429507012015" MODIFIED="1429507015301">
<node TEXT="explicit cast seems safer than implicit" ID="ID_1256638990" CREATED="1429507016470" MODIFIED="1429507032214"/>
</node>
</node>
<node TEXT="ch 27: annotations" ID="ID_1160357182" CREATED="1429420058462" MODIFIED="1429420062340"/>
<node TEXT="ch 30: equality" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_557278872" CREATED="1430423040146" MODIFIED="1430425015738">
<font BOLD="false"/>
<node TEXT="three kinds" ID="ID_1217642379" CREATED="1430423691954" MODIFIED="1430423695144">
<node TEXT="eq is &quot;object&quot; equality" ID="ID_1597426144" CREATED="1430423181016" MODIFIED="1430423217935">
<node TEXT="they are the same object" ID="ID_738437463" CREATED="1430423185895" MODIFIED="1430423188750"/>
</node>
<node TEXT="== is &quot;natural&quot; equality" ID="ID_792748721" CREATED="1430423201188" MODIFIED="1430423210314">
<node TEXT="for value types, is value comparison" ID="ID_109780237" CREATED="1430423222690" MODIFIED="1430423227180"/>
<node TEXT="for reference types, is &quot;equals&quot;" ID="ID_211193648" CREATED="1430423227461" MODIFIED="1430423236071"/>
</node>
<node TEXT="equals is redefinable" ID="ID_93987078" CREATED="1430423296457" MODIFIED="1430423301613">
<node TEXT="defaults to eq for reference types" ID="ID_1146576092" CREATED="1430423304320" MODIFIED="1430423373481"/>
</node>
</node>
<node TEXT="redefining" LOCALIZED_STYLE_REF="default" ID="ID_28630718" CREATED="1430423697069" MODIFIED="1430424098769">
<node TEXT="must use same type signature" LOCALIZED_STYLE_REF="default" ID="ID_509201731" CREATED="1430423699868" MODIFIED="1430423982135"/>
<node TEXT="must not override ==" LOCALIZED_STYLE_REF="default" ID="ID_1412135586" CREATED="1430423867123" MODIFIED="1430423982138">
<node TEXT="compilation fails if use same type sig, but not otherwise" ID="ID_1467533335" CREATED="1430423874238" MODIFIED="1430423897272"/>
</node>
<node TEXT="must override hashCode, too" LOCALIZED_STYLE_REF="default" ID="ID_1884508310" CREATED="1430423950002" MODIFIED="1430423982140">
<node TEXT="the default implementation is a function of address only" ID="ID_1537469819" CREATED="1430424039922" MODIFIED="1430424047883"/>
<node TEXT="&quot;the contract&quot;" ID="ID_1025659842" CREATED="1430424101347" MODIFIED="1430424107948">
<node TEXT="&quot;If two objects are equal according to the equals method, then&#xa;calling the hashCode method on each of the two objects must&#xa;produce the same integer result.&quot;" ID="ID_169039575" CREATED="1430424110412" MODIFIED="1430424114378"/>
</node>
</node>
<node TEXT="must not define equals or hashCode in terms of mutables" ID="ID_87041623" CREATED="1430424301964" MODIFIED="1430424337115"/>
<node TEXT="equals must be an equivalence rel" ID="ID_373835021" CREATED="1430424403977" MODIFIED="1430424410581">
<font BOLD="true"/>
<node TEXT="at least for non-null x" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_27125570" CREATED="1430424420679" MODIFIED="1430424430078"/>
<node TEXT="x.equals(x)" ID="ID_448904663" CREATED="1430424412042" MODIFIED="1430424415202">
<node TEXT="reflexive" ID="ID_399116369" CREATED="1430424444361" MODIFIED="1430424446158"/>
</node>
<node TEXT="x.equals(y) &lt;=&gt; y.equals(x)" ID="ID_11689276" CREATED="1430424446920" MODIFIED="1430424455220">
<node TEXT="symmetric" ID="ID_1749066471" CREATED="1430424455810" MODIFIED="1430424457520"/>
</node>
<node TEXT="x.equals(y) &amp; y.equals(z) =&gt; x.equals(z)" ID="ID_748096989" CREATED="1430424468683" MODIFIED="1430424483864"/>
<node TEXT="x.equals(null) is false" ID="ID_101539514" CREATED="1430424504812" MODIFIED="1430424511216"/>
</node>
</node>
<node TEXT="still unread" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1782427054" CREATED="1430424962376" MODIFIED="1430424971318">
<node TEXT="subclasses can cause trickiness" ID="ID_675676586" CREATED="1430424705190" MODIFIED="1430424722759">
<node TEXT="pdf 692 ..." LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_19892464" CREATED="1430424703226" MODIFIED="1430425004254"/>
<node TEXT="&quot;[one strategy] is that as soon as a class redefines equals&#xa;(and hashCode), it should also explicitly state that objects of this class are&#xa;never equal to objects of some superclass that implement a different equality&quot;" ID="ID_1511786216" CREATED="1430424836842" MODIFIED="1430424848846"/>
</node>
<node TEXT="defining equality for parameterized types" ID="ID_76135083" CREATED="1430424992147" MODIFIED="1430424996814">
<node TEXT="698 ..." LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1677030716" CREATED="1430424997860" MODIFIED="1430425006373"/>
</node>
<node TEXT="recipes" ID="ID_1889614191" CREATED="1430424978323" MODIFIED="1430424979703">
<node TEXT="703 ..." LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_931392902" CREATED="1430424982676" MODIFIED="1430425005580"/>
</node>
</node>
</node>
<node TEXT="then, before deep into book, try all needed _" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_1855418233" CREATED="1429256740812" MODIFIED="1429338049136">
<node TEXT="it is the kind of thing that sinks me" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1395345352" CREATED="1429256750179" MODIFIED="1429256949280"/>
<node TEXT="graph" ID="ID_756294455" CREATED="1429256776563" MODIFIED="1429256966873">
<node TEXT="Has to be mutable?" ID="ID_655654440" CREATED="1429257023740" MODIFIED="1429257033691"/>
</node>
<node TEXT="file" ID="ID_207360035" CREATED="1429256963460" MODIFIED="1429256967645"/>
<node TEXT="user input" ID="ID_46459846" CREATED="1429256972340" MODIFIED="1429256975409"/>
<node TEXT="variable window structure" ID="ID_157751020" CREATED="1429256979436" MODIFIED="1429256989802"/>
</node>
<node TEXT="skipped, temp" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1605011705" CREATED="1429297795773" MODIFIED="1429297805741">
<node TEXT="ch 8, functions and closures" ID="ID_529441598" CREATED="1429245188447" MODIFIED="1429245192802"/>
<node TEXT="ch 9, control abstraction" ID="ID_621899873" CREATED="1429297810460" MODIFIED="1429297813690"/>
<node TEXT="ch 12, traits" ID="ID_1566245632" CREATED="1429297827060" MODIFIED="1429297830078"/>
</node>
<node TEXT="parsing" ID="ID_642983236" CREATED="1429214359962" MODIFIED="1429214361222">
<node TEXT="parens to join" ID="ID_949429793" CREATED="1429214383306" MODIFIED="1429214387985">
<node TEXT="if Scala parses as separate lines what should be one, wrap them in parens" ID="ID_342972797" CREATED="1429214363010" MODIFIED="1429214379137"/>
<node TEXT="e.g. this" ID="ID_1329755470" CREATED="1429214389988" MODIFIED="1429214392184">
<node TEXT="x&#xa;+ y" ID="ID_904188046" CREATED="1429214392755" MODIFIED="1429214400947"/>
</node>
<node TEXT="would be interpreted as two lines" ID="ID_726603040" CREATED="1429214401531" MODIFIED="1429214409065"/>
<node TEXT="but this" ID="ID_518145090" CREATED="1429214409380" MODIFIED="1429214410147">
<node TEXT="(x&#xa; + y)" ID="ID_1622701769" CREATED="1429214410596" MODIFIED="1429214417371"/>
</node>
<node TEXT="would not" ID="ID_1704307219" CREATED="1429214417636" MODIFIED="1429214419145"/>
</node>
<node TEXT="infixes trail" ID="ID_1207764684" CREATED="1429214449053" MODIFIED="1429214456531">
<node TEXT="because this" ID="ID_856220281" CREATED="1429214465918" MODIFIED="1429214467219">
<node TEXT="x +&#xa;y +&#xa;z" ID="ID_366570066" CREATED="1429214464423" MODIFIED="1429214465252"/>
</node>
<node TEXT="is interpreted as one expression, not three" ID="ID_1671204755" CREATED="1429214468182" MODIFIED="1429214475420"/>
</node>
<node TEXT="The rules of semicolon inference" ID="ID_900621691" CREATED="1429214538736" MODIFIED="1429214538736">
<node TEXT="is quot" ID="ID_1768124554" CREATED="1429214565355" MODIFIED="1429214570003"/>
<node TEXT="a line ending is treated as a semicolon&#xa;unless one of the following conditions is true:" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1030560606" CREATED="1429214544802" MODIFIED="1429214563062"/>
<node TEXT="1. The line in question ends in a word that would not be legal as the end of a statement, such as a period or an infix operator." ID="ID_342740363" CREATED="1429214551084" MODIFIED="1429214556339"/>
<node TEXT="2. The next line begins with a word that cannot start a statement." ID="ID_1809721492" CREATED="1429214551086" MODIFIED="1429214551086"/>
<node TEXT="3. The line ends while inside parentheses (...) or brackets [...], because these cannot contain multiple statements anyway." ID="ID_1283298293" CREATED="1429214551087" MODIFIED="1429214559523"/>
</node>
<node TEXT="infix notation works even for multiple arg functions" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_307052357" CREATED="1429218122607" MODIFIED="1429218139424">
<node TEXT="s indexOf (&apos;o&apos;, 5) // Scala invokes s.indexOf(&#x2019;o&#x2019;, 5)" ID="ID_1359514034" CREATED="1429218133274" MODIFIED="1429218133274"/>
</node>
<node TEXT="parens for arguments optional if no args" ID="ID_1215162509" CREATED="1429218316284" MODIFIED="1429218324124">
<node TEXT=", you can leave off empty paren-&#xa;theses on method calls. The convention is that you include parentheses if the&#xa;method has side effects, such as println(), but you can leave them off if&#xa;the method has no side effects, such as toLowerCase invoked on a String:&#xa;scala&gt; val s = &quot;Hello, world!&quot;&#xa;s: java.lang.String = Hello, world!&#xa;scala&gt; s.toLowerCase" ID="ID_1171095481" CREATED="1429218325815" MODIFIED="1429218327666"/>
</node>
<node TEXT="postfix operators" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1410738499" CREATED="1429218363219" MODIFIED="1429218372449">
<node TEXT="this works" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1485988763" CREATED="1429218381891" MODIFIED="1429218387251"/>
<node TEXT="scala&gt; s toLowerCase&#xa;res5: java.lang.String = hello, world!" ID="ID_82120806" CREATED="1429218387629" MODIFIED="1429218389447"/>
</node>
<node TEXT="operator precedence" ID="ID_603153441" CREATED="1429219094946" MODIFIED="1429219097834">
<node TEXT="characters determine it" ID="ID_1549321752" CREATED="1429219098349" MODIFIED="1429219111963">
<node TEXT="&quot;have a higher precedence than a method that starts with a +. Thus 2 + 2 * 7&#xa;will be evaluated as 2 + (2 * 7), and a +++ b *** c (in which a, b, and c are&#xa;variables, and +++ and *** are methods) will be evaluated a +++ (b *** c),&#xa;because the *** method has a higher precedence than the +++ method.&quot;" ID="ID_378887915" CREATED="1429219104187" MODIFIED="1429219107610"/>
</node>
<node TEXT="the list" ID="ID_1451361363" CREATED="1429219124857" MODIFIED="1429219125938">
<node TEXT="(all other special characters)&#xa;*/ %&#xa;+-&#xa;:&#xa;=!&#xa;&lt;&gt;&#xa;&amp;&#xa;&#x2c6;&#xa;|&#xa;(all letters)&#xa;(all assignment operators)" ID="ID_1323085072" CREATED="1429219126686" MODIFIED="1429219128442"/>
</node>
<node TEXT="exception: assignment binds late" ID="ID_1204432849" CREATED="1429219207770" MODIFIED="1429219221441">
<node TEXT="(exception to the characters determining precedence rule)" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_6806417" CREATED="1429219225729" MODIFIED="1429219237250"/>
<node TEXT="&quot;x *= y + 1&#xa;means the same as:&#xa;x *= (y + 1)&#xa;because *= is classified as an assignment operator whose precedence is lower&#xa;than +, even though the operator&#x2019;s first character is *, which would suggest a&#xa;precedence higher than +.&#xa;&quot;" ID="ID_691524873" CREATED="1429219222439" MODIFIED="1429219224915"/>
</node>
</node>
<node TEXT="associativity" ID="ID_17475581" CREATED="1429219275701" MODIFIED="1429219279563">
<node TEXT="&quot;The associativity of an operator in Scala is determined by its&#xa;last character. As mentioned on page 87 of Chapter 3, any method that ends&#xa;in a &#x2018;:&#x2019; character is invoked on its right operand, passing in the left operand.&quot;" ID="ID_271602164" CREATED="1429219279991" MODIFIED="1429219282538"/>
<node TEXT="&quot;No matter what associativity an operator has, however, its operands are&#xa;always evaluated left to right. So if a is an expression that is not just a simple&#xa;reference to an immutable value, then a ::: b is more precisely treated as&#xa;the following block:&#xa;{ val x = a; b.:::(x) }&quot;" ID="ID_927921327" CREATED="1429219313247" MODIFIED="1429219316102"/>
</node>
<node TEXT="raw characters" ID="ID_1551800176" CREATED="1429227773227" MODIFIED="1429227779010">
<node TEXT="don&apos;t use $ in an identifier" ID="ID_138786127" CREATED="1429227696232" MODIFIED="1429227701870">
<node TEXT="the Scala compiler reserves that for itself" ID="ID_1401466301" CREATED="1429227702457" MODIFIED="1429227709903"/>
</node>
<node TEXT="start capitalized if class or trait (or constant), else don&apos;t" ID="ID_1275752960" CREATED="1429227782140" MODIFIED="1429227971376">
<node TEXT="constant is more strict than val -- a method parameter is a val, but it takes different values each time it is called; Pi, by contrast, is a constant" ID="ID_1980580928" CREATED="1429227972349" MODIFIED="1429227997612"/>
</node>
<node TEXT="underscores: you can use them but don&apos;t" ID="ID_528157524" CREATED="1429227837319" MODIFIED="1429227842413">
<node TEXT="&quot;One consequence of using a trailing underscore in an identifier is that if&#xa;you attempt, for example, to write a declaration like this,&#xa;&#x201c;val name_: Int = 1&#x201d;, you&#x2019;ll get a compiler error. The compiler will&#xa;think you are trying to declare a val named &#x201c;name_:&#x201d;. To get this to&#xa;compile, you would need to insert an extra space before the colon, as in:&#xa;&#x201c;val name_ : Int = 1&#x201d;.&quot;" ID="ID_327061032" CREATED="1429227843999" MODIFIED="1429227847150"/>
</node>
<node TEXT="_ can join a word (on the left) with an operator symbol (right)" ID="ID_1106448847" CREATED="1429228126155" MODIFIED="1429228137995">
<node TEXT="e.g. &quot;myvar_=&quot; is a legitimate method name" ID="ID_1150391379" CREATED="1429228139019" MODIFIED="1429228151185"/>
</node>
<node TEXT="&quot;A literal identifier is an arbitrary string enclosed in back ticks (` . . . `).&quot;" ID="ID_1441606349" CREATED="1429228188854" MODIFIED="1429228191101"/>
</node>
<node TEXT="sometimes {} can sub for (), kind of" ID="ID_583598018" CREATED="1429234234357" MODIFIED="1429234256937">
<node TEXT="compiler does not infer ; in (), but it does in {}" ID="ID_391668961" CREATED="1429234240966" MODIFIED="1429234250154"/>
<node TEXT="works around the generators and filters of a for loop" ID="ID_998270386" CREATED="1429234270879" MODIFIED="1429234279989"/>
</node>
</node>
<node TEXT="pitfalls" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1073278014" CREATED="1429506580511" MODIFIED="1429506582275">
<node TEXT="if y is assigned to x (x = y), and x modified, y is modified" ID="ID_761757037" CREATED="1429506585736" MODIFIED="1429506603333">
<node TEXT="pdf 431" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1267763563" CREATED="1429506610302" MODIFIED="1429506613523"/>
<node TEXT="val c1 = new Cell[String](&quot;abc&quot;)&#xa;val c2: Cell[Any] = c1&#xa;c2.set(1)&#xa;val s: String = c1.get" ID="ID_545451479" CREATED="1429506583326" MODIFIED="1429506584919"/>
</node>
</node>
<node TEXT="orphaned" ID="ID_24536588" CREATED="1429233897190" MODIFIED="1429233899182">
<font BOLD="true"/>
<node TEXT="ranges" ID="ID_779805418" CREATED="1429233874548" MODIFIED="1429233875315">
<node TEXT="to: inclusive; until: [...)" ID="ID_1315693589" CREATED="1429233875757" MODIFIED="1429233887954"/>
</node>
<node TEXT="fsc: faster compiling" ID="ID_890151919" CREATED="1429215714944" MODIFIED="1429215717783">
<node TEXT="$ fsc ChecksumAccumulator.scala Summer.scala&#xa;&#xa;The first time you run fsc, it will create a local server daemon attached to&#xa;a port on your computer. It will then send the list of files to compile to the&#xa;daemon via the port, and the daemon will compile the files. The next time&#xa;you run fsc, the daemon will already be running, so fsc will simply send&#xa;the file list to the daemon, which will immediately compile the files. Using&#xa;fsc, you only need to wait for the Java runtime to startup the first time. If&#xa;you ever want to stop the fsc daemon, you can do so with fsc -shutdown." ID="ID_356717019" CREATED="1429215731201" MODIFIED="1429215736792"/>
</node>
<node TEXT="assignment returns (), not the assigned value" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1807762426" CREATED="1429233605517" MODIFIED="1429233614597"/>
<node TEXT="abstract class" ID="ID_1247523638" CREATED="1429298236332" MODIFIED="1429298240508">
<node TEXT="syntax" ID="ID_1420208920" CREATED="1429298418412" MODIFIED="1429298419411">
<node TEXT="this" ID="ID_368227558" CREATED="1429298242092" MODIFIED="1429298250090">
<node TEXT="abstract class Element {&#xa;  def contents: Array[String]&#xa;}" ID="ID_353838334" CREATED="1429298224756" MODIFIED="1429298235521"/>
</node>
<node TEXT="is abstract because contents has no implementation" ID="ID_926987777" CREATED="1429298250332" MODIFIED="1429298255795"/>
<node TEXT="must therefore be declared abstract" ID="ID_317551018" CREATED="1429298245788" MODIFIED="1429298261067"/>
</node>
<node TEXT="if any method is abstract, the whole class is" ID="ID_563349577" CREATED="1429298424035" MODIFIED="1429298432187"/>
</node>
<node TEXT="singleton objects do not have subclasses" ID="ID_1131639450" CREATED="1429335001387" MODIFIED="1429335006585"/>
<node TEXT="type synonym" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_380671810" CREATED="1429337763716" MODIFIED="1429337906328">
<node TEXT="brief, pdf 409" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1376094552" CREATED="1429337792501" MODIFIED="1429337891992">
<node TEXT="&quot;type Action = () =&gt; Unit&quot;" ID="ID_738738003" CREATED="1429337771461" MODIFIED="1429337774403"/>
<node TEXT="&quot;defines Action to be an alias of the type of procedure that&#xa;takes an empty parameter list and returns Unit.&quot;" ID="ID_1124309836" CREATED="1429337781924" MODIFIED="1429337784660"/>
</node>
<node TEXT="deep: pdf 459 (unread)" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_675930206" CREATED="1429337893669" MODIFIED="1429337901537"/>
</node>
<node TEXT="private var with public accessor" ID="ID_1346764354" CREATED="1429338020013" MODIFIED="1429338025281">
<node TEXT="private var curtime: Int = 0&#xa;def currentTime: Int = curtime" ID="ID_1584825769" CREATED="1429338037477" MODIFIED="1429338038572"/>
</node>
<node TEXT="merge into a list" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1597764007" CREATED="1429339598150" MODIFIED="1429339601303">
<node TEXT="pdf 410" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1741761555" CREATED="1429339614627" MODIFIED="1429339616633"/>
<node TEXT="private def insert(ag: List[WorkItem],&#xa;    item: WorkItem): List[WorkItem] = {&#xa;  if (ag.isEmpty || item.time &lt; ag.head.time) item :: ag&#xa;  else ag.head :: insert(ag.tail, item)&#xa;}" ID="ID_559930134" CREATED="1429339602326" MODIFIED="1429339603231"/>
</node>
<node TEXT="functional queues" ID="ID_464516104" CREATED="1429504471525" MODIFIED="1429504474437">
<node TEXT="is section 19.1" ID="ID_148857625" CREATED="1429504474797" MODIFIED="1429504477517"/>
</node>
<node TEXT="a shorthand for imports" ID="ID_83188762" CREATED="1429856380525" MODIFIED="1429856384428">
<node TEXT="book p. 796" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_89208519" CREATED="1429856400897" MODIFIED="1429856404096"/>
<node TEXT="The imports at the top of the code use a short-hand:&#xa;  import swing._&#xa;  import event._&#xa;This is in fact equivalent to the imports used before:&#xa;  import scala.swing._&#xa;  import scala.swing.event._&#xa;The reason you can use the shorthand is that packages nest in Scala. Be-&#xa;cause package scala.swing is contained in package scala, and everything&#xa;in that package imported automatically, you can write just swing to refer&#xa;to the package." ID="ID_1344252100" CREATED="1429856394765" MODIFIED="1429856395905"/>
</node>
<node TEXT="type test and cast" ID="ID_1907449848" CREATED="1429913030000" MODIFIED="1429913032981">
<node TEXT="pdf 320" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1771898152" CREATED="1429913043151" MODIFIED="1429913045587"/>
<node TEXT="expr.isInstanceOf[String]&#xa;expr.asInstanceOf[String]" ID="ID_1013659466" CREATED="1429913034263" MODIFIED="1429913038859"/>
<node TEXT="=&gt; can do this" ID="ID_1491746983" CREATED="1429913099784" MODIFIED="1429913103742">
<node TEXT="if (x.isInstanceOf[String]) {&#xa;  val s = x.asInstanceOf[String]&#xa;  s.length&#xa;} else ..." ID="ID_1161694105" CREATED="1429913104592" MODIFIED="1429913108354"/>
</node>
<node TEXT="but a match statement would be better" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1302551679" CREATED="1429913109569" MODIFIED="1429913116355"/>
</node>
<node TEXT="anonymous classes" ID="ID_1101842053" CREATED="1430440437406" MODIFIED="1430440439611">
<node TEXT="new ClassOrTrait { ... code ... }" ID="ID_1921074128" CREATED="1430440441629" MODIFIED="1430440503621"/>
<node TEXT="creates an instance of an anoymous class, inheriting from ClassOrTrait, with additional code as specified in ...code..." ID="ID_1468936135" CREATED="1430440505182" MODIFIED="1430440535621"/>
<node TEXT="anything abstract in ClassOrTrait must be instantiated" ID="ID_673021203" CREATED="1430440536468" MODIFIED="1430440550835"/>
</node>
<node TEXT="&quot;[Anonymous classes are n]ot to be confused with the common A{...}, which resolves to A.apply({...}), which often returns an instance of A&quot;" ID="ID_307272029" CREATED="1430440665406" MODIFIED="1430440688561">
<node TEXT="--Oliver Ruebenacker, gmail thread &quot;[scala-user] Two Swing questions: Bracketed code as argument? Dynamically add to Panel contents?&quot;" ID="ID_191197324" CREATED="1430440703142" MODIFIED="1430440732102"/>
</node>
</node>
<node TEXT="! swing chapter: see swing" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1970640772" CREATED="1429765077999" MODIFIED="1429765089468"/>
</node>
<node TEXT="sbt" ID="ID_152798175" CREATED="1429387225277" MODIFIED="1429387226252">
<node TEXT="= &quot;The interactive build tool&quot;" ID="ID_228074926" CREATED="1429387226948" MODIFIED="1429387232052"/>
<node TEXT="files and folders" ID="ID_1253997639" CREATED="1429471962213" MODIFIED="1429471964457">
<node TEXT="build.sbt" ID="ID_828181724" CREATED="1429388523398" MODIFIED="1429388525253">
<node TEXT="&quot;Basic build settings go in a file called build.sbt, located in the project&#x2019;s base directory.&quot;" ID="ID_259555919" CREATED="1429388521776" MODIFIED="1429388527714"/>
</node>
<node TEXT="standard folders" ID="ID_1236209820" CREATED="1429388734191" MODIFIED="1429471970909">
<node TEXT="src/" ID="ID_781392586" CREATED="1429388791351" MODIFIED="1429388931445">
<node TEXT="all other subfolders of src/ are ignored" ID="ID_322063945" CREATED="1429388747487" MODIFIED="1429388753822"/>
<node TEXT="src/&#xa;  main/&#xa;    resources/&#xa;       &lt;files to include in main jar here&gt;&#xa;    scala/&#xa;       &lt;main Scala sources&gt;&#xa;    java/&#xa;       &lt;main Java sources&gt;&#xa;  test/&#xa;    resources&#xa;       &lt;files to include in test jar here&gt;&#xa;    scala/&#xa;       &lt;test Scala sources&gt;&#xa;    java/&#xa;       &lt;test Java sources&gt;" ID="ID_1850096958" CREATED="1429388744583" MODIFIED="1429388745573"/>
</node>
<node TEXT="sbt build defn files" ID="ID_668577626" CREATED="1429388807391" MODIFIED="1429388812309">
<node TEXT="one at root is build.sbt" ID="ID_1864529488" CREATED="1429388815735" MODIFIED="1429388820301"/>
<node TEXT="others in project/, which can also contain .scala files" ID="ID_1984452208" CREATED="1429388821049" MODIFIED="1429388890574"/>
</node>
<node TEXT="target/" ID="ID_114236028" CREATED="1429388928535" MODIFIED="1429388930325">
<node TEXT="compiler-created things go here" ID="ID_997656947" CREATED="1429388932744" MODIFIED="1429388937293"/>
<node TEXT="that somehow includes documentation" ID="ID_1547494864" CREATED="1429388953406" MODIFIED="1429388957421"/>
</node>
<node TEXT=".gitignore (or equiv) should include target/" ID="ID_1329842886" CREATED="1429388974127" MODIFIED="1429388990017">
<node TEXT="which matches project/target/ as well as target/" ID="ID_1445391937" CREATED="1429389013575" MODIFIED="1429389022333"/>
</node>
</node>
</node>
<node TEXT="modes" ID="ID_224702739" CREATED="1429471993993" MODIFIED="1429471997470">
<font BOLD="true"/>
<node TEXT="interactive mode" ID="ID_268664528" CREATED="1429389237664" MODIFIED="1429389239924">
<node TEXT="enter &quot;sbt&quot; at command prompt, from base directory" ID="ID_56110200" CREATED="1429389240664" MODIFIED="1429389256739"/>
</node>
<node TEXT="batch mode" ID="ID_1981119804" CREATED="1429389258727" MODIFIED="1429389261180">
<node TEXT="follow &quot;sbt&quot; with a space-sep&apos;d list of commands" ID="ID_663993810" CREATED="1429389262991" MODIFIED="1429389273925"/>
<node TEXT="use quotation marks to group" ID="ID_1719460240" CREATED="1429389284776" MODIFIED="1429389291550"/>
<node TEXT="example" LOCALIZED_STYLE_REF="default" ID="ID_1113524214" CREATED="1429389275815" MODIFIED="1429389293151">
<node TEXT="sbt clean compile &quot;testOnly TestA TestB&quot;" ID="ID_1259380421" CREATED="1429389262058" MODIFIED="1429389262058"/>
</node>
</node>
<node TEXT="continuous build and test" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_926907666" CREATED="1429389427335" MODIFIED="1429389432595">
<node TEXT="search for &quot;continuous build and test&quot; here" ID="ID_1974648459" CREATED="1429389452088" MODIFIED="1429389455262"/>
<node ID="ID_1250627568" CREATED="1429389484887" MODIFIED="1429389484887" LINK="http://www.scala-sbt.org/0.13/tutorial/Running.html"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      http://www.scala-sbt.org/0.13/tutorial/Running.html
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="works in batch mode too!" ID="ID_202052468" CREATED="1429389477392" MODIFIED="1429389489395"/>
</node>
</node>
<node TEXT="common commands" ID="ID_78194590" CREATED="1429389519736" MODIFIED="1429389522022">
<node TEXT="a list is here" ID="ID_666504882" CREATED="1429389560480" MODIFIED="1429389563893">
<node TEXT="http://www.scala-sbt.org/0.13/tutorial/Running.html" ID="ID_530225588" CREATED="1429389518854" MODIFIED="1429389518854" LINK="http://www.scala-sbt.org/0.13/tutorial/Running.html"/>
<node TEXT="search for &quot;common commands&quot; (section)" ID="ID_878787177" CREATED="1429389523223" MODIFIED="1429389533398"/>
</node>
<node TEXT="test" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_414915844" CREATED="1429389568071" MODIFIED="1429389570556"/>
<node TEXT="console" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_297245400" CREATED="1429389585080" MODIFIED="1429389586523">
<node TEXT="starts Scala interpreter with all needed dependencies" ID="ID_1286088375" CREATED="1429389588223" MODIFIED="1429389595814"/>
</node>
</node>
<node TEXT="history commands" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1849292803" CREATED="1429389705199" MODIFIED="1429472012310">
<font BOLD="false"/>
<node TEXT="http://www.scala-sbt.org/0.13/tutorial/Running.html" ID="ID_822276477" CREATED="1429389712450" MODIFIED="1429389712450" LINK="http://www.scala-sbt.org/0.13/tutorial/Running.html"/>
<node TEXT="search for" ID="ID_1670939458" CREATED="1429389713552" MODIFIED="1429389715357">
<node TEXT="History Commands" ID="ID_247794916" CREATED="1429389708434" MODIFIED="1429389708434"/>
</node>
<node TEXT="example: &quot;!-n&quot; will &quot;Execute the nth command before this one.&quot;" ID="ID_1265715552" CREATED="1429389717799" MODIFIED="1429389736830"/>
</node>
<node TEXT=".sbt build defns" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1971219756" CREATED="1429390520464" MODIFIED="1429390525459">
<node TEXT="http://www.scala-sbt.org/0.13/tutorial/Basic-Def.html" ID="ID_1458058905" CREATED="1429390529768" MODIFIED="1429390529768" LINK="http://www.scala-sbt.org/0.13/tutorial/Basic-Def.html"/>
<node TEXT="I don&apos;t understand." LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1324049477" CREATED="1429390526168" MODIFIED="1429390532244"/>
<node TEXT="sbt keeps a map of the project, mapping strings to qualities" ID="ID_1482240028" CREATED="1429390691816" MODIFIED="1429390714382"/>
<node TEXT="this (defines a project and?) sets the name of a project" ID="ID_311252717" CREATED="1429390714808" MODIFIED="1429390728317">
<node TEXT="lazy val root = (project in file(&quot;.&quot;)).&#xa;  settings(&#xa;    name := &quot;hello&quot;&#xa;  )" ID="ID_739711384" CREATED="1429390729088" MODIFIED="1429390730334"/>
</node>
<node TEXT="reusing common settings" ID="ID_1719688737" CREATED="1429391082592" MODIFIED="1429391092535">
<node TEXT="lazy val commonSettings = Seq(&#xa;  organization := &quot;com.example&quot;,&#xa;  version := &quot;0.1.0&quot;,&#xa;  scalaVersion := &quot;2.11.4&quot;&#xa;)&#xa;&#xa;lazy val root = (project in file(&quot;.&quot;)).&#xa;  settings(commonSettings: _*).&#xa;  settings(&#xa;    name := &quot;hello&quot;&#xa;  )" ID="ID_872895053" CREATED="1429391093312" MODIFIED="1429391094145"/>
</node>
<node TEXT="&quot;build.sbt may also be interspersed with vals, lazy vals, and defs&quot; (but no classes or objects)" ID="ID_984562292" CREATED="1429391153225" MODIFIED="1429391166236"/>
<node TEXT="three kinds of keys: setting, task and input" ID="ID_139439805" CREATED="1429391294992" MODIFIED="1429391306998">
<font BOLD="true"/>
</node>
<node TEXT="some keys are built-in" ID="ID_793168323" CREATED="1429391361273" MODIFIED="1429391369823">
<font BOLD="false"/>
<node TEXT="&quot;The built-in keys are just fields in an object called Keys. A build.sbt implicitly has an import sbt.Keys._, so sbt.Keys.name can be referred to as name. &quot;" ID="ID_571127196" CREATED="1429391365273" MODIFIED="1429391366807"/>
</node>
<node TEXT="custom keys can be defined" ID="ID_1321148573" CREATED="1429391461089" MODIFIED="1429391464406"/>
<node TEXT="a setting can be a task, a repeated computation" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1486290268" CREATED="1429391887809" MODIFIED="1429391897414">
<node TEXT="lazy val hello = taskKey[Unit](&quot;An example task&quot;)&#xa;&#xa;lazy val root = (project in file(&quot;.&quot;)).&#xa;  settings(&#xa;    hello := { println(&quot;Hello!&quot;) }&#xa;  )" ID="ID_434592495" CREATED="1429391895049" MODIFIED="1429391895993"/>
</node>
<node TEXT="tasks and keys: interactive" ID="ID_1234798657" CREATED="1429392000193" MODIFIED="1429472079526">
<node ID="ID_868709334" CREATED="1429392126146" MODIFIED="1429392126146"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      type the name of a task to exec it
    </p>
  </body>
</html>
</richcontent>
<node TEXT="e.g. &quot;compile&quot; is a task (more accurately, a task key)" ID="ID_1117172640" CREATED="1429392009325" MODIFIED="1429392029136"/>
</node>
<node TEXT="&quot;to see a task&#x2019;s result, use show &lt;task name&gt; rather than plain &lt;task name&gt;&quot;" ID="ID_1372727670" CREATED="1429392067577" MODIFIED="1429392070263"/>
<node TEXT="type &quot;inspect &lt;keyname&gt;&quot; to learn about a key" ID="ID_364994388" CREATED="1429392140833" MODIFIED="1429392147959"/>
</node>
<node TEXT="imports in build.sbt" ID="ID_8853523" CREATED="1429392170377" MODIFIED="1429392174847">
<node TEXT="implicit" ID="ID_1397351036" CREATED="1429392177649" MODIFIED="1429392178703">
<node TEXT="import sbt._" ID="ID_1102865426" CREATED="1429392176763" MODIFIED="1429392176763"/>
<node TEXT="import Process._" ID="ID_841828588" CREATED="1429392176763" MODIFIED="1429392176763"/>
<node TEXT="import Keys._" ID="ID_807450878" CREATED="1429392176764" MODIFIED="1429392176764"/>
</node>
<node TEXT="more can be added, at top" ID="ID_1348122013" CREATED="1429392180025" MODIFIED="1429392183135"/>
</node>
</node>
<node TEXT="scopes" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_873638827" CREATED="1429392551193" MODIFIED="1429393041874">
<node TEXT="skipped from &quot;Global Scope&quot; on, and did not understand much before it" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_631134294" CREATED="1429393312025" MODIFIED="1429393343744"/>
<node TEXT="keys have multip values; &quot;scoped keys&quot; do not" ID="ID_1930291365" CREATED="1429392700521" MODIFIED="1429392719031">
<node TEXT="the value at a key depends on (context = scope)" ID="ID_759247295" CREATED="1429392554169" MODIFIED="1429392585795"/>
</node>
<node TEXT="scope axes" ID="ID_4021337" CREATED="1429392815937" MODIFIED="1429392817303">
<node TEXT="Projects" ID="ID_1656856095" CREATED="1429392817756" MODIFIED="1429392817756">
<node TEXT="each project can have its own settings" ID="ID_1578831038" CREATED="1429392826537" MODIFIED="1429392852303"/>
<node TEXT="they can be shared too" ID="ID_844819687" CREATED="1429392852865" MODIFIED="1429392857327">
<node TEXT="&quot;The project axis can also be set to &#x201c;entire build&#x201d;, so a setting applies to the entire build rather than a single project.&quot;" ID="ID_54278856" CREATED="1429392840593" MODIFIED="1429392843048"/>
</node>
</node>
<node TEXT="Configurations" ID="ID_1204986402" CREATED="1429392817756" MODIFIED="1429392817756">
<node TEXT="examples" ID="ID_1057770798" CREATED="1429392991506" MODIFIED="1429392992593">
<node TEXT="Compile which defines the main build (src/main/scala)." ID="ID_1424576686" CREATED="1429392994686" MODIFIED="1429392994686"/>
<node TEXT="Test which defines how to build tests (src/test/scala)." ID="ID_1610244163" CREATED="1429392994686" MODIFIED="1429392994686"/>
<node TEXT="Runtime which defines the classpath for the run task." ID="ID_1811741714" CREATED="1429392994688" MODIFIED="1429392994688"/>
</node>
</node>
<node TEXT="Tasks" ID="ID_65974514" CREATED="1429392817757" MODIFIED="1429392817757"/>
</node>
</node>
<node TEXT="library dependencies" ID="ID_361362696" CREATED="1429393402978" MODIFIED="1429393405982">
<node TEXT="http://www.scala-sbt.org/0.13/tutorial/Library-Dependencies.html" ID="ID_257676871" CREATED="1429393741815" MODIFIED="1429393741815" LINK="http://www.scala-sbt.org/0.13/tutorial/Library-Dependencies.html"/>
<node TEXT="unmanaged" ID="ID_936119689" CREATED="1429393406648" MODIFIED="1429393408439">
<node TEXT="simpler" ID="ID_1127315430" CREATED="1429393419482" MODIFIED="1429393421048"/>
<node TEXT="&quot;add jars to lib/ and they will be placed on the project classpath&quot;" ID="ID_101888696" CREATED="1429393431970" MODIFIED="1429393450080"/>
<node TEXT="no change to build.sbt needed" ID="ID_410559953" CREATED="1429393479249" MODIFIED="1429393484158"/>
<node TEXT="&quot;to use custom_lib instead of lib&quot;" ID="ID_937451119" CREATED="1429393506170" MODIFIED="1429393512152">
<node TEXT="unmanagedBase := baseDirectory.value / &quot;custom_lib&quot;" ID="ID_958391848" CREATED="1429393513834" MODIFIED="1429393514848"/>
</node>
</node>
<node TEXT="managed" ID="ID_1046368614" CREATED="1429393634433" MODIFIED="1429393635295">
<node TEXT="based on &quot;Apache Ivy&quot;" ID="ID_1153334569" CREATED="1429393636217" MODIFIED="1429393640046"/>
<node TEXT="build.sbt example" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1296545932" CREATED="1429392422049" MODIFIED="1429472199607">
<node TEXT="val derby = &quot;org.apache.derby&quot; % &quot;derby&quot; % &quot;10.4.1.3&quot;&#xa;&#xa;lazy val commonSettings = Seq(&#xa;  organization := &quot;com.example&quot;,&#xa;  version := &quot;0.1.0&quot;,&#xa;  scalaVersion := &quot;2.11.4&quot;&#xa;)&#xa;&#xa;lazy val root = (project in file(&quot;.&quot;)).&#xa;  settings(commonSettings: _*).&#xa;  settings(&#xa;    name := &quot;hello&quot;,&#xa;    libraryDependencies += derby&#xa;  )" ID="ID_1790108003" CREATED="1429392426153" MODIFIED="1429392427058"/>
</node>
<node ID="ID_1746084393" CREATED="1429393690451" MODIFIED="1429393690451"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      libraryDependencies
    </p>
  </body>
</html>
</richcontent>
<node TEXT="&quot;Most of the time, you can simply list your dependencies in the setting libraryDependencies&quot;" ID="ID_704672723" CREATED="1429393658458" MODIFIED="1429393660288"/>
<node TEXT="libraryDependencies += groupID % artifactID % revision" ID="ID_333359303" CREATED="1429393684226" MODIFIED="1429393685152"/>
<node TEXT="libraryDependencies ++= Seq(&#xa;  groupID % artifactID % revision,&#xa;  groupID % otherID % otherRevision&#xa;)" ID="ID_107050762" CREATED="1429393797458" MODIFIED="1429393798673"/>
</node>
<node TEXT="resolvers" ID="ID_264563699" CREATED="1429393951658" MODIFIED="1429393952982">
<node TEXT="&quot;If your dependency isn&#x2019;t on one of the default repositories, you&#x2019;ll have to add a resolver to help Ivy find it. &quot;" ID="ID_452666982" CREATED="1429393953706" MODIFIED="1429393955616"/>
</node>
<node TEXT="dependencies that vary across configs" ID="ID_1721982396" CREATED="1429393988586" MODIFIED="1429394021132">
<node TEXT="to make one" ID="ID_54353564" CREATED="1429394061209" MODIFIED="1429394074037">
<node TEXT="&quot;If you want a dependency to show up in the classpath only for the Test configuration and not the Compile configuration, add % &quot;test&quot; like this: &quot;" ID="ID_594999377" CREATED="1429393998137" MODIFIED="1429394000143"/>
<node TEXT="libraryDependencies += &quot;org.apache.derby&quot; % &quot;derby&quot; % &quot;10.4.1.3&quot; % &quot;test&quot;" ID="ID_1934139615" CREATED="1429393989387" MODIFIED="1429393989387"/>
</node>
<node TEXT="to test that it is made" ID="ID_593568725" CREATED="1429394064850" MODIFIED="1429394082485">
<node TEXT="&quot;if you type show compile:dependencyClasspath at the sbt interactive prompt, you should not see the derby jar. But if you type show test:dependencyClasspath, you should see the derby jar in the list. &quot;" ID="ID_69395944" CREATED="1429394066402" MODIFIED="1429394068680"/>
</node>
</node>
<node TEXT="some operators" ID="ID_1275147659" CREATED="1429472251712" MODIFIED="1429472260314">
<node TEXT="+= appends to (rather than replacing) libraryDependencies" ID="ID_1859092417" CREATED="1429392432041" MODIFIED="1429392454404"/>
<node TEXT="++= appends a whole list" ID="ID_1315668837" CREATED="1429472213853" MODIFIED="1429472222669">
<node TEXT="libraryDependencies ++= Seq(&#xa;  groupID % artifactID % revision,&#xa;  groupID % otherID % otherRevision&#xa;)" ID="ID_564452966" CREATED="1429393797458" MODIFIED="1429393798673"/>
</node>
<node TEXT="% &quot;constructs an Ivy module ID from strings&quot;" ID="ID_1143402021" CREATED="1429392468289" MODIFIED="1429392482313"/>
</node>
</node>
</node>
<node TEXT="pitfalls" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_792820138" CREATED="1429389645072" MODIFIED="1429389649123">
<node TEXT="reload: need to run this if build defs change" ID="ID_889031728" CREATED="1429389641840" MODIFIED="1429389658573"/>
<node TEXT="older build definitions" ID="ID_1022668507" CREATED="1429390270336" MODIFIED="1429390272814">
<node TEXT="http://www.scala-sbt.org/0.13/tutorial/Basic-Def.html" ID="ID_1616310203" CREATED="1429390277542" MODIFIED="1429390277542" LINK="http://www.scala-sbt.org/0.13/tutorial/Basic-Def.html"/>
<node TEXT="I learned the &quot;newest&quot; build definition, which can do everything the others did and more." ID="ID_1430187709" CREATED="1429390279040" MODIFIED="1429390295069"/>
<node TEXT="But two older defintions happened, that I might encounter &quot;in the wild&quot;." ID="ID_1755352770" CREATED="1429390295248" MODIFIED="1429390305630"/>
</node>
<node TEXT="common .scala files can be in project/" ID="ID_787535132" CREATED="1429390334056" MODIFIED="1429390342342"/>
</node>
<node TEXT="vocab" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1169231899" CREATED="1429471954814" MODIFIED="1429471978348">
<node TEXT="&quot;base directory&quot;" ID="ID_785498414" CREATED="1429388650407" MODIFIED="1429388653949">
<node TEXT="is the one that contains the project" ID="ID_1483286244" CREATED="1429388654527" MODIFIED="1429388658909"/>
</node>
</node>
</node>
<node TEXT="? how to read api" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_1352457764" CREATED="1430466998251" MODIFIED="1430467003024">
<node TEXT="https://www.google.com/search?q=how+to+read+scala+api+documentation&amp;ie=UTF-8&amp;sa=Search&amp;channel=fe&amp;client=browser-ubuntu&amp;hl=en&amp;gws_rd=ssl" ID="ID_543564320" CREATED="1430466996684" MODIFIED="1430466996684" LINK="https://www.google.com/search?q=how+to+read+scala+api+documentation&amp;ie=UTF-8&amp;sa=Search&amp;channel=fe&amp;client=browser-ubuntu&amp;hl=en&amp;gws_rd=ssl"/>
</node>
</node>
<node TEXT="OCaml" ID="ID_1432862807" CREATED="1424124498757" MODIFIED="1424124501333">
<node TEXT="lang" ID="ID_771284828" CREATED="1424126043052" MODIFIED="1424126043726">
<node TEXT="pitfalls" ID="ID_731560577" CREATED="1424126064533" MODIFIED="1424126065780">
<node TEXT="duplicates" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_788056917" CREATED="1424126071765" MODIFIED="1424126073967"/>
<node TEXT="; to separate in a list" ID="ID_1262350506" CREATED="1424126051173" MODIFIED="1424126071388">
<node TEXT="but , in a tuple" ID="ID_1671778342" CREATED="1424126518852" MODIFIED="1424126522924"/>
</node>
<node TEXT="no implicit coercion" ID="ID_1931021032" CREATED="1424126789107" MODIFIED="1424126792946">
<node TEXT="&quot;no automatic conversion between int, float, string or any other type&quot;" ID="ID_967461011" CREATED="1424126783549" MODIFIED="1424126788915"/>
</node>
</node>
<node TEXT="evaluation" ID="ID_943697376" CREATED="1424126857941" MODIFIED="1424126861132">
<node TEXT="no implicit coercion" ID="ID_187557250" CREATED="1424126789107" MODIFIED="1424126792946">
<node TEXT="&quot;no automatic conversion between int, float, string or any other type&quot;" ID="ID_809755026" CREATED="1424126783549" MODIFIED="1424126788915"/>
</node>
<node TEXT="last line = returned val" ID="ID_1904109320" CREATED="1424126872189" MODIFIED="1424126875332"/>
<node TEXT="types and functions can share a name" ID="ID_251952041" CREATED="1424127173845" MODIFIED="1424127188778"/>
<node TEXT="let" ID="ID_518681073" CREATED="1424131127126" MODIFIED="1424131128000">
<node TEXT="let x = y shorthand for the expression y" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1441161629" CREATED="1424131131646" MODIFIED="1424131168211">
<node TEXT="there is no way to modify or reassign x" ID="ID_1689696093" CREATED="1424131158102" MODIFIED="1424131186969"/>
</node>
</node>
<node TEXT="ref" ID="ID_344091264" CREATED="1424131339070" MODIFIED="1424131340789">
<node TEXT="intended to be rare" ID="ID_1879029646" CREATED="1424131514790" MODIFIED="1424131528565"/>
<node TEXT="to create a reference, like a pointer" ID="ID_1000891680" CREATED="1424131341134" MODIFIED="1424131346331"/>
<node TEXT="for mutable variables" ID="ID_808527927" CREATED="1424131371470" MODIFIED="1424131381014">
<node TEXT="as opposed to let" ID="ID_87689516" CREATED="1424131381214" MODIFIED="1424131383229"/>
</node>
<node TEXT="syntax" ID="ID_437926756" CREATED="1424131347083" MODIFIED="1424131347973">
<node TEXT="# ref 0;;&#xa;- : int ref = {contents = 0}" ID="ID_1521376899" CREATED="1424131354118" MODIFIED="1424131355477">
<node TEXT="immediately garbage collected" ID="ID_1686515355" CREATED="1424131416302" MODIFIED="1424131420892"/>
</node>
<node TEXT="# let my_ref = ref 0;;&#xa;val my_ref : int ref = {contents = 0}" ID="ID_712383216" CREATED="1424131414174" MODIFIED="1424131415445"/>
</node>
<node TEXT="reassign with :=" ID="ID_1021745459" CREATED="1424131438534" MODIFIED="1424131441236"/>
<node TEXT="dereference with !" ID="ID_1603480016" CREATED="1424131456894" MODIFIED="1424131459765"/>
</node>
<node TEXT="nested functions" ID="ID_880342072" CREATED="1424131619230" MODIFIED="1424131621667">
<node TEXT="have lexical scope" ID="ID_1983524646" CREATED="1424131626046" MODIFIED="1424131629021"/>
</node>
</node>
<node TEXT="extl libs, how to access" ID="ID_1263588650" CREATED="1424131989038" MODIFIED="1424132016240">
<node TEXT="compiled code" ID="ID_1277506962" CREATED="1424132090830" MODIFIED="1424132104182">
<node TEXT=".altvs" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1590912456" CREATED="1424132030470" MODIFIED="1424132035770"/>
<node TEXT="&quot;open&quot; : top of file import declaration" ID="ID_264984422" CREATED="1424131994054" MODIFIED="1424132006760">
<node TEXT="open Graphics;;" ID="ID_831671095" CREATED="1424131992112" MODIFIED="1424131992112"/>
</node>
<node TEXT="total qualification" ID="ID_313713014" CREATED="1424132039399" MODIFIED="1424132042765">
<node TEXT=".I&apos;m inventing that term." ID="ID_63108934" CREATED="1424132043546" MODIFIED="1424132047269"/>
<node TEXT="just prefix the library name (capitalized) to each function call" ID="ID_1012170901" CREATED="1424132051366" MODIFIED="1424132071213"/>
</node>
</node>
<node TEXT="interpreter" ID="ID_987720217" CREATED="1424132099110" MODIFIED="1424132102077">
<node TEXT="#load &quot;graphics.cma&quot;;;" ID="ID_1345832492" CREATED="1424132102563" MODIFIED="1424132102563"/>
</node>
</node>
<node TEXT="types" ID="ID_583001195" CREATED="1424126825285" MODIFIED="1424126827156">
<node TEXT="no function overloading" ID="ID_79706893" CREATED="1424126832317" MODIFIED="1424126834820">
<node TEXT="+ is for int, +. is for float" ID="ID_679399687" CREATED="1424126835685" MODIFIED="1424126844148"/>
</node>
<node TEXT="coercion functions" ID="ID_252301506" CREATED="1424127117613" MODIFIED="1424127123892">
<node TEXT="(float = float_of_int) :: int -&gt; float" ID="ID_358016639" CREATED="1424127124645" MODIFIED="1424127201740">
<node TEXT="float is shorthand" ID="ID_340749845" CREATED="1424127207397" MODIFIED="1424127212172"/>
</node>
</node>
<node TEXT="&quot;unit&quot; = the null type, written ()" ID="ID_186207136" CREATED="1424127521645" MODIFIED="1424127546463"/>
<node TEXT="&quot;type not constrained&quot;" ID="ID_1785020427" CREATED="1424127581173" MODIFIED="1424127589436">
<node TEXT="represented as &apos;x, where x is any char" ID="ID_1718936670" CREATED="1424127593693" MODIFIED="1424127601812"/>
<node TEXT="let give_me_a_three x = 3&#xa;give_me_a_three : &apos;a -&gt; int" ID="ID_1349971670" CREATED="1424127589973" MODIFIED="1424127647028"/>
</node>
</node>
<node TEXT="antipitfalls" ID="ID_762435586" CREATED="1424126327541" MODIFIED="1424126329251">
<node TEXT="= suprising freedoms" ID="ID_1313593684" CREATED="1424126329469" MODIFIED="1424126341274"/>
<node TEXT="comments nest" ID="ID_1916828077" CREATED="1424126342148" MODIFIED="1424126345316"/>
</node>
<node TEXT="lists" ID="ID_1835796743" CREATED="1424126044885" MODIFIED="1424126048043">
<node TEXT=":: is cons" ID="ID_1451462756" CREATED="1424126048421" MODIFIED="1424126050891"/>
<node TEXT="; to separate" ID="ID_1887738779" CREATED="1424126051173" MODIFIED="1424126054746">
<node TEXT="but , in a tuple" ID="ID_1779012910" CREATED="1424126518852" MODIFIED="1424126522924"/>
</node>
</node>
<node TEXT="funcitons" ID="ID_1687819281" CREATED="1424127305173" MODIFIED="1424127306332">
<node TEXT="recursion: use &quot;let rec&quot;" ID="ID_872904360" CREATED="1424127306725" MODIFIED="1424127310924">
<node TEXT="&quot;The only difference between let and let rec is in the scoping of the function name. If the above function had been defined with just let, then the call to range would have tried to look for an existing (previously defined) function called range&quot;" LOCALIZED_STYLE_REF="styles.topic" ID="ID_715476749" CREATED="1424127366165" MODIFIED="1424127376796"/>
</node>
<node TEXT="&quot;let x&quot; can redefine x in terms of its previous val" ID="ID_1854173671" CREATED="1424127429229" MODIFIED="1424127440628">
<node TEXT="# let positive_sum a b =&#xa;    let a = max a 0&#xa;    and b = max b 0 in&#xa;    a + b;;" ID="ID_167234502" CREATED="1424127441509" MODIFIED="1424127444708"/>
</node>
</node>
</node>
<node TEXT="rig" ID="ID_1489573708" CREATED="1424124880052" MODIFIED="1424131849155">
<node ID="ID_1333479488" CREATED="1424131849878" MODIFIED="1424131849878"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      things to install
    </p>
  </body>
</html>
</richcontent>
<node TEXT="I only installed the main thing, &quot;apt-get install ocaml&quot;" ID="ID_575423198" CREATED="1424126201637" MODIFIED="1424126211722"/>
<node TEXT="https://ocaml.org/docs/install.html" ID="ID_1628481934" CREATED="1424124868811" MODIFIED="1424124868811" LINK="https://ocaml.org/docs/install.html"/>
</node>
<node TEXT="modules are at /usr/lib/ocaml" ID="ID_1044996436" CREATED="1424131851847" MODIFIED="1424131859901"/>
</node>
<node TEXT="sources, refs" ID="ID_1759557581" CREATED="1424126155709" MODIFIED="1424126164002">
<node TEXT="code examples" ID="ID_1337693302" CREATED="1424126166765" MODIFIED="1424126168610">
<node TEXT="https://ocaml.org/learn/taste.html" ID="ID_831527226" CREATED="1424126155078" MODIFIED="1424126155078" LINK="https://ocaml.org/learn/taste.html"/>
</node>
<node TEXT="libraries" ID="ID_1349271925" CREATED="1424124876813" MODIFIED="1424124878971">
<node TEXT="http://caml.inria.fr/cgi-bin/hump.cgi" ID="ID_1407188395" CREATED="1424124509026" MODIFIED="1424124509026" LINK="http://caml.inria.fr/cgi-bin/hump.cgi"/>
</node>
</node>
</node>
</node>
<node TEXT="Json" ID="ID_1961096634" CREATED="1431552641836" MODIFIED="1447530215958">
<font BOLD="false"/>
<node TEXT="https://hackage.haskell.org/package/json" ID="ID_1042708665" CREATED="1431553648003" MODIFIED="1431553648003" LINK="https://hackage.haskell.org/package/json"/>
<node TEXT="types" ID="ID_1012561656" CREATED="1431552851421" MODIFIED="1431552853907">
<node TEXT="numbers: as imagined" LOCALIZED_STYLE_REF="styles.topic" ID="ID_804983531" CREATED="1431552657173" MODIFIED="1431552665367">
<node TEXT="also 1e07" ID="ID_383564098" CREATED="1431552707991" MODIFIED="1431552714474"/>
</node>
<node TEXT="strings: as imagined" LOCALIZED_STYLE_REF="styles.topic" ID="ID_199311855" CREATED="1431552661269" MODIFIED="1431552665361"/>
<node TEXT="boolean: true or false" ID="ID_538453577" CREATED="1431552669493" MODIFIED="1431552898803">
<node TEXT="as strings, but no &quot;s" ID="ID_1709309266" CREATED="1431552673560" MODIFIED="1431552906351"/>
</node>
<node TEXT="array: [anything, anything ...]" ID="ID_1489456920" CREATED="1431552696151" MODIFIED="1431552703261">
<node TEXT="inc []" ID="ID_1158454237" CREATED="1431552929297" MODIFIED="1431552932112"/>
</node>
<node TEXT="object: &quot;unordered coll of name/value pairs&quot;" ID="ID_241244442" CREATED="1431552749521" MODIFIED="1431552756496">
<node TEXT="names :: strings" ID="ID_1311491394" CREATED="1431552762194" MODIFIED="1431552765369"/>
<node TEXT="{ name : object, name : object ...}" ID="ID_1541403704" CREATED="1431552788419" MODIFIED="1431552798985"/>
</node>
<node TEXT="null" ID="ID_403953240" CREATED="1431552814860" MODIFIED="1431552815922"/>
</node>
<node TEXT="backslash to escape" ID="ID_1520934767" CREATED="1431552975364" MODIFIED="1431552984303"/>
<node TEXT="no comments" ID="ID_1093200840" CREATED="1431552845294" MODIFIED="1431552847114"/>
</node>
<node TEXT="Haskell" ID="ID_609152376" CREATED="1416531718605" MODIFIED="1431554664482">
<font BOLD="true"/>
<node TEXT="? if I sort this, and ?s percolated up only as high as deserved, would be good, no?" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1993268907" CREATED="1430469249892" MODIFIED="1430469271713"/>
<node TEXT="u, gui toolkits" ID="ID_511225353" CREATED="1418783130204" MODIFIED="1422670333028">
<font BOLD="true"/>
<node TEXT="gtk" ID="ID_1308223621" CREATED="1417382666209" MODIFIED="1417382667021">
<node TEXT="mail list" ID="ID_73426491" CREATED="1417382673161" MODIFIED="1417382674365">
<node TEXT="https://mail.gnome.org/mailman/listinfo/gtk-osx-users-list" ID="ID_324839310" CREATED="1417382672672" MODIFIED="1417382672672" LINK="https://mail.gnome.org/mailman/listinfo/gtk-osx-users-list"/>
<node TEXT="handle" ID="ID_247929723" CREATED="1417382793374" MODIFIED="1417382794170">
<node TEXT="Jeff Brown" ID="ID_1735196917" CREATED="1417382795318" MODIFIED="1417382796849"/>
<node TEXT="gmail" ID="ID_1348352919" CREATED="1417382797046" MODIFIED="1417382797705"/>
<node TEXT="pwd" ID="ID_1164420062" CREATED="1417382695384" MODIFIED="1417382696483">
<node TEXT="jfkdls" ID="ID_275085280" CREATED="1417382696704" MODIFIED="1417382699403"/>
</node>
</node>
</node>
<node TEXT="gtk-osx-users-list@gnome.org" ID="ID_1001695733" CREATED="1417384421441" MODIFIED="1417384421441" LINK="mailto:gtk-osx-users-list@gnome.org"/>
<node TEXT="could email" ID="ID_654050844" CREATED="1417384400750" MODIFIED="1417384403642">
<node TEXT="How to test whether installation worked" ID="ID_1038368399" CREATED="1417384403952" MODIFIED="1417384403952"/>
<node TEXT="I followed the instructions here https://wiki.gnome.org/action/show//Projects/GTK+/OSX/Building?action=show&amp;redirect=GTK%2B%2FOSX%2FBuilding#Prerequisites" ID="ID_307169230" CREATED="1417384403952" MODIFIED="1417384403952" LINK="https://wiki.gnome.org/action/show//Projects/GTK+/OSX/Building?action=show&amp;redirect=GTK%2B%2FOSX%2FBuilding#Prerequisites"/>
<node TEXT="through the line &quot;jhbuild build meta-gtk-osx-core&quot;. It seemed to work -- every step reported something like &quot;*** success *** [13/13]&quot;, where the fraction was always n/n. (I saved the terminal-printed output of each step.)" ID="ID_1175461372" CREATED="1417384403953" MODIFIED="1417384403953"/>
<node TEXT="To test whether it had worked, I then went on to run &quot;j" ID="ID_1155965380" CREATED="1417384403954" MODIFIED="1417384403954"/>
</node>
</node>
<node TEXT="vty-ui" ID="ID_1611371868" CREATED="1427575516763" MODIFIED="1427575520922">
<node TEXT="pitfalls" ID="ID_416202485" CREATED="1427575550179" MODIFIED="1427575551330">
<node TEXT="search for tag &quot;pitfall&quot;" ID="ID_1711519040" CREATED="1427575552148" MODIFIED="1427575574413"/>
</node>
<node TEXT="focus group" ID="ID_1505145700" CREATED="1427575522203" MODIFIED="1427575526866">
<node TEXT="allows tab-cycling" ID="ID_1718781528" CREATED="1427575527680" MODIFIED="1427575530816"/>
<node TEXT="mandatory" ID="ID_36552514" CREATED="1427575531230" MODIFIED="1427575535856">
<node TEXT=". pitfall" ID="ID_1639373690" CREATED="1427575577963" MODIFIED="1427575586091"/>
<node TEXT="every program must have at least one" ID="ID_1924798951" CREATED="1427575539283" MODIFIED="1427575543809"/>
</node>
</node>
<node TEXT="collection" ID="ID_1274121771" CREATED="1427575680124" MODIFIED="1427575681450">
<node TEXT="a collection of interfaces, I think" ID="ID_712069541" CREATED="1427575691508" MODIFIED="1427575717585">
<node TEXT="each interface intended as a separate screen" ID="ID_1936446786" CREATED="1427575719340" MODIFIED="1427575725955"/>
</node>
<node TEXT="mandatory" ID="ID_1465379658" CREATED="1427575531230" MODIFIED="1427575535856">
<node TEXT=". pitfall" ID="ID_1341765110" CREATED="1427575577963" MODIFIED="1427575586091"/>
<node TEXT="every program must have at least one" ID="ID_745498917" CREATED="1427575539283" MODIFIED="1427575543809"/>
</node>
</node>
<node TEXT="basic v. container widgets" ID="ID_119616901" CREATED="1427576869814" MODIFIED="1427576876652">
<node TEXT="only two kinds" ID="ID_1355051426" CREATED="1427576877438" MODIFIED="1427576879932"/>
<node TEXT="containers ch some behavior, usually layout" ID="ID_787423018" CREATED="1427576882574" MODIFIED="1427576891484"/>
</node>
<node TEXT="layout" ID="ID_1592599232" CREATED="1427576976520" MODIFIED="1427577069207">
<node TEXT="to nest" ID="ID_162737669" CREATED="1427577070512" MODIFIED="1427577075464">
<node TEXT="mainBox &lt;- (hBox a b) &lt;--&gt; (hBox c d &lt;++&gt; vBox e f)" ID="ID_926923320" CREATED="1427576980288" MODIFIED="1427576995438"/>
<node TEXT="&lt;--&gt; and &lt;++&gt; for vertical and horizontal (basically aliases to vBox and hBox)" ID="ID_104667526" CREATED="1427577076688" MODIFIED="1427577100944"/>
</node>
<node TEXT="if box1 is a ref to a box, must wrap it with return" ID="ID_1053794612" CREATED="1427577043920" MODIFIED="1427577320058">
<node TEXT="when I say &quot;is a reference&quot;, I&apos;m quoting the manual; I would have thought references were themselves wrappers, not the other way around" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1330330317" CREATED="1427577329371" MODIFIED="1427577352469">
<node TEXT="http://jtdaugherty.github.io/vty-ui/manuals/vty-ui-users-manual-1.8.pdf" ID="ID_1262623370" CREATED="1427577359532" MODIFIED="1427577359532" LINK="http://jtdaugherty.github.io/vty-ui/manuals/vty-ui-users-manual-1.8.pdf"/>
<node TEXT="p. 10, first instance of the word &quot;return&quot;" ID="ID_21860685" CREATED="1427577360643" MODIFIED="1427577374633"/>
</node>
<node TEXT="box2 &lt;- (return box1) &lt;++&gt; (hBox c d)" ID="ID_418573559" CREATED="1427577036352" MODIFIED="1427577043381"/>
</node>
</node>
<node TEXT="key event handlers" ID="ID_1648666570" CREATED="1427577534981" MODIFIED="1427577538073">
<node TEXT="" ID="ID_939224054" CREATED="1427577538773" MODIFIED="1427577538773"/>
</node>
</node>
</node>
<node TEXT="for finding lacunae, read to here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1581747202" CREATED="1431562843878" MODIFIED="1432589806110">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_484492811" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="cho" ID="ID_24664894" CREATED="1414905408154" MODIFIED="1414905575466">
<node TEXT="* topic" LOCALIZED_STYLE_REF="default" ID="ID_126943132" CREATED="1413871848447" MODIFIED="1415475887013">
<font BOLD="true"/>
<node TEXT="emacs IDE" ID="ID_282800849" CREATED="1415477536557" MODIFIED="1415477612969">
<node TEXT="* would like to inspect type of command at point" ID="ID_1548089143" CREATED="1415484184162" MODIFIED="1415485655020">
<node TEXT="e.g. so I can see what kind of mapM is being used" ID="ID_1984032211" CREATED="1415484205698" MODIFIED="1415485679413"/>
</node>
<node TEXT="emacs extensions" ID="ID_1664065246" CREATED="1415485662426" MODIFIED="1415485667237">
<node TEXT="https://www.haskell.org/haskellwiki/Emacs" ID="ID_438498489" CREATED="1415477602546" MODIFIED="1415477602546" LINK="https://www.haskell.org/haskellwiki/Emacs"/>
<node TEXT="haskell-mode" ID="ID_729035383" CREATED="1415474137567" MODIFIED="1415477610416">
<font BOLD="false"/>
<node ID="ID_851093707" CREATED="1415474149440" MODIFIED="1415474149440"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      is deep
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="Scion (instlal failed)" ID="ID_1973497640" CREATED="1415477552590" MODIFIED="1415485480474">
<node TEXT="Highlights error messages directly in the source, together with a tool-tip" ID="ID_1825740762" CREATED="1415477566960" MODIFIED="1415477566960"/>
<node TEXT="Optional on-the-fly typechecking (idle-time based, or whenever file is saved)" ID="ID_1832284600" CREATED="1415477566960" MODIFIED="1415477566960"/>
<node TEXT="Completion on `LANGUAGE` names, pragmas, external module names and `OPTIONS`-flags" ID="ID_530115696" CREATED="1415477566962" MODIFIED="1415477566962"/>
<node TEXT="Go to definition sites of symbols at point" ID="ID_663604482" CREATED="1415477566963" MODIFIED="1415477566963"/>
</node>
</node>
</node>
<node TEXT="prob" ID="ID_1944384498" CREATED="1415475462714" MODIFIED="1415475965113">
<font BOLD="false"/>
<node TEXT="state + IO" ID="ID_661881073" CREATED="1415040028728" MODIFIED="1415475687444">
<node TEXT=". why" ID="ID_1839680144" CREATED="1415040034560" MODIFIED="1415040041867">
<node TEXT="anything big I write will use both" ID="ID_1239924636" CREATED="1415040042223" MODIFIED="1415040059343"/>
</node>
<node TEXT="state" ID="ID_765123727" CREATED="1414959071039" MODIFIED="1414959071658"/>
<node TEXT="IO" ID="ID_1746305421" CREATED="1413697497263" MODIFIED="1413697497914">
<node TEXT="a small library that used IO would be nice" ID="ID_1579273509" CREATED="1415003686647" MODIFIED="1415003694011"/>
</node>
</node>
<node TEXT="concur + IO" ID="ID_742642908" CREATED="1415040151725" MODIFIED="1415040154873">
<node TEXT=". why" ID="ID_480977502" CREATED="1415040163822" MODIFIED="1415040167081">
<node TEXT="concurrent input reader" ID="ID_750095256" CREATED="1413964911808" MODIFIED="1413964943822">
<node TEXT="b/c if I run &quot;main&quot;, interpreter stops" ID="ID_815815554" CREATED="1413964925698" MODIFIED="1413964938972"/>
</node>
</node>
</node>
<node TEXT="Signal: a type for values that change over time" ID="ID_1240907894" CREATED="1415130302078" MODIFIED="1415475684793"/>
<node TEXT="ctx&apos;s" ID="ID_889013526" CREATED="1415475700861" MODIFIED="1415475704465">
<font BOLD="true"/>
<node TEXT="bigger monad family" ID="ID_1012139320" CREATED="1414352267516" MODIFIED="1414959610537">
<node TEXT="http://fundeps.com/posts/cheatsheets/2014-03-04-cheat-sheets/" ID="ID_1868181367" CREATED="1414352277269" MODIFIED="1414352277269" LINK="http://fundeps.com/posts/cheatsheets/2014-03-04-cheat-sheets/"/>
<node TEXT="Semigroup , Monoid , Alt , Plus , Apply , Applicative , Alternative , Bind , Monad , MonadPlus" ID="ID_1019258235" CREATED="1414352261395" MODIFIED="1414352265404"/>
</node>
<node TEXT="corresp&apos;s" ID="ID_1352058641" CREATED="1414956659073" MODIFIED="1415475714033">
<node TEXT="e.g. pure is like return, but one returns an Applicative, the other a Monad" ID="ID_1785239816" CREATED="1414956666031" MODIFIED="1414956679988"/>
<node TEXT="fmap is like (I think) liftM" ID="ID_172635079" CREATED="1414956680183" MODIFIED="1414956691851"/>
<node TEXT="etc." ID="ID_850815203" CREATED="1414956692144" MODIFIED="1414956692867"/>
</node>
<node TEXT="synonyms" ID="ID_47409140" CREATED="1414874613593" MODIFIED="1414959061468">
<node TEXT="e.g. &lt;$&gt; = fmap (as an infix)" ID="ID_639914927" CREATED="1414874615857" MODIFIED="1414874623341">
<node TEXT="wherease fmap ordinarily leads its args" ID="ID_1878601626" CREATED="1414874623906" MODIFIED="1414874638176"/>
</node>
</node>
</node>
<node TEXT="OSC" ID="ID_1999529701" CREATED="1414959030072" MODIFIED="1415475820623">
<node ID="ID_432517611" CREATED="1415475821182" MODIFIED="1415475821182"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      lift to avoid repeat connect, what Rohan said
    </p>
  </body>
</html>
</richcontent>
<node TEXT="link to content/.../OSC/..." ID="ID_22250143" CREATED="1414024462024" MODIFIED="1414024476251">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1259558178" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
</node>
</node>
<node TEXT="lang" ID="ID_664584350" CREATED="1415475470305" MODIFIED="1415475470973">
<node TEXT="* template haskell, quasiquoting" ID="ID_581799927" CREATED="1415127842795" MODIFIED="1415475670793">
<node TEXT="load" ID="ID_990580247" CREATED="1415127851156" MODIFIED="1415127851806">
<node TEXT="start GHC with this option" ID="ID_175906442" CREATED="1415127857297" MODIFIED="1415127860910">
<node TEXT="&gt; ghci -XTemplateHaskell" ID="ID_1351839974" CREATED="1415127861191" MODIFIED="1422169674544"/>
</node>
<node TEXT="the load the library" ID="ID_1613887196" CREATED="1415127862411" MODIFIED="1415127864726">
<node TEXT="ghci&gt; :m + Language.Haskell.TH" ID="ID_839492075" CREATED="1415127848707" MODIFIED="1415127856934"/>
</node>
</node>
</node>
<node TEXT="* eval, suppress eval" ID="ID_1139630094" CREATED="1413964910108" MODIFIED="1415475798199">
<node TEXT="to write an interpreter" ID="ID_1758885884" CREATED="1414959118463" MODIFIED="1414959261476"/>
</node>
<node TEXT="category" ID="ID_890425036" CREATED="1415139456352" MODIFIED="1415139457507"/>
<node TEXT="CPS" ID="ID_714170688" CREATED="1415127306923" MODIFIED="1415127309646">
<node TEXT="= continuation passing style" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_434773268" CREATED="1431563929280" MODIFIED="1431563933284"/>
<node TEXT="why" ID="ID_1796230079" CREATED="1415139159061" MODIFIED="1415139159623">
<node TEXT="to manipulate control fllow, e.g. permitting exceptions, early return, suspension, concurrency" ID="ID_370497867" CREATED="1415139068190" MODIFIED="1415139158753"/>
</node>
<node TEXT="start by learning how &quot;Cont&quot; works" ID="ID_1563138972" CREATED="1415127309867" MODIFIED="1415127315334">
<node TEXT="Chris Allen rec&apos;s (haskell-cafe)" ID="ID_1016004267" CREATED="1415127323531" MODIFIED="1415127328686"/>
</node>
</node>
<node TEXT="generalized newtype deriving" ID="ID_149750802" CREATED="1415081722363" MODIFIED="1415081728614"/>
<node TEXT="datatype generic prog&apos;" ID="ID_939591354" CREATED="1415088970690" MODIFIED="1415475608074">
<font BOLD="false"/>
<node TEXT="&quot;datatype generic programming.pdf&quot;" ID="ID_1116765356" CREATED="1415088741833" MODIFIED="1415475616738"/>
</node>
<node TEXT="type-level function" ID="ID_827441101" CREATED="1415081944030" MODIFIED="1415081947801"/>
<node TEXT="type families &gt; transformers" ID="ID_1843604112" CREATED="1414805070954" MODIFIED="1414959611584">
<node TEXT="quoting here" ID="ID_942158836" CREATED="1414805089081" MODIFIED="1414805090333">
<node TEXT="http://stackoverflow.com/questions/2675655/whats-the-for-in-a-haskell-class-definition" ID="ID_277086612" CREATED="1414805088293" MODIFIED="1414805088293" LINK="http://stackoverflow.com/questions/2675655/whats-the-for-in-a-haskell-class-definition"/>
</node>
<node TEXT="&quot;If you ask me, type families are much more pleasant than monad transformers, which seem like an ugly hack, albeit a useful one. Though if you want, there&apos;s a package monads-tf that implements the standard transformers with type families instead of functional dependencies:&quot;" ID="ID_1264616115" CREATED="1414805112577" MODIFIED="1414805115407"/>
</node>
<node TEXT="kinds" ID="ID_405241203" CREATED="1415139807233" MODIFIED="1415139808044"/>
</node>
<node TEXT="lib" ID="ID_1037385833" CREATED="1415475773701" MODIFIED="1415475774352">
<node TEXT="* fix" ID="ID_1806431100" CREATED="1415139414912" MODIFIED="1415475929837"/>
<node TEXT="typeclassopedia" ID="ID_61888759" CREATED="1415127470840" MODIFIED="1415127473307">
<node TEXT="https://www.haskell.org/haskellwiki/Typeclassopedia" ID="ID_1566880787" CREATED="1415127473642" MODIFIED="1415127473642" LINK="https://www.haskell.org/haskellwiki/Typeclassopedia"/>
</node>
<node TEXT="Prelude, Monad packages" ID="ID_265456871" CREATED="1414650298060" MODIFIED="1414959700895">
<node TEXT="they supposedly define, in addition to their (I want to say interfaces), &quot;informative instances&quot;" ID="ID_1552833650" CREATED="1414650303597" MODIFIED="1414650328599">
<node TEXT="according to what the hell are monads" ID="ID_509735097" CREATED="1414650330108" MODIFIED="1414650334767"/>
</node>
</node>
<node TEXT="foldable, traversable" ID="ID_1861793898" CREATED="1415139427323" MODIFIED="1415139430028"/>
<node TEXT="arrow" ID="ID_837997557" CREATED="1415139457680" MODIFIED="1415139458394"/>
</node>
</node>
<node TEXT="write to learn" ID="ID_405592837" CREATED="1414998452968" MODIFIED="1414998458212">
<node TEXT="stack a monad transf on these file IO examples" ID="ID_1521677732" CREATED="1414998461704" MODIFIED="1414998497174">
<node TEXT="https://www.haskell.org/haskellwiki/Cookbook/Files" ID="ID_1004486500" CREATED="1414998460940" MODIFIED="1414998460940" LINK="https://www.haskell.org/haskellwiki/Cookbook/Files"/>
</node>
</node>
<node TEXT="method" ID="ID_81452813" CREATED="1414959639987" MODIFIED="1414959640720">
<node TEXT="read" ID="ID_553958260" CREATED="1414959658836" MODIFIED="1414959659311"/>
<node TEXT="play in ghc" LOCALIZED_STYLE_REF="default" ID="ID_701365289" CREATED="1413967031989" MODIFIED="1414959670664">
<node TEXT="perhaps anchored, e.g. around .mm notes" ID="ID_963442539" CREATED="1414959671015" MODIFIED="1414959683279"/>
</node>
<node TEXT="analyze code examples" ID="ID_842377538" CREATED="1413870745042" MODIFIED="1414959654095"/>
</node>
<node TEXT="ext, abst" ID="ID_132192874" CREATED="1414905347161" MODIFIED="1418932566264">
<node TEXT="soc ctx, feelings" ID="ID_1889172135" CREATED="1414905490969" MODIFIED="1415039738468"/>
<node TEXT="what concepts am I gaining?" ID="ID_1266903168" CREATED="1414814530814" MODIFIED="1414814536657">
<node TEXT="lens" ID="ID_637720541" CREATED="1414905505393" MODIFIED="1414905506093"/>
</node>
<node TEXT="is something being made explicit I earlier took for granted?" ID="ID_420967656" CREATED="1414814541622" MODIFIED="1414814550609"/>
</node>
<node TEXT="?s" ID="ID_1309175762" CREATED="1414077701673" MODIFIED="1414959751574">
<node TEXT="asked" ID="ID_1236758696" CREATED="1415139521302" MODIFIED="1415139522073">
<node TEXT="limits to transparency" ID="ID_1388850605" CREATED="1414956853542" MODIFIED="1414956857609">
<node TEXT="if you&apos;re dealing with a stack of monad transformers T1 T2 M, with M the underlying monad, and you want to deal with the information in T2, your code has to be aware of the T1, right?" ID="ID_1552729234" CREATED="1414956860397" MODIFIED="1414956892534"/>
</node>
<node TEXT="how to leave a monad context?" ID="ID_632811124" CREATED="1414905968891" MODIFIED="1414960189853">
<node TEXT="is monad a property that does not extend down into the pure functions called, but extends as far up as possible, to main?" ID="ID_781330961" CREATED="1414905973979" MODIFIED="1414906003590"/>
</node>
<node TEXT="ask and get out of context?" ID="ID_1801478973" CREATED="1415066047093" MODIFIED="1415066147456">
<node TEXT="see UglyStack.hs" ID="ID_1583686863" CREATED="1415065191419" MODIFIED="1415065199030"/>
<node TEXT="&quot;ask&quot; before reader given data?" ID="ID_1839423811" CREATED="1415065154190" MODIFIED="1415065163577">
<node TEXT="search for this text" ID="ID_398166410" CREATED="1415065199242" MODIFIED="1415065207712">
<node TEXT="&quot;ask&quot; before reader given data?" ID="ID_627103019" CREATED="1415065202843" MODIFIED="1415065204326"/>
</node>
</node>
<node TEXT="&quot;get&quot; without first unwrapping the ReaderT layer from the ReaderT (WriterT IO) stack?" ID="ID_1232429353" CREATED="1415066049428" MODIFIED="1415066088692">
<node TEXT="search for this text" ID="ID_1031568021" CREATED="1415066118907" MODIFIED="1415066121414">
<node TEXT="&quot;get&quot; without first unwrapping the ReaderT layer" ID="ID_1723669375" CREATED="1415066121683" MODIFIED="1415066122479"/>
</node>
</node>
</node>
<node TEXT="&quot;Monads: external questions&quot;" ID="ID_1959383781" CREATED="1414275000000" MODIFIED="1415055313740">
<node TEXT=". I asked Haskell-cafe, 2014 10 25" ID="ID_362164929" CREATED="1415055322238" MODIFIED="1415055328945"/>
<node TEXT="use vs. internal logic" ID="ID_344204360" CREATED="1414275500444" MODIFIED="1414275504894">
<node TEXT="As opposed to the internal logic of monads, how they work, I hope to start a discussion about their external logic: how and why to use monads." ID="ID_1916121197" CREATED="1414276385148" MODIFIED="1414277726858"/>
</node>
<node TEXT="design" ID="ID_920701180" CREATED="1414276130083" MODIFIED="1414276309574">
<node TEXT="How do mands change the way one&#xa;  thinks about a problem?&#xa;  structures data?&#xa;  refactors?&#xa;  tests?" ID="ID_971735222" CREATED="1414276501378" MODIFIED="1414278865930"/>
<node TEXT="Should I always be giving the monads a lot of cognitive bandwidth, because they reorder the way everything should be, or is it an investment with a high initial cognitive cost but requiring little maintenance thereafter?" ID="ID_1548186424" CREATED="1414278846064" MODIFIED="1414278846564"/>
</node>
<node TEXT="varieties" ID="ID_638555106" CREATED="1414275915046" MODIFIED="1414275916329">
<node TEXT="In practice, are all monads either for exceptions, state or output? If not, what other goals are monads well suited to?" ID="ID_1073392790" CREATED="1414275518675" MODIFIED="1414278242028"/>
<node TEXT="How should multiple contexts coexist? What&apos;s the simplest open-source Haskell program you&apos;re aware of that uses more than one kind of monad in the same scope? Should, say, output and state be nestled in parallel into a three-attribute monad, or is it instead better to create separate output and state monads? If each context should have a separate monad, is it a good idea to nest them, or somehow otherwise let them overlap, within a particular function or scope?" ID="ID_478809258" CREATED="1414277764009" MODIFIED="1414278949397"/>
</node>
<node TEXT="what is their common framework?" ID="ID_1243054996" CREATED="1414275951514" MODIFIED="1414277349020">
<node TEXT="Monads let data reach farther than it otherwise would. Subjectively, they feel like a controlled way of violating encapsulation." ID="ID_955350855" CREATED="1414278025361" MODIFIED="1414278561704"/>
<node TEXT="Are there other, deeper or more specific, commonalities that explain why monads are a good way to implement exceptions, output, state, and perhaps other services?" ID="ID_1152886603" CREATED="1414278109258" MODIFIED="1414278999761"/>
</node>
<node TEXT="temptations to err" ID="ID_1348990126" CREATED="1414275035228" MODIFIED="1414277381422">
<node TEXT="I have a vague sense that a common pitfall is to use monads to do things in a procedural way that eliminates the benefits of a functional language, but I&apos;m not sure I would recognize it if I were making that error. I feel like I could learn from a comparison of code that works and uses monads badly to code that does better." ID="ID_784625123" CREATED="1414274846013" MODIFIED="1414279088457"/>
</node>
<node TEXT="compiler inference, programmer ignorance" LOCALIZED_STYLE_REF="styles.topic" ID="ID_699016770" CREATED="1414275843508" MODIFIED="1414278835467">
<node TEXT="When, from which scopes (in particular, from which kinds of functions) does one have to be aware of the monad?" ID="ID_975880445" CREATED="1414277505136" MODIFIED="1414277505587"/>
<node TEXT="If main includes output functions, Haskell infers that its type is IO. One can write simple IO programs in Haskell without having any idea what a monad is. Can I call output functions anywhere I haven&apos;t declared a function&apos;s type, as long as that function is in turn called only from functions that also use output functions?" ID="ID_1627823710" CREATED="1414277580419" MODIFIED="1414277580887"/>
<node TEXT="How wide is the circle within which such ignorance is safe? What does such ignorance render impossible?" ID="ID_1092988571" CREATED="1414272273531" MODIFIED="1414278834461"/>
</node>
</node>
<node TEXT="&quot;Obscure, important concepts&quot;" ID="ID_494564237" CREATED="1415052835266" MODIFIED="1415055295666">
<node TEXT=". I asked Haskell-cafe, 2014 10 03" ID="ID_503195917" CREATED="1415055241273" MODIFIED="1415055333480"/>
<node TEXT=". = unique to haskell" ID="ID_449584464" CREATED="1415053154613" MODIFIED="1415055335497"/>
<node TEXT="not" ID="ID_1264885042" CREATED="1415053144669" MODIFIED="1415053145168">
<node TEXT="recursion, lambdas" ID="ID_102057615" CREATED="1415053145333" MODIFIED="1415053149520"/>
</node>
<node TEXT="general" ID="ID_100491573" CREATED="1415052888370" MODIFIED="1415052889165">
<node TEXT="types, classes and kinds" ID="ID_37814827" CREATED="1415052864602" MODIFIED="1415052979715"/>
<node TEXT="partial application" ID="ID_670762753" CREATED="1415052844338" MODIFIED="1415052848166"/>
<node TEXT="higher-order functions" ID="ID_359208325" CREATED="1415052870066" MODIFIED="1415052872493"/>
<node TEXT="evaluation" ID="ID_332042159" CREATED="1415052917706" MODIFIED="1415052943481">
<node ID="ID_916370360" CREATED="1415052943778" MODIFIED="1415052943778"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      tail recursion
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="laziness" ID="ID_1518520669" CREATED="1415052914217" MODIFIED="1415052915340"/>
<node TEXT="currying" ID="ID_1172299687" CREATED="1415053017503" MODIFIED="1415053018763"/>
<node TEXT="pattern matching" ID="ID_1756448088" CREATED="1415053100653" MODIFIED="1415053102489"/>
<node TEXT="application and composition operations" ID="ID_1067946124" CREATED="1415053179085" MODIFIED="1415053190608"/>
</node>
<node TEXT="contexts" ID="ID_548322638" CREATED="1415053203891" MODIFIED="1415053205551">
<node TEXT="functors, applicatives, monads" ID="ID_1743435499" CREATED="1415053207108" MODIFIED="1415053211119"/>
<node TEXT="monad transformers" ID="ID_1911233204" CREATED="1415053217605" MODIFIED="1415053221599"/>
</node>
<node TEXT="lenses" ID="ID_1303623557" CREATED="1415053451624" MODIFIED="1415053452515"/>
<node TEXT=":def macros" ID="ID_1826458529" CREATED="1415053574549" MODIFIED="1415053576457"/>
<node TEXT="arrows" ID="ID_433543701" CREATED="1415053706747" MODIFIED="1415053708246"/>
<node TEXT="continuation passing style" ID="ID_1048494739" CREATED="1415053708548" MODIFIED="1415053711735"/>
</node>
<node TEXT="domain-specific" ID="ID_1714516436" CREATED="1415052890306" MODIFIED="1415052892501">
<node TEXT="software transactional memory" ID="ID_389195918" CREATED="1415052892721" MODIFIED="1415052897893"/>
</node>
</node>
</node>
<node TEXT="pending" ID="ID_747358973" CREATED="1414960363038" MODIFIED="1415067534104">
<node TEXT="study" ID="ID_1835563713" CREATED="1415066918653" MODIFIED="1415066921528">
<node TEXT="How is monad unlike (what I think of as) ctx?" ID="ID_450812963" CREATED="1414905517584" MODIFIED="1415067271461"/>
<node TEXT="Why is the right identity rule for monads weird?" ID="ID_19713543" CREATED="1414656607758" MODIFIED="1414656637946"/>
<node TEXT="later" ID="ID_1187078799" CREATED="1415067684608" MODIFIED="1415067685267">
<node TEXT="monad implic&apos;s for testing" ID="ID_67044532" CREATED="1414271030922" MODIFIED="1414956914086"/>
</node>
</node>
<node TEXT="monad stacks" ID="ID_781059030" CREATED="1415067635585" MODIFIED="1415067637132">
<node TEXT="Why no runState or runReader equiv for IO?" ID="ID_773069495" CREATED="1415062781127" MODIFIED="1415062797289"/>
<node TEXT="why do monads need the special conditional functions &quot;when&quot; and &quot;unless&quot;?" ID="ID_1703516138" CREATED="1415066389846" MODIFIED="1415066404097"/>
</node>
<node TEXT="monads and scope" ID="ID_636706320" CREATED="1415068605426" MODIFIED="1415068659624">
<node TEXT="I expected you would need to be aware of intermediate layers." ID="ID_409359802" CREATED="1415068620834" MODIFIED="1415068628573"/>
<node TEXT="I also expected that a monad context extends maximally upward." ID="ID_21062892" CREATED="1415068674137" MODIFIED="1415068689220"/>
</node>
<node TEXT="hard" ID="ID_1121286761" CREATED="1415067494614" MODIFIED="1415067504769">
<node TEXT="ctx" ID="ID_414091564" CREATED="1415067549690" MODIFIED="1415067558069">
<node TEXT="(-&gt;) r is a functor" ID="ID_15532078" CREATED="1414907790385" MODIFIED="1414907797900">
<node TEXT="links out" ID="ID_1778518565" CREATED="1414907802873" MODIFIED="1414907805128">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1386795113" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="(-&gt;) r is an applicative" ID="ID_70939837" CREATED="1414907790385" MODIFIED="1414909363971">
<node TEXT="links out" ID="ID_528510047" CREATED="1414909366825" MODIFIED="1414909370383">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_917887844" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="functions are functors, applicatives and monads" ID="ID_1033891964" CREATED="1414912293907" MODIFIED="1414912302822"/>
<node TEXT="the context laws" ID="ID_510743603" CREATED="1414911100280" MODIFIED="1414911114429">
<node TEXT="is the way the output monad satisfies the three laws different than the other two, and do they do it similarly?" ID="ID_1702218485" CREATED="1414271540415" MODIFIED="1414271572912"/>
</node>
<node TEXT="function as monad" ID="ID_578356950" CREATED="1414912420817" MODIFIED="1414912435204">
<node TEXT="links out" ID="ID_1760375148" CREATED="1414912399689" MODIFIED="1414912402960">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1621691126" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="function as reader" ID="ID_704279960" CREATED="1414912415249" MODIFIED="1414912419132">
<node TEXT="links out" ID="ID_190909311" CREATED="1414912407281" MODIFIED="1414912410664">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_295771296" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="the monad is a funcion" ID="ID_631270022" CREATED="1415067654264" MODIFIED="1415067654491"/>
<node TEXT="functions are functors, and fmap is function attachment" ID="ID_1531688033" CREATED="1414907092807" MODIFIED="1414907205041">
<node TEXT="f &apos;fmap&apos; g, if g is a function, is the function that performs g and then f on that" ID="ID_658058925" CREATED="1414907105950" MODIFIED="1414907139329"/>
</node>
</node>
<node TEXT="type" ID="ID_1636331070" CREATED="1415067582970" MODIFIED="1415067590639">
<node TEXT="constructors, getters, setters" ID="ID_319828515" CREATED="1414953681980" MODIFIED="1414953690303"/>
<node TEXT="a class of functions as a type" ID="ID_1981808798" CREATED="1414646986255" MODIFIED="1414646994408">
<node TEXT="&gt; type StateT s a = s -&gt; (a,s)&#xa;In full: a value of type StateT s a is a function from an s (the state) to a pair of an a (the result) and a new state." ID="ID_1863444656" CREATED="1414646995196" MODIFIED="1414646995833">
<node TEXT="http://web.cecs.pdx.edu/~antoy/Courses/TPFLP/lectures/MONADS/Noel/research/monads.html" ID="ID_1682603499" CREATED="1414647003615" MODIFIED="1414647003615" LINK="http://web.cecs.pdx.edu/~antoy/Courses/TPFLP/lectures/MONADS/Noel/research/monads.html"/>
</node>
</node>
</node>
<node TEXT="existential quantificaiton" ID="ID_1508846687" CREATED="1415067483294" MODIFIED="1415067486961">
<node TEXT="typing is not as strict as I thought?" ID="ID_1461667073" CREATED="1414824855381" MODIFIED="1414956034421"/>
<node TEXT="puzzling code" ID="ID_964552676" CREATED="1415067478054" MODIFIED="1415067480047">
<node TEXT="https://www.haskell.org/ghc/docs/latest/html/users_guide/data-type-extensions.html#existential-quantification" ID="ID_1651565187" CREATED="1414824860605" MODIFIED="1414824860605" LINK="https://www.haskell.org/ghc/docs/latest/html/users_guide/data-type-extensions.html#existential-quantification"/>
<node TEXT="quote" ID="ID_129757834" CREATED="1414824876251" MODIFIED="1414824877774">
<node TEXT="  data Foo = forall a. MkFoo a (a -&gt; Bool)&#xa;           | Nil&#xa;The data type Foo has two constructors with types:&#xa;&#xa;  MkFoo :: forall a. a -&gt; (a -&gt; Bool) -&gt; Foo&#xa;  Nil   :: Foo&#xa;Notice that the type variable a in the type of MkFoo does not appear in the data type itself, which is plain Foo. For example, the following expression is fine:" ID="ID_1027265915" CREATED="1414824891003" MODIFIED="1414824892142"/>
<node TEXT="  [MkFoo 3 even, MkFoo &apos;c&apos; isUpper] :: [Foo]" ID="ID_1628269944" CREATED="1414824878171" MODIFIED="1414824890638"/>
</node>
<node TEXT="What is the type of the list? [Foo] is as specified as it needs to be." ID="ID_1391840429" CREATED="1414824910291" MODIFIED="1414824931374"/>
</node>
</node>
</node>
<node TEXT="low" ID="ID_644469500" CREATED="1415067492421" MODIFIED="1415067492993">
<node TEXT="3 arg func as infix" ID="ID_144220272" CREATED="1415067815310" MODIFIED="1415067826179">
<node TEXT="if a function takes three args, does infix notation put the operator between the first two?" ID="ID_498197011" CREATED="1414823306358" MODIFIED="1414823341841">
<node TEXT="that seems optimal" ID="ID_1914852298" CREATED="1414823342253" MODIFIED="1414823344945"/>
</node>
</node>
<node TEXT="op&apos;r preced&apos;" ID="ID_753730129" CREATED="1415067806598" MODIFIED="1415067810642">
<node TEXT="how do operator precedence and operator sidedness (i.e. is it left to right or right to left?) interact across unlike operators?" ID="ID_1044607864" CREATED="1414910933155" MODIFIED="1414910970269"/>
</node>
<node TEXT="bounding ampersands?" ID="ID_870139433" CREATED="1414999751338" MODIFIED="1414999760349">
<node TEXT="quoting Base.lhs, in Prelude/Base/GHC" ID="ID_348092843" CREATED="1414999768650" MODIFIED="1414999782783"/>
<node TEXT="class  Functor f  where&#xa;    fmap        :: (a -&gt; b) -&gt; f a -&gt; f b&#xa;&#xa;    -- | Replace all locations in the input with the same value.&#xa;    -- The default definition is @&apos;fmap&apos; . &apos;const&apos;@, but this may be&#xa;    -- overridden with a more efficient version.&#xa;    (&lt;$)        :: a -&gt; f b -&gt; f a&#xa;    (&lt;$)        =  fmap . const" ID="ID_275319959" CREATED="1414999761433" MODIFIED="1414999762645"/>
</node>
<node TEXT="eval&apos;n of ((++) . k), for k :: a -&gt; b" ID="ID_685486273" CREATED="1415000806473" MODIFIED="1415067928401">
<node ID="ID_726991121" CREATED="1415002959949" MODIFIED="1415002959949"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      &gt;&gt;= implem
    </p>
  </body>
</html>
</richcontent>
<node TEXT="quote source" ID="ID_1447396007" CREATED="1415000827250" MODIFIED="1415000828812">
<node TEXT="prelude/base/ghc/base.lhs" ID="ID_730851783" CREATED="1415000838761" MODIFIED="1415000847772"/>
</node>
<node TEXT="quote, code" ID="ID_768050209" CREATED="1415000821265" MODIFIED="1415000831701">
<node TEXT="list as monad instance def" ID="ID_1352852660" CREATED="1415003100570" MODIFIED="1415003105756">
<node TEXT="instance  Monad []  where&#xa;    m &gt;&gt;= k             = foldr ((++) . k) [] m" ID="ID_1186861243" CREATED="1415000819849" MODIFIED="1415000820741"/>
</node>
<node TEXT="Monad class def" ID="ID_664568208" CREATED="1415003096154" MODIFIED="1415003098534">
<node TEXT="(&gt;&gt;=)       :: forall a b. m a -&gt; (a -&gt; m b) -&gt; m b" ID="ID_293491935" CREATED="1415003091935" MODIFIED="1415003091935"/>
</node>
</node>
<node TEXT="thoughts" ID="ID_1811739875" CREATED="1415001606972" MODIFIED="1415001608750">
<node TEXT="its effect" ID="ID_1746025046" CREATED="1415001610324" MODIFIED="1415002063499">
<node TEXT="Pretty sure." ID="ID_567609927" CREATED="1415002064956" MODIFIED="1415002066550"/>
<node ID="ID_597936" CREATED="1415001694549" MODIFIED="1415001694549"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      k is applied to each element of m. if m is of concrete type m a, and k's input is of type a, and k's output of type m b, then each m b produced is appended to the result of the next computation.
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="its int op (tricky)" ID="ID_1991036524" CREATED="1415001697730" MODIFIED="1415002077446">
<node TEXT="is the use of ((++) . k) as an infix" ID="ID_755579729" CREATED="1415001700193" MODIFIED="1415001708493"/>
<node TEXT="k is a unary operator (one input, one output), and ++ is a binary operator (two in, one out)" ID="ID_1686966708" CREATED="1415001726554" MODIFIED="1415001747569"/>
<node TEXT="calling it on a single-element list [a], one gets this:&#xa;a `((++) . k)` []" ID="ID_1370861631" CREATED="1415001748714" MODIFIED="1415001812556"/>
<node TEXT="type sig&apos;s" ID="ID_248734999" CREATED="1415001974182" MODIFIED="1415001975689">
<node TEXT="++ :: [] -&gt; [] -&gt; []" ID="ID_1599460651" CREATED="1415001885847" MODIFIED="1415001928858"/>
<node TEXT="k :: a -&gt; [b]" ID="ID_398137953" CREATED="1415001913470" MODIFIED="1415001922858"/>
</node>
<node TEXT="does that expand this way?&#xa;((++).k) a []&#xa;= (++) (k a) []" ID="ID_1074301254" CREATED="1415001829927" MODIFIED="1415001882042"/>
<node TEXT="I&apos;m guessing yes, and here&apos;s why" ID="ID_550230552" CREATED="1415001979485" MODIFIED="1415001983745">
<node TEXT="((++).k) takes arguments, one at a time" ID="ID_741173752" CREATED="1415001983932" MODIFIED="1415001998513"/>
<node TEXT="the first arg it takes is a" ID="ID_1268259554" CREATED="1415001998749" MODIFIED="1415002007759"/>
<node TEXT="it gives that to k, and k is done taking arguments, so k a can be evaluated" ID="ID_891372258" CREATED="1415002008229" MODIFIED="1415002022008"/>
<node TEXT="that is then handed as an argument to (++)" ID="ID_283701656" CREATED="1415002022221" MODIFIED="1415002032544"/>
<node TEXT="(++) needs another one, so then the [] is used" ID="ID_611495511" CREATED="1415002032764" MODIFIED="1415002046623"/>
</node>
</node>
</node>
</node>
<node TEXT="&gt;&gt; implem" ID="ID_798839655" CREATED="1415002952740" MODIFIED="1415002954832">
<node TEXT="Monad class def: (&gt;&gt;) :: forall a b. m a -&gt; m b -&gt; m b" ID="ID_1564960126" CREATED="1415002978401" MODIFIED="1415002989471"/>
<node TEXT="m &gt;&gt; k = foldr ((++) . (\ _ -&gt; k)) [] m" ID="ID_634664865" CREATED="1415002955224" MODIFIED="1415002968607"/>
<node TEXT="replaces each element of m with k, but flattens the list, so if k is of type [a], so is m &gt;&gt; k" ID="ID_514072671" CREATED="1415003118698" MODIFIED="1415003152085"/>
</node>
</node>
</node>
<node TEXT="u" ID="ID_673778952" CREATED="1415126200471" MODIFIED="1415126201243">
<node TEXT="how to apply one lens to a type&apos;s multiple constructors" ID="ID_169202015" CREATED="1415083087177" MODIFIED="1415083127230">
<node TEXT="pattern matches, guards?" ID="ID_279813952" CREATED="1415083658479" MODIFIED="1415083662082"/>
</node>
<node TEXT="the definition of &quot;undefined&quot;" ID="ID_325371640" CREATED="1415043220623" MODIFIED="1415043229611">
<node TEXT="http://www.letu.edu/people/jaytevis/Programming-Languages/Haskell/tourofprelude.html" ID="ID_1431603231" CREATED="1415043232115" MODIFIED="1415043232115" LINK="http://www.letu.edu/people/jaytevis/Programming-Languages/Haskell/tourofprelude.html"/>
<node TEXT="undefined&#xa;type: undefined :: a&#xa;description: an undefined value. It is a member of every type.&#xa;definition:&#xa;undefined&#xa;   | False = undefined" ID="ID_449590849" CREATED="1415043238959" MODIFIED="1415043239739"/>
</node>
<node TEXT="eval/?s" ID="ID_1710835735" CREATED="1418936505844" MODIFIED="1418936508991"/>
</node>
</node>
<node TEXT="done-ish" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1115140805" CREATED="1414960681769" MODIFIED="1431562250529">
<node TEXT=". = ?s that feel solved or irrelevant, 2014 11 02" ID="ID_301368391" CREATED="1414960465869" MODIFIED="1414960795197"/>
<node TEXT="In a recursive do loop that defines variables, does the name space explode?" ID="ID_997026231" CREATED="1414077694190" MODIFIED="1414960439476"/>
<node TEXT="Can one make a StateT that takes an input in addition to the state?" ID="ID_343882079" CREATED="1414647681904" MODIFIED="1414647699212"/>
<node TEXT="&quot;do&quot; &quot;introduces a series of monadic computations&quot;." ID="ID_811061853" CREATED="1414650076944" MODIFIED="1431562238588">
<node TEXT="http://web.cecs.pdx.edu/~antoy/Courses/TPFLP/lectures/MONADS/Noel/research/monads.html" ID="ID_1787082400" CREATED="1414650090177" MODIFIED="1414650090177" LINK="http://web.cecs.pdx.edu/~antoy/Courses/TPFLP/lectures/MONADS/Noel/research/monads.html"/>
<node TEXT="what is the type signature defining those?" ID="ID_743806485" CREATED="1414650090777" MODIFIED="1414650104253"/>
</node>
<node TEXT="Why nest do (plural noun missing; I want to say &quot;loops&quot;)?" ID="ID_846481749" CREATED="1414650957417" MODIFIED="1414650991981">
<node TEXT="http://web.cecs.pdx.edu/~antoy/Courses/TPFLP/lectures/MONADS/Noel/research/monads.html" ID="ID_327378500" CREATED="1414650998148" MODIFIED="1414650998148" LINK="http://web.cecs.pdx.edu/~antoy/Courses/TPFLP/lectures/MONADS/Noel/research/monads.html"/>
<node TEXT="I&apos;m guessing it&apos;s because" ID="ID_193820989" CREATED="1414651385562" MODIFIED="1414651401397">
<node TEXT="more than one thing was to be done." ID="ID_173684602" CREATED="1414651401586" MODIFIED="1414651407413"/>
</node>
<node TEXT="object of question" ID="ID_996963987" CREATED="1414651390803" MODIFIED="1414651396877">
<node TEXT="&gt; import System (getArgs)&#xa;&gt; main :: IO ()&#xa;&gt; main = do&#xa;&gt;   args &lt;- getArgs&#xa;&gt;   case args of&#xa;&gt;       [fname] -&gt; do fstr &lt;- readFile fname&#xa;&gt;                     let nWords = length . words $ fstr&#xa;&gt;                         nLines = length . lines $ fstr&#xa;&gt;                         nChars = length fstr&#xa;&gt;                     putStrLn . unwords $ [ show nLines&#xa;&gt;                                          , show nWords&#xa;&gt;                                          , show nChars&#xa;&gt;                                          , fname]&#xa;&gt;       _ -&gt; putStrLn &quot;usage: wc fname&quot;" ID="ID_545090432" CREATED="1414650981168" MODIFIED="1414650982349"/>
</node>
</node>
<node TEXT="Why do monad args swap around?" ID="ID_150599663" CREATED="1414806122072" MODIFIED="1414806170458">
<node TEXT="example" ID="ID_407127853" CREATED="1414806129096" MODIFIED="1414806160706">
<node ID="ID_883755710" CREATED="1414806161177" MODIFIED="1414806161177"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      from Control.Monad.Reader
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="&gt; :t ask&#xa;ask :: MonadReader r m =&gt; m r" ID="ID_1263822531" CREATED="1414806140767" MODIFIED="1414806141635"/>
</node>
</node>
</node>
</node>
<node TEXT="lang-int needs sorting within" ID="ID_1954826551" CREATED="1418939800797" MODIFIED="1418939812897"/>
<node TEXT="add folding mode (minor) to extant one" ID="ID_564564093" CREATED="1415857475469" MODIFIED="1415857481721"/>
<node TEXT="FRP blog, Apfelmus" ID="ID_1897815770" CREATED="1420589373269" MODIFIED="1420589379349">
<node TEXT="http://apfelmus.nfshost.com/blog.html#functional-reactive-programming-frp" ID="ID_1021101238" CREATED="1420589375417" MODIFIED="1420589375417" LINK="http://apfelmus.nfshost.com/blog.html#functional-reactive-programming-frp"/>
</node>
<node TEXT="monad learn path" ID="ID_1900936243" CREATED="1420708403197" MODIFIED="1420708405587">
<node TEXT="&quot;Instead [of learning &apos;what they are&apos;], learn to use specific monads. Learn how Maybe a works, learn how Either e a works. Learn how IO a and [a] and r -&gt; a works. Those are all monads. Learn to use them with the &gt;&gt;= operator and with do notation.&quot;" ID="ID_922333866" CREATED="1420708407517" MODIFIED="1420708424336"/>
</node>
<node TEXT="u, &quot;early favorites&quot;" LOCALIZED_STYLE_REF="default" ID="ID_171604257" CREATED="1412745167956" MODIFIED="1418937196069">
<font BOLD="true"/>
<node TEXT="puzzles, questions, objects of curiosity" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1256872200" CREATED="1413877115185" MODIFIED="1413877127973"/>
<node TEXT="Kinds." ID="ID_962900135" CREATED="1412988746228" MODIFIED="1413873200433">
<node TEXT="Learn You Haskell, skip-rushed" ID="ID_771506434" CREATED="1412988748571" MODIFIED="1413873160364"/>
</node>
<node TEXT="Eval." ID="ID_1771165066" CREATED="1413874153736" MODIFIED="1413874156831">
<font BOLD="true"/>
<node TEXT="how to leave unevaluated" ID="ID_1261097902" CREATED="1413874125323" MODIFIED="1413874131117">
<node TEXT="I took this note from Learn You." LOCALIZED_STYLE_REF="styles.topic" ID="ID_1505081754" CREATED="1413874118580" MODIFIED="1413874142657">
<node TEXT="in most languages, &quot;don&apos;t compute this&quot; is hard or impossible to express" ID="ID_787112538" CREATED="1412798679946" MODIFIED="1412798687900"/>
</node>
</node>
<node TEXT="laziness." ID="ID_713359810" CREATED="1413873192470" MODIFIED="1413873207019"/>
<node TEXT="Tail recursion." ID="ID_371813514" CREATED="1413873710200" MODIFIED="1413873714603"/>
<node TEXT=":def macros are powerful" ID="ID_1731028086" CREATED="1413702635339" MODIFIED="1413702699601">
<node TEXT="demo" ID="ID_653800409" CREATED="1413702725336" MODIFIED="1413702731187">
<node TEXT="http://www.haskell.org/haskellwiki/GHC/GHCi#The_:def_command" ID="ID_417858540" CREATED="1413702641769" MODIFIED="1413702641769" LINK="http://www.haskell.org/haskellwiki/GHC/GHCi#The_:def_command"/>
</node>
<node TEXT="doc&apos;n" ID="ID_167786271" CREATED="1413702732200" MODIFIED="1413702733035">
<node TEXT="http://www.haskell.org/ghc/docs/latest/html/users_guide/ghci-commands.html#id2902944" ID="ID_1608009925" CREATED="1413702733683" MODIFIED="1413702733683" LINK="http://www.haskell.org/ghc/docs/latest/html/users_guide/ghci-commands.html#id2902944"/>
<node TEXT="search for &quot;:def&quot;" ID="ID_105040602" CREATED="1413702734072" MODIFIED="1413702736851"/>
</node>
</node>
</node>
<node TEXT="Lenses." ID="ID_166903792" CREATED="1414008416620" MODIFIED="1414008418510"/>
<node TEXT="lower, probably" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1523700730" CREATED="1413872908992" MODIFIED="1413873813275">
<node TEXT="Either." ID="ID_815442019" CREATED="1413873088439" MODIFIED="1413873199580"/>
<node TEXT="head&apos; = foldr1 (\x _ -&gt; x) -- why?" ID="ID_1081459869" CREATED="1412903134463" MODIFIED="1413872987356"/>
</node>
<node TEXT="lower" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_646976776" CREATED="1413873052859" MODIFIED="1413873813277">
<node TEXT="share var across functions how?" ID="ID_1663809029" CREATED="1412879026566" MODIFIED="1413268990324">
<node TEXT="http://learnyouahaskell.com/syntax-in-functions" ID="ID_1427510537" CREATED="1412879045785" MODIFIED="1412879045785" LINK="http://learnyouahaskell.com/syntax-in-functions"/>
<node TEXT="&quot;If you want several patterns of one function to access some shared name, you have to define it globally.&quot;" ID="ID_91604093" CREATED="1412879024357" MODIFIED="1412879026056"/>
<node TEXT="does he mean &quot;in open code&quot;, or globally within some context he&apos;s assuming that I&apos;m unaware of?" ID="ID_1057562580" CREATED="1413184998837" MODIFIED="1413185021606"/>
</node>
<node TEXT="why is it dumb to bind using &lt;- when let would work?" LOCALIZED_STYLE_REF="styles.topic" ID="ID_999777916" CREATED="1413183355867" MODIFIED="1431562410193">
<node TEXT="I think it&apos;s because &lt;- forces you to box, only to thereafter unbox." ID="ID_127682949" CREATED="1431562410750" MODIFIED="1431562425837"/>
</node>
</node>
<node TEXT="u" ID="ID_1237000285" CREATED="1413314890794" MODIFIED="1413876899705">
<font BOLD="true"/>
<node TEXT="foldr v. foldl" ID="ID_109924567" CREATED="1413314920111" MODIFIED="1413314922946">
<node TEXT="How different are they?" ID="ID_1690135574" CREATED="1413270707973" MODIFIED="1413314932857"/>
<node TEXT="example" ID="ID_1629925382" CREATED="1413270718883" MODIFIED="1413270723742">
<node TEXT="loading this" ID="ID_230147730" CREATED="1413270723947" MODIFIED="1413270744461">
<node ID="ID_1362292941" CREATED="1413270741068" MODIFIED="1413270741068"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      which I called &quot;haskell/neep.hs&quot;
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="rFindKey key = foldr&#xa;(\x acc -&gt; if True then x else acc)&#xa;0&#xa;&#xa;lFindKey key = foldl&#xa;(\x acc -&gt; if True then x else acc)&#xa;0" ID="ID_753040310" CREATED="1413270717740" MODIFIED="1413270718431"/>
</node>
<node TEXT="enables this" ID="ID_69996869" CREATED="1413270746914" MODIFIED="1413270750364">
<node TEXT="*Main&gt; rFindKey &apos;b&apos; [1,2]&#xa;1&#xa;*Main&gt; lFindKey &apos;b&apos; [1,2]&#xa;0&#xa;*Main&gt;" ID="ID_1584003207" CREATED="1413270762087" MODIFIED="1413270762979"/>
</node>
</node>
<node TEXT="conjecture" ID="ID_909902697" CREATED="1413274630683" MODIFIED="1413274631895">
<node TEXT="Is the difference not in foldl v. foldr, but specific to the asymmetry of List?" ID="ID_1125943874" CREATED="1413274632716" MODIFIED="1413274653389"/>
</node>
</node>
<node TEXT="Either and Maybe" ID="ID_1176813399" CREATED="1413265173124" MODIFIED="1413312858723">
<node TEXT="disregarding the ones they defined, what would I most need to distinguish with them?" ID="ID_836302672" CREATED="1413265211689" MODIFIED="1413312857122"/>
<node TEXT="I don&apos;t see natural ways to chain them." LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_340532163" CREATED="1413265280842" MODIFIED="1413265290091"/>
<node TEXT="&quot;either&quot; to test for both" ID="ID_1772794015" CREATED="1413263818701" MODIFIED="1413265219115"/>
<node TEXT="&quot;maybe&quot; for testing for one?" ID="ID_1628539138" CREATED="1413265161749" MODIFIED="1413265221235"/>
</node>
<node TEXT="what are the rules for indentation?" ID="ID_1199959717" CREATED="1413408173743" MODIFIED="1413408185217"/>
<node TEXT="how to see what classes a type implements?" ID="ID_886387218" CREATED="1413410141974" MODIFIED="1413410150288">
<node TEXT="e.g. (*3) is a functor. how to show? (:t and ::info don&apos;t.)" ID="ID_262642103" CREATED="1413410150485" MODIFIED="1413410186455"/>
</node>
<node TEXT="how is my type constraint syntax wrong here?" ID="ID_1107590043" CREATED="1413607074641" MODIFIED="1413607085627">
<node TEXT="import" ID="ID_1772162559" CREATED="1413607102302" MODIFIED="1413607103193">
<node TEXT="import Control.Concurrent" ID="ID_61182906" CREATED="1413607094818" MODIFIED="1413607094818"/>
<node TEXT="import Text.Printf" ID="ID_1316150318" CREATED="1413607094821" MODIFIED="1413607094821"/>
<node TEXT="import Control.Monad" ID="ID_139703784" CREATED="1413607094821" MODIFIED="1413607094821"/>
</node>
<node TEXT="main = do" ID="ID_1662617119" CREATED="1413607094821" MODIFIED="1413607094821">
<node TEXT="waitBeat &lt;$&gt; [1,1,3,1,3,1,2,3]" ID="ID_482062711" CREATED="1413607094822" MODIFIED="1413607094822"/>
<node TEXT="return" ID="ID_764444891" CREATED="1413607094822" MODIFIED="1413607094822"/>
</node>
<node TEXT="waitBeat n :: Fractional a =&gt; a -&gt; IO ()" ID="ID_349793624" CREATED="1413607094822" MODIFIED="1413607094822"/>
<node TEXT="waitBeat n =" ID="ID_383534745" CREATED="1413607094822" MODIFIED="1413607094822">
<node TEXT="threadDelay (10^6 * n)/6; printf &quot;\BEL\n&quot; n" ID="ID_1843171035" CREATED="1413607094822" MODIFIED="1413607094822"/>
<node TEXT="printf &quot;\BEL\n&quot; t -- &lt;4&gt;" ID="ID_1191026944" CREATED="1413607094822" MODIFIED="1413607094822"/>
<node TEXT="return" ID="ID_1963231580" CREATED="1413607094822" MODIFIED="1413607094822"/>
</node>
</node>
<node TEXT="packages are neither imports nor modules?" ID="ID_884069600" CREATED="1413702339323" MODIFIED="1413702356269">
<node TEXT="links out" ID="ID_1732004991" CREATED="1413702364393" MODIFIED="1413702367976">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_784602736" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="src" LOCALIZED_STYLE_REF="default" ID="ID_103964043" CREATED="1413275877372" MODIFIED="1418870877858">
<node TEXT="! irc.freenode.net" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1248765428" CREATED="1438720231121" MODIFIED="1441386947882">
<node TEXT="can use IRC to talk to Haskell experts about install questions" ID="ID_1874455280" CREATED="1438720214153" MODIFIED="1438720229647"/>
<node TEXT="#haskell" ID="ID_57593176" CREATED="1441424375400" MODIFIED="1441424377223"/>
<node TEXT="#haskell-lens" ID="ID_44392872" CREATED="1441423925610" MODIFIED="1441424374774"/>
<node TEXT="more channels" ID="ID_69292341" CREATED="1441424418863" MODIFIED="1441424424616">
<font BOLD="true"/>
<node TEXT="https://wiki.haskell.org/IRC_channel#Related_channels" ID="ID_675275391" CREATED="1441424415667" MODIFIED="1441424415667" LINK="https://wiki.haskell.org/IRC_channel#Related_channels"/>
</node>
</node>
<node TEXT=". consider also my own notes" ID="ID_1912665523" CREATED="1413697522358" MODIFIED="1414959433426"/>
<node TEXT="freq libs" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_250603230" CREATED="1431326600955" MODIFIED="1431326612430">
<node TEXT="https://hackage.haskell.org/package/base-4.7.0.1/docs/Data-String.html" ID="ID_1232372358" CREATED="1431326604475" MODIFIED="1431326604475" LINK="https://hackage.haskell.org/package/base-4.7.0.1/docs/Data-String.html"/>
<node TEXT="https://downloads.haskell.org/~ghc/7.8.2/docs/html/libraries/containers-0.5.5.1/Data-Set.html" ID="ID_63522448" CREATED="1431326604475" MODIFIED="1431326604475" LINK="https://downloads.haskell.org/~ghc/7.8.2/docs/html/libraries/containers-0.5.5.1/Data-Set.html"/>
<node TEXT="https://hackage.haskell.org/package/base-4.8.0.0/docs/Data-List.html" ID="ID_430392823" CREATED="1431326604480" MODIFIED="1431326604480" LINK="https://hackage.haskell.org/package/base-4.8.0.0/docs/Data-List.html"/>
<node TEXT="https://downloads.haskell.org/~ghc/latest/docs/html/libraries/containers/Data-Map-Lazy.html" ID="ID_1663728716" CREATED="1431326604484" MODIFIED="1431326604484" LINK="https://downloads.haskell.org/~ghc/latest/docs/html/libraries/containers/Data-Map-Lazy.html"/>
<node TEXT="https://downloads.haskell.org/~ghc/latest/docs/html/libraries/containers/Data-Map-Strict.html" ID="ID_104877787" CREATED="1431326604487" MODIFIED="1431326604487" LINK="https://downloads.haskell.org/~ghc/latest/docs/html/libraries/containers/Data-Map-Strict.html"/>
<node TEXT="https://downloads.haskell.org/~ghc/latest/docs/html/libraries/containers/Data-Map.html" ID="ID_391395410" CREATED="1431326604490" MODIFIED="1431326604490" LINK="https://downloads.haskell.org/~ghc/latest/docs/html/libraries/containers/Data-Map.html"/>
<node TEXT="https://hackage.haskell.org/package/json" ID="ID_423659056" CREATED="1431553648003" MODIFIED="1431553648003" LINK="https://hackage.haskell.org/package/json"/>
</node>
<node TEXT="beautiful" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1448403543" CREATED="1430897489747" MODIFIED="1430897507515">
<node TEXT="http://www.vex.net/~trebla/haskell/fix.xhtml" ID="ID_1472493473" CREATED="1430897488721" MODIFIED="1430897488721" LINK="http://www.vex.net/~trebla/haskell/fix.xhtml"/>
<node TEXT="Data.Graph" LOCALIZED_STYLE_REF="default" ID="ID_78655124" CREATED="1422086398873" MODIFIED="1430981851992">
<node TEXT="it&apos;s beautiful" ID="ID_710945827" CREATED="1422086405146" MODIFIED="1422086406902"/>
<node TEXT="e.g." ID="ID_1452124384" CREATED="1422086426113" MODIFIED="1422086427863">
<node TEXT="-- | Build a graph from a list of edges." ID="ID_674378622" CREATED="1422086428358" MODIFIED="1422086428358"/>
<node TEXT="buildG :: Bounds -&gt; [Edge] -&gt; Graph" ID="ID_1986307371" CREATED="1422086428358" MODIFIED="1422086428358"/>
<node TEXT="buildG bounds0 edges0 = accumArray (flip (:)) [] bounds0 edges0" ID="ID_399704318" CREATED="1422086428359" MODIFIED="1422086428359"/>
</node>
</node>
</node>
<node TEXT="instrucitonal video repo" LOCALIZED_STYLE_REF="default" ID="ID_1916525839" CREATED="1446421872292" MODIFIED="1446673819110">
<node TEXT="http://begriffs.com/" ID="ID_1589409508" CREATED="1446421877646" MODIFIED="1446421877646" LINK="http://begriffs.com/"/>
</node>
<node TEXT="community" LOCALIZED_STYLE_REF="default" ID="ID_1943039056" CREATED="1413659111839" MODIFIED="1430982635723">
<node TEXT="IRC" ID="ID_492239690" CREATED="1413659118223" MODIFIED="1413659119114">
<node TEXT="http://www.haskell.org/haskellwiki/IRC_channel" ID="ID_1145676257" CREATED="1413659115066" MODIFIED="1413659115066" LINK="http://www.haskell.org/haskellwiki/IRC_channel"/>
</node>
<node TEXT="haskell-cafe, -beginners" ID="ID_659432249" CREATED="1413659431916" MODIFIED="1413748990448">
<node TEXT="this can be anonymized, but my address is already in the archives" ID="ID_957652686" CREATED="1413753078924" MODIFIED="1413753091383"/>
<node TEXT="= mailing list" ID="ID_1260340576" CREATED="1413659523020" MODIFIED="1413659527783"/>
<node TEXT="http://www.haskell.org/haskellwiki/Mailing_lists" ID="ID_724639795" CREATED="1413659519153" MODIFIED="1413659519153" LINK="http://www.haskell.org/haskellwiki/Mailing_lists"/>
</node>
</node>
<node TEXT="* primary ref&apos;s" LOCALIZED_STYLE_REF="default" ID="ID_1959386126" CREATED="1413179598426" MODIFIED="1414953869940">
<font BOLD="true"/>
<node TEXT="Hoogle and Hayoo" LOCALIZED_STYLE_REF="default" ID="ID_554964625" CREATED="1412958809031" MODIFIED="1424029137519">
<node TEXT="http://www.haskell.org/hoogle/" ID="ID_1740956563" CREATED="1412958813223" MODIFIED="1412958813223" LINK="http://www.haskell.org/hoogle/"/>
<node TEXT="http://hayoo.fh-wedel.de/" ID="ID_446018690" CREATED="1424029151951" MODIFIED="1424029151951" LINK="http://hayoo.fh-wedel.de/"/>
</node>
<node TEXT="lang" ID="ID_694644378" CREATED="1422047066672" MODIFIED="1422047067581">
<node TEXT="how to choose" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1386724660" CREATED="1422047074320" MODIFIED="1422047078746">
<node TEXT="Usually extensions will be called out with a pragma, though, so if there are not {-# LANGUAGE #-} sections at the top then you probably don&apos;t need to check the GHC manual. If there are, look over the sections of the GHC manual relating to those LANGUAGE pragmas." ID="ID_1265800705" CREATED="1422047071562" MODIFIED="1422047071562"/>
</node>
<node TEXT="! how to read" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1596670571" CREATED="1423260095073" MODIFIED="1423260098714">
<node TEXT="https://www.haskell.org/onlinereport/haskell2010/haskellch2.html#x7-150002.1" ID="ID_46622205" CREATED="1423260114997" MODIFIED="1423260114997" LINK="https://www.haskell.org/onlinereport/haskell2010/haskellch2.html#x7-150002.1"/>
<node TEXT="quote" ID="ID_947208738" CREATED="1423260101569" MODIFIED="1423260102776">
<node TEXT="Care must be taken in distinguishing metalogical syntax such as | and [&#x2026;] from concrete terminal syntax (given in typewriter font) such as | and [...], although usually the context makes the distinction clear." ID="ID_780379335" CREATED="1423260099714" MODIFIED="1423260099714"/>
</node>
</node>
<node TEXT="Haskell 98 Report" ID="ID_1843833733" CREATED="1422041759935" MODIFIED="1422041764141">
<node TEXT="https://www.google.com/search?client=ubuntu&amp;channel=fs&amp;q=haskell-cafe%2C+%22haskell+98+report%22&amp;ie=utf-8&amp;oe=utf-8#channel=fs&amp;q=Haskell+98+Report" ID="ID_1810409457" CREATED="1422041764557" MODIFIED="1422041764557" LINK="https://www.google.com/search?client=ubuntu&amp;channel=fs&amp;q=haskell-cafe%2C+%22haskell+98+report%22&amp;ie=utf-8&amp;oe=utf-8#channel=fs&amp;q=Haskell+98+Report"/>
</node>
<node TEXT="Haskell 2010 Report" ID="ID_1914713578" CREATED="1422047105729" MODIFIED="1422047109221">
<node TEXT="https://www.haskell.org/onlinereport/haskell2010/" ID="ID_1769874393" CREATED="1422047109689" MODIFIED="1422047109689" LINK="https://www.haskell.org/onlinereport/haskell2010/"/>
</node>
<node TEXT="GHC Users Guide" ID="ID_1880909004" CREATED="1422041776159" MODIFIED="1422041780917">
<node TEXT="multiple versions" LOCALIZED_STYLE_REF="default" ID="ID_525481937" CREATED="1422041784320" MODIFIED="1422047183538">
<node TEXT="https://www.google.com/search?client=ubuntu&amp;channel=fs&amp;q=GHC+Users%E2%80%99s+Guide&amp;ie=utf-8&amp;oe=utf-8" ID="ID_1990204796" CREATED="1422041781387" MODIFIED="1422041781387" LINK="https://www.google.com/search?client=ubuntu&amp;channel=fs&amp;q=GHC+Users%E2%80%99s+Guide&amp;ie=utf-8&amp;oe=utf-8"/>
</node>
<node TEXT="esp helpful: language extensions section" ID="ID_736607854" CREATED="1422047184472" MODIFIED="1422047193910">
<node TEXT="https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghc-language-features.html" ID="ID_639854414" CREATED="1422047194413" MODIFIED="1422047194413" LINK="https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghc-language-features.html"/>
</node>
</node>
</node>
<node TEXT="libs" ID="ID_1989663822" CREATED="1422047064488" MODIFIED="1422047065277">
<node TEXT="by hierarchy" LOCALIZED_STYLE_REF="default" ID="ID_815165949" CREATED="1412958750619" MODIFIED="1424029109245">
<node TEXT="http://www.haskell.org/ghc/docs/latest/html/libraries/" ID="ID_100262059" CREATED="1412958752294" MODIFIED="1412958752294" LINK="http://www.haskell.org/ghc/docs/latest/html/libraries/"/>
</node>
<node TEXT="by category" ID="ID_1981235825" CREATED="1424029100384" MODIFIED="1424029103309">
<node TEXT="http://hackage.haskell.org/packages/" ID="ID_730019827" CREATED="1415040470232" MODIFIED="1415040470232" LINK="http://hackage.haskell.org/packages/"/>
</node>
<node TEXT="libs I selected" ID="ID_1070879283" CREATED="1415040457809" MODIFIED="1430982508021">
<font BOLD="true"/>
<node TEXT="u, huge" ID="ID_449992844" CREATED="1417246921019" MODIFIED="1417246953801">
<font BOLD="true"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Audio" ID="ID_1676739039" CREATED="1415040470232" MODIFIED="1415040470232" LINK="http://hackage.haskell.org/packages/#cat:Audio"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Code Generation" ID="ID_1586924120" CREATED="1415040470235" MODIFIED="1415040470235" LINK="http://hackage.haskell.org/packages/#cat:Code"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Compiler" ID="ID_684419577" CREATED="1415040470236" MODIFIED="1415040470236" LINK="http://hackage.haskell.org/packages/#cat:Compiler"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Compilers/Interpreters" ID="ID_508429490" CREATED="1415040470236" MODIFIED="1415040470236" LINK="http://hackage.haskell.org/packages/#cat:Compilers/Interpreters"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Data Structures" ID="ID_1616698360" CREATED="1415040470237" MODIFIED="1415040470237" LINK="http://hackage.haskell.org/packages/#cat:Data"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Error Handling" ID="ID_704706455" CREATED="1415040470239" MODIFIED="1415040470239" LINK="http://hackage.haskell.org/packages/#cat:Error"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Exceptions" ID="ID_1014979410" CREATED="1415040470239" MODIFIED="1415040470239" LINK="http://hackage.haskell.org/packages/#cat:Exceptions"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Game" ID="ID_841407138" CREATED="1415040470240" MODIFIED="1415040470240" LINK="http://hackage.haskell.org/packages/#cat:Game"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:GHC" ID="ID_1434368331" CREATED="1415040470241" MODIFIED="1415040470241" LINK="http://hackage.haskell.org/packages/#cat:GHC"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:IDE" ID="ID_864236102" CREATED="1415040470241" MODIFIED="1415040470241" LINK="http://hackage.haskell.org/packages/#cat:IDE"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Interfaces" ID="ID_1486937303" CREATED="1415040470242" MODIFIED="1415040470242" LINK="http://hackage.haskell.org/packages/#cat:Interfaces"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Interpreter" ID="ID_1232525498" CREATED="1415040470243" MODIFIED="1415040470243" LINK="http://hackage.haskell.org/packages/#cat:Interpreter"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:IO-Streams" ID="ID_1467498289" CREATED="1415040470243" MODIFIED="1415040470243" LINK="http://hackage.haskell.org/packages/#cat:IO-Streams"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:LambdaCalculus" ID="ID_1131825422" CREATED="1415040470244" MODIFIED="1415040470244" LINK="http://hackage.haskell.org/packages/#cat:LambdaCalculus"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Lens" ID="ID_1281681882" CREATED="1415040470244" MODIFIED="1415040470244" LINK="http://hackage.haskell.org/packages/#cat:Lens"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Machine Learning" ID="ID_389238036" CREATED="1415040470245" MODIFIED="1415040470245" LINK="http://hackage.haskell.org/packages/#cat:Machine"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Optimisation" ID="ID_1877373895" CREATED="1415040470245" MODIFIED="1415040470245" LINK="http://hackage.haskell.org/packages/#cat:Optimisation"/>
<node TEXT="http://hackage.haskell.org/package/combinatorial-problems" ID="ID_1210456389" CREATED="1415040470246" MODIFIED="1415040470246" LINK="http://hackage.haskell.org/package/combinatorial-problems"/>
<node TEXT="http://hackage.haskell.org/package/GA" ID="ID_1288626631" CREATED="1415040470246" MODIFIED="1415040470246" LINK="http://hackage.haskell.org/package/GA"/>
<node TEXT="http://hackage.haskell.org/package/genprog" ID="ID_620174764" CREATED="1415040470247" MODIFIED="1415040470247" LINK="http://hackage.haskell.org/package/genprog"/>
<node TEXT="http://hackage.haskell.org/package/moo" ID="ID_1648521504" CREATED="1415040470247" MODIFIED="1415040470247" LINK="http://hackage.haskell.org/package/moo"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Polymorphism" ID="ID_593811864" CREATED="1415040470249" MODIFIED="1415040470249" LINK="http://hackage.haskell.org/packages/#cat:Polymorphism"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Prelude" ID="ID_957067548" CREATED="1415040470250" MODIFIED="1415040470250" LINK="http://hackage.haskell.org/packages/#cat:Prelude"/>
<node TEXT="http://git.haskell.org/packages/base.git" ID="ID_367996860" CREATED="1415040470250" MODIFIED="1415040470250" LINK="http://git.haskell.org/packages/base.git"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Pattern Classification" ID="ID_1175635781" CREATED="1415041270832" MODIFIED="1415041270832" LINK="http://hackage.haskell.org/packages/#cat:Pattern"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Pipes" ID="ID_981396604" CREATED="1415041270832" MODIFIED="1415041270832" LINK="http://hackage.haskell.org/packages/#cat:Pipes"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Program Transformation" ID="ID_673823715" CREATED="1415041270834" MODIFIED="1415041270834" LINK="http://hackage.haskell.org/packages/#cat:Program"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Refactoring" ID="ID_805973724" CREATED="1415041270835" MODIFIED="1415041270835" LINK="http://hackage.haskell.org/packages/#cat:Refactoring"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Syntax" ID="ID_302440850" CREATED="1415041270836" MODIFIED="1415041270836" LINK="http://hackage.haskell.org/packages/#cat:Syntax"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Template Haskell" ID="ID_627563623" CREATED="1415041270837" MODIFIED="1415041270837" LINK="http://hackage.haskell.org/packages/#cat:Template"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Tools" ID="ID_54142339" CREATED="1415041270838" MODIFIED="1415041270838" LINK="http://hackage.haskell.org/packages/#cat:Tools"/>
<node TEXT="http://hackage.haskell.org/packages/#cat:Transformation" ID="ID_1780106545" CREATED="1415041270839" MODIFIED="1415041270839" LINK="http://hackage.haskell.org/packages/#cat:Transformation"/>
</node>
<node TEXT="HaRe and other" ID="ID_1946176877" CREATED="1417247259122" MODIFIED="1417247643079">
<node TEXT="https://github.com/RefactoringTools/HaRe/wiki" ID="ID_1969267003" CREATED="1417247260117" MODIFIED="1417247260117" LINK="https://github.com/RefactoringTools/HaRe/wiki"/>
</node>
<node TEXT="_ didn&apos;t like" ID="ID_561661385" CREATED="1413609327927" MODIFIED="1417246990038">
<node ID="ID_623284618" CREATED="1417246977995" MODIFIED="1417246977995"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      rhythm library
    </p>
  </body>
</html>
</richcontent>
<node TEXT="https://hackage.haskell.org/package/music-score-1.6/docs/Music-Score-Rhythm.html" ID="ID_1346495611" CREATED="1413609327211" MODIFIED="1413609327211" LINK="https://hackage.haskell.org/package/music-score-1.6/docs/Music-Score-Rhythm.html"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="insteresting collection of references" ID="ID_1952842811" CREATED="1415127743636" MODIFIED="1415127753599">
<node TEXT="https://github.com/bitemyapp/learnhaskell" ID="ID_296553358" CREATED="1415127753889" MODIFIED="1415127753889" LINK="https://github.com/bitemyapp/learnhaskell"/>
</node>
<node TEXT="* general" LOCALIZED_STYLE_REF="default" ID="ID_1157066154" CREATED="1413394220341" MODIFIED="1430982581304">
<font BOLD="true"/>
<node TEXT="Learn You" LOCALIZED_STYLE_REF="default" ID="ID_1473758971" CREATED="1412992899690" MODIFIED="1414214430807">
<node ID="ID_450828214" CREATED="1413154563771" MODIFIED="1413154563771"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      where I left off
    </p>
  </body>
</html>
</richcontent>
<node TEXT="this text" ID="ID_1196172404" CREATED="1413864379143" MODIFIED="1413864380266">
<node TEXT="ghci&gt; runWriter $ fmap not $ Writer (True, &quot;chickpeas&quot;)" ID="ID_1749906871" CREATED="1413864377583" MODIFIED="1413864377938"/>
</node>
<node TEXT="which is only a little bit after this section starts" ID="ID_669515036" CREATED="1413864381654" MODIFIED="1413864393073">
<node TEXT="Some useful monadic functions" ID="ID_972806054" CREATED="1413864399332" MODIFIED="1413864399968"/>
</node>
<node TEXT="monads 2.html" ID="ID_1887553537" CREATED="1413849279386" MODIFIED="1413849279389" LINK="tools,%20to%20use/Haskell/_books/learn_you/monads%202.html"/>
</node>
<node TEXT="language updates" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_668499882" CREATED="1413507841217" MODIFIED="1413507882070">
<node TEXT="writer / Writer" ID="ID_31220688" CREATED="1413507873287" MODIFIED="1413507875505">
<node TEXT="as a type, Writer (capitalized), but as a constructor, writer (lowercase)" ID="ID_78427494" CREATED="1413507846528" MODIFIED="1413507862683"/>
</node>
</node>
<node TEXT="things I skipped" LOCALIZED_STYLE_REF="default" ID="ID_167398215" CREATED="1413154047463" MODIFIED="1413154567429">
<node TEXT="some I/O stuff" ID="ID_219116143" CREATED="1413154084644" MODIFIED="1413154088448">
<node TEXT="starting at this text" ID="ID_1822821823" CREATED="1413154053488" MODIFIED="1413154057474">
<node TEXT="Anyway, here&apos;s the program for removing an item from todo.txt:" ID="ID_1873905716" CREATED="1413154050672" MODIFIED="1413154051243"/>
</node>
<node TEXT="through these section" ID="ID_125542778" CREATED="1413154090306" MODIFIED="1413154128129">
<node TEXT="Command line arguments" ID="ID_157835527" CREATED="1413154092924" MODIFIED="1413154093535"/>
<node TEXT="Randomness" ID="ID_126941000" CREATED="1413154130529" MODIFIED="1413154132051"/>
<node TEXT="Bytestrings" ID="ID_53596296" CREATED="1413154132248" MODIFIED="1413154135587"/>
<node TEXT="Exceptions" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_920181273" CREATED="1413154570657" MODIFIED="1413154576650">
<node TEXT="I read a tiny bit of the start of it" ID="ID_115407250" CREATED="1413154572242" MODIFIED="1413154580884"/>
</node>
</node>
</node>
<node TEXT="chapter 9, &quot;functionally solving problems&quot;" ID="ID_1217684006" CREATED="1413154589080" MODIFIED="1413154600906"/>
<node TEXT="how (-&gt;) r is an applicative functor" ID="ID_187739448" CREATED="1413229073402" MODIFIED="1413229088838">
<node TEXT="in the chapter &quot;Functors, Applicative Functors and Monoids&quot;" ID="ID_521533018" CREATED="1413229096304" MODIFIED="1413229121426"/>
<node TEXT="start here" ID="ID_1976301959" CREATED="1413229090739" MODIFIED="1413229092164">
<node TEXT="Another instance of Applicative is (-&gt;) r, so functions. They are rarely used with the applicative style outside of code golf, but" ID="ID_1310818106" CREATED="1413229089136" MODIFIED="1413229707765"/>
</node>
<node TEXT="end here" ID="ID_346440534" CREATED="1413229701721" MODIFIED="1413229702964">
<node TEXT="It&apos;s not very important that you get how the (-&gt;) r instance for Applicative works, so don&apos;t despair if you&apos;re not getting this right now." ID="ID_1487362324" CREATED="1413229703155" MODIFIED="1413229703740"/>
</node>
</node>
<node TEXT="order of operations: may have skipped some early info about" ID="ID_1540782428" CREATED="1412744782087" MODIFIED="1413275836795">
<node TEXT="just use parens" ID="ID_918744809" CREATED="1412744811627" MODIFIED="1412744814014"/>
</node>
<node TEXT="difference lists" ID="ID_1898290943" CREATED="1413602123343" MODIFIED="1413602124939">
<node TEXT="for efficient appending" ID="ID_1191776955" CREATED="1413602125143" MODIFIED="1413602131298"/>
<node TEXT="see 2nd Monads chapter in Learn You" ID="ID_280761850" CREATED="1413602133991" MODIFIED="1413602142402"/>
</node>
</node>
</node>
<node TEXT="Real World Haskell" ID="ID_128045366" CREATED="1413394227269" MODIFIED="1414953897604">
<node TEXT="http://book.realworldhaskell.org/read/" ID="ID_388266846" CREATED="1413394234390" MODIFIED="1413394234390" LINK="http://book.realworldhaskell.org/read/"/>
</node>
<node TEXT="3 &quot;advanced tutorials&quot;" ID="ID_1347615746" CREATED="1413395748708" MODIFIED="1413395757030">
<node TEXT="http://www.haskell.org/haskellwiki/Learning_Haskell#Advanced_tutorials" ID="ID_692310720" CREATED="1413395757493" MODIFIED="1413395757493" LINK="http://www.haskell.org/haskellwiki/Learning_Haskell#Advanced_tutorials"/>
</node>
<node TEXT="C. M. McCann: Good StackOv&apos;w writer" ID="ID_783118376" CREATED="1414805550657" MODIFIED="1414805567717">
<node TEXT="http://stackoverflow.com/users/157360/c-a-mccann?tab=answers" ID="ID_114270276" CREATED="1414805568678" MODIFIED="1414805568678" LINK="http://stackoverflow.com/users/157360/c-a-mccann?tab=answers"/>
</node>
<node TEXT="unlikely" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_981953686" CREATED="1413697723666" MODIFIED="1413697725268">
<node TEXT="Data Analysis" ID="ID_148260768" CREATED="1413394862244" MODIFIED="1413394864574">
<node TEXT="https://www.packtpub.com/big-data-and-business-intelligence/haskell-data-analysis-cookbook" ID="ID_1486428791" CREATED="1413394865088" MODIFIED="1413394865088" LINK="https://www.packtpub.com/big-data-and-business-intelligence/haskell-data-analysis-cookbook"/>
</node>
<node TEXT="on design, architecture" LOCALIZED_STYLE_REF="styles.topic" ID="ID_41921615" CREATED="1413395097870" MODIFIED="1431563878689">
<node TEXT="for pay" LOCALIZED_STYLE_REF="default" ID="ID_685125676" CREATED="1413697698814" MODIFIED="1413697726643"/>
<node TEXT="http://www.cs.kent.ac.uk/people/staff/sjt/craft2e/" ID="ID_1131249537" CREATED="1413395114746" MODIFIED="1413395114746" LINK="http://www.cs.kent.ac.uk/people/staff/sjt/craft2e/"/>
</node>
</node>
</node>
<node TEXT="* lacunae, 2015 01?" ID="ID_983732117" CREATED="1415041227772" MODIFIED="1431564096734">
<node TEXT="exceptions" ID="ID_248593460" CREATED="1414656438745" MODIFIED="1430982684144">
<node TEXT="skipped on first encounter, in Learn You a Haskell" ID="ID_1833486888" CREATED="1430982684535" MODIFIED="1430982688772"/>
</node>
<node TEXT="this" ID="ID_1623548066" CREATED="1430982676715" MODIFIED="1430982679307">
<node TEXT="see the &quot;advanced&quot; part" ID="ID_135754381" CREATED="1415041232291" MODIFIED="1415041235094"/>
<node TEXT="http://en.wikibooks.org/wiki/Haskell" ID="ID_1262080149" CREATED="1415041231026" MODIFIED="1415041231026" LINK="http://en.wikibooks.org/wiki/Haskell"/>
</node>
</node>
<node TEXT="by topic" ID="ID_664753052" CREATED="1430982554291" MODIFIED="1430983000931">
<font BOLD="true"/>
<node TEXT="lang" ID="ID_508342113" CREATED="1430982717186" MODIFIED="1430982738057">
<font BOLD="true"/>
<node TEXT="evaluation rules" ID="ID_1703039801" CREATED="1425764721719" MODIFIED="1430971575797">
<node TEXT="http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-sudoku2" ID="ID_1581147877" CREATED="1425764733153" MODIFIED="1425764733153" LINK="http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-sudoku2"/>
<node TEXT="https://hackhands.com/modular-code-lazy-evaluation-haskell/" ID="ID_1878683555" CREATED="1425837344948" MODIFIED="1425837344948" LINK="https://hackhands.com/modular-code-lazy-evaluation-haskell/"/>
<node TEXT="http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf" ID="ID_1046323921" CREATED="1423171942920" MODIFIED="1423171942920" LINK="http://chimera.labs.oreilly.com/books/1230000000929/ch02.html#sec_par-eval-whnf"/>
<node TEXT="of the next two, heinrich says prefer the first" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_906561314" CREATED="1425943450821" MODIFIED="1425943461196"/>
<node TEXT="https://hackhands.com/guide-lazy-evaluation-haskell/" ID="ID_104871537" CREATED="1425943322985" MODIFIED="1425943322985" LINK="https://hackhands.com/guide-lazy-evaluation-haskell/"/>
<node TEXT="https://hackhands.com/lazy-evaluation-works-haskell/" ID="ID_1476716806" CREATED="1423172004760" MODIFIED="1423172004760" LINK="https://hackhands.com/lazy-evaluation-works-haskell/"/>
</node>
<node TEXT="typeclassopedia" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_827114861" CREATED="1415127470840" MODIFIED="1430982845994">
<node TEXT="https://www.haskell.org/haskellwiki/Typeclassopedia" ID="ID_987422940" CREATED="1415127473642" MODIFIED="1415127473642" LINK="https://www.haskell.org/haskellwiki/Typeclassopedia"/>
<node TEXT="functor, applicative, monad, monad transformer" ID="ID_1032580421" CREATED="1430982792799" MODIFIED="1430982804264"/>
<node TEXT="monoid, foldable, traversable, category, arrow" ID="ID_961171076" CREATED="1430982813275" MODIFIED="1430982824520"/>
</node>
<node TEXT="monad" LOCALIZED_STYLE_REF="default" ID="ID_1234249648" CREATED="1414953729836" MODIFIED="1430982630083">
<node TEXT="monad tutorials, by date" ID="ID_1232627406" CREATED="1415402663457" MODIFIED="1415402668761">
<font BOLD="true"/>
<node TEXT="http://www.haskell.org/haskellwiki/Monad_tutorials_timeline#year_2014" ID="ID_828342189" CREATED="1413857052044" MODIFIED="1413857052044" LINK="http://www.haskell.org/haskellwiki/Monad_tutorials_timeline#year_2014"/>
</node>
<node TEXT="transformers" ID="ID_763559752" CREATED="1415040540422" MODIFIED="1415040542518">
<font BOLD="true"/>
<node TEXT="https://www.google.com/?gws_rd=ssl#q=haskell+monad+transformer" ID="ID_1768957580" CREATED="1415040543535" MODIFIED="1415040543535" LINK="https://www.google.com/?gws_rd=ssl#q=haskell+monad+transformer"/>
<node TEXT="http://en.wikibooks.org/wiki/Haskell/Monad_transformers" ID="ID_17451538" CREATED="1423186432655" MODIFIED="1423186432655" LINK="http://en.wikibooks.org/wiki/Haskell/Monad_transformers"/>
</node>
<node TEXT="* monad transf&apos;s, RWH, where I left off" ID="ID_1858572439" CREATED="1414779561704" MODIFIED="1414954001730">
<node TEXT="link out to notes" ID="ID_608808053" CREATED="1414825888906" MODIFIED="1414825900981">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_164519301" STARTINCLINATION="98;0;" ENDINCLINATION="98;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="* code, corresp" ID="ID_347763003" CREATED="1414800120336" MODIFIED="1415402696140">
<node TEXT="/Users/jbb/Mine/proj/computer/tools, to use/Haskell/monad/transf&apos;rs" ID="ID_200193833" CREATED="1414800114948" MODIFIED="1414800114948"/>
</node>
<node TEXT="book" ID="ID_750874696" CREATED="1414800121400" MODIFIED="1414800122827">
<node TEXT="http://book.realworldhaskell.org/read/monad-transformers.html" ID="ID_319227351" CREATED="1414779557793" MODIFIED="1414779557793" LINK="http://book.realworldhaskell.org/read/monad-transformers.html"/>
<node TEXT="Real World Haskell, ch 18" ID="ID_63221344" CREATED="1414779564192" MODIFIED="1414779568924"/>
</node>
<node TEXT="resume here" ID="ID_342726944" CREATED="1414809142427" MODIFIED="1414809143783">
<node TEXT="title" ID="ID_1065183315" CREATED="1414809149267" MODIFIED="1414809149935">
<node TEXT="Stacking multiple monad transformers" ID="ID_604706" CREATED="1414809143995" MODIFIED="1414809145327"/>
</node>
<node TEXT="I read a few par&apos;s in from there, and copied the code to a .hs file in Emacs, but did not yet work through the code." ID="ID_262021541" CREATED="1414809145675" MODIFIED="1414809179425"/>
</node>
</node>
<node TEXT="&quot;monads for func prog.pdf&quot;, where I left off" ID="ID_1814427469" CREATED="1414216579946" MODIFIED="1414953971027"/>
<node TEXT="Learn You, where I left off" ID="ID_1521876647" CREATED="1414953759451" MODIFIED="1414953965319"/>
<node TEXT="Good, easy monad tutorial" ID="ID_662690291" CREATED="1414722133066" MODIFIED="1414722138734">
<node TEXT="http://blog.sigfpe.com/2006/08/you-could-have-invented-monads-and.html" ID="ID_495718857" CREATED="1414722139202" MODIFIED="1414722139202" LINK="http://blog.sigfpe.com/2006/08/you-could-have-invented-monads-and.html"/>
<node TEXT="resume here" ID="ID_314162918" CREATED="1414722149779" MODIFIED="1414722150966">
<node TEXT="A Container: Multivalued Functions" ID="ID_696013698" CREATED="1414722151179" MODIFIED="1414722151750"/>
</node>
</node>
<node TEXT="io + state, StackOv thread" ID="ID_1328839504" CREATED="1414718774012" MODIFIED="1414954065385">
<node TEXT="too advanced, as of 2014 10 30" ID="ID_1162914336" CREATED="1414718789934" MODIFIED="1414718795856"/>
<node TEXT="http://stackoverflow.com/questions/3640120/combine-state-with-io-actions" ID="ID_1703320807" CREATED="1414653133900" MODIFIED="1414653133900" LINK="http://stackoverflow.com/questions/3640120/combine-state-with-io-actions"/>
</node>
<node TEXT="* StateT" ID="ID_1540360796" CREATED="1414804568411" MODIFIED="1414953723275">
<node TEXT="necessarily is about using State + something else" ID="ID_351953020" CREATED="1414804572227" MODIFIED="1414804582678"/>
</node>
<node TEXT="4 tutorials on monads" ID="ID_859905413" CREATED="1414953920704" MODIFIED="1414953924732">
<node TEXT="http://www.haskell.org/haskellwiki/Learning_Haskell#Monads" ID="ID_238515700" CREATED="1413395768588" MODIFIED="1413395768588" LINK="http://www.haskell.org/haskellwiki/Learning_Haskell#Monads"/>
</node>
<node TEXT="monad functions" ID="ID_1493665466" CREATED="1414646781847" MODIFIED="1414646785667">
<node TEXT="http://members.chello.nl/hjgtuyl/tourdemonad.html" ID="ID_670738163" CREATED="1414646780503" MODIFIED="1414646780503" LINK="http://members.chello.nl/hjgtuyl/tourdemonad.html"/>
</node>
<node TEXT="bibliog of this" ID="ID_471829281" CREATED="1414652333362" MODIFIED="1414955105167">
<node TEXT="http://web.cecs.pdx.edu/~antoy/Courses/TPFLP/lectures/MONADS/Noel/research/monads.html" ID="ID_20608815" CREATED="1414652332414" MODIFIED="1414652332414" LINK="http://web.cecs.pdx.edu/~antoy/Courses/TPFLP/lectures/MONADS/Noel/research/monads.html"/>
</node>
<node TEXT="monad stack eval order" ID="ID_482586204" CREATED="1415062659113" MODIFIED="1415062701191">
<node TEXT="code" ID="ID_1141049302" CREATED="1415062715575" MODIFIED="1415062716163">
<node TEXT="RWH ch 18, UglyStack.hs" ID="ID_526292927" CREATED="1415062707008" MODIFIED="1415062711002"/>
<node TEXT="type App = ReaderT AppConfig (StateT AppState IO)&#xa;  -- omits IO monad&apos;s type param, referred to below (I think) as &quot;a&quot;.&#xa;&#xa;runApp :: App a -&gt; Int -&gt; IO (a, AppState)&#xa;runApp k maxDepth =&#xa;    let config = AppConfig maxDepth&#xa;        state = AppState 0&#xa;    in runStateT (runReaderT k config) state" ID="ID_1783830835" CREATED="1415062689137" MODIFIED="1415062689892"/>
</node>
<node TEXT="notes" ID="ID_953018133" CREATED="1415062717808" MODIFIED="1415062718362">
<node TEXT="App is a (ReaderT on StateT on IO) stack" ID="ID_783970193" CREATED="1415062720272" MODIFIED="1415062737953"/>
<node TEXT="the &quot;runner&quot; for the outer is evaluated before the runner for the inner" ID="ID_1289759090" CREATED="1415062738672" MODIFIED="1415062758915"/>
<node TEXT="the IO has no runner" ID="ID_1531598451" CREATED="1415062759088" MODIFIED="1415062762706"/>
</node>
</node>
<node TEXT="monad web search" LOCALIZED_STYLE_REF="default" ID="ID_1680323109" CREATED="1413484418217" MODIFIED="1430983150075">
<font BOLD="true"/>
<node TEXT="https://www.google.com/?gws_rd=ssl#q=haskell+monads" ID="ID_54047864" CREATED="1413484423411" MODIFIED="1413484423411" LINK="https://www.google.com/?gws_rd=ssl#q=haskell+monads"/>
<node TEXT="http://www.haskell.org/haskellwiki/Monad" ID="ID_1497351608" CREATED="1413484423411" MODIFIED="1413484423411" LINK="http://www.haskell.org/haskellwiki/Monad"/>
<node TEXT="http://www.haskell.org/tutorial/monads.html" ID="ID_874921422" CREATED="1413484423411" MODIFIED="1413484423411" LINK="http://www.haskell.org/tutorial/monads.html"/>
<node TEXT="http://www.haskell.org/tutorial/haskell-tutorial.html#$wadler:mffp" ID="ID_850215105" CREATED="1413484423412" MODIFIED="1413484423412" LINK="http://www.haskell.org/tutorial/haskell-tutorial.html#$wadler:mffp"/>
<node TEXT="http://www.haskell.org/haskellwiki/All_About_Monads" ID="ID_539030091" CREATED="1413484423412" MODIFIED="1413484423412" LINK="http://www.haskell.org/haskellwiki/All_About_Monads"/>
<node TEXT="http://web.archive.org/web/20061211101052/http://www.nomaware.com/monads/html/index.html" ID="ID_1477430070" CREATED="1413484423413" MODIFIED="1413484423413" LINK="http://web.archive.org/web/20061211101052/http://www.nomaware.com/monads/html/index.html"/>
<node TEXT="https://www.readability.com/articles/mtaenbp4" ID="ID_395057857" CREATED="1413484423413" MODIFIED="1413484423413" LINK="https://www.readability.com/articles/mtaenbp4"/>
<node TEXT="https://www.readability.com/articles/b1qrbaph" ID="ID_281677099" CREATED="1413484423414" MODIFIED="1413484423414" LINK="https://www.readability.com/articles/b1qrbaph"/>
<node TEXT="https://www.readability.com/articles/bgimnzpd" ID="ID_1466676714" CREATED="1413484423414" MODIFIED="1413484423414" LINK="https://www.readability.com/articles/bgimnzpd"/>
<node TEXT="https://www.readability.com/articles/plouf4w5" ID="ID_618256027" CREATED="1413484423414" MODIFIED="1413484423414" LINK="https://www.readability.com/articles/plouf4w5"/>
<node TEXT="http://en.wikibooks.org/wiki/Haskell/Understanding_monads" ID="ID_1424033461" CREATED="1413484423415" MODIFIED="1413484423415" LINK="http://en.wikibooks.org/wiki/Haskell/Understanding_monads"/>
<node TEXT="http://en.wikibooks.org/wiki/Haskell/Practical_monads" ID="ID_856417785" CREATED="1413484423415" MODIFIED="1413484423415" LINK="http://en.wikibooks.org/wiki/Haskell/Practical_monads"/>
<node TEXT="http://book.realworldhaskell.org/read/monads.html" ID="ID_1073104851" CREATED="1413484423415" MODIFIED="1413484423415" LINK="http://book.realworldhaskell.org/read/monads.html"/>
<node TEXT="https://hackage.haskell.org/packages/search?terms=state" ID="ID_1227377300" CREATED="1413484423415" MODIFIED="1413484423415" LINK="https://hackage.haskell.org/packages/search?terms=state"/>
<node TEXT="https://hackage.haskell.org/package/monad-state" ID="ID_1891921986" CREATED="1413484423416" MODIFIED="1413484423416" LINK="https://hackage.haskell.org/package/monad-state"/>
<node TEXT="https://hackage.haskell.org/package/STMonadTrans" ID="ID_1629794693" CREATED="1413484423416" MODIFIED="1413484423416" LINK="https://hackage.haskell.org/package/STMonadTrans"/>
<node TEXT="http://www.haskell.org/hoogle/?hoogle=state+monad" ID="ID_1621083854" CREATED="1413484423416" MODIFIED="1413484423416" LINK="http://www.haskell.org/hoogle/?hoogle=state+monad"/>
<node TEXT="http://hackage.haskell.org/package/mtl-2.2.1/docs/Control-Monad-State-Class.html#t:MonadState" ID="ID_727774593" CREATED="1413484423416" MODIFIED="1413484423416" LINK="http://hackage.haskell.org/package/mtl-2.2.1/docs/Control-Monad-State-Class.html#t:MonadState"/>
<node TEXT="http://hayoo.fh-wedel.de/?query=state+monad" ID="ID_325617899" CREATED="1413484423416" MODIFIED="1413484423416" LINK="http://hayoo.fh-wedel.de/?query=state+monad"/>
<node TEXT="http://www.haskell.org/haskellwiki/Haskell" ID="ID_1054670878" CREATED="1413484423418" MODIFIED="1413484423418" LINK="http://www.haskell.org/haskellwiki/Haskell"/>
<node TEXT="http://www.haskell.org/haskellwiki/Tutorials#Using_monads" ID="ID_728233608" CREATED="1413484423418" MODIFIED="1413484423418" LINK="http://www.haskell.org/haskellwiki/Tutorials#Using_monads"/>
<node TEXT="http://members.chello.nl/hjgtuyl/tourdemonad.html" ID="ID_838295935" CREATED="1413484423418" MODIFIED="1413484423418" LINK="http://members.chello.nl/hjgtuyl/tourdemonad.html"/>
<node TEXT="http://www.haskell.org/haskellwiki/Monad_tutorials_timeline" ID="ID_719898722" CREATED="1413484423419" MODIFIED="1413484423419" LINK="http://www.haskell.org/haskellwiki/Monad_tutorials_timeline"/>
<node TEXT="http://www.engr.mun.ca/~theo/Misc/haskell_and_monads.htm" ID="ID_977057985" CREATED="1413484423419" MODIFIED="1413484423419" LINK="http://www.engr.mun.ca/~theo/Misc/haskell_and_monads.htm"/>
<node TEXT="https://www.readability.com/articles/uyouurdv" ID="ID_387552640" CREATED="1413484423419" MODIFIED="1413484423419" LINK="https://www.readability.com/articles/uyouurdv"/>
<node TEXT="http://www.haskell.org/haskellwiki/Language_and_library_specification" ID="ID_1569381737" CREATED="1413484423419" MODIFIED="1413484423419" LINK="http://www.haskell.org/haskellwiki/Language_and_library_specification"/>
<node TEXT="https://www.google.com/?gws_rd=ssl#q=game+written+in+haskell" ID="ID_832289469" CREATED="1413484423419" MODIFIED="1413484423419" LINK="https://www.google.com/?gws_rd=ssl#q=game+written+in+haskell"/>
<node TEXT="http://www.haskell.org/haskellwiki/Game_Development" ID="ID_1347313252" CREATED="1413484423420" MODIFIED="1413484423420" LINK="http://www.haskell.org/haskellwiki/Game_Development"/>
<node TEXT="http://www.haskell.org/haskellwiki/Applications_and_libraries/Games#Games" ID="ID_1057959539" CREATED="1413484423421" MODIFIED="1413484423421" LINK="http://www.haskell.org/haskellwiki/Applications_and_libraries/Games#Games"/>
<node TEXT="http://hackage.haskell.org/package/MazesOfMonad" ID="ID_1899345892" CREATED="1413484423421" MODIFIED="1413484423421" LINK="http://hackage.haskell.org/package/MazesOfMonad"/>
</node>
</node>
<node TEXT="folds" ID="ID_1980921249" CREATED="1414953850226" MODIFIED="1414953851285">
<node TEXT="http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl%27" ID="ID_1791850717" CREATED="1413586002160" MODIFIED="1413586002160" LINK="http://www.haskell.org/haskellwiki/Foldr_Foldl_Foldl%27"/>
</node>
<node TEXT="Monoids" LOCALIZED_STYLE_REF="default" ID="ID_1717766639" CREATED="1412925852667" MODIFIED="1430982653144">
<node TEXT="http://blog.sigfpe.com/2009/01/haskell-monoids-and-their-uses.html" ID="ID_1207685061" CREATED="1412915524925" MODIFIED="1412915524925" LINK="http://blog.sigfpe.com/2009/01/haskell-monoids-and-their-uses.html"/>
<node ID="ID_1850453196" CREATED="1430982651657" MODIFIED="1430982651657"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      aborted to study user-defined types first
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="arrays" ID="ID_1398720002" CREATED="1414717980009" MODIFIED="1414717980837">
<node TEXT="https://www.haskell.org/tutorial/arrays.html" ID="ID_1221688646" CREATED="1414717981273" MODIFIED="1414717981273" LINK="https://www.haskell.org/tutorial/arrays.html"/>
</node>
<node TEXT="error messages" ID="ID_76236410" CREATED="1415127507695" MODIFIED="1415127510090">
<node TEXT="http://ics.p.lodz.pl/~stolarek/_media/pl:research:stolarek_understanding_basic_haskell_error_messages.pdf" ID="ID_819019227" CREATED="1415127510395" MODIFIED="1415127510395" LINK="http://ics.p.lodz.pl/~stolarek/_media/pl:research:stolarek_understanding_basic_haskell_error_messages.pdf"/>
</node>
</node>
<node TEXT="lang exts" LOCALIZED_STYLE_REF="default" ID="ID_588104171" CREATED="1430982968077" MODIFIED="1430982973596">
<node TEXT="template haskell" ID="ID_327470956" CREATED="1415127842795" MODIFIED="1415127844606">
<node TEXT="http://www.hyperedsoftware.com/blog/entries/first-stab-th.html" ID="ID_1330290242" CREATED="1415127970934" MODIFIED="1415127970934" LINK="http://www.hyperedsoftware.com/blog/entries/first-stab-th.html"/>
<node TEXT="two tutorials I saved in &quot;Haskell/_refs/template haskell&quot;" ID="ID_455180231" CREATED="1415128012391" MODIFIED="1415128045404"/>
</node>
</node>
<node TEXT="domains" ID="ID_609941764" CREATED="1430982724603" MODIFIED="1430982735743">
<font BOLD="true"/>
<node TEXT="DSLs &amp; multimedia" ID="ID_1181639837" CREATED="1413395029125" MODIFIED="1430982598471">
<node TEXT="&quot;The Haskell School of Expression&quot;" ID="ID_326237111" CREATED="1413395040149" MODIFIED="1413395045318"/>
</node>
<node TEXT="concurrency" LOCALIZED_STYLE_REF="default" ID="ID_884533102" CREATED="1413691516824" MODIFIED="1430982633155">
<node TEXT="Marlow" LOCALIZED_STYLE_REF="default" ID="ID_543173242" CREATED="1413331415230" MODIFIED="1413875490080">
<font BOLD="true"/>
<node TEXT="free online" ID="ID_262155330" CREATED="1413331436411" MODIFIED="1413331437951"/>
<node TEXT="left off here" ID="ID_924840749" CREATED="1413589020111" MODIFIED="1413589022570">
<node TEXT="chapter 7: basic concurrency" ID="ID_265354928" CREATED="1413589033822" MODIFIED="1413589041555"/>
<node TEXT="MVar as a Container for Shared State" ID="ID_1767226268" CREATED="1413589023271" MODIFIED="1413589025146"/>
</node>
<node TEXT="http://chimera.labs.oreilly.com/books/1230000000929/index.html" ID="ID_535837908" CREATED="1413331418611" MODIFIED="1413331418611" LINK="http://chimera.labs.oreilly.com/books/1230000000929/index.html"/>
</node>
<node TEXT="Atom" LOCALIZED_STYLE_REF="default" ID="ID_1536820097" CREATED="1413697205058" MODIFIED="1413697217320">
<node TEXT="Atom, links out to" LOCALIZED_STYLE_REF="default" ID="ID_164119804" CREATED="1413697181499" MODIFIED="1413697210081">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1328275196" STARTINCLINATION="44;0;" ENDINCLINATION="44;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="STM" LOCALIZED_STYLE_REF="default" ID="ID_30126630" CREATED="1413689565912" MODIFIED="1413697216832">
<node TEXT="might help learn Atom" ID="ID_1688821322" CREATED="1413691564819" MODIFIED="1413691578030"/>
<node TEXT="https://hackage.haskell.org/package/atom" ID="ID_413101738" CREATED="1413689232634" MODIFIED="1413689232634" LINK="https://hackage.haskell.org/package/atom"/>
</node>
<node TEXT="concurrency in ghc" LOCALIZED_STYLE_REF="default" ID="ID_649682840" CREATED="1413697140759" MODIFIED="1413697217127">
<node TEXT="http://www.haskell.org/ghc/docs/7.4.2/html/users_guide/using-concurrent.html" ID="ID_1254043328" CREATED="1413697144275" MODIFIED="1413697144275" LINK="http://www.haskell.org/ghc/docs/7.4.2/html/users_guide/using-concurrent.html"/>
</node>
</node>
<node TEXT="lens" ID="ID_428547848" CREATED="1415127649172" MODIFIED="1430982864259">
<node ID="ID_670878568" CREATED="1430982864881" MODIFIED="1430982864881"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      tutorials
    </p>
  </body>
</html>
</richcontent>
<node TEXT="https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/a-little-lens-starter-tutorial" ID="ID_1605426082" CREATED="1415127651855" MODIFIED="1415127651855" LINK="https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/a-little-lens-starter-tutorial"/>
<node TEXT="https://github.com/ekmett/lens#lens-lenses-folds-and-traversals" ID="ID_1788058726" CREATED="1415127657887" MODIFIED="1415127657887" LINK="https://github.com/ekmett/lens#lens-lenses-folds-and-traversals"/>
</node>
</node>
</node>
<node TEXT="performance" LOCALIZED_STYLE_REF="default" ID="ID_1136796086" CREATED="1413570389235" MODIFIED="1430982731988">
<node TEXT="see haskellwiki/performance" ID="ID_820934352" CREATED="1413570551919" MODIFIED="1413570579663">
<node TEXT="http://www.haskell.org/haskellwiki/Category:Performance" ID="ID_931403562" CREATED="1413570575082" MODIFIED="1413570575082" LINK="http://www.haskell.org/haskellwiki/Category:Performance"/>
</node>
<node TEXT="making haskell code smaller and faster" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1288344556" CREATED="1413570896053" MODIFIED="1413874437006">
<font BOLD="false"/>
<node TEXT="http://users.aber.ac.uk/afc/stricthaskell.html" ID="ID_77707561" CREATED="1413570896807" MODIFIED="1413570899233" LINK="http://users.aber.ac.uk/afc/stricthaskell.html#seq"/>
</node>
<node TEXT="stack overflow" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_45995400" CREATED="1413570801549" MODIFIED="1413874437574">
<font BOLD="false"/>
<node TEXT="http://www.haskell.org/haskellwiki/Stack_overflow" ID="ID_752850998" CREATED="1413570807215" MODIFIED="1413570807215" LINK="http://www.haskell.org/haskellwiki/Stack_overflow"/>
</node>
<node TEXT="laziness and performance" ID="ID_487600758" CREATED="1413570581113" MODIFIED="1413874434782">
<font BOLD="true"/>
<node TEXT="laziness can introduce weird performance problems" ID="ID_622955448" CREATED="1413570433823" MODIFIED="1413570446050"/>
<node TEXT="thunks" ID="ID_1799968685" CREATED="1413570447326" MODIFIED="1413570448147">
<node TEXT="http://www.haskell.org/haskellwiki/Thunk" ID="ID_1030722396" CREATED="1413570448619" MODIFIED="1413570448619" LINK="http://www.haskell.org/haskellwiki/Thunk"/>
</node>
<node TEXT="strictness and performance" ID="ID_1598944316" CREATED="1413570468020" MODIFIED="1413570472183">
<node TEXT="http://www.haskell.org/haskellwiki/Performance/Strictness" ID="ID_436593230" CREATED="1413570466429" MODIFIED="1413570466429" LINK="http://www.haskell.org/haskellwiki/Performance/Strictness"/>
</node>
<node TEXT="tail recursion" ID="ID_1046763296" CREATED="1413570482938" MODIFIED="1413570485158">
<node TEXT="http://www.haskell.org/haskellwiki/Tail_recursion" ID="ID_274188453" CREATED="1413570485439" MODIFIED="1413570485439" LINK="http://www.haskell.org/haskellwiki/Tail_recursion"/>
</node>
<node TEXT="non-strict semantics" ID="ID_721036551" CREATED="1413570489812" MODIFIED="1413570492831">
<node TEXT="http://www.haskell.org/haskellwiki/Non-strict_semantics" ID="ID_149036982" CREATED="1413570493335" MODIFIED="1413570493335" LINK="http://www.haskell.org/haskellwiki/Non-strict_semantics"/>
</node>
<node TEXT="lazy vs. non-strict" ID="ID_1589758373" CREATED="1413570497401" MODIFIED="1413570500039">
<node TEXT="http://www.haskell.org/haskellwiki/Lazy_vs._non-strict" ID="ID_338241316" CREATED="1413570500742" MODIFIED="1413570500742" LINK="http://www.haskell.org/haskellwiki/Lazy_vs._non-strict"/>
</node>
<node TEXT="laziness and performance" ID="ID_360920607" CREATED="1413570505617" MODIFIED="1413570508483">
<node TEXT="http://www.haskell.org/haskellwiki/Performance/Laziness" ID="ID_170078277" CREATED="1413570508894" MODIFIED="1413570508894" LINK="http://www.haskell.org/haskellwiki/Performance/Laziness"/>
</node>
<node TEXT="lazy eval" ID="ID_1204582691" CREATED="1413570613015" MODIFIED="1413570614698">
<node TEXT="http://www.haskell.org/haskellwiki/Lazy_evaluation" ID="ID_1812206101" CREATED="1413570615028" MODIFIED="1413570615028" LINK="http://www.haskell.org/haskellwiki/Lazy_evaluation"/>
</node>
<node TEXT="sharing" ID="ID_1657408043" CREATED="1413570643228" MODIFIED="1413570644230">
<node TEXT="part of the definition of laziness" ID="ID_520381127" CREATED="1413570646907" MODIFIED="1413570650469"/>
<node TEXT="http://www.haskell.org/haskellwiki/Sharing" ID="ID_612756437" CREATED="1413570644654" MODIFIED="1413570644654" LINK="http://www.haskell.org/haskellwiki/Sharing"/>
</node>
<node TEXT="&quot;tail recursion modulo cons&quot;" ID="ID_1356558851" CREATED="1413570731354" MODIFIED="1413570736030">
<node TEXT="http://en.wikipedia.org/wiki/Tail_call#Tail_recursion_modulo_cons" ID="ID_1175373773" CREATED="1413570736342" MODIFIED="1413570736342" LINK="http://en.wikipedia.org/wiki/Tail_call#Tail_recursion_modulo_cons"/>
</node>
<node TEXT="tail call" ID="ID_282260063" CREATED="1413570746058" MODIFIED="1413570747757">
<node TEXT="http://en.wikipedia.org/wiki/Tail_call" ID="ID_303564017" CREATED="1413570748054" MODIFIED="1413570748054" LINK="http://en.wikipedia.org/wiki/Tail_call"/>
</node>
<node TEXT="tail recursion and folds" ID="ID_353904086" CREATED="1413570756282" MODIFIED="1413570759396">
<node TEXT="http://www.haskell.org/pipermail/haskell-cafe/2009-March/058607.html" ID="ID_1823780333" CREATED="1413570759862" MODIFIED="1413570759862" LINK="http://www.haskell.org/pipermail/haskell-cafe/2009-March/058607.html"/>
</node>
<node TEXT="short-cut fusion correctness" ID="ID_326945948" CREATED="1413570950000" MODIFIED="1413570954403">
<node TEXT="http://www.haskell.org/haskellwiki/Correctness_of_short_cut_fusion" ID="ID_504743241" CREATED="1413570954818" MODIFIED="1413570954818" LINK="http://www.haskell.org/haskellwiki/Correctness_of_short_cut_fusion"/>
</node>
</node>
</node>
</node>
<node TEXT="unsorted" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1889344199" CREATED="1430983182947" MODIFIED="1430983186623"/>
<node TEXT="huge. old?" ID="ID_175418621" CREATED="1424028815772" MODIFIED="1424028822189">
<font BOLD="true"/>
<node TEXT="vids" ID="ID_732951517" CREATED="1415084878002" MODIFIED="1415139969710">
<font BOLD="true"/>
<node TEXT="Safe, Zero-Cost Coercions in Haskell" ID="ID_1749962681" CREATED="1415081979910" MODIFIED="1415081989505">
<node TEXT="https://skillsmatter.com/skillscasts/5296-safe-zero-cost-coercions-in-haskell" ID="ID_124522586" CREATED="1415081990877" MODIFIED="1415081990877" LINK="https://skillsmatter.com/skillscasts/5296-safe-zero-cost-coercions-in-haskell"/>
<node TEXT="SPJ, vid" ID="ID_1792559171" CREATED="1415081991382" MODIFIED="1415081992793"/>
<node TEXT="last saw 21:22" ID="ID_205056873" CREATED="1415082019709" MODIFIED="1415476799278"/>
</node>
<node TEXT="Categories for the Working Haskeller" ID="ID_1314181564" CREATED="1415084171150" MODIFIED="1415084178089">
<node TEXT="https://skillsmatter.com/skillscasts/5787-categories-for-the-working-haskeller" ID="ID_1116777425" CREATED="1415084185920" MODIFIED="1415084185920" LINK="https://skillsmatter.com/skillscasts/5787-categories-for-the-working-haskeller"/>
<node TEXT="got to 20:00" ID="ID_1334821806" CREATED="1415084192869" MODIFIED="1415084195129"/>
<node TEXT="feels like something important might be there but ideas are not dense in it" ID="ID_42948493" CREATED="1415084195334" MODIFIED="1415084218569"/>
</node>
<node TEXT="https://skillsmatter.com/skillscasts/4230-lazy-io-and-alternatives-in-haskell" ID="ID_1847245098" CREATED="1415084874204" MODIFIED="1415084874204" LINK="https://skillsmatter.com/skillscasts/4230-lazy-io-and-alternatives-in-haskell"/>
<node TEXT="https://skillsmatter.com/skillscasts/4250-uniplate" ID="ID_1737698512" CREATED="1415084874208" MODIFIED="1415084874208" LINK="https://skillsmatter.com/skillscasts/4250-uniplate"/>
<node TEXT="https://skillsmatter.com/skillscasts/3932-a-haskell-lecture-with-leading-expert-andres-loh" ID="ID_1093717062" CREATED="1415084874209" MODIFIED="1415084874209" LINK="https://skillsmatter.com/skillscasts/3932-a-haskell-lecture-with-leading-expert-andres-loh"/>
<node TEXT="watched" ID="ID_918047228" CREATED="1415132178001" MODIFIED="1415139976038">
<font BOLD="true"/>
<node TEXT="https://skillsmatter.com/skillscasts/2872-haskell-for-embedded-domain-specific-languages" ID="ID_1124752831" CREATED="1415084874204" MODIFIED="1415084874204" LINK="https://skillsmatter.com/skillscasts/2872-haskell-for-embedded-domain-specific-languages"/>
</node>
</node>
<node TEXT="ab" ID="ID_542770678" CREATED="1417501384979" MODIFIED="1417501386726">
<node TEXT="would it be worth learning scheme to understand monads?" ID="ID_699952292" CREATED="1415684278189" MODIFIED="1415684287184"/>
<node TEXT="read stackoverflow haskell monad" ID="ID_1996747681" CREATED="1415684144648" MODIFIED="1415684148595"/>
<node TEXT="DSLs in Haskell, mediocre video" ID="ID_1038634694" CREATED="1417037057985" MODIFIED="1417037064316">
<node TEXT="https://www.youtube.com/watch?v=8k_SU1t50M8" ID="ID_1577097356" CREATED="1417037064642" MODIFIED="1417037064642" LINK="https://www.youtube.com/watch?v=8k_SU1t50M8"/>
<node TEXT="resume 25:20" ID="ID_1816227100" CREATED="1417037071008" MODIFIED="1417037073964"/>
</node>
</node>
</node>
<node TEXT="2015 03" ID="ID_1073371139" CREATED="1430970621733" MODIFIED="1430970634427">
<node TEXT="Haskell Data Analysis Cookbook" ID="ID_416999418" CREATED="1426705881172" MODIFIED="1426705885793">
<node TEXT="http://haskelldata.com/" ID="ID_1565323056" CREATED="1426705886213" MODIFIED="1426705886213" LINK="http://haskelldata.com/"/>
</node>
<node TEXT="seld readg from Haskell Weekly News, 2015 02 25" ID="ID_1199758351" CREATED="1425420180878" MODIFIED="1425842597014">
<font BOLD="true"/>
<node TEXT="http://comonad.com/reader/2015/free-monoids-in-haskell/" ID="ID_1072309430" CREATED="1425420183911" MODIFIED="1425420183911" LINK="http://comonad.com/reader/2015/free-monoids-in-haskell/"/>
<node TEXT="https://www.reddit.com/r/haskell/comments/2wqxqv/the_comonadreader_dan_doel_free_monoids_in_haskell/" ID="ID_1457047485" CREATED="1425420183912" MODIFIED="1425420183912" LINK="https://www.reddit.com/r/haskell/comments/2wqxqv/the_comonadreader_dan_doel_free_monoids_in_haskell/"/>
<node TEXT="http://www.reddit.com/r/haskell/comments/2ws786/is_working_with_numeric_formulas_on_haskell_a/" ID="ID_719748901" CREATED="1425420183913" MODIFIED="1425420183913" LINK="http://www.reddit.com/r/haskell/comments/2ws786/is_working_with_numeric_formulas_on_haskell_a/"/>
<node TEXT="http://www.reddit.com/r/haskell/comments/2wefft/monads_in_a_non_functional_programming_language_x/" ID="ID_1211947299" CREATED="1425420183917" MODIFIED="1425420183917" LINK="http://www.reddit.com/r/haskell/comments/2wefft/monads_in_a_non_functional_programming_language_x/"/>
<node TEXT="http://www.reddit.com/r/haskell/comments/2wjtq5/haskell_actually_does_change_the_way_you_think/" ID="ID_447629330" CREATED="1425420183921" MODIFIED="1425420183921" LINK="http://www.reddit.com/r/haskell/comments/2wjtq5/haskell_actually_does_change_the_way_you_think/"/>
<node TEXT="http://www.reddit.com/r/haskell/comments/2wfap0/web_development_using_haskell/" ID="ID_1649812635" CREATED="1425420183925" MODIFIED="1425420183925" LINK="http://www.reddit.com/r/haskell/comments/2wfap0/web_development_using_haskell/"/>
<node TEXT="https://github.com/commercialhaskell/commercialhaskell/blob/master/proposal/intermediate-haskell-documentation.md" ID="ID_1656950586" CREATED="1425420183929" MODIFIED="1425420183929" LINK="https://github.com/commercialhaskell/commercialhaskell/blob/master/proposal/intermediate-haskell-documentation.md"/>
<node TEXT="https://github.com/commercialhaskell/commercialhaskell" ID="ID_188849915" CREATED="1425420183933" MODIFIED="1425420183933" LINK="https://github.com/commercialhaskell/commercialhaskell"/>
<node TEXT="https://groups.google.com/forum/#!topic/commercialhaskell/Ou00AvRdDTU" ID="ID_799963803" CREATED="1425420183937" MODIFIED="1425420183937" LINK="https://groups.google.com/forum/#!topic/commercialhaskell/Ou00AvRdDTU"/>
</node>
</node>
<node TEXT="2015 05 06" ID="ID_57604038" CREATED="1430981896780" MODIFIED="1430981900527">
<node TEXT="read to here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_484492811" CREATED="1431562843878" MODIFIED="1431562849809"/>
<node ID="ID_1495959263" CREATED="1430981276724" MODIFIED="1430981276724"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Haskell + bash
    </p>
  </body>
</html>
</richcontent>
<node TEXT="Turtle: a short, deep tutorial on Haskell + bash" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1825845239" CREATED="1423177921239" MODIFIED="1430981283689"/>
<node TEXT="lies here" ID="ID_1997824273" CREATED="1423177968046" MODIFIED="1423177969116">
<node TEXT="https://hackage.haskell.org/package/turtle-1.0.1/docs/Turtle-Tutorial.html" ID="ID_1178534462" CREATED="1423177949855" MODIFIED="1423177949855" LINK="https://hackage.haskell.org/package/turtle-1.0.1/docs/Turtle-Tutorial.html"/>
</node>
<node TEXT="discovered here" ID="ID_1983676325" CREATED="1423177962846" MODIFIED="1423177967338">
<node TEXT="http://www.reddit.com/r/haskell/comments/2utgks/thoughts_after_a_month_of_haskell/" ID="ID_802181584" CREATED="1423177967757" MODIFIED="1423177967757" LINK="http://www.reddit.com/r/haskell/comments/2utgks/thoughts_after_a_month_of_haskell/"/>
</node>
</node>
</node>
<node TEXT="type theory podcast" LOCALIZED_STYLE_REF="default" ID="ID_1572972965" CREATED="1422164321869" MODIFIED="1432590733126">
<node TEXT="http://typetheorypodcast.com/" ID="ID_1616042187" CREATED="1422164325941" MODIFIED="1422164325941" LINK="http://typetheorypodcast.com/"/>
<node TEXT="I listened for 12:24 to Ep 1." ID="ID_1531463379" CREATED="1422164327276" MODIFIED="1422164339529"/>
<node TEXT="They use a lot of vocabulary I don&apos;t know." ID="ID_1906764842" CREATED="1422164342272" MODIFIED="1422164356674"/>
</node>
<node TEXT="read albert lai" LOCALIZED_STYLE_REF="default" ID="ID_1678517245" CREATED="1430963319264" MODIFIED="1432590736507">
<node TEXT="http://www.vex.net/~trebla/haskell/index.xhtml" ID="ID_1574678248" CREATED="1430963346760" MODIFIED="1430963346760" LINK="http://www.vex.net/~trebla/haskell/index.xhtml"/>
<node TEXT="I liked this." ID="ID_1055651834" CREATED="1430963332407" MODIFIED="1430963335457">
<node TEXT="http://www.vex.net/~trebla/haskell/fix.xhtml" ID="ID_48432886" CREATED="1430963336024" MODIFIED="1430963336024" LINK="http://www.vex.net/~trebla/haskell/fix.xhtml"/>
</node>
</node>
<node TEXT="read Gabriel Gonzalez" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1065069696" CREATED="1431737442586" MODIFIED="1432590627252"/>
<node TEXT="excellen writer about Haskell" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1873133203" CREATED="1431563834589" MODIFIED="1431564212622">
<node TEXT="http://blog.jle.im/" ID="ID_1703345096" CREATED="1431563837800" MODIFIED="1431563837800" LINK="http://blog.jle.im/"/>
</node>
<node TEXT="Wiki book good!" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1854217077" CREATED="1425616045873" MODIFIED="1432590729874">
<node TEXT="http://en.wikibooks.org/wiki/Haskell" ID="ID_919401636" CREATED="1425616052418" MODIFIED="1425616052418" LINK="http://en.wikibooks.org/wiki/Haskell"/>
</node>
<node TEXT="2015 06 14" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1821207512" CREATED="1433974436752" MODIFIED="1434393931596">
<node TEXT="https://ro-che.info/articles/2015-05-28-force-list" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1223294480" CREATED="1433974465989" MODIFIED="1433974841595" LINK="https://ro-che.info/articles/2015-05-28-force-list"/>
<node TEXT="http://www.haskellforall.com/" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_362109529" CREATED="1433974450084" MODIFIED="1433974850097" LINK="http://www.haskellforall.com/2015/05/the-internet-of-code.html"/>
<node TEXT="more" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1005805211" CREATED="1433974854404" MODIFIED="1433974855964">
<node TEXT="http://lambda.jstolarek.com/2015/05/injective-type-families-for-haskell/" ID="ID_309736646" CREATED="1433974439216" MODIFIED="1433974439216" LINK="http://lambda.jstolarek.com/2015/05/injective-type-families-for-haskell/"/>
<node TEXT="http://www.reddit.com/r/haskell/comments/37bvh0/injective_type_families_for_haskell/crmfuvz" ID="ID_208172825" CREATED="1433974443080" MODIFIED="1433974443080" LINK="http://www.reddit.com/r/haskell/comments/37bvh0/injective_type_families_for_haskell/crmfuvz"/>
<node TEXT="http://begriffs.com/posts/2015-05-24-safe-haskell.html" ID="ID_978571128" CREATED="1433974446717" MODIFIED="1433974446717" LINK="http://begriffs.com/posts/2015-05-24-safe-haskell.html"/>
<node TEXT="http://www.stackbuilders.com/news/another-personal-programming-language-roadmap" ID="ID_1672899240" CREATED="1433974453685" MODIFIED="1433974453685" LINK="http://www.stackbuilders.com/news/another-personal-programming-language-roadmap"/>
<node TEXT="http://haskell.1045720.n5.nabble.com/Workshop-on-Type-Inference-and-Automated-Proving-td5768920.html#a5809572" ID="ID_1344514076" CREATED="1433974457429" MODIFIED="1433974457429" LINK="http://haskell.1045720.n5.nabble.com/Workshop-on-Type-Inference-and-Automated-Proving-td5768920.html#a5809572"/>
<node TEXT="http://www.reddit.com/r/haskell/comments/36az3n/idris_0918_released_with_fancier_records_lots_of/" ID="ID_41489138" CREATED="1433974460914" MODIFIED="1433974460914" LINK="http://www.reddit.com/r/haskell/comments/36az3n/idris_0918_released_with_fancier_records_lots_of/"/>
</node>
</node>
</node>
<node TEXT="s^2" ID="ID_406464866" CREATED="1418932818453" MODIFIED="1420563506244">
<font BOLD="true"/>
<node TEXT="core? lang" ID="ID_246408079" CREATED="1418939712143" MODIFIED="1439718162030">
<font BOLD="true"/>
<node TEXT="pitfalls" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_631467321" CREATED="1430546940772" MODIFIED="1430546946158">
<node TEXT="let: two kinds" LOCALIZED_STYLE_REF="default" ID="ID_524153911" CREATED="1430469435773" MODIFIED="1430546949158">
<node TEXT="in a do block, no need for &quot;in&quot; after &quot;let&quot;" ID="ID_1831363098" CREATED="1430469439513" MODIFIED="1430469445954"/>
</node>
</node>
<node TEXT="-&gt; see also &quot;modules/instances&quot;" ID="ID_1741362864" CREATED="1418939723111" MODIFIED="1418939730234"/>
<node TEXT="eval" ID="ID_141426756" CREATED="1418936075537" MODIFIED="1418936076212">
<node TEXT=". src&apos;s" ID="ID_1005656685" CREATED="1418936045113" MODIFIED="1418936048157">
<node TEXT="Marlow/Concurrency" ID="ID_1598208434" CREATED="1413699113375" MODIFIED="1418936049932"/>
</node>
<node TEXT="?s" ID="ID_1926969970" CREATED="1413699109407" MODIFIED="1418936483766">
<node TEXT="seq" ID="ID_1947597790" CREATED="1413699290197" MODIFIED="1413699291089">
<node TEXT="https://www.haskell.org/haskellwiki/Seq" ID="ID_210707065" CREATED="1418936239830" MODIFIED="1418936239830" LINK="https://www.haskell.org/haskellwiki/Seq"/>
<node TEXT="&quot;kind of&quot; evaluates first arg and returns the second" ID="ID_1776868368" CREATED="1413699294380" MODIFIED="1418936462878"/>
</node>
<node TEXT="definitions" ID="ID_837338375" CREATED="1418938610854" MODIFIED="1418938613189">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1085058431" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="definitions" LOCALIZED_STYLE_REF="default" ID="ID_1085058431" CREATED="1412745158508" MODIFIED="1412745163061">
<node TEXT="a definition is &quot;name = expr&quot;, where name takes no args" ID="ID_1256251928" CREATED="1412745190424" MODIFIED="1412745205636"/>
<node TEXT="they mostly can&apos;t be changed" ID="ID_820317793" CREATED="1412745135916" MODIFIED="1413184240964">
<node TEXT="said here" ID="ID_193567151" CREATED="1412745689988" MODIFIED="1412745690943">
<node TEXT="http://learnyouahaskell.com/starting-out#ready-set-go" ID="ID_84561173" CREATED="1412745702558" MODIFIED="1412745702558" LINK="http://learnyouahaskell.com/starting-out#ready-set-go"/>
</node>
<node TEXT="where they can&apos;t be" ID="ID_1757215342" CREATED="1413184243538" MODIFIED="1413184246837">
<node TEXT="in open compiled code" ID="ID_843251623" CREATED="1413184247058" MODIFIED="1413184250701"/>
<node TEXT="in the same let statement" ID="ID_1379956434" CREATED="1413184250913" MODIFIED="1413184259956"/>
</node>
<node TEXT="where they can be" ID="ID_139402586" CREATED="1413184260688" MODIFIED="1413184263307">
<node TEXT="in open interpreted code" ID="ID_246838263" CREATED="1412745676877" MODIFIED="1413184273706"/>
<node TEXT="across let statements within a do statement" ID="ID_241408404" CREATED="1413184279144" MODIFIED="1413184287745"/>
</node>
</node>
</node>
<node TEXT="pitfalls" ID="ID_1281145335" CREATED="1418936605260" MODIFIED="1418936606759">
<node TEXT="laziness, folding and overflow" ID="ID_569849537" CREATED="1412959393629" MODIFIED="1418936587271">
<node TEXT="http://learnyouahaskell.com/modules" ID="ID_105244596" CREATED="1412959259208" MODIFIED="1412959259208" LINK="http://learnyouahaskell.com/modules"/>
<node TEXT="&quot;if you ever get stack overflow errors when doing lazy folds, try switching to their strict versions.&quot;" ID="ID_736051637" CREATED="1412959271412" MODIFIED="1418936590177"/>
</node>
<node TEXT="polymorphism can cause (memo?) loss" ID="ID_249075911" CREATED="1413699681658" MODIFIED="1413876836642">
<node TEXT="I asked the mailing list" ID="ID_1044300281" CREATED="1413700428135" MODIFIED="1413700430818">
<node TEXT="2014 10 18" ID="ID_1883023551" CREATED="1413700478307" MODIFIED="1413700484685"/>
</node>
<node TEXT="Marlow/Concurrency/ch 2" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_667076186" CREATED="1413699729029" MODIFIED="1413699734656"/>
<node TEXT="what surprised me" ID="ID_1154314910" CREATED="1413876764997" MODIFIED="1413876767960">
<node TEXT="this works" ID="ID_170253772" CREATED="1413699683524" MODIFIED="1413699686725">
<node TEXT="let x = 1 + 2 :: Int" ID="ID_1494091383" CREATED="1413699683524" MODIFIED="1413699683524"/>
<node TEXT="let y = x + 1" ID="ID_567582500" CREATED="1413699683524" MODIFIED="1413699683524"/>
<node TEXT=":sprint x" ID="ID_774766840" CREATED="1413699683524" MODIFIED="1413699683524"/>
<node TEXT=":sprint y" ID="ID_802976195" CREATED="1413699683524" MODIFIED="1413699683524"/>
<node TEXT="seq y ()" ID="ID_1220628558" CREATED="1413699683524" MODIFIED="1413699683524"/>
<node TEXT=":sprint x" ID="ID_104359170" CREATED="1413699683524" MODIFIED="1413699683524"/>
<node TEXT=":sprint y" ID="ID_429853375" CREATED="1413699683524" MODIFIED="1413699683524"/>
</node>
<node TEXT="this doesn&apos;t" ID="ID_1895854530" CREATED="1413699683524" MODIFIED="1413699689005">
<node TEXT="it is identical except the type identifier" ID="ID_106755671" CREATED="1413699695385" MODIFIED="1413699707427"/>
<node TEXT="code" ID="ID_40672131" CREATED="1413699693361" MODIFIED="1413699694022">
<node TEXT="let x = 1 + 2" ID="ID_591760351" CREATED="1413699683525" MODIFIED="1413699683525"/>
<node TEXT="let y = x + 1" ID="ID_288898266" CREATED="1413699683525" MODIFIED="1413699683525"/>
<node TEXT=":sprint x" ID="ID_754989586" CREATED="1413699683525" MODIFIED="1413699683525"/>
<node TEXT=":sprint y" ID="ID_466743712" CREATED="1413699683525" MODIFIED="1413699683525"/>
<node TEXT="seq y ()" ID="ID_1009151960" CREATED="1413699683525" MODIFIED="1413699683525"/>
<node TEXT=":sprint x" ID="ID_1169996333" CREATED="1413699683525" MODIFIED="1413699683525"/>
<node TEXT=":sprint y" ID="ID_1345883849" CREATED="1413699683525" MODIFIED="1413699683525"/>
</node>
</node>
</node>
<node TEXT="explanation" LOCALIZED_STYLE_REF="default" ID="ID_1450237366" CREATED="1413700471531" MODIFIED="1413876758953">
<node TEXT="from Tom Ellis, Haskell Cafe, to me" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_695074334" CREATED="1413876759419" MODIFIED="1413876802830"/>
<node TEXT="&quot;Because you are using GHC 7.8 where the mmonomorphism restriction is not&#xa;imposed.  Without the monomorphism restriction `1 + 2` is of type `Num a =&gt;&#xa;a`, not `Int`, and forcing it does not memoize the result.&#xa;&#xa;Try running GHCi with `-XMonomorphismRestriction`.&quot;" ID="ID_1208699111" CREATED="1413876779980" MODIFIED="1413876785073"/>
</node>
</node>
<node TEXT="scope and reference" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_237610789" CREATED="1413875980683" MODIFIED="1418940184400">
<font BOLD="false"/>
<node TEXT="I invented this title." LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_248856114" CREATED="1413876014032" MODIFIED="1413876026744"/>
<node TEXT="within let, let-bound variables can refer to earlier ones" ID="ID_146035062" CREATED="1413272315732" MODIFIED="1413272347605">
<node TEXT="and maybe even later ones?" ID="ID_269410827" CREATED="1413272385110" MODIFIED="1413272392859"/>
<node TEXT="the proof" ID="ID_895499529" CREATED="1413272429010" MODIFIED="1413272430133">
<node TEXT="quoting Learn You" ID="ID_1695503399" CREATED="1413272431690" MODIFIED="1413272433709"/>
<node TEXT="main = do &#xa;    contents &lt;- getContents &#xa;    putStr (shortLinesOnly contents) &#xa; &#xa;shortLinesOnly :: String -&gt; String &#xa;shortLinesOnly input =  &#xa;    let allLines = lines input &#xa;        shortLines = filter (\line -&gt; length line &lt; 10) allLines &#xa;        result = unlines shortLines &#xa;    in  result" ID="ID_566001712" CREATED="1413149915568" MODIFIED="1413149916245"/>
</node>
</node>
<node TEXT="in a &quot;do&quot; block, a &quot;let&quot; statement does not require a trailing &quot;in&quot; statement" ID="ID_1531214106" CREATED="1414955040637" MODIFIED="1418940106545">
<node TEXT="I think" ID="ID_781019654" CREATED="1414955051373" MODIFIED="1414955052336"/>
</node>
</node>
<node TEXT="infixes evaluated after prefixes" ID="ID_1660336656" CREATED="1418938153796" MODIFIED="1418938156483">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1625357154" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="indent, space" ID="ID_1411243377" CREATED="1413574557266" MODIFIED="1418937757381">
<node TEXT="space matters; it defines blocks" LOCALIZED_STYLE_REF="default" ID="ID_1979348006" CREATED="1412878979138" MODIFIED="1418937749275"/>
<node TEXT="indentation is substitutable for [brackets + semicolons]" ID="ID_68296412" CREATED="1413574560546" MODIFIED="1418937752807"/>
<node TEXT="indent then and else rel. to if" LOCALIZED_STYLE_REF="default" ID="ID_1024927395" CREATED="1413574567802" MODIFIED="1418937692323">
<node TEXT="-- this works&#xa;do first thing&#xa;   if condition&#xa;     then foo&#xa;     else bar&#xa;   third thing" ID="ID_818851038" CREATED="1413574581713" MODIFIED="1413574588257"/>
<node TEXT="-- this does not&#xa;do first thing&#xa;   if condition&#xa;   then foo&#xa;   else bar&#xa;   third thing" ID="ID_1466136544" CREATED="1413574619486" MODIFIED="1413574623689"/>
</node>
</node>
<node TEXT="&quot;undefined&quot; and laziness" ID="ID_462712747" CREATED="1413235649919" MODIFIED="1418936564765">
<node TEXT="Haskell won&apos;t evaluate &quot;undefined&quot;" ID="ID_425475512" CREATED="1413235668636" MODIFIED="1413235677639">
<node TEXT="ghci&gt; undefined &#xa;*** Exception: Prelude.undefined" ID="ID_1121627494" CREATED="1413235659916" MODIFIED="1413235660665"/>
</node>
<node TEXT="but it can handle it otherwise" ID="ID_1301084770" CREATED="1413235678844" MODIFIED="1413235685238">
<node TEXT="ghci&gt; head [3,4,5,undefined,2,undefined] &#xa;3" ID="ID_469296328" CREATED="1413235665133" MODIFIED="1413235666040"/>
</node>
</node>
<node TEXT="value memorization" ID="ID_1728681292" CREATED="1413741608060" MODIFIED="1413874890305">
<node ID="ID_1714007423" CREATED="1413874890657" MODIFIED="1413874890657"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      monomorphism affects
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="can embed non-lazy lang" ID="ID_672004865" CREATED="1418948358127" MODIFIED="1418948362675">
<node TEXT="i.e. a &quot;strict&quot; lang" ID="ID_1789830399" CREATED="1418948372566" MODIFIED="1418948376546"/>
<node TEXT="https://skillsmatter.com/skillscasts/2872-haskell-for-embedded-domain-specific-languages" ID="ID_1771260601" CREATED="1415129434359" MODIFIED="1415129434359" LINK="https://skillsmatter.com/skillscasts/2872-haskell-for-embedded-domain-specific-languages"/>
<node TEXT="at 18:49" ID="ID_1761461066" CREATED="1415129435197" MODIFIED="1415129438730"/>
</node>
<node TEXT="&lt; freq" ID="ID_1353173180" CREATED="1418938561543" MODIFIED="1418940039861">
<node TEXT="precedence" ID="ID_710141604" CREATED="1418937734610" MODIFIED="1418937736765">
<node TEXT="src" ID="ID_252819827" CREATED="1413766507792" MODIFIED="1418939968368">
<font BOLD="false"/>
<node TEXT="http://www.haskell.org/onlinereport/haskell2010/haskellch9.html#x16-1710009" ID="ID_48821773" CREATED="1413766513344" MODIFIED="1413766513344" LINK="http://www.haskell.org/onlinereport/haskell2010/haskellch9.html#x16-1710009"/>
<node TEXT="search for &quot;fixity&quot;" ID="ID_27709011" CREATED="1413766541333" MODIFIED="1413766544024"/>
</node>
<node TEXT="space, function application, has the highest precedence" LOCALIZED_STYLE_REF="default" ID="ID_1843754421" CREATED="1412884590999" MODIFIED="1418937738507">
<node TEXT="&quot;Right (3 + 1)&quot; does what I would expect" ID="ID_1374458278" CREATED="1413862455612" MODIFIED="1413862471733"/>
<node TEXT="&quot;Right 3 + 1&quot; makes something, but I don&apos;t know what" ID="ID_542828648" CREATED="1413862437261" MODIFIED="1413862486892"/>
</node>
<node TEXT="infixes evaluated after prefixes" ID="ID_1625357154" CREATED="1412743342238" MODIFIED="1412743347696">
<node TEXT="succ (9 * 10) = 91" ID="ID_55373230" CREATED="1412743366339" MODIFIED="1412743385475"/>
<node TEXT="succ 9 * 10 = 100" ID="ID_453776211" CREATED="1412743375883" MODIFIED="1412743381686"/>
</node>
</node>
<node TEXT="naming" ID="ID_1679023046" CREATED="1418938290058" MODIFIED="1418938292735">
<node TEXT="can&apos;t begin with uppercase letters" ID="ID_1261930739" CREATED="1412745096471" MODIFIED="1412745102579"/>
<node TEXT="&apos; is valid in a name" ID="ID_1916049146" CREATED="1412744962998" MODIFIED="1418938297950"/>
</node>
<node TEXT="show without eval" ID="ID_922987642" CREATED="1418936063387" MODIFIED="1418936651263">
<node TEXT=":sprint x displays x, unevalated if not yet evaluated" ID="ID_770881571" CREATED="1413699118855" MODIFIED="1413699136441"/>
</node>
<node TEXT="_ int&apos;zd or (seem) obv" ID="ID_1631926661" CREATED="1418936115960" MODIFIED="1418937463421">
<node TEXT="curry" ID="ID_1244758043" CREATED="1418936643547" MODIFIED="1418936648959">
<node TEXT="f a b = ((f a) b)" ID="ID_1267679821" CREATED="1412795462532" MODIFIED="1412795472863"/>
</node>
<node TEXT="once evaluated, stays evaluated" ID="ID_1852104781" CREATED="1413699144812" MODIFIED="1413699149287">
<node TEXT="I think" ID="ID_1958664226" CREATED="1413699149890" MODIFIED="1413699151543"/>
</node>
<node TEXT="evaluation propogates along dependency" ID="ID_769058562" CREATED="1413699209950" MODIFIED="1413699255827">
<node TEXT="that is, if f depends on x, evaluating f evaluates x" ID="ID_1670739023" CREATED="1413699216661" MODIFIED="1413699232568"/>
</node>
<node TEXT="-- comment like this or {-this-}" ID="ID_1261433071" CREATED="1417849467611" MODIFIED="1418868080009"/>
<node TEXT="print evaluates" ID="ID_328820414" CREATED="1413699137357" MODIFIED="1413699139824"/>
</node>
</node>
</node>
<node TEXT="logic" ID="ID_26697752" CREATED="1418938050254" MODIFIED="1418938051073">
<node TEXT="||, &amp;&amp;" ID="ID_780787024" CREATED="1412743033466" MODIFIED="1412743035893">
<node TEXT="ghci&gt; True &amp;&amp; True&#xa;True&#xa;ghci&gt; False || True&#xa;True" ID="ID_1730701492" CREATED="1412743038114" MODIFIED="1412743038446"/>
</node>
<node TEXT="==, /=" ID="ID_438315920" CREATED="1412743046913" MODIFIED="1418938067793">
<node TEXT="Prelude&gt; 3 /= 3&#xa;False&#xa;Prelude&gt; 3 /= 4&#xa;True" ID="ID_1971313589" CREATED="1418938079477" MODIFIED="1418938081913"/>
</node>
<node TEXT="conditionals" ID="ID_1361423099" CREATED="1418938253683" MODIFIED="1418938255134">
<node TEXT="in &quot;if&quot;, &quot;else&quot; mandatory" ID="ID_594644000" CREATED="1412744582168" MODIFIED="1418938263726"/>
</node>
</node>
<node TEXT="exception" ID="ID_985570030" CREATED="1413154168900" MODIFIED="1413229738091">
<node TEXT="dangerous in pure code" ID="ID_1206896601" CREATED="1413154433475" MODIFIED="1413154442781">
<node TEXT="pure (non-IO) code can throw but not catch" ID="ID_1349151201" CREATED="1413154335967" MODIFIED="1413154361949"/>
<node TEXT="order of evaluation is defined in IO code but not pure code" ID="ID_1716847078" CREATED="1413154447289" MODIFIED="1413154456700"/>
<node TEXT="alternatives: Maybe, Either" ID="ID_272112958" CREATED="1413154302163" MODIFIED="1413154468251"/>
</node>
<node TEXT="skipped the rest of the chapter" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1461085587" CREATED="1413154511767" MODIFIED="1413154516393">
<node TEXT="that is, (last) section of a chapter, the chapter being IO and the section being Exceptions, in Learn You" ID="ID_718657114" CREATED="1413183669563" MODIFIED="1413183695012"/>
</node>
</node>
<node TEXT="functions" ID="ID_1154725341" CREATED="1412743586722" MODIFIED="1412743588004">
<node TEXT="instances" ID="ID_1420116792" CREATED="1412743460060" MODIFIED="1412743602486">
<node TEXT="div" ID="ID_136135460" CREATED="1412743461156" MODIFIED="1412743471938">
<node ID="ID_756155897" CREATED="1412743472182" MODIFIED="1412743472182"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      integer division
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="`compare`" LOCALIZED_STYLE_REF="default" ID="ID_684271821" CREATED="1412874733617" MODIFIED="1413271362292">
<node TEXT="ghci&gt; &quot;Abrakadabra&quot; &lt; &quot;Zebra&quot;&#xa;True&#xa;ghci&gt; &quot;Abrakadabra&quot; `compare` &quot;Zebra&quot;&#xa;LT" ID="ID_1016503287" CREATED="1412874750199" MODIFIED="1412874751291"/>
</node>
<node TEXT="(,,)" ID="ID_273745866" CREATED="1413230622914" MODIFIED="1413230659126">
<node ID="ID_1973495926" CREATED="1413230642690" MODIFIED="1413230642690"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      is the same as \x y z -&gt; (x,y,z).
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="(similarly for any number of commas)" ID="ID_1313542968" CREATED="1413230645064" MODIFIED="1413230651179"/>
</node>
<node TEXT="const x = \_ -&gt; x" ID="ID_661984649" CREATED="1414873303113" MODIFIED="1414873318043">
<node TEXT="it is a function that disregards its argument and returns x" ID="ID_1593389879" CREATED="1414873319471" MODIFIED="1414873330635"/>
</node>
<node TEXT="some functions in Prelude" ID="ID_741457206" CREATED="1415043156874" MODIFIED="1418940788120">
<font BOLD="true"/>
<node TEXT="iterate f x returns the infinite list [x,f(x),f(f(x)),...]." ID="ID_1577262598" CREATED="1415041925982" MODIFIED="1415041936610">
<node TEXT="http://www.letu.edu/people/jaytevis/Programming-Languages/Haskell/tourofprelude.html" ID="ID_1705533866" CREATED="1415041942678" MODIFIED="1415041942678" LINK="http://www.letu.edu/people/jaytevis/Programming-Languages/Haskell/tourofprelude.html"/>
</node>
<node TEXT="pred :: Enum a =&gt; a -&gt; a. Returns predecessor.&#xa;succ :: similar" ID="ID_1214727882" CREATED="1415042048342" MODIFIED="1415043149581">
<node TEXT="applied to a value of an enumerated type returns the predecessor (previous value in the enumeration) of its argument. If its argument is the first value in an enumeration an error will occur." ID="ID_1969351285" CREATED="1415042056661" MODIFIED="1415042057488"/>
</node>
<node TEXT="repeat :: a -&gt; [a]. Returns an infinite list." ID="ID_1402287104" CREATED="1415042111386" MODIFIED="1415042119973"/>
<node TEXT="replicate :: Int -&gt; a -&gt; [a]" ID="ID_1416854302" CREATED="1415042132098" MODIFIED="1415042132685">
<node TEXT="given an integer (positive or zero) and a value, returns a list containing the specified number of instances of that value" ID="ID_1500490840" CREATED="1415042140369" MODIFIED="1415042141261"/>
</node>
<node TEXT="the value &quot;undefined&quot; is a member of every type" ID="ID_645795786" CREATED="1415043194376" MODIFIED="1415043201267"/>
<node ID="ID_361949572" CREATED="1415043281052" MODIFIED="1415043281052"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <div class="name" style="font-size: 14pt">
      until
    </div>
  </body>
</html>
</richcontent>
<node ID="ID_328050183" CREATED="1415043281053" MODIFIED="1415043281053"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td class="header" style="font-style: italic">
          type:
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1170867910" CREATED="1415043281055" MODIFIED="1415043281055"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td>
          <span class="type" style="font-size: 12pt; font-family: monospace; color: green"><font size="12pt" face="monospace" color="green">until :: (a -&gt; Bool) -&gt; (a -&gt; a) -&gt; a -&gt; a</font></span>
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_842503158" CREATED="1415043281056" MODIFIED="1415043281056"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td class="header" style="font-style: italic">
          description:
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1974972651" CREATED="1415043281057" MODIFIED="1415043281057"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td>
          <span class="description">given a predicate, a unary function and a value, it recursively re--applies the function to the value until the predicate is satisfied. If the predicate is never satisfied until will not terminate.</span>
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_57679231" CREATED="1415043294667" MODIFIED="1415043294667"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" charset="utf-8" cellspacing="5">
      <tr valign="top">
        <td class="header" style="font-style: italic">
          <br class="Apple-interchange-newline"/>
          usage:
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
<node ID="ID_743935921" CREATED="1415043294668" MODIFIED="1415043294668"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" charset="utf-8" cellspacing="5">
      <tr valign="top">
        <td>
          <pre>Prelude&gt; until (&gt;1000) (*2) 1</pre>
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_153129411" CREATED="1415043294669" MODIFIED="1415043294669"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" charset="utf-8" cellspacing="5">
      <tr valign="top">
        <td>
          <pre>1024</pre>
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node ID="ID_874864965" CREATED="1415043347190" MODIFIED="1415043347190"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <div class="name" style="font-size: 14pt">
      zipWith
    </div>
  </body>
</html>
</richcontent>
<node ID="ID_885601970" CREATED="1415043347191" MODIFIED="1415043347191"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td class="header" style="font-style: italic">
          type:
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_728244597" CREATED="1415043347192" MODIFIED="1415043347192"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td>
          <span class="type" style="font-size: 12pt; font-family: monospace; color: green"><font size="12pt" face="monospace" color="green">zipWith :: (a -&gt; b -&gt; c) -&gt; [a] -&gt; [b] -&gt; [c]</font></span>
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1284162359" CREATED="1415043347193" MODIFIED="1415043347193"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td class="header" style="font-style: italic">
          description:
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_726099697" CREATED="1415043347194" MODIFIED="1415043347194"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td>
          <span class="description">applied to a binary function and two lists, returns a list containing elements formed be applying the function to corresponding elements in the lists.</span>
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1299160441" CREATED="1415043347195" MODIFIED="1415043347195"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td class="header" style="font-style: italic">
          definition:
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
<node ID="ID_1658382091" CREATED="1415043347196" MODIFIED="1415043347196"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td>
          <pre>zipWith z (a:as) (b:bs) = z a b : zipWith z as bs</pre>
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1055850660" CREATED="1415043347197" MODIFIED="1415043347197"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td>
          <pre>zipWith _ _ _ = []</pre>
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
</node>
<node ID="ID_904863329" CREATED="1415043347198" MODIFIED="1415043347198"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td class="header" style="font-style: italic">
          usage:
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
<node ID="ID_1634079326" CREATED="1415043347199" MODIFIED="1415043347199"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td>
          <pre>Prelude&gt; zipWith (+) [1..5] [6..10]</pre>
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1741586888" CREATED="1415043347200" MODIFIED="1415043347200"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <table style="font-family: Times; word-spacing: 0px; letter-spacing: normal; text-indent: 0px; text-transform: none" cellspacing="5">
      <tr valign="top">
        <td>
          <pre>[7, 9, 11, 13, 15]</pre>
        </td>
      </tr>
    </table>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="(!!)" ID="ID_1132412353" CREATED="1415043357822" MODIFIED="1415043360433">
<node TEXT="index into a list" ID="ID_51992824" CREATED="1415043360613" MODIFIED="1415043364073"/>
</node>
<node TEXT="three exponent functions: **, ^ and ^^" ID="ID_319919919" CREATED="1415043403599" MODIFIED="1415043417049"/>
</node>
</node>
<node TEXT="define" ID="ID_1762300285" CREATED="1412744621107" MODIFIED="1412744622095">
<node TEXT="within" ID="ID_268894862" CREATED="1412744660456" MODIFIED="1412744665443">
<node TEXT="doubleMe x = x + x" ID="ID_813423549" CREATED="1412743588208" MODIFIED="1412743589164"/>
<node TEXT="prefix with &quot;let&quot; to define from interpreter" ID="ID_1439677897" CREATED="1412744251468" MODIFIED="1412745328821"/>
</node>
<node TEXT="no order needed on their definitions" ID="ID_437621034" CREATED="1412743919937" MODIFIED="1412743927677">
<node TEXT="lazy eval, I think" ID="ID_1129863739" CREATED="1412743930136" MODIFIED="1412743933413"/>
<node TEXT="but within function, the order of definitions (e.g. for different possible arguments) matters a lot" ID="ID_1465249091" CREATED="1412882458511" MODIFIED="1412882472649">
<node TEXT="see, e.g., guards and patterns" ID="ID_1990569605" CREATED="1412882479765" MODIFIED="1412882484807"/>
</node>
</node>
<node TEXT="pattern matching on types" ID="ID_979824862" CREATED="1413587744643" MODIFIED="1413587751551">
<node TEXT="suspected purpose" ID="ID_1206616750" CREATED="1417582113664" MODIFIED="1417582210122">
<node TEXT="I suspect the pattern matching [for which that it puzzles me is recorded somewhere in com use.mm] is useful in that it can match not against different types, but different constructors in the same type." ID="ID_278465853" CREATED="1417582114833" MODIFIED="1417582114833"/>
<node TEXT="earlier: &quot;why?&quot;" ID="ID_755372140" CREATED="1417581841358" MODIFIED="1417582215402">
<node TEXT="I don&apos;t see to be able to match more than one type per argument, so why bother? Is it to save the little bit of typing in a type signature?" ID="ID_1449184557" CREATED="1417581848645" MODIFIED="1417581881536"/>
<node TEXT="example" ID="ID_914905758" CREATED="1417581884492" MODIFIED="1417581885800">
<node TEXT="punchline: adding a signature deletes the previous" ID="ID_604156161" CREATED="1417581911085" MODIFIED="1417581932695"/>
<node TEXT="code" ID="ID_132276178" CREATED="1417581908389" MODIFIED="1417581909920">
<node TEXT="run this" ID="ID_832804852" CREATED="1417581890677" MODIFIED="1417581891704">
<node TEXT="data X = X Int deriving Show" ID="ID_1879944626" CREATED="1417581886141" MODIFIED="1417581886141"/>
<node TEXT="data Y = Y Float deriving Show" ID="ID_1736435365" CREATED="1417581886141" MODIFIED="1417581886141"/>
<node TEXT="let f (X a) = a+1" ID="ID_1120667317" CREATED="1417581886142" MODIFIED="1417581886142"/>
<node TEXT="f (X 1)" ID="ID_148136580" CREATED="1417581886143" MODIFIED="1417581886143"/>
<node TEXT="let f (Y a) = a-1" ID="ID_1303849483" CREATED="1417581886143" MODIFIED="1417581886143"/>
<node TEXT="f (X 1)" ID="ID_1180675992" CREATED="1417581886143" MODIFIED="1417581886143"/>
<node TEXT="f (Y 1.5)" ID="ID_1789188448" CREATED="1417581886144" MODIFIED="1417581886144"/>
</node>
<node TEXT="gives this" ID="ID_903645196" CREATED="1417581893485" MODIFIED="1417581897328">
<node TEXT="&gt; data X = X Int deriving Show" ID="ID_1758870000" CREATED="1417581907023" MODIFIED="1417581907023"/>
<node TEXT="&gt; data Y = Y Float deriving Show" ID="ID_459896800" CREATED="1417581907023" MODIFIED="1417581907023"/>
<node TEXT="&gt; let f (X a) = a+1" ID="ID_202793097" CREATED="1417581907026" MODIFIED="1417581907026"/>
<node TEXT="&gt; f (X 1)" ID="ID_466049387" CREATED="1417581907027" MODIFIED="1417581907027"/>
<node TEXT="2" ID="ID_1262035181" CREATED="1417581907027" MODIFIED="1417581907027"/>
<node TEXT="&gt; let f (Y a) = a-1" ID="ID_983455608" CREATED="1417581907028" MODIFIED="1417581907028"/>
<node TEXT="&gt; f (X 1)" ID="ID_1112920658" CREATED="1417581907028" MODIFIED="1417581907028"/>
<node TEXT="&lt;interactive&gt;:29:4:" ID="ID_1663056653" CREATED="1417581907028" MODIFIED="1417581907028">
<node TEXT="Couldn&apos;t match expected type &#x2018;Y&#x2019; with actual type &#x2018;X&#x2019;" ID="ID_1975140647" CREATED="1417581907029" MODIFIED="1417581907029"/>
<node TEXT="In the first argument of &#x2018;f&#x2019;, namely &#x2018;(X 1)&#x2019;" ID="ID_1678180691" CREATED="1417581907029" MODIFIED="1417581907029"/>
<node TEXT="In the expression: f (X 1)" ID="ID_763132085" CREATED="1417581907029" MODIFIED="1417581907029"/>
</node>
<node TEXT="&gt; f (Y 1.5)" ID="ID_1597798005" CREATED="1417581907029" MODIFIED="1417581907029"/>
<node TEXT="0.5" ID="ID_330914066" CREATED="1417581907029" MODIFIED="1417581907029"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="&quot;how&quot;" ID="ID_1198183103" CREATED="1417581835606" MODIFIED="1417581837817">
<node TEXT="&gt; data X = X Int deriving Show&#xa;&gt; let f (X a) = a+1&#xa;&gt; f (X 1)&#xa;2&#xa;&gt;" ID="ID_575513198" CREATED="1413587763761" MODIFIED="1413587765189"/>
</node>
</node>
<node TEXT="defining an infix function" ID="ID_1475025641" CREATED="1412878806841" MODIFIED="1412878821229">
<node TEXT="equivalent to the other way" ID="ID_1845411030" CREATED="1412878825608" MODIFIED="1412878828738"/>
<node TEXT="myCompare :: (Ord a) =&gt; a -&gt; a -&gt; Ordering&#xa;a `myCompare` b&#xa;    | a &gt; b     = GT&#xa;    | a == b    = EQ&#xa;    | otherwise = LT" ID="ID_427035011" CREATED="1412878811825" MODIFIED="1412878812676"/>
</node>
</node>
<node TEXT="syntax in" ID="ID_1567810425" CREATED="1412876527471" MODIFIED="1418939759051">
<node TEXT="&quot;control flow&quot;?" LOCALIZED_STYLE_REF="default" ID="ID_1912724459" CREATED="1413178717249" MODIFIED="1413178732528">
<node TEXT="pattern matching" ID="ID_692474297" CREATED="1412876525167" MODIFIED="1412876527250">
<node TEXT="in function arguments" ID="ID_806728375" CREATED="1412876782552" MODIFIED="1413178681333">
<node TEXT="lucky :: (Integral a) =&gt; a -&gt; String &#xa;lucky 7 = &quot;LUCKY NUMBER SEVEN!&quot; &#xa;lucky x = &quot;Sorry, you&apos;re out of luck, pal!&quot;" ID="ID_131389669" CREATED="1412876534541" MODIFIED="1412876535331"/>
</node>
<node TEXT="order of def&apos;s matters" ID="ID_157976438" CREATED="1412876554349" MODIFIED="1417582305857">
<node ID="ID_635550298" CREATED="1417582306323" MODIFIED="1417582306323"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      patterns are checked top to bottom
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="&quot;non-exhaustive patterns&quot; error" ID="ID_662790076" CREATED="1412876803590" MODIFIED="1412876834074">
<node TEXT="can avoid by including a catch-all as the last" ID="ID_950444765" CREATED="1412876844194" MODIFIED="1413178642417"/>
</node>
<node TEXT="in an input pair" ID="ID_1850863366" CREATED="1412877032780" MODIFIED="1412877047809">
<node TEXT="addVectors :: (Num a) =&gt; (a, a) -&gt; (a, a) -&gt; (a, a) &#xa;addVectors (x1, y1) (x2, y2) = (x1 + x2, y1 + y2)" ID="ID_1325013159" CREATED="1412877034635" MODIFIED="1412877035551"/>
</node>
<node TEXT="in a list comp" ID="ID_469567024" CREATED="1412877159934" MODIFIED="1412877163553">
<node TEXT="ghci&gt; let xs = [(1,3), (4,3), (2,4), (5,3), (5,6), (3,1)] &#xa;ghci&gt; [a+b | (a,b) &lt;- xs] &#xa;[4,7,6,8,11,4]" ID="ID_345952193" CREATED="1412877164095" MODIFIED="1412877164811"/>
</node>
<node TEXT="colons for lists" ID="ID_630102103" CREATED="1412877336886" MODIFIED="1412877346979">
<node TEXT="x:xs" ID="ID_130206243" CREATED="1412877284106" MODIFIED="1412877286439">
<node TEXT="can match against lists of length 1 or more" ID="ID_1698632585" CREATED="1412877286683" MODIFIED="1412877298613"/>
<node TEXT="if the list is length 1, xs is assigned the empty list" ID="ID_476777433" CREATED="1412877298800" MODIFIED="1412877309348"/>
</node>
<node TEXT="x:y:z:zs" ID="ID_1012579989" CREATED="1412877332126" MODIFIED="1412877334977">
<node ID="ID_802124315" CREATED="1412877335280" MODIFIED="1412877335280"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      It will only match against lists that have three elements or more.
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="as operands, wrap in parens" ID="ID_1571298306" CREATED="1412877875621" MODIFIED="1412877927027">
<node TEXT="tell :: (Show a) =&gt; [a] -&gt; String&#xa;tell [] = &quot;The list is empty&quot;&#xa;tell (x:[]) = &quot;The list has one element: &quot; ++ show x&#xa;tell (x:y:[]) = &quot;The list has two elements: &quot; ++ show x ++ &quot; and &quot; ++ show y&#xa;tell (x:y:_) = &quot;This list is long. The first two elements are: &quot; ++ show x ++ &quot; and &quot; ++ show y" ID="ID_1978014183" CREATED="1412877887692" MODIFIED="1412877888565"/>
</node>
</node>
<node TEXT="(tail-?) recursion on lists" ID="ID_261406024" CREATED="1412878016328" MODIFIED="1412878027117">
<node TEXT="length&apos; :: (Num b) =&gt; [a] -&gt; b&#xa;length&apos; [] = 0&#xa;length&apos; (_:xs) = 1 + length&apos; xs" ID="ID_720952129" CREATED="1412878019080" MODIFIED="1412878019748"/>
</node>
<node TEXT="naming patterns" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_401630044" CREATED="1412878207079" MODIFIED="1412878211976">
<node TEXT="&quot;as patterns&quot;" ID="ID_1670173032" CREATED="1412878212422" MODIFIED="1412878215610">
<node TEXT="an &quot;as pattern&quot; is a noun" ID="ID_1204424209" CREATED="1412878215830" MODIFIED="1412878224825"/>
</node>
<node TEXT="capital all@(x:xs) = &quot;The first letter of &quot; ++ all ++ &quot; is &quot; ++ [x]" ID="ID_1933058563" CREATED="1412878226894" MODIFIED="1412878227410"/>
</node>
</node>
<node TEXT="guards" ID="ID_709561855" CREATED="1412878517699" MODIFIED="1412878518622">
<node TEXT="simplest" ID="ID_388985712" CREATED="1412883515730" MODIFIED="1412883516724">
<node TEXT="bmiTell :: (RealFloat a) =&gt; a -&gt; String&#xa;bmiTell bmi &#xa;    | bmi &lt;= 30.0 = &quot;You&apos;re fat! Lose some weight, fatty!&quot;&#xa;    | otherwise   = &quot;You&apos;re a whale, congratulations!&quot;" ID="ID_1393454203" CREATED="1412878518821" MODIFIED="1412878519551"/>
</node>
<node TEXT="the one-case guard" ID="ID_206348963" CREATED="1412883500299" MODIFIED="1412883536883">
<node TEXT="is for falling through to the next pattern" ID="ID_351852539" CREATED="1412883505539" MODIFIED="1412883512117"/>
<node TEXT="take&apos; n _&#xa;    | n &lt;= 0   = []&#xa;take&apos; _ []     = []&#xa;take&apos; n (x:xs) = x : take&apos; (n-1) xs" ID="ID_5788110" CREATED="1412883502963" MODIFIED="1412883503670"/>
</node>
</node>
<node TEXT="guards and patterns" ID="ID_704634848" CREATED="1412878659862" MODIFIED="1412878662106">
<node TEXT="patterns check structure, guards check boolean conditions" ID="ID_66086834" CREATED="1412878625706" MODIFIED="1412878637299"/>
<node TEXT="if no guard catches, evaluation falls through to the next pattern" ID="ID_191342055" CREATED="1412878663814" MODIFIED="1412878680088"/>
</node>
<node TEXT="case expressions" ID="ID_1224835189" CREATED="1412880079430" MODIFIED="1412880081578">
<node TEXT="def&apos;n" ID="ID_868180633" CREATED="1412880082510" MODIFIED="1412880084641">
<node TEXT="by ex&apos;l" ID="ID_738150528" CREATED="1412880132073" MODIFIED="1412880133869">
<node TEXT="these are the same" ID="ID_1694412994" CREATED="1412880084854" MODIFIED="1412880087297"/>
<node TEXT="familiar" ID="ID_1133020742" CREATED="1412880096421" MODIFIED="1412880097313">
<node TEXT="head&apos; :: [a] -&gt; a &#xa;head&apos; [] = error &quot;No head for empty lists!&quot; &#xa;head&apos; (x:_) = x" ID="ID_1667395474" CREATED="1412880087718" MODIFIED="1412880088217"/>
</node>
<node TEXT="new" ID="ID_967339417" CREATED="1412880099037" MODIFIED="1412880099632">
<node TEXT="head&apos; :: [a] -&gt; a &#xa;head&apos; xs = case xs of [] -&gt; error &quot;No head for empty lists!&quot; &#xa;                      (x:_) -&gt; x" ID="ID_834377541" CREATED="1412880094717" MODIFIED="1412880095136"/>
</node>
</node>
<node TEXT="formal" ID="ID_1831399820" CREATED="1412880135441" MODIFIED="1412880136621">
<node TEXT="case expression of pattern -&gt; result &#xa;                   pattern -&gt; result &#xa;                   pattern -&gt; result &#xa;                   ..." ID="ID_1609976210" CREATED="1412880136769" MODIFIED="1412880137335"/>
</node>
</node>
<node TEXT="can be used anywhere" ID="ID_621139529" CREATED="1412880206883" MODIFIED="1412880209182"/>
</node>
<node TEXT="recursion ~ pattern matching" ID="ID_1506731772" CREATED="1412876683784" MODIFIED="1412876692636">
<node TEXT="factorial :: (Integral a) =&gt; a -&gt; a &#xa;factorial 0 = 1 &#xa;factorial n = n * factorial (n - 1)" ID="ID_50980789" CREATED="1412876686969" MODIFIED="1412876687996"/>
</node>
</node>
<node TEXT="variables, using &quot;where&quot;" ID="ID_577756518" CREATED="1412878884682" MODIFIED="1412879220246">
<node TEXT="simplest" ID="ID_28494167" CREATED="1412879313556" MODIFIED="1412879313918">
<node TEXT="ex&apos;l, with 1 va" ID="ID_838827331" CREATED="1412878895841" MODIFIED="1412879312977">
<node TEXT="bmiTell weight height&#xa;    | bmi &lt;= 18.5 = &quot;You&apos;re underweight, you emo, you!&quot;&#xa;    | bmi &lt;= 25.0 = &quot;You&apos;re supposedly normal. Pffft, I bet you&apos;re ugly!&quot;&#xa;    | bmi &lt;= 30.0 = &quot;You&apos;re fat! Lose some weight, fatty!&quot;&#xa;    | otherwise   = &quot;You&apos;re a whale, congratulations!&quot;&#xa;    where bmi = weight / height ^ 2" ID="ID_75318143" CREATED="1412878886122" MODIFIED="1412878886822"/>
</node>
<node TEXT="ex&apos;l, with many" ID="ID_1527108169" CREATED="1412878944117" MODIFIED="1412878947520">
<node TEXT="bmiTell weight height&#xa;    | bmi &lt;= skinny = &quot;You&apos;re underweight, you emo, you!&quot;&#xa;    | bmi &lt;= normal = &quot;You&apos;re supposedly normal. Pffft, I bet you&apos;re ugly!&quot;&#xa;    | bmi &lt;= fat    = &quot;You&apos;re fat! Lose some weight, fatty!&quot;&#xa;    | otherwise     = &quot;You&apos;re a whale, congratulations!&quot;&#xa;    where bmi = weight / height ^ 2&#xa;          skinny = 18.5&#xa;          normal = 25.0&#xa;          fat = 30.0" ID="ID_632907867" CREATED="1412878947724" MODIFIED="1412878948376"/>
</node>
</node>
<node TEXT="with pattern matching" ID="ID_1322214816" CREATED="1412879082914" MODIFIED="1412879320358">
<node TEXT="where bmi = weight / height ^ 2&#xa;      (skinny, normal, fat) = (18.5, 25.0, 30.0)" ID="ID_34373639" CREATED="1412879088666" MODIFIED="1412879102542"/>
<node TEXT="    where (f:_) = firstname&#xa;          (l:_) = lastname" ID="ID_1704824884" CREATED="1412879161163" MODIFIED="1412879161623"/>
</node>
<node TEXT="functions as variables" LOCALIZED_STYLE_REF="default" ID="ID_1113575911" CREATED="1412879203207" MODIFIED="1412879316700">
<node TEXT="calcBmis xs = [bmi w h | (w, h) &lt;- xs]&#xa;    where bmi weight height = weight / height ^ 2" ID="ID_1807571653" CREATED="1412879254067" MODIFIED="1412879254478"/>
</node>
<node TEXT="where clauses can nest" LOCALIZED_STYLE_REF="default" ID="ID_1130649328" CREATED="1412879282390" MODIFIED="1412879316972"/>
</node>
<node TEXT="let" ID="ID_5900489" CREATED="1412879367199" MODIFIED="1412879367738">
<node TEXT="simplest" ID="ID_1900392493" CREATED="1412879621104" MODIFIED="1412879621995">
<node TEXT="in a function" ID="ID_750712715" CREATED="1412879511698" MODIFIED="1412879580615">
<node TEXT="cylinder :: (RealFloat a) =&gt; a -&gt; a -&gt; a&#xa;cylinder r h =&#xa;    let sideArea = 2 * pi * r * h&#xa;        topArea = pi * r ^2&#xa;    in  sideArea + 2 * topArea" ID="ID_1634985730" CREATED="1412879510330" MODIFIED="1412879511277"/>
</node>
<node TEXT="in an expr" ID="ID_1387819526" CREATED="1412879580827" MODIFIED="1412879583535">
<node TEXT="ghci&gt; 4 * (let a = 9 in a + 1) + 2&#xa;42" ID="ID_1308405620" CREATED="1412879583947" MODIFIED="1412879584558"/>
</node>
<node TEXT="defining a local function" ID="ID_1883056691" CREATED="1412879607257" MODIFIED="1412879619419">
<node TEXT="ghci&gt; [let square x = x * x in (square 5, square 3, square 2)]&#xa;[(25,9,4)]" ID="ID_1218771605" CREATED="1412879604889" MODIFIED="1412879605317"/>
</node>
</node>
<node TEXT="in a list comp" ID="ID_1830187157" CREATED="1412879739317" MODIFIED="1412879844807">
<node TEXT="simplest" ID="ID_1772338340" CREATED="1412879846171" MODIFIED="1412879849606">
<node TEXT="looks like where in this case" ID="ID_1344233704" CREATED="1412879762235" MODIFIED="1412879766246"/>
<node TEXT="calcBmis xs = [bmi | (w, h) &lt;- xs, let bmi = w / h ^ 2]" ID="ID_1939089922" CREATED="1412879741909" MODIFIED="1412879742816"/>
</node>
<node TEXT="for predicates" ID="ID_920613495" CREATED="1412879851787" MODIFIED="1412879856182">
<node TEXT="for all of them" ID="ID_290296162" CREATED="1412879895049" MODIFIED="1412879896773">
<node TEXT="the let binding is available to the predicates too, not just the output function" ID="ID_1260736540" CREATED="1412879824829" MODIFIED="1412879860734"/>
<node TEXT="calcBmis xs = [bmi | (w, h) &lt;- xs, let bmi = w / h ^ 2, bmi &gt;= 25.0]" ID="ID_305420070" CREATED="1412879841044" MODIFIED="1412879841512"/>
</node>
<node TEXT="&quot;we could use a let in binding in a predicate and the names defined would only be visible to that predicate&quot;" ID="ID_1350928845" CREATED="1412879900345" MODIFIED="1412879904654"/>
</node>
</node>
<node TEXT="; separates inlined let bindings" ID="ID_1810815586" CREATED="1412879650581" MODIFIED="1412879657847">
<node TEXT="ghci&gt; (let a = 100; b = 200; c = 300 in a*b*c, let foo=&quot;Hey &quot;; bar = &quot;there!&quot; in foo ++ bar)&#xa;(6000000,&quot;Hey there!&quot;)" ID="ID_905794503" CREATED="1412879658116" MODIFIED="1412879658712"/>
</node>
</node>
<node TEXT="let vs. where" ID="ID_145798793" CREATED="1412879349009" MODIFIED="1412879352827">
<node TEXT="." ID="ID_325915934" CREATED="1412879534992" MODIFIED="1412879535387">
<node TEXT="let works anywhere, but does not span multiple guards" ID="ID_854675429" CREATED="1412879353048" MODIFIED="1412879408041"/>
<node TEXT="where only works at the end of a function, but it spans the guards in it" ID="ID_539470572" CREATED="1412879378294" MODIFIED="1412879397690"/>
</node>
<node TEXT="&quot;let bindings are expressions themselves. where bindings are just syntactic constructs.&quot;" LOCALIZED_STYLE_REF="default" ID="ID_1998518406" CREATED="1412879527928" MODIFIED="1414016709566"/>
</node>
<node TEXT="errors" ID="ID_318541427" CREATED="1412877777845" MODIFIED="1412877783993">
<node TEXT="head&apos; [] = error &quot;Can&apos;t call head on an empty list, dummy!&quot;" ID="ID_1625438010" CREATED="1412877780694" MODIFIED="1412877781121"/>
</node>
<node TEXT="declaring infixes" ID="ID_1195324530" CREATED="1412982862302" MODIFIED="1412982864617">
<node TEXT="&quot;We can define functions to be automatically infix by making them comprised of only special characters.&quot;" ID="ID_252634440" CREATED="1412982864910" MODIFIED="1412982868499"/>
<node TEXT="example: &quot;:-:&quot; (without the quotation marks)" ID="ID_1627701414" CREATED="1412982869269" MODIFIED="1412982878815"/>
</node>
<node TEXT="recursion" ID="ID_882832281" CREATED="1412882559605" MODIFIED="1412882560800">
<node TEXT="&quot;edge condition&quot;: where it grounds out" ID="ID_152210231" CREATED="1412882618674" MODIFIED="1412882623877"/>
<node TEXT="Haskell has no for or while loops" ID="ID_1369819231" CREATED="1412882656261" MODIFIED="1412882664464"/>
<node TEXT="efficient reversal" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_552643512" CREATED="1412883674289" MODIFIED="1414016811450">
<node TEXT="I&apos;m not sure I&apos;m right about this." ID="ID_1480638310" CREATED="1412883727612" MODIFIED="1412883731791">
<node TEXT="It could be there&apos;s an equally efficient way that starts from how to treat the output and infers how to treat the input." ID="ID_183206434" CREATED="1412883731964" MODIFIED="1412883752669"/>
<node TEXT="The example is from Learn You, chapter Recursion." ID="ID_1464227440" CREATED="1412883757218" MODIFIED="1412883765524"/>
</node>
<node TEXT="divide the input head to tail" ID="ID_104482041" CREATED="1412883686975" MODIFIED="1412883697010">
<node TEXT="do whatever that implies for the output" ID="ID_273577115" CREATED="1412883700254" MODIFIED="1412883708547"/>
</node>
<node TEXT="reverse&apos; :: [a] -&gt; [a]&#xa;reverse&apos; [] = []&#xa;reverse&apos; (x:xs) = reverse&apos; xs ++ [x]" ID="ID_986278518" CREATED="1412883680904" MODIFIED="1412883681644"/>
</node>
<node TEXT="creating an infinite thing" ID="ID_659093146" CREATED="1412883909724" MODIFIED="1412883915351">
<node TEXT="repeat&apos; :: a -&gt; [a]&#xa;repeat&apos; x = x:repeat&apos; x" ID="ID_57709466" CREATED="1412883915531" MODIFIED="1412883916184"/>
</node>
<node TEXT="max on lists is faster to define with recursion" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_421832459" CREATED="1412882704585" MODIFIED="1414016809890">
<node TEXT="fast" ID="ID_1408228354" CREATED="1412882959273" MODIFIED="1412882960468">
<node TEXT="maximum&apos; [x] = x&#xa;maximum&apos; (x:xs)&#xa;    | x &gt; maxTail = x&#xa;    | otherwise = maxTail&#xa;    where maxTail = maximum&apos; xs" ID="ID_738099435" CREATED="1412882810751" MODIFIED="1412882811154"/>
</node>
<node TEXT="even faster" ID="ID_593025591" CREATED="1412882961449" MODIFIED="1412882962709">
<node TEXT="(max is a function of two arguments)" ID="ID_55860416" CREATED="1412882964473" MODIFIED="1412882970356"/>
<node TEXT="maximum&apos; [x] = x&#xa;maximum&apos; (x:xs) = max x (maximum&apos; xs)" ID="ID_996672475" CREATED="1412882963393" MODIFIED="1412882963964"/>
</node>
</node>
</node>
</node>
<node TEXT="higher-order" ID="ID_582444255" CREATED="1412884515406" MODIFIED="1418939757610">
<node TEXT="currying" ID="ID_653120318" CREATED="1412884520932" MODIFIED="1412884566092">
<node TEXT="def&apos;n" ID="ID_1129770063" CREATED="1412884567889" MODIFIED="1412884568604">
<node TEXT="to curry = is to divide a function into single-argument functions" ID="ID_35630792" CREATED="1412884522325" MODIFIED="1412884571779"/>
</node>
<node TEXT="everything is curried" ID="ID_1027396045" CREATED="1412884557009" MODIFIED="1412884560228">
<node TEXT="ghci&gt; max 4 5&#xa;5&#xa;ghci&gt; (max 4) 5&#xa;5" ID="ID_933564072" CREATED="1412884552835" MODIFIED="1412884553509"/>
<node TEXT="Let&apos;s examine the type of max. It&apos;s max :: (Ord a) =&gt; a -&gt; a -&gt; a. That can also be written as max :: (Ord a) =&gt; a -&gt; (a -&gt; a). That could be read as: max takes an a and returns (that&apos;s the -&gt;) a function that takes an a and returns an a." ID="ID_1753779349" CREATED="1412884676086" MODIFIED="1412884676891"/>
</node>
<node TEXT="&quot;f y = g x y&quot; can be written &quot;f = g x&quot;" ID="ID_289159756" CREATED="1412900633857" MODIFIED="1412900650986"/>
<node TEXT="strange implication: application goes left" ID="ID_1392930353" CREATED="1412884781390" MODIFIED="1413178929112">
<node TEXT="in &quot;f a b c&quot;, first &quot;a is applied to f&quot;, then &quot;b is applied to (f of a)&quot; ..." ID="ID_388013511" CREATED="1412884785941" MODIFIED="1412884807102"/>
</node>
</node>
<node TEXT="partial application" ID="ID_1176114579" CREATED="1412884702492" MODIFIED="1412885300452">
<node TEXT="def&apos;n" ID="ID_1297077032" CREATED="1412885086452" MODIFIED="1414016834962">
<node TEXT="&quot;if we call a function with too few parameters, we get back a partially applied function&quot;" ID="ID_1969163519" CREATED="1412884705292" MODIFIED="1414016829003"/>
</node>
<node TEXT="for most infix functions" ID="ID_668426272" CREATED="1412885093260" MODIFIED="1412885198083">
<node TEXT="use parens" ID="ID_1993825193" CREATED="1412885158931" MODIFIED="1412885163758"/>
<node TEXT="isUpperAlphanum = (`elem` [&apos;A&apos;..&apos;Z&apos;])" ID="ID_1860994277" CREATED="1412885166275" MODIFIED="1412885166622"/>
<node TEXT="*Main&gt; let divideByTen = (/10)&#xa;*Main&gt; divideByTen 20&#xa;2.0&#xa;*Main&gt; let divideTenBy = (10/)&#xa;*Main&gt; divideTenBy 3&#xa;3.3333333333333335" ID="ID_1462744904" CREATED="1412885096003" MODIFIED="1412885119488"/>
</node>
<node TEXT="for - (subtract)" ID="ID_1012028549" CREATED="1412885192344" MODIFIED="1412885203827">
<node TEXT="(-4) means &quot;negative four&quot;" ID="ID_1092218675" CREATED="1412885204016" MODIFIED="1412885210522"/>
<node TEXT="so use &quot;subtract&quot; instead" ID="ID_140632178" CREATED="1412885210711" MODIFIED="1412885216721"/>
<node TEXT="*Main&gt; let subtractFour = (subtract 4)&#xa;*Main&gt; subtractFour 5&#xa;1" ID="ID_1276786826" CREATED="1412885263162" MODIFIED="1412885263749"/>
</node>
<node TEXT="&quot;No instance for (Show ...)&quot;" ID="ID_1061174097" CREATED="1412885315293" MODIFIED="1412885326815">
<node TEXT="happens if partial function application is an end-result the user asks to print to screen" ID="ID_404025847" CREATED="1412885328460" MODIFIED="1412885343422"/>
<node TEXT="the expression makes sense, but it can&apos;t be displayed" ID="ID_1334052590" CREATED="1412885346931" MODIFIED="1412885353541"/>
</node>
</node>
<node TEXT="order of application" ID="ID_1274242514" CREATED="1412896101553" MODIFIED="1412896103884">
<node TEXT="?" ID="ID_1041838322" CREATED="1413179400754" MODIFIED="1413179404573">
<node TEXT="applyTwice :: (a -&gt; a) -&gt; a -&gt; a&#xa;applyTwice f x = f (f x)&#xa;ghci&gt; applyTwice (++ &quot; HAHA&quot;) &quot;HEY&quot;&#xa;&quot;HEY HAHA HAHA&quot;&#xa;ghci&gt; applyTwice (&quot;HAHA &quot; ++) &quot;HEY&quot;&#xa;&quot;HAHA HAHA HEY&quot;" ID="ID_1879312902" CREATED="1412896104040" MODIFIED="1412896136514"/>
</node>
<node TEXT="flipping operand order" ID="ID_1500911632" CREATED="1412897506953" MODIFIED="1412897514373">
<node TEXT="equivalent" ID="ID_316510293" CREATED="1412897526913" MODIFIED="1412897528140">
<node TEXT="flip&apos; f = g&#xa;    where g x y = f y x" ID="ID_855101028" CREATED="1412897523768" MODIFIED="1412897524572"/>
<node TEXT="flip&apos; f x y = f y x" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_766549230" CREATED="1412897514713" MODIFIED="1412897531569">
<node TEXT="why was this not the recommended way?" ID="ID_383536486" CREATED="1412897532096" MODIFIED="1412897538445"/>
</node>
</node>
</node>
</node>
<node TEXT="lambdas" ID="ID_1696419715" CREATED="1412899767566" MODIFIED="1412899769913">
<node TEXT="simplest" ID="ID_1996165960" CREATED="1412899845729" MODIFIED="1412899859753">
<node TEXT="\a b -&gt; (a * 30 + 3) / b" ID="ID_1514423868" CREATED="1412899847672" MODIFIED="1412899851388"/>
</node>
<node TEXT="pattern matching" ID="ID_1234991173" CREATED="1412899899883" MODIFIED="1412899901751">
<node TEXT="labmdas can use it for operands" ID="ID_1276525596" CREATED="1412899901932" MODIFIED="1414016866399"/>
<node TEXT="but an operand can only be matched against one pattern" ID="ID_212607556" CREATED="1412899905442" MODIFIED="1412899914084">
<node TEXT="can&apos;t &quot;fall through&quot; to another definition" ID="ID_1563018729" CREATED="1412899914321" MODIFIED="1412899920644"/>
</node>
</node>
<node TEXT="brain stretching?" ID="ID_1624365029" CREATED="1412900097992" MODIFIED="1412900109262">
<node TEXT="r, shapes?" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_305907758" CREATED="1412900110063" MODIFIED="1412900113320"/>
<node TEXT="flip&apos; f = \x y -&gt; f y x" ID="ID_910823293" CREATED="1412900103952" MODIFIED="1412900105115"/>
</node>
</node>
<node TEXT="map and filter" ID="ID_1934172562" CREATED="1412898324361" MODIFIED="1412898326596">
<node TEXT="both achievable with list comp" ID="ID_424251323" CREATED="1412898329832" MODIFIED="1412898335795"/>
<node TEXT="map: def&apos;n" ID="ID_812198424" CREATED="1412897881594" MODIFIED="1414016921962">
<node TEXT="map _ [] = []&#xa;map f (x:xs) = f x : map f xs" ID="ID_1564199893" CREATED="1412897882562" MODIFIED="1412897883326"/>
</node>
<node TEXT="filter" ID="ID_1957565206" CREATED="1412898119251" MODIFIED="1412898122774">
<node TEXT="=" ID="ID_1641828181" CREATED="1412898125234" MODIFIED="1414016926673">
<node TEXT="filter :: (a -&gt; Bool) -&gt; [a] -&gt; [a]&#xa;filter _ [] = []&#xa;filter p (x:xs)&#xa;    | p x       = x : filter p xs&#xa;    | otherwise = filter p xs" ID="ID_1569953596" CREATED="1412898123211" MODIFIED="1412898123990"/>
</node>
<node TEXT="does not work on infinite lists" ID="ID_328920229" CREATED="1412903708484" MODIFIED="1412903711974"/>
</node>
</node>
<node TEXT="below possibly duplicable otherwise" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1678652331" CREATED="1413179329521" MODIFIED="1414016890682"/>
<node TEXT="folds" ID="ID_19248453" CREATED="1412900406741" MODIFIED="1412900408056">
<node TEXT="def&apos;n" ID="ID_1397014973" CREATED="1412900416163" MODIFIED="1412900417071">
<node TEXT="explicit" ID="ID_1274449015" CREATED="1413417087557" MODIFIED="1413417088601">
<node TEXT="from Data.List documentation" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1648416936" CREATED="1413417095934" MODIFIED="1413417360065">
<node TEXT="http://hackage.haskell.org/package/base-4.7.0.1/docs/Data-List.html" ID="ID_1674031846" CREATED="1413417356968" MODIFIED="1413417356968" LINK="http://hackage.haskell.org/package/base-4.7.0.1/docs/Data-List.html"/>
<node ID="ID_519106885" CREATED="1413417360335" MODIFIED="1413417360335"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      if there's a more general def, I don't know
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="foldl evaluates the leftmost first" ID="ID_288709084" CREATED="1413417223786" MODIFIED="1413417228780">
<node TEXT="foldl f z [x1, x2, ..., xn] == (...((z `f` x1) `f` x2) `f`...) `f` xn" ID="ID_1195826166" CREATED="1413417089662" MODIFIED="1413417090353"/>
</node>
<node TEXT="foldr evaluates the rightmost first" ID="ID_400563599" CREATED="1413417231434" MODIFIED="1413417236438">
<node TEXT="foldr f z [x1, x2, ..., xn] == x1 `f` (x2 `f` ... (xn `f` z)...)" ID="ID_765531315" CREATED="1413417189429" MODIFIED="1413417190031"/>
</node>
</node>
<node TEXT="by example" ID="ID_1034260727" CREATED="1412900469456" MODIFIED="1412900470924">
<node TEXT="equiv def&apos;s" LOCALIZED_STYLE_REF="default" ID="ID_1082307165" CREATED="1412900411502" MODIFIED="1412900431014">
<node TEXT="sum&apos; xs = foldl (\acc x -&gt; acc + x) 0 xs" ID="ID_1624802084" CREATED="1412900408589" MODIFIED="1412900409208"/>
<node TEXT="sum&apos; = foldl (+) 0" ID="ID_1615154986" CREATED="1412900427603" MODIFIED="1412900428048"/>
</node>
<node TEXT="&quot;sum xs&quot; returns the sum of numbers in a list, calculated from the left" ID="ID_327866141" CREATED="1412900432810" MODIFIED="1412900468044"/>
</node>
<node TEXT="foldl&apos;s 3 args" ID="ID_1866634114" CREATED="1412900481774" MODIFIED="1412900552894">
<node TEXT="a function" ID="ID_1458249618" CREATED="1412900553171" MODIFIED="1412900557787"/>
<node TEXT="a start value (&quot;accumulator&quot;)" ID="ID_1802136974" CREATED="1412900557998" MODIFIED="1412900558282"/>
<node TEXT="a list" ID="ID_1182709257" CREATED="1412900558575" MODIFIED="1412900559466"/>
</node>
<node TEXT="foldl called with 2 operands" ID="ID_1965658873" CREATED="1412900561998" MODIFIED="1412900568195">
<node TEXT="returns a function that lists can be applied to" ID="ID_844342770" CREATED="1412900568365" MODIFIED="1412900578665"/>
</node>
</node>
<node TEXT="appropriate purposes" ID="ID_858502090" CREATED="1412902445086" MODIFIED="1412902732230">
<node TEXT="try to use &quot;:&quot;, not &quot;++&quot;" ID="ID_100423483" CREATED="1412902701848" MODIFIED="1412902712598"/>
<node TEXT="build lists from lists with foldr" ID="ID_943704335" CREATED="1412902391666" MODIFIED="1412902396877">
<node TEXT="example: map" LOCALIZED_STYLE_REF="default" ID="ID_1631393377" CREATED="1412902342558" MODIFIED="1412902693163">
<node TEXT="map&apos; f xs = foldr (\x acc -&gt; f x : acc) [] xs" ID="ID_218235912" CREATED="1412902352053" MODIFIED="1412902352601"/>
</node>
<node TEXT="exception: to reverse, use foldl" ID="ID_1999299526" CREATED="1412902694279" MODIFIED="1412902698409"/>
</node>
<node TEXT="use foldr for infinite lists" ID="ID_1078611380" CREATED="1412902449309" MODIFIED="1412902453840"/>
</node>
<node TEXT="foldr1 and foldl1" ID="ID_1149014727" CREATED="1412902505544" MODIFIED="1412902509979">
<node TEXT="def&apos;n" ID="ID_1183701893" CREATED="1412902595863" MODIFIED="1412902597123">
<node TEXT="they take the elt at the end as the starting value of the acc, and proceed through the rest from there" ID="ID_1697447992" CREATED="1412902510223" MODIFIED="1412902535364"/>
</node>
<node TEXT="they need the list to have length &gt; 0" ID="ID_1755671757" CREATED="1412902584433" MODIFIED="1412902590931">
<node TEXT="unlike foldr and foldl" ID="ID_998144027" CREATED="1412902573650" MODIFIED="1412902584244"/>
</node>
<node TEXT="elegant" ID="ID_888616859" CREATED="1412902580057" MODIFIED="1412902581148">
<node TEXT="sum = foldl1 (+)" ID="ID_1960892538" CREATED="1412902552156" MODIFIED="1412902552487"/>
</node>
</node>
<node TEXT="beautiful uses" ID="ID_1381576747" CREATED="1412902929946" MODIFIED="1412902932612">
<node TEXT="filter" ID="ID_1169079650" CREATED="1412902948120" MODIFIED="1412902950851">
<node TEXT="returns a function that expects a list" ID="ID_319737274" CREATED="1412902956215" MODIFIED="1412902973425"/>
<node TEXT="code" ID="ID_600406488" CREATED="1412902976645" MODIFIED="1412902977216">
<node TEXT="filter&apos; p = foldr (\x acc -&gt; if p x then x : acc else acc) []" ID="ID_1475005837" CREATED="1412902951904" MODIFIED="1412902952611"/>
</node>
</node>
<node TEXT="product" ID="ID_978389298" CREATED="1412902985861" MODIFIED="1412902987248">
<node TEXT="product&apos; = foldr1 (*)" ID="ID_476150236" CREATED="1412902987589" MODIFIED="1412902988200"/>
</node>
<node TEXT="reverse" ID="ID_1465194373" CREATED="1412903239781" MODIFIED="1412903240849">
<node TEXT="reverse&apos; = foldl (flip (:)) []" ID="ID_1704184818" CREATED="1412903241070" MODIFIED="1412903244328"/>
</node>
<node TEXT="over lists, id = foldr (:) []" ID="ID_820376824" CREATED="1415082605059" MODIFIED="1415153434158">
<node TEXT="I might be misusing the term &quot;over&quot;." ID="ID_1645915526" CREATED="1415153439341" MODIFIED="1415153446673"/>
</node>
<node TEXT="elem" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1355242117" CREATED="1412902337752" MODIFIED="1412902945169">
<node TEXT="this was provided by the book Learn You" ID="ID_443845874" CREATED="1412902105036" MODIFIED="1412902111103"/>
<node TEXT="I suspect this is inefficient." LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_960164542" CREATED="1412902082472" MODIFIED="1412902088913">
<node TEXT="not aborting when it finds the searched-for thing" ID="ID_454755501" CREATED="1412902089614" MODIFIED="1412902098242"/>
</node>
<node TEXT="elem&apos; y ys = foldl (\acc x -&gt; if x == y then True else acc) False ys" ID="ID_65559466" CREATED="1412902078913" MODIFIED="1412902079571"/>
</node>
</node>
<node TEXT="scan" ID="ID_1474167781" CREATED="1412903500902" MODIFIED="1412903504801">
<node TEXT="like foldl, but report all the intermediate states" ID="ID_847012707" CREATED="1412903505070" MODIFIED="1412903517592"/>
<node TEXT="ghci&gt; scanl (+) 0 [3,5,2,1]&#xa;[0,3,8,10,11]&#xa;ghci&gt; scanr (+) 0 [3,5,2,1]&#xa;[11,8,3,1,0]&#xa;ghci&gt; scanl1 (\acc x -&gt; if x &gt; acc then x else acc) [3,4,5,3,7,9,2,1]&#xa;[3,4,5,5,7,9,9,9]&#xa;ghci&gt; scanl (flip (:)) [] [3,2,1]&#xa;[[],[3],[2,3],[1,2,3]]" ID="ID_281867146" CREATED="1412903522963" MODIFIED="1412903523256"/>
</node>
</node>
<node TEXT="&quot;$&quot; and &quot; &quot;: function application" ID="ID_812669880" CREATED="1412904050055" MODIFIED="1413766420415">
<node TEXT="&quot;$&quot; is distinct from &quot; &quot; in that" ID="ID_1415680021" CREATED="1412904061060" MODIFIED="1413766429508">
<node TEXT="$&apos;s precedence is least, not first" ID="ID_500491074" CREATED="1412904093571" MODIFIED="1412904097668"/>
<node TEXT="$ is right-assoc, not left-" ID="ID_274641448" CREATED="1412904098009" MODIFIED="1412904102867">
<node TEXT="x $ y $ z = x $ (y $ z)" ID="ID_648629914" CREATED="1413227233819" MODIFIED="1413227255848"/>
</node>
</node>
<node TEXT="mapping $ over [functions]" ID="ID_859816989" CREATED="1412904218230" MODIFIED="1412904231551">
<node TEXT="ghci&gt; map ($ 3) [(4+), (10*), (^2), sqrt]&#xa;[7.0,30.0,9.0,1.7320508075688772]" ID="ID_1410218166" CREATED="1412904232052" MODIFIED="1412904232831"/>
</node>
</node>
<node TEXT=".: function composition" ID="ID_1617445093" CREATED="1412904315621" MODIFIED="1412904318721">
<node TEXT="def&apos;n" ID="ID_931398635" CREATED="1412904322773" MODIFIED="1412904323399">
<node TEXT="(.) :: (b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; c&#xa;f . g = \x -&gt; f (g x)" ID="ID_683543799" CREATED="1412904318980" MODIFIED="1412904319520"/>
</node>
<node TEXT="can be clearer than lambda" ID="ID_1627881733" CREATED="1412904410068" MODIFIED="1412904414223">
<node TEXT="ghci&gt; map (negate . abs) [5,-3,-6,7,-3,2,-19,24]&#xa;[-5,-3,-6,-7,-3,-2,-19,-24]" ID="ID_214523496" CREATED="1412904414427" MODIFIED="1412904414935"/>
</node>
</node>
</node>
</node>
<node TEXT="type, kind, class" ID="ID_1139747631" CREATED="1413571658293" MODIFIED="1414718372840">
<node TEXT="type" ID="ID_194036480" CREATED="1414654159291" MODIFIED="1414911653079">
<font BOLD="false"/>
<node TEXT="syntax" ID="ID_1453366076" CREATED="1413571560806" MODIFIED="1413571571512">
<node TEXT="explicit types are capitalized" ID="ID_145442280" CREATED="1412873286243" MODIFIED="1412873291183"/>
<node TEXT=":: means &quot;has type of&quot;" ID="ID_196783523" CREATED="1412873308729" MODIFIED="1412873312436"/>
<node TEXT="to inspect: :t expr" ID="ID_1025229850" CREATED="1413571610403" MODIFIED="1413571619222">
<node TEXT="to examine an infix operator&apos;s type, put it in paren&apos;s" ID="ID_500691522" CREATED="1412874174316" MODIFIED="1412874184638"/>
</node>
</node>
<node TEXT=". below = three ways of (defining? declaring?)" ID="ID_275848824" CREATED="1414655817966" MODIFIED="1414655840633"/>
<node TEXT="&quot;data declaration&quot;" ID="ID_1430592050" CREATED="1413573023884" MODIFIED="1414655996173">
<font BOLD="false"/>
<node TEXT="data [context =&gt;] typename tv1 ... tvi = con1  c1t1 c1t2... c1tn |&#xa;                      ... | conm cmt1 ... cmtq&#xa;                    [deriving]" ID="ID_1328846412" CREATED="1413573030347" MODIFIED="1413573047614"/>
<node TEXT="tv1 ... tvi are the &quot;type variables&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1713033321" CREATED="1413573050538" MODIFIED="1413583216778">
<node TEXT="NOT fields or attributes" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1828750807" CREATED="1413573359261" MODIFIED="1413583217681"/>
<node TEXT="they permit abstractness" ID="ID_1943708867" CREATED="1413583224144" MODIFIED="1413583240466"/>
</node>
<node TEXT="con1 ... conm are the &quot;type constructors&quot;" ID="ID_1867769789" CREATED="1413573063784" MODIFIED="1413573384882"/>
<node TEXT="each constructor can take a different number of inputs" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_988017362" CREATED="1413573116669" MODIFIED="1413573130123"/>
<node TEXT="a simple example" ID="ID_310004475" CREATED="1413572953682" MODIFIED="1413572955989">
<node TEXT="code" ID="ID_503216259" CREATED="1413572974706" MODIFIED="1413572975219">
<node TEXT="data Shape = Circle Float Float Float | Rectangle Float Float Float Float deriving (Show)" ID="ID_185456255" CREATED="1412969180223" MODIFIED="1412969180762"/>
</node>
<node TEXT="a type with two value constructors (Circle and Rectangle) that implements Show" ID="ID_1175968262" CREATED="1412969185775" MODIFIED="1412969214473"/>
<node TEXT="the Show routine does not need to be specified if the user is okay with the default" ID="ID_217711536" CREATED="1412969326261" MODIFIED="1412969350765"/>
<node TEXT="links in" ID="ID_703685079" CREATED="1413573007374" MODIFIED="1413573009000"/>
</node>
<node TEXT="using parentheses" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1431818670" CREATED="1413583181644" MODIFIED="1413583186357">
<node TEXT="they can pair type declarations to variables that need them" ID="ID_325078774" CREATED="1413583427934" MODIFIED="1413583451873"/>
<node TEXT="data X a = X a deriving Show&#xa;data Wrap a = Wrap (X a) (X a) deriving Show&#xa;Wrap (X 3) (X 4)&#xa;Wrap (X &apos;a&apos;) (X &apos;b&apos;)" ID="ID_1778237170" CREATED="1413583187363" MODIFIED="1413583187976"/>
</node>
<node TEXT="field number &amp; type can vary across constructors" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_565664148" CREATED="1413583888477" MODIFIED="1413583953484">
<node TEXT="Prelude&gt; data X = HaveInt Int &#xf6; HaveBool Bool deriving Show&#xa;Prelude&gt; HaveInt 3&#xa;HaveInt 3&#xa;Prelude&gt; :t HaveInt 3&#xa;HaveInt 3 :: X&#xa;Prelude&gt; HaveBool True&#xa;HaveBool True&#xa;Prelude&gt; :t HaveBool True&#xa;HaveBool True :: X&#xa;Prelude&gt;" ID="ID_196800272" CREATED="1413583912267" MODIFIED="1413583912936"/>
</node>
</node>
<node TEXT="&quot;type declaration&quot;: synonym" ID="ID_141435935" CREATED="1412972451929" MODIFIED="1414655981008">
<node TEXT="how" ID="ID_607491664" CREATED="1413573623584" MODIFIED="1413573625145">
<node TEXT="introduces a synonym for a type" ID="ID_719913861" CREATED="1413573607151" MODIFIED="1413573613579"/>
<node TEXT="uses the same data constructors" ID="ID_780487969" CREATED="1413573613847" MODIFIED="1413573614266"/>
<node TEXT="simple example" ID="ID_1267788300" CREATED="1412972458792" MODIFIED="1413573590967">
<node TEXT="type String = [Char]" ID="ID_142506920" CREATED="1412972454832" MODIFIED="1412972455499"/>
</node>
<node TEXT="can be for type constructors, i.e. parameterized" ID="ID_411601015" CREATED="1412972932325" MODIFIED="1413180035767">
<node TEXT="type AssocList k v = [(k,v)]" ID="ID_1731573640" CREATED="1412972935005" MODIFIED="1412972935552"/>
</node>
</node>
<node TEXT="why: can make types more meaningful" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1201917612" CREATED="1412972837960" MODIFIED="1413573647065">
<node TEXT="type PhoneNumber = String &#xa;type Name = String &#xa;type PhoneBook = [(Name,PhoneNumber)]" ID="ID_1866529910" CREATED="1412972756286" MODIFIED="1412972756720"/>
<node TEXT="inPhoneBook :: Name -&gt; PhoneNumber -&gt; PhoneBook -&gt; Bool &#xa;inPhoneBook name pnumber pbook = (name,pnumber) `elem` pbook" ID="ID_1882646524" CREATED="1412972848079" MODIFIED="1412972848746"/>
</node>
<node TEXT="equality works across type synonyms" ID="ID_1047220500" CREATED="1425709657142" MODIFIED="1430972352344">
<node TEXT="Run this code (with :l):" ID="ID_166620135" CREATED="1425709663802" MODIFIED="1425709663802">
<node TEXT="type K1 = Int" ID="ID_1840142123" CREATED="1425709663803" MODIFIED="1425709663803"/>
<node TEXT="type K2 = Int" ID="ID_1875237536" CREATED="1425709663803" MODIFIED="1425709663803"/>
<node TEXT="k1 :: K1" ID="ID_127526803" CREATED="1425709663803" MODIFIED="1425709663803"/>
<node TEXT="k1 = 3" ID="ID_1834462702" CREATED="1425709663803" MODIFIED="1425709663803"/>
<node TEXT="k2 :: K2" ID="ID_1106331586" CREATED="1425709663803" MODIFIED="1425709663803"/>
<node TEXT="k2 = 3" ID="ID_27056368" CREATED="1425709663803" MODIFIED="1425709663803"/>
</node>
<node TEXT="Result:" ID="ID_1076569469" CREATED="1425709663802" MODIFIED="1425709663802">
<node TEXT=":l test" ID="ID_1122700820" CREATED="1425709663802" MODIFIED="1425709663802"/>
<node TEXT=":t (k1, k2)" ID="ID_403845061" CREATED="1425709663802" MODIFIED="1425709663802"/>
<node TEXT="k1 == k2" ID="ID_1669707650" CREATED="1425709663802" MODIFIED="1425709663802"/>
</node>
</node>
</node>
<node TEXT="&quot;newtype declaration&quot;: keep data, lose func assoc" ID="ID_1822079871" CREATED="1413234701426" MODIFIED="1414655989521">
<node TEXT="links in from &quot;functor/.../newtype&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_18536815" CREATED="1413414144782" MODIFIED="1413414204802"/>
<node TEXT="origin of notes" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_770620586" CREATED="1413414178459" MODIFIED="1413414204131">
<node TEXT="the Applicative Functor chapter" ID="ID_1706061559" CREATED="1413414187786" MODIFIED="1413414199996"/>
<node TEXT="not the types and classes chapter" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1817971032" CREATED="1413414167859" MODIFIED="1413414193477"/>
<node TEXT="in Learn You" ID="ID_1553544860" CREATED="1413414200968" MODIFIED="1413414202780"/>
</node>
<node TEXT="requires a new constructor" ID="ID_558012172" CREATED="1413573681699" MODIFIED="1413573711773"/>
<node TEXT="intro, via ZipList" ID="ID_1718007034" CREATED="1413234712569" MODIFIED="1413234896433">
<node TEXT="alternatives" ID="ID_1385545792" CREATED="1413234803066" MODIFIED="1413234804430"/>
<node TEXT="data declaration" ID="ID_522208696" CREATED="1413234747141" MODIFIED="1413234753913">
<node TEXT="alternatives" ID="ID_1408578637" CREATED="1413234803066" MODIFIED="1413234804430"/>
<node TEXT="data ZipList a = ZipList [a]" ID="ID_712048439" CREATED="1413234717168" MODIFIED="1413234717772"/>
<node TEXT="data ZipList a = ZipList { getZipList :: [a] }" ID="ID_1823843196" CREATED="1413234806507" MODIFIED="1413234806926">
<node TEXT="recall, this is &quot;record syntax&quot;" ID="ID_255813322" CREATED="1413234807578" MODIFIED="1413234813877"/>
</node>
</node>
<node TEXT="newtype declaration" ID="ID_1728947239" CREATED="1413234856006" MODIFIED="1413234859066">
<node TEXT="newtype ZipList a = ZipList { getZipList :: [a] }" ID="ID_1895486441" CREATED="1413234859415" MODIFIED="1413234859994"/>
</node>
</node>
<node TEXT="motivations" ID="ID_1185749594" CREATED="1413234898137" MODIFIED="1413235327418">
<node TEXT="saves overhead" ID="ID_622403192" CREATED="1413234900167" MODIFIED="1413234902452">
<node TEXT="using &quot;newtype&quot; instead of &quot;data&quot; lets Haskell know &quot;you&apos;re just using it to wrap an existing type into a new type (hence the name), because you want it to be the same internally but have a different type&quot;" ID="ID_1351415304" CREATED="1413234902775" MODIFIED="1413234942816"/>
</node>
<node TEXT="can reorder type variables" ID="ID_998462113" CREATED="1413235330468" MODIFIED="1413235337134">
<node TEXT="example" ID="ID_1741971684" CREATED="1413235348906" MODIFIED="1413235349837"/>
<node TEXT="newtype Pair b a = Pair { getPair :: (a,b) }" ID="ID_1074986004" CREATED="1413235341579" MODIFIED="1413235342575"/>
<node TEXT="that lets &quot;Pair x&quot; be made an instance of Functor, such that the first element of the pair is the one mapped over (and the second is of type x)" ID="ID_1420266882" CREATED="1413235350594" MODIFIED="1413235396241"/>
<node TEXT="as is done here" ID="ID_314326091" CREATED="1413235438790" MODIFIED="1413235443273">
<node TEXT="instance Functor (Pair c) where &#xa;    fmap f (Pair (x,y)) = Pair (f x, y)" ID="ID_1015328892" CREATED="1413235428662" MODIFIED="1413235437058"/>
</node>
</node>
<node TEXT="laziness and pattern matching" ID="ID_170960985" CREATED="1413236098584" MODIFIED="1413236100583">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_107410260" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="req: unary" ID="ID_488676428" CREATED="1413234964572" MODIFIED="1413234984425">
<node TEXT="I&apos;m making up that word" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1533811371" CREATED="1413234988665" MODIFIED="1413234992687"/>
<node TEXT="can only have one value constructor and that value constructor can only have one field" ID="ID_1518922607" CREATED="1413234966228" MODIFIED="1413234981253"/>
</node>
<node TEXT="deriving" ID="ID_1996119652" CREATED="1413235062303" MODIFIED="1413235063819">
<node TEXT="can derive from any class that the type &quot;inside the wrap&quot; derives" ID="ID_1507552012" CREATED="1413235063952" MODIFIED="1413235108274"/>
</node>
<node TEXT="no default inheritance" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_138328938" CREATED="1413236346266" MODIFIED="1413415169059">
<node TEXT="I&apos;m making up that phrase." LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_359522731" CREATED="1413236359994" MODIFIED="1413236363828"/>
<node TEXT="&quot;The new type also isn&apos;t automatically made an instance of the type classes that the original type belongs to&quot;" ID="ID_1421341212" CREATED="1413236364234" MODIFIED="1413236369599"/>
</node>
<node TEXT="newtype v. type (synonyms)" ID="ID_1393013947" CREATED="1413236163254" MODIFIED="1413236172008">
<node TEXT="&quot;type&quot; is for making synonyms" ID="ID_600944310" CREATED="1413236172844" MODIFIED="1413236178135"/>
<node TEXT="if a is a synonym for b, and x is an a and y is a b, x and y can be treated the same -- e.g. added to each other" ID="ID_436556674" CREATED="1413236178371" MODIFIED="1413236203293"/>
<node TEXT="if a is a newtype of b, and x is an a and y is a b, then they are different types, and they can&apos;t be treated the same without casting one to the other first" ID="ID_1008050005" CREATED="1413236166309" MODIFIED="1413236321426"/>
</node>
<node TEXT="speed, laziness and pattern matching" ID="ID_1604429273" CREATED="1413235534998" MODIFIED="1413416107474">
<node TEXT="links in from &quot;motivations&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_107410260" CREATED="1413236093600" MODIFIED="1434232678804"/>
<node TEXT="using newtype instead of data can allow Haskell to avoid evaluating things it might otherwise have to evaluate" ID="ID_683760216" CREATED="1413236031862" MODIFIED="1413236057158"/>
<node TEXT="deep, kind of eludes me" ID="ID_1927036780" CREATED="1413235860460" MODIFIED="1413235864214"/>
<node TEXT="ref&apos;c" ID="ID_13426518" CREATED="1413235899655" MODIFIED="1413235901004">
<node TEXT="see Learn You, chapter Functors, Applicative Functors and Monoids" ID="ID_398054541" CREATED="1413235885193" MODIFIED="1413235897003"/>
<node TEXT="start of passage" ID="ID_714548293" CREATED="1413235879641" MODIFIED="1413235881509">
<node TEXT="[failed to record]" ID="ID_576669599" CREATED="1413415143404" MODIFIED="1413415151039"/>
</node>
<node TEXT="end of passage" ID="ID_1024623845" CREATED="1413235873137" MODIFIED="1413235883972">
<node TEXT="it&apos;s more about making a direct conversion from one type to another." ID="ID_1963732423" CREATED="1413235875162" MODIFIED="1413235878781"/>
</node>
</node>
</node>
<node TEXT="casting" ID="ID_1485161772" CREATED="1413236312886" MODIFIED="1413236314587">
<node TEXT="uses &quot;the value constructor of our newtype and the function for extracting the value in its field&quot;" ID="ID_966684264" CREATED="1413236314854" MODIFIED="1413236316961"/>
</node>
</node>
<node TEXT="function type (and declaring it)" ID="ID_1258720752" CREATED="1412873545964" MODIFIED="1413178412481">
<node TEXT="addThree :: Int -&gt; Int -&gt; Int -&gt; Int&#xa;addThree x y z = x + y + z" ID="ID_670116123" CREATED="1412873548909" MODIFIED="1412873549591"/>
<node TEXT="The parameters are separated with -&gt; and there&apos;s no special distinction between the parameters and the return type." ID="ID_611060110" CREATED="1412873559811" MODIFIED="1412873561646"/>
</node>
<node TEXT="type variables" ID="ID_746604365" CREATED="1412873832436" MODIFIED="1412873837367">
<node TEXT="for expressing the type of polymorphic functions" ID="ID_1963190426" CREATED="1412873875774" MODIFIED="1413571590430"/>
<node TEXT="in this expr, &apos;a&apos; is a type var" ID="ID_878991368" CREATED="1412873843339" MODIFIED="1412873850215">
<node TEXT="ghci&gt; :t head&#xa;head :: [a] -&gt; a" ID="ID_463463066" CREATED="1412873835548" MODIFIED="1412873836400"/>
</node>
</node>
<node TEXT="constraints on type def&apos;s" ID="ID_571904122" CREATED="1412874255988" MODIFIED="1414655794778">
<node TEXT=".= &quot;class constraints&quot;" LOCALIZED_STYLE_REF="default" ID="ID_1079669101" CREATED="1413571700489" MODIFIED="1414655760643"/>
<node TEXT="def&apos;n + example" ID="ID_667745900" CREATED="1412874269251" MODIFIED="1412874280157">
<node TEXT="ghci&gt; :t (==)&#xa;(==) :: (Eq a) =&gt; a -&gt; a -&gt; Bool" ID="ID_309297954" CREATED="1412874258964" MODIFIED="1412874259663"/>
<node TEXT="the part before the =&gt; is a class constraint" ID="ID_97647113" CREATED="1412874259908" MODIFIED="1412874267070"/>
<node TEXT="*after* the constraint, it says it takes any two values that are the same type" ID="ID_1763546423" CREATED="1412874311703" MODIFIED="1412874362377"/>
<node TEXT="the constraint says those two inputs must implement the Eq typeclass" ID="ID_619932978" CREATED="1412874362649" MODIFIED="1412874381904"/>
</node>
<node TEXT="multiple constraints valid" ID="ID_947362683" CREATED="1412876047714" MODIFIED="1412876052805">
<node TEXT="Prelude&gt; :t fromIntegral&#xa;fromIntegral :: (Num b, Integral a) =&gt; a -&gt; b" ID="ID_275199768" CREATED="1412876053026" MODIFIED="1412876053630"/>
</node>
<node TEXT="multiple constraints on one var" ID="ID_927241073" CREATED="1412883232529" MODIFIED="1412883236372">
<node TEXT="if this is defined" ID="ID_440660708" CREATED="1412883264966" MODIFIED="1412883267634">
<node TEXT="replicate&apos; n x &#xa;    | n &lt;= 0    = [] &#xa;    | otherwise = x:replicate&apos; (n-1) x" ID="ID_538281945" CREATED="1412883269509" MODIFIED="1412883270130"/>
</node>
<node TEXT="then it has this type" ID="ID_798658355" CREATED="1412883270871" MODIFIED="1412883277176">
<node TEXT="replicate&apos; :: (Ord a, Num a) =&gt; a -&gt; t -&gt; [t]" ID="ID_159771815" CREATED="1412883237008" MODIFIED="1412883237660"/>
</node>
<node TEXT="because" ID="ID_426803703" CREATED="1412883278717" MODIFIED="1412883317791">
<node ID="ID_1446850685" CREATED="1412883318034" MODIFIED="1412883318034"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      the number is used both to be subtracted from (Num) and compared to (Ord)
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node TEXT="instances, built-in" ID="ID_1774470439" CREATED="1412745785828" MODIFIED="1414656020856">
<font BOLD="true"/>
<node TEXT="list" ID="ID_1662805403" CREATED="1412745731170" MODIFIED="1412926036658">
<font BOLD="false"/>
<node TEXT="low syntax, functions" ID="ID_997160979" CREATED="1413177930318" MODIFIED="1413177952968">
<node TEXT="ghci&gt; &apos;A&apos;:&quot; SMALL CAT&quot;&#xa;&quot;A SMALL CAT&quot;" ID="ID_807865404" CREATED="1412745752351" MODIFIED="1412745753227">
<node TEXT="generalized: &quot;atom : list of atomes&quot;" ID="ID_1663103692" CREATED="1412745810554" MODIFIED="1412745828116"/>
</node>
<node TEXT=": is not ++" ID="ID_51200060" CREATED="1412745845263" MODIFIED="1412745851522">
<node TEXT="++ is for two lists" ID="ID_1841780688" CREATED="1412745851726" MODIFIED="1412745854402"/>
<node TEXT=": takes unlike arguments" ID="ID_524241923" CREATED="1412745854598" MODIFIED="1412745861912"/>
</node>
<node TEXT="access: !!" ID="ID_1411609190" CREATED="1412746051125" MODIFIED="1412746054529">
<node TEXT="ghci&gt; &quot;Steve Buscemi&quot; !! 6&#xa;&apos;B&apos;" ID="ID_1513827269" CREATED="1412746058588" MODIFIED="1412746059456"/>
</node>
<node TEXT="head is one elt, tail is the rest" ID="ID_38750152" CREATED="1412746181956" MODIFIED="1412746189864"/>
<node TEXT="init = opposite of tail" ID="ID_975579986" CREATED="1412746206579" MODIFIED="1412746210853"/>
<node TEXT="null: True only if empty" ID="ID_1330379189" CREATED="1412746329012" MODIFIED="1412746335149"/>
<node TEXT="drop, take = the first n" ID="ID_686967538" CREATED="1412746384286" MODIFIED="1412746421430">
<node TEXT="if we try to take more elements than there are in the list, it just returns the list" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1363151728" CREATED="1412746405421" MODIFIED="1412746407239"/>
<node TEXT="ghci&gt; take 3 [5,4,3,2,1]&#xa;[5,4,3]&#xa;ghci&gt; take 1 [3,9,3]&#xa;[3]" ID="ID_1512063964" CREATED="1412746387239" MODIFIED="1412746387755"/>
</node>
<node TEXT="maximum, minimum: not abbreviated" ID="ID_262420407" CREATED="1412746429077" MODIFIED="1412746434360"/>
<node TEXT="sum" ID="ID_876214716" CREATED="1412746439802" MODIFIED="1412746440439"/>
<node TEXT="product" ID="ID_1530948533" CREATED="1412746440660" MODIFIED="1412746441767"/>
<node TEXT="elem = &quot;is in&quot;" ID="ID_138257308" CREATED="1412746456923" MODIFIED="1412746461805">
<node TEXT="for lists, not tuples" ID="ID_93487072" CREATED="1412874506776" MODIFIED="1412874511307"/>
<node TEXT="ghci&gt; 4 `elem` [3,4,5,6]&#xa;True&#xa;ghci&gt; 10 `elem` [3,4,5,6]&#xa;False" ID="ID_327597623" CREATED="1412746462026" MODIFIED="1412746462670"/>
</node>
<node TEXT="functions" ID="ID_461640762" CREATED="1412746546438" MODIFIED="1412746547602">
<node TEXT="range = [1..20]" ID="ID_1600062925" CREATED="1412746547767" MODIFIED="1412746564165">
<node TEXT="two dots, not three" ID="ID_226639303" CREATED="1412746564477" MODIFIED="1412746624794"/>
<node TEXT="strings" ID="ID_273265686" CREATED="1412746617841" MODIFIED="1412746621995">
<node TEXT="ghci&gt; [&apos;K&apos;..&apos;Z&apos;]&#xa;&quot;KLMNOPQRSTUVWXYZ&quot;" ID="ID_1608993835" CREATED="1412746597634" MODIFIED="1412746598149"/>
</node>
<node TEXT="step size" ID="ID_1574610504" CREATED="1412746614792" MODIFIED="1412746616324">
<node TEXT="ghci&gt; [3,6..20]&#xa;[3,6,9,12,15,18]" ID="ID_1205081954" CREATED="1412746616503" MODIFIED="1412746617011"/>
</node>
</node>
<node TEXT="replicate 3 10 = [10,10,10]" ID="ID_1506905752" CREATED="1412747257656" MODIFIED="1412747265283"/>
<node TEXT="zip" ID="ID_838949363" CREATED="1412748521292" MODIFIED="1412748522040">
<node TEXT="interleaves from two lists into a list of pairs" ID="ID_75653112" CREATED="1412748522228" MODIFIED="1412748573627"/>
<node TEXT="one can be infinite" ID="ID_116340537" CREATED="1412748613406" MODIFIED="1412748616354"/>
<node TEXT="len output = len shorter input" ID="ID_1128945560" CREATED="1412748594160" MODIFIED="1412748604675"/>
</node>
</node>
</node>
<node TEXT="repr" ID="ID_1503641961" CREATED="1412745968487" MODIFIED="1412745969123">
<node TEXT="[1,2,3] is actually just syntactic sugar for 1:2:3:[]" ID="ID_1605033401" CREATED="1412745969519" MODIFIED="1412745971898"/>
<node TEXT="elts know two things: self and succ" ID="ID_1493747104" CREATED="1412745996455" MODIFIED="1412746011085"/>
<node TEXT="the empty list has no head" ID="ID_1367875179" CREATED="1412746229840" MODIFIED="1412746279615">
<node TEXT="ghci&gt; head []&#xa;*** Exception: Prelude.head: empty list" ID="ID_1630666574" CREATED="1412746297925" MODIFIED="1412746299297"/>
</node>
</node>
<node TEXT="constraint: uniformity" ID="ID_966712732" CREATED="1412746107148" MODIFIED="1413177979516">
<node TEXT="elts must be the same type, recursively" ID="ID_1829358954" CREATED="1412746113443" MODIFIED="1412746118343">
<node TEXT="can&apos;t have a list that has some lists of characters and some lists of numbers." ID="ID_601725865" CREATED="1412746108605" MODIFIED="1412746109160"/>
</node>
<node TEXT="type &quot;[Char]&quot; means &quot;list of characters&quot;" ID="ID_1294564729" CREATED="1412873330575" MODIFIED="1412873341010"/>
</node>
<node TEXT="possible: infinite lists" ID="ID_1578624944" CREATED="1412747063538" MODIFIED="1413177985327">
<node TEXT="they can be multiplied" ID="ID_1809156131" CREATED="1412747097284" MODIFIED="1412747100519">
<node TEXT="[consider the expression] take 24 [13,26..]. Because Haskell is lazy, it won&apos;t try to evaluate the infinite list immediately" ID="ID_1007430277" CREATED="1412747100908" MODIFIED="1412747138819"/>
</node>
<node TEXT="from functions" ID="ID_706215644" CREATED="1412747229780" MODIFIED="1412747232671">
<node TEXT="rnage without upper limit" ID="ID_1211832807" CREATED="1412747068386" MODIFIED="1412747072565"/>
<node TEXT="repeat" ID="ID_555922037" CREATED="1412747206542" MODIFIED="1412747207290">
<node TEXT="ghci&gt; take 10 (repeat 5)&#xa;[5,5,5,5,5,5,5,5,5,5]" ID="ID_488572767" CREATED="1412747212702" MODIFIED="1412747212945"/>
</node>
<node TEXT="cycle" ID="ID_875558170" CREATED="1412747224461" MODIFIED="1412747225288">
<node TEXT="ghci&gt; take 10 (cycle [1,2,3])&#xa;[1,2,3,1,2,3,1,2,3,1]&#xa;ghci&gt; take 12 (cycle &quot;LOL &quot;)&#xa;&quot;LOL LOL LOL &quot;" ID="ID_1428477252" CREATED="1412747225653" MODIFIED="1412747226664"/>
</node>
</node>
</node>
<node TEXT="comparison" ID="ID_263681770" CREATED="1412746159107" MODIFIED="1412746160262">
<node TEXT="When using &lt;, &lt;=, &gt; and &gt;= to compare lists, they are compared in lexicographical order. First the heads are compared" ID="ID_1422744188" CREATED="1412746160538" MODIFIED="1412746161118"/>
</node>
<node TEXT="strings are lists" ID="ID_525550153" CREATED="1412745464007" MODIFIED="1412745466936">
<node TEXT="ghci&gt; [&apos;w&apos;,&apos;o&apos;] ++ [&apos;o&apos;,&apos;t&apos;]&#xa;&quot;woot&quot;" ID="ID_688630091" CREATED="1412745467175" MODIFIED="1412745467706"/>
</node>
</node>
<node TEXT="comprehension" ID="ID_1112559888" CREATED="1412747317004" MODIFIED="1412925949838">
<node TEXT="filter = &quot;predicate&quot;" ID="ID_1737445239" CREATED="1412747363015" MODIFIED="1412747554200">
<node TEXT="is the contstraint limiting the specified set, esp. an inequality" ID="ID_560991062" CREATED="1412747385917" MODIFIED="1412747418906"/>
</node>
<node TEXT="(more) basic syntax" ID="ID_334689530" CREATED="1412747597468" MODIFIED="1413178117755">
<node TEXT="boomBangs xs = [ if x &lt; 10 then &quot;BOOM!&quot; else &quot;BANG!&quot; | x &lt;- xs, odd x]&#xa;ghci&gt; boomBangs [7..13]&#xa;[&quot;BOOM!&quot;,&quot;BOOM!&quot;,&quot;BANG!&quot;,&quot;BANG!&quot;]" ID="ID_1588046331" CREATED="1412747599524" MODIFIED="1412747640150"/>
<node TEXT="more parts of speech" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1965571490" CREATED="1412747319725" MODIFIED="1413178104458">
<node TEXT="predicate is interesting, the others are obvious" ID="ID_221492396" CREATED="1412747372007" MODIFIED="1412747539734"/>
<node TEXT="more" ID="ID_1986662309" CREATED="1412747540585" MODIFIED="1412747541101">
<node TEXT="at least in one direction, if all options supplied" ID="ID_1008960071" CREATED="1412747376214" MODIFIED="1412747382273"/>
<node TEXT="The part before the pipe is called the output function, x is the variable, N is the input set and x &lt;= 10 is the predicate." ID="ID_575184832" CREATED="1412747321933" MODIFIED="1412747322456"/>
</node>
</node>
</node>
<node TEXT="multiple predicates" ID="ID_1886440113" CREATED="1412747689660" MODIFIED="1412747692615">
<node TEXT="ghci&gt; [ x | x &lt;- [10..20], x /= 13, x /= 15, x /= 19]" ID="ID_1812181373" CREATED="1412747692788" MODIFIED="1412747693383"/>
</node>
<node TEXT="multiple input lists" ID="ID_1277645178" CREATED="1412747747897" MODIFIED="1412747750498">
<node TEXT="the outer product is taken" ID="ID_885106322" CREATED="1412747750727" MODIFIED="1412747754554"/>
</node>
<node TEXT="_, the unreferred-to variable" ID="ID_473011715" CREATED="1412747804231" MODIFIED="1412747812170">
<node TEXT="length&apos; xs = sum [1 | _ &lt;- xs]" ID="ID_1856361360" CREATED="1412747812878" MODIFIED="1412747813882"/>
</node>
<node TEXT="nested" ID="ID_120754015" CREATED="1412748016014" MODIFIED="1412748020000">
<node TEXT="remove all odd numbers from the level-1 lists in a level-0 (top) list" ID="ID_1840780501" CREATED="1412748021437" MODIFIED="1412748062116"/>
<node TEXT="ghci&gt; let xxs = [[1,3,5,2,3,1,2,4,5],[1,2,3,4,5,6,7,8,9],[1,2,4,2,1,6,3,1,3,2,3,6]]&#xa;ghci&gt; [ [ x | x &lt;- xs, even x ] | xs &lt;- xxs]&#xa;[[2,2,4],[2,4,6,8],[2,4,2,6,2,6]]" ID="ID_1328685094" CREATED="1412748020429" MODIFIED="1412748021025"/>
</node>
</node>
<node TEXT="tuples" ID="ID_765274231" CREATED="1412748146927" MODIFIED="1412748147827">
<node TEXT="length is part of its type" ID="ID_1394646106" CREATED="1412748149152" MODIFIED="1412748156730">
<node TEXT="(2,2) is of a different type than (2,2,2)" ID="ID_635294222" CREATED="1412748157294" MODIFIED="1412748165913">
<node TEXT="not so lists" ID="ID_941444689" CREATED="1412748166111" MODIFIED="1412748167810"/>
</node>
</node>
<node TEXT="type of element is not part of its type" ID="ID_1863373923" CREATED="1412748294211" MODIFIED="1412748299246">
<node TEXT="unlike list, it can vary" ID="ID_85818699" CREATED="1413178203815" MODIFIED="1413178209106"/>
</node>
<node TEXT="the empty tuple is a singleton type" ID="ID_1831867548" CREATED="1412873747523" MODIFIED="1412873753791"/>
<node TEXT="functions on pairs" LOCALIZED_STYLE_REF="default" ID="ID_1731057171" CREATED="1412748421497" MODIFIED="1412748470344">
<node TEXT="defined *only* for pairs" ID="ID_1080378453" CREATED="1412748429168" MODIFIED="1412748478887"/>
<node TEXT="fst = first elt of" ID="ID_1698096826" CREATED="1412748433351" MODIFIED="1412748439986"/>
<node TEXT="snd = second elt of" ID="ID_1873605353" CREATED="1412748454439" MODIFIED="1412748457297"/>
</node>
<node TEXT="shapes" ID="ID_5881419" CREATED="1413178232699" MODIFIED="1413178245309">
<node TEXT="opposite of list" ID="ID_1656988167" CREATED="1412748300074" MODIFIED="1413178246925"/>
</node>
</node>
<node TEXT="simpler ones" ID="ID_445329021" CREATED="1412925929157" MODIFIED="1412926043678">
<font BOLD="true"/>
<node TEXT="Int" ID="ID_1144454811" CREATED="1412873646619" MODIFIED="1412873676445">
<node TEXT="min and max are usually around 2 billion" ID="ID_869088677" CREATED="1412873647587" MODIFIED="1412873656357"/>
</node>
<node TEXT="Integer" ID="ID_1097953780" CREATED="1412873684798" MODIFIED="1412873686202">
<node TEXT="unbounded" ID="ID_852251481" CREATED="1412873687135" MODIFIED="1412873688572"/>
</node>
<node TEXT="Float" ID="ID_859958289" CREATED="1412873715622" MODIFIED="1412875673551">
<node TEXT="float" ID="ID_662332923" CREATED="1412873719316" MODIFIED="1412873720063"/>
<node TEXT="was it called &quot;Single&quot; somewhere?" ID="ID_28951362" CREATED="1412875674204" MODIFIED="1412875682302"/>
</node>
<node TEXT="Double" ID="ID_753485028" CREATED="1412873716838" MODIFIED="1412873717816">
<node TEXT="float" ID="ID_1455828848" CREATED="1412873719316" MODIFIED="1412873720063"/>
</node>
<node TEXT="Bool" ID="ID_1970714568" CREATED="1412873729779" MODIFIED="1412873730664"/>
<node TEXT="Char" ID="ID_606919950" CREATED="1412873730867" MODIFIED="1412873731526">
<node TEXT="&apos;d&apos; is a char; &quot;d&quot; is a string, a list" ID="ID_1730001882" CREATED="1412745792116" MODIFIED="1412745800930"/>
</node>
</node>
</node>
<node TEXT="&quot;record syntax&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1677141646" CREATED="1412970112093" MODIFIED="1412970115871">
<node TEXT="syntax" ID="ID_64307961" CREATED="1412970196404" MODIFIED="1412970270720">
<node TEXT="data Person = Person { firstName :: String &#xa;                     , lastName :: String &#xa;                     , age :: Int &#xa;                     , height :: Float &#xa;                     , phoneNumber :: String &#xa;                     , flavor :: String &#xa;                     } deriving (Show)" ID="ID_211872738" CREATED="1412970116804" MODIFIED="1412970117570"/>
</node>
<node TEXT="consequences of use" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1442326252" CREATED="1412970259606" MODIFIED="1412970272674"/>
<node TEXT="refer to its fields" ID="ID_1813857584" CREATED="1412970202203" MODIFIED="1412970205287">
<node TEXT="lookup functions are created automatically" ID="ID_967167226" CREATED="1412970211467" MODIFIED="1412970218493"/>
<node TEXT="ghci&gt; :t firstName &#xa;firstName :: Person -&gt; String" ID="ID_667413416" CREATED="1412970218770" MODIFIED="1412970219253"/>
</node>
<node TEXT="(likely) more readable presentation" ID="ID_1771448717" CREATED="1412970274669" MODIFIED="1412970284831">
<node TEXT="assuming it implements Show" ID="ID_1086119861" CREATED="1412970315081" MODIFIED="1412970323326"/>
</node>
<node TEXT="order no longer crucial" ID="ID_1400479014" CREATED="1412970344686" MODIFIED="1412970350617"/>
<node TEXT="&quot;record update notation&quot;" ID="ID_1868009842" CREATED="1414822322703" MODIFIED="1418940776332">
<node TEXT="setName n p = p {name = n}" ID="ID_436385482" CREATED="1414822333116" MODIFIED="1414822342426"/>
<node TEXT="setName :: String -&gt; Person -&gt; Person" ID="ID_263026154" CREATED="1414822348591" MODIFIED="1414822358722"/>
<node TEXT="where Person has more (&quot;getters&quot;?) (and corresponding attributes) than name" ID="ID_1821667244" CREATED="1414822363021" MODIFIED="1414822398326"/>
</node>
</node>
<node TEXT="uuu" ID="ID_273920189" CREATED="1418940769537" MODIFIED="1421870893991">
<font BOLD="false"/>
<node TEXT="= and { precedence for data" ID="ID_93779968" CREATED="1414822854630" MODIFIED="1418940631894">
<node TEXT="setPostCode pc p =&#xa;  p { addr = addr p { postcode = pc } }" ID="ID_428427929" CREATED="1414822874630" MODIFIED="1414822903569"/>
<node TEXT="where p is a person, which has an addr field, and pc is a postcode, which is one of the fields in an address" ID="ID_1663779298" CREATED="1414822903773" MODIFIED="1414822926920"/>
<node TEXT="this reaches so to speak through the address to change the post code from the scope of the person" ID="ID_728382710" CREATED="1414822927997" MODIFIED="1414822959768"/>
<node TEXT="it says &quot;copy this person but change their address to what you get if you copy their address and change the postcode to pc&quot;" ID="ID_1773104132" CREATED="1414823028666" MODIFIED="1414823092879"/>
</node>
<node TEXT="can only pattern match against exported data" ID="ID_1807878330" CREATED="1414911348644" MODIFIED="1414911354503">
<node TEXT="links out to example" ID="ID_1550925654" CREATED="1414911356083" MODIFIED="1414911363630">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1913104636" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="diversity of constructor within a type is powerful" ID="ID_1225503442" CREATED="1415082977762" MODIFIED="1415083017357">
<node TEXT="data List a = Nil | Cons a (List a)" ID="ID_383205828" CREATED="1415083019826" MODIFIED="1415083034077"/>
</node>
</node>
</node>
<node TEXT="kind" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_895525201" CREATED="1412987469191" MODIFIED="1414911653818">
<node TEXT="I did not understand all of this." LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1717721825" CREATED="1412988731573" MODIFIED="1412988738821"/>
<node TEXT="types have kinds" ID="ID_567112954" CREATED="1412987470902" MODIFIED="1412987481385"/>
<node TEXT="to inspect, use &quot;:k&quot;" ID="ID_1161301773" CREATED="1412987506708" MODIFIED="1412987513512"/>
<node TEXT="varieties" ID="ID_1181915567" CREATED="1412987501557" MODIFIED="1412987503903">
<node TEXT="&quot;*&quot;: concrete type" ID="ID_22594004" CREATED="1412987504124" MODIFIED="1412987518985"/>
<node TEXT="&quot;* -&gt; *&quot;: produces a concrete type when given one" ID="ID_801534061" CREATED="1412987745454" MODIFIED="1412987759024"/>
</node>
</node>
<node TEXT="typeclass, instance" ID="ID_784391223" CREATED="1412983350426" MODIFIED="1414911651015">
<node TEXT="-XNullaryTypeClasses: allow classes sans functions" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_121201569" CREATED="1434177462042" MODIFIED="1434177473466"/>
<node TEXT="def&apos;n, simple exl&apos;s" LOCALIZED_STYLE_REF="default" ID="ID_973229806" CREATED="1412984310363" MODIFIED="1413177667029">
<node TEXT="all def&apos;n" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1377331859" CREATED="1413177670615" MODIFIED="1413177674528"/>
<node TEXT="without example" ID="ID_1968485593" CREATED="1413177674982" MODIFIED="1413177676986">
<node TEXT="is an interface, implementable by classes" ID="ID_934025282" CREATED="1413177679055" MODIFIED="1413177740584"/>
<node TEXT="lists some functions and their types" ID="ID_1265066616" CREATED="1413177772822" MODIFIED="1413177786419"/>
<node TEXT="it does not identify implementing classes" ID="ID_1576578768" CREATED="1413177723218" MODIFIED="1413177755997">
<node TEXT="they self-identify" ID="ID_413963227" CREATED="1413177710852" MODIFIED="1413177713575"/>
</node>
</node>
<node TEXT="** define a typeclass" ID="ID_576109584" CREATED="1412984641022" MODIFIED="1414911585009">
<node TEXT="simple" ID="ID_1132397934" CREATED="1412984959497" MODIFIED="1412984960332">
<node TEXT="class Eq a where &#xa;    (==) :: a -&gt; a -&gt; Bool &#xa;    (/=) :: a -&gt; a -&gt; Bool &#xa;    x == y = not (x /= y) &#xa;    x /= y = not (x == y)" LOCALIZED_STYLE_REF="default" ID="ID_1181965384" CREATED="1412984311827" MODIFIED="1412984638695"/>
<node TEXT="looks weird because it&apos;s not done -- must define the instance of it for those functions to be totally defined. (one of them should be overwritten by the (implementing) instance.)" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1030524422" CREATED="1412984675459" MODIFIED="1412984772846"/>
</node>
<node TEXT="with constraints" ID="ID_1759697472" CREATED="1412984953202" MODIFIED="1412984962828">
<node TEXT="class (Eq a) =&gt; Num a where&#xa;    ...." ID="ID_720181150" CREATED="1412984963297" MODIFIED="1412984969005"/>
</node>
</node>
<node TEXT="** define an instance of one" ID="ID_1911750894" CREATED="1412984645789" MODIFIED="1414911586357">
<node TEXT="simple" ID="ID_1746902209" CREATED="1412985132385" MODIFIED="1412985134964">
<node TEXT="Eq" ID="ID_412080463" CREATED="1412984839525" MODIFIED="1412984841159">
<node TEXT="data TrafficLight = Red | Yellow | Green" ID="ID_1139086224" CREATED="1412984661492" MODIFIED="1412984662063"/>
<node TEXT="instance Eq TrafficLight where &#xa;    Red == Red = True &#xa;    Green == Green = True &#xa;    Yellow == Yellow = True &#xa;    _ == _ = False" ID="ID_537114540" CREATED="1412984649022" MODIFIED="1412984649658"/>
</node>
<node TEXT="Show" ID="ID_842809194" CREATED="1412984844388" MODIFIED="1412984845494">
<node TEXT="instance Show TrafficLight where &#xa;    show Red = &quot;Red light&quot; &#xa;    show Yellow = &quot;Yellow light&quot; &#xa;    show Green = &quot;Green light&quot;" ID="ID_100851880" CREATED="1412984845765" MODIFIED="1412984846854"/>
</node>
</node>
<node TEXT="&quot;abstract&quot;?" ID="ID_728195314" CREATED="1412985136264" MODIFIED="1412985139916">
<node TEXT="instance (Eq m) =&gt; Eq (Maybe m) where &#xa;    Just x == Just y = x == y &#xa;    Nothing == Nothing = True &#xa;    _ == _ = False" ID="ID_691577160" CREATED="1412985140328" MODIFIED="1412985297823"/>
<node TEXT="the first line of that &quot;is like saying that we want to make all types of the form Maybe something an instance of Eq&quot;" ID="ID_44650951" CREATED="1412985173984" MODIFIED="1412985307032"/>
<node TEXT="which only makes sense if m implements Eq" ID="ID_307574066" CREATED="1412985371996" MODIFIED="1413180523002"/>
</node>
</node>
</node>
<node TEXT="to query" ID="ID_780118063" CREATED="1412985484130" MODIFIED="1412985488277">
<node TEXT=":info &lt;name of typeclass&gt;" ID="ID_119990167" CREATED="1412985492153" MODIFIED="1412985497172"/>
<node TEXT="shows what it implements" ID="ID_961914013" CREATED="1412985502025" MODIFIED="1412985505012"/>
</node>
<node TEXT="subclassing" ID="ID_1549864681" CREATED="1412985005508" MODIFIED="1412985025054">
<node TEXT="is &quot;just a class constraint on a class declaration&quot;" ID="ID_289353827" CREATED="1412985025333" MODIFIED="1413180610028"/>
<node TEXT="applies to (type)classes, not types" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_915072986" CREATED="1413180614613" MODIFIED="1413180629671">
<node TEXT="except indirectly, through the (type)classes those types belong to" ID="ID_694030333" CREATED="1413180646340" MODIFIED="1413180662677"/>
</node>
</node>
<node TEXT="defining an interface over many types" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1361606445" CREATED="1412985815335" MODIFIED="1413180990044">
<node TEXT="class YesNo a where &#xa;    yesno :: a -&gt; Bool" ID="ID_200736704" CREATED="1412985829325" MODIFIED="1412985830007"/>
<node TEXT="instance YesNo Int where &#xa;    yesno 0 = False &#xa;    yesno _ = True" ID="ID_1330604801" CREATED="1412985837092" MODIFIED="1412985837504"/>
<node TEXT="instance YesNo Bool where &#xa;    yesno = id" ID="ID_1121645879" CREATED="1412985851698" MODIFIED="1412985852678"/>
<node TEXT="instance YesNo (Maybe a) where &#xa;    yesno (Just _) = True &#xa;    yesno Nothing = False" ID="ID_791675216" CREATED="1412985863538" MODIFIED="1412985864309"/>
</node>
<node TEXT="haskell can infer some interface functions" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_7955164" CREATED="1412971594014" MODIFIED="1413180706637">
<node TEXT="this is also arguably bad" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1881078357" CREATED="1413180707478" MODIFIED="1413180711064">
<node TEXT="because if you forget to define it, you&apos;ll get the default and no warning" ID="ID_904875620" CREATED="1413180711477" MODIFIED="1413180810635"/>
</node>
<node TEXT="the default Eq" ID="ID_210549945" CREATED="1413181061718" MODIFIED="1413181063889">
<node TEXT="merely adding, e.g., &quot;deriving (Eq)&quot; to the end of a data declaration will make it equatable, assuming its fields are all equatable" ID="ID_987260856" CREATED="1412971601885" MODIFIED="1413181060126"/>
</node>
<node TEXT="the default Ord" ID="ID_1405664472" CREATED="1412972071530" MODIFIED="1413181069081">
<node TEXT="feels like enumerability, but I don&apos;t think they&apos;re the same" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_720188099" CREATED="1412984284952" MODIFIED="1412984302613"/>
<node TEXT="if values come from different value constructors, the VC that was listed first in the data decl. produces values smaller than those from any VC after it" ID="ID_286482482" CREATED="1412972074442" MODIFIED="1412972105965"/>
</node>
</node>
<node TEXT="functional dependency" ID="ID_918257083" CREATED="1414805390869" MODIFIED="1414805402976">
<node TEXT="gist" ID="ID_1867355272" CREATED="1414805424580" MODIFIED="1414805425752">
<node TEXT="write this" ID="ID_1062768573" CREATED="1414805426524" MODIFIED="1414805436423">
<node TEXT="class Mult a b c | a b -&gt; c where&#xa;  (*) :: a -&gt; b -&gt; c" ID="ID_96410128" CREATED="1414805436708" MODIFIED="1414805437351"/>
</node>
<node TEXT="to indicate that the type of c is determined by the type of a and b" ID="ID_1871281217" CREATED="1414805438171" MODIFIED="1414805447415"/>
</node>
<node TEXT="more detail" ID="ID_1749235505" CREATED="1414805472380" MODIFIED="1414805473702">
<node TEXT="https://www.haskell.org/haskellwiki/Functional_dependencies" ID="ID_133298248" CREATED="1414805419669" MODIFIED="1414805419669" LINK="https://www.haskell.org/haskellwiki/Functional_dependencies"/>
<node TEXT="quote" ID="ID_1330323954" CREATED="1414805420693" MODIFIED="1414805421503"/>
<node TEXT="After all, nothing is stopping someone from coming along later and adding another instance:&#xa;&#xa;instance Mult Matrix Matrix (Maybe Char) where&#xa;  {- whatever -}&#xa;The problem is that c shouldn&apos;t really be a free type variable. When you know the types of the things that you&apos;re multiplying, the result type should be determined from that information alone.&#xa;You can express this by specifying a functional dependency, or fundep for short:&#xa;&#xa;class Mult a b c | a b -&gt; c where&#xa;  (*) :: a -&gt; b -&gt; c&#xa;This tells Haskell that c is uniquely determined from a and b." ID="ID_1112596020" CREATED="1414805408220" MODIFIED="1414805411281"/>
</node>
<node TEXT="vocab" ID="ID_287004833" CREATED="1414805459499" MODIFIED="1414805460607">
<node TEXT="a.k.a. &quot;fundep&quot;" ID="ID_1872009287" CREATED="1414805396981" MODIFIED="1414805457455"/>
</node>
</node>
<node TEXT="uuu" ID="ID_1320734408" CREATED="1412873111203" MODIFIED="1418940592899">
<font BOLD="true"/>
<node TEXT="purpose" ID="ID_1951132534" CREATED="1413571729239" MODIFIED="1413571730354">
<node TEXT="define an interface, which types can implement" ID="ID_4601904" CREATED="1412874058062" MODIFIED="1413571748796"/>
</node>
<node TEXT="instances, i.e. built-in classes" ID="ID_329958501" CREATED="1412874552153" MODIFIED="1414656085390">
<node TEXT="Eq" ID="ID_1972318833" CREATED="1412874556713" MODIFIED="1412874557444">
<node TEXT="can test for equality" ID="ID_1855207984" CREATED="1412874557656" MODIFIED="1412874560916"/>
<node TEXT="implements == and /=" ID="ID_658076344" CREATED="1412874572680" MODIFIED="1412874576202"/>
<node TEXT="`elem` uses" ID="ID_913103915" CREATED="1412874561328" MODIFIED="1412874564403"/>
</node>
<node TEXT="Ord" ID="ID_388746697" CREATED="1412874597397" MODIFIED="1412874599120">
<node TEXT="&gt; etc." ID="ID_1483594927" CREATED="1412874599893" MODIFIED="1412874602073"/>
<node TEXT="subset of Eq" ID="ID_786068812" CREATED="1412874704476" MODIFIED="1412874713152"/>
<node TEXT="Ord &#x2260; Ordering" ID="ID_99189568" CREATED="1412874650072" MODIFIED="1412874654699">
<node TEXT="Ord is the class of comparable things" ID="ID_1408280903" CREATED="1412874656224" MODIFIED="1412874663707"/>
<node TEXT="Ordering is a class with only three members: LT, GT and EQ" ID="ID_436049971" CREATED="1412874663935" MODIFIED="1412874675137"/>
</node>
</node>
<node TEXT="Show" ID="ID_122840570" CREATED="1412874774439" MODIFIED="1412874775888">
<node TEXT="string-representable" ID="ID_969041124" CREATED="1412874776061" MODIFIED="1412874778803"/>
</node>
<node TEXT="Read" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1502695883" CREATED="1412874879699" MODIFIED="1412874903613">
<node TEXT="The read function takes a string and returns a type which is a member of Read." ID="ID_1266591604" CREATED="1412874889259" MODIFIED="1412874889990"/>
<node TEXT="ghci&gt; read &quot;True&quot; || False&#xa;True&#xa;ghci&gt; read &quot;8.2&quot; + 3.8&#xa;12.0&#xa;ghci&gt; read &quot;5&quot; - 2&#xa;3&#xa;ghci&gt; read &quot;[1,2,3,4]&quot; ++ [3]&#xa;[1,2,3,4,3]" ID="ID_1811081862" CREATED="1412874896274" MODIFIED="1412874896950"/>
<node TEXT="the way the read (past tense) pattern is used after reading determines the type to return" ID="ID_1566804121" CREATED="1412875052309" MODIFIED="1412875084052"/>
<node TEXT="if no such use is present, can specify explicitly:" ID="ID_674396026" CREATED="1412875084273" MODIFIED="1412875092302"/>
<node TEXT="ghci&gt; read &quot;5&quot; :: Int&#xa;5&#xa;ghci&gt; read &quot;5&quot; :: Float&#xa;5.0" ID="ID_300518052" CREATED="1412875092505" MODIFIED="1412875092884"/>
</node>
<node TEXT="Enum" ID="ID_537408190" CREATED="1412875176016" MODIFIED="1412875179404">
<node TEXT="chars, integers: yes" ID="ID_1405191089" CREATED="1412746516858" MODIFIED="1412746520516"/>
<node TEXT="&quot;Names can&apos;t be enumerated. What comes after &quot;John&quot;? I don&apos;t know.&quot;" ID="ID_1767539846" CREATED="1412746520857" MODIFIED="1412746522804"/>
<node TEXT="enumerable" ID="ID_1754586149" CREATED="1412875179632" MODIFIED="1412875183259"/>
<node TEXT="succ() and pred() defined" ID="ID_1395888558" CREATED="1412875228652" MODIFIED="1412875233463"/>
<node TEXT="includes these" ID="ID_848022694" CREATED="1412875249442" MODIFIED="1412875251687">
<node TEXT=" (), Bool, Char, Ordering, Int, Integer, Float and Double." ID="ID_477816279" CREATED="1412875252442" MODIFIED="1412875253061"/>
</node>
<node TEXT="(stupidly?), includes Float and Double" ID="ID_665624646" CREATED="1412875218613" MODIFIED="1412875225928"/>
</node>
<node TEXT="Bounded" ID="ID_626783540" CREATED="1412875296246" MODIFIED="1412875296673">
<node TEXT="has an upper and a lower bound" ID="ID_1212647203" CREATED="1412875297238" MODIFIED="1412875300610"/>
<node TEXT="use minBound, maxBound" ID="ID_1718574616" CREATED="1412875319156" MODIFIED="1412875327046">
<node TEXT="ghci&gt; minBound :: Int&#xa;-2147483648&#xa;ghci&gt; maxBound :: Char&#xa;&apos;\1114111&apos;&#xa;ghci&gt; maxBound :: Bool&#xa;True&#xa;ghci&gt; minBound :: Bool&#xa;False" ID="ID_1493684996" CREATED="1412875332035" MODIFIED="1412875332774"/>
<node TEXT="&quot;:: Bool&quot; says &quot;cast as a bool&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1388632472" CREATED="1412875449272" MODIFIED="1412875464819"/>
</node>
<node TEXT="some tuples are" ID="ID_237679925" CREATED="1412875400926" MODIFIED="1412875406618">
<node TEXT="ghci&gt; maxBound :: (Bool, Int, Char)&#xa;(True,2147483647,&apos;\1114111&apos;)" ID="ID_1994690184" CREATED="1412875402861" MODIFIED="1412875403529"/>
</node>
</node>
<node TEXT="Num" ID="ID_428005181" CREATED="1412875420746" MODIFIED="1412875421534">
<node TEXT="integer constants are polymorphic" ID="ID_1219426661" CREATED="1412875526281" MODIFIED="1412875541723">
<node TEXT="ghci&gt; :t 20&#xa;20 :: (Num t) =&gt; t&#xa;&#xa;It appears that whole numbers are also polymorphic constants. They can act like any type that&apos;s a member of the Num typeclass.&#xa;&#xa;ghci&gt; 20 :: Int&#xa;20&#xa;ghci&gt; 20 :: Integer&#xa;20&#xa;ghci&gt; 20 :: Float&#xa;20.0&#xa;ghci&gt; 20 :: Double&#xa;20.0" ID="ID_19093170" CREATED="1412875531449" MODIFIED="1412875535938"/>
</node>
<node TEXT="subset of Show and Eq" ID="ID_60304454" CREATED="1412875603570" MODIFIED="1412875610821"/>
</node>
<node TEXT="Integral" ID="ID_98637291" CREATED="1412875629424" MODIFIED="1412875631158">
<node TEXT="subset of Num" ID="ID_392976508" CREATED="1412875631359" MODIFIED="1412875633403"/>
<node TEXT="includes only Int and Integer" ID="ID_1426718548" CREATED="1412875633624" MODIFIED="1412875637314"/>
</node>
<node TEXT="Floating" ID="ID_951532151" CREATED="1412875642223" MODIFIED="1412875644562">
<node TEXT="Float and Double" ID="ID_875756486" CREATED="1412875645246" MODIFIED="1412875647698"/>
</node>
</node>
<node TEXT="generalizing to Num with fromIntegral" ID="ID_1391715381" CREATED="1412875881937" MODIFIED="1412925820890">
<node TEXT="has a type declaration of fromIntegral :: (Num b, Integral a) =&gt; a -&gt; b" ID="ID_914104105" CREATED="1412875887649" MODIFIED="1412875904324"/>
<node TEXT="takes an integral number and turns it into a more general number" ID="ID_1102264308" CREATED="1412875904535" MODIFIED="1412875904954"/>
</node>
<node TEXT="internalized" LOCALIZED_STYLE_REF="styles.topic" ID="ID_543382010" CREATED="1413571544488" MODIFIED="1413571549072">
<node TEXT="[Char] is the same as String" ID="ID_1824940900" CREATED="1412873492169" MODIFIED="1412873498012"/>
</node>
</node>
</node>
<node TEXT="defining (types?)" ID="ID_1952280355" CREATED="1412969169280" MODIFIED="1418936762368">
<font BOLD="true"/>
<node TEXT="automatic implementation" ID="ID_5628896" CREATED="1413572930332" MODIFIED="1413572943823">
<node TEXT="if a type derives a class, it might not have to implement that class" ID="ID_11296016" CREATED="1413572979521" MODIFIED="1413573003370"/>
<node TEXT="example here" ID="ID_72720845" CREATED="1413573004696" MODIFIED="1413573011125">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_703685079" STARTINCLINATION="43;0;" ENDINCLINATION="43;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="value constructors" ID="ID_203523158" CREATED="1412969884008" MODIFIED="1412969927215">
<node TEXT="def&apos;n" ID="ID_1409412715" CREATED="1412969936820" MODIFIED="1412969937646">
<node TEXT="&quot;value constructors are just functions that take the fields as parameters and return a value of some type (like Shape)&quot;" ID="ID_231176106" CREATED="1412969888727" MODIFIED="1412969892530"/>
</node>
<node TEXT="functions can pattern match VCs" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1384188596" CREATED="1412969247618" MODIFIED="1412983300410">
<node TEXT="in fact, that&apos;s the only thing they pattern match against" ID="ID_480664404" CREATED="1412983275867" MODIFIED="1412983282324"/>
<node TEXT="with flattening?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1636956310" CREATED="1413527169264" MODIFIED="1413527179840">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1740095656" STARTINCLINATION="52;0;" ENDINCLINATION="52;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="simple" ID="ID_639147722" CREATED="1412969511945" MODIFIED="1412969512916">
<node TEXT="surface :: Shape -&gt; Float &#xa;surface (Circle _ _ r) = pi * r ^ 2 &#xa;surface (Rectangle x1 y1 x2 y2) = (abs $ x2 - x1) * (abs $ y2 - y1)" ID="ID_1897486727" CREATED="1412969254633" MODIFIED="1412969255764"/>
</node>
<node TEXT="nested" ID="ID_1494882564" CREATED="1412969513985" MODIFIED="1412969514812">
<node TEXT="data Point = Point Float Float deriving (Show)" ID="ID_1307736395" CREATED="1412969515369" MODIFIED="1412969515369"/>
<node TEXT="data Shape = Circle Point Float | Rectangle Point Point deriving (Show)" ID="ID_139902965" CREATED="1412969515369" MODIFIED="1412969515369"/>
<node TEXT="surface (Rectangle (Point x1 y1) (Point x2 y2)) = (abs $ x2 - x1) * (abs $ y2 - y1)" ID="ID_1951864963" CREATED="1412969515370" MODIFIED="1412969515370">
<node TEXT="flattening?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1740095656" CREATED="1413527169264" MODIFIED="1413527178330"/>
<node TEXT="why is the rectangle taking two point arguments when it&apos;s supposed to take four (not a pair of two) floats?" ID="ID_518770175" CREATED="1413527191093" MODIFIED="1413527208640"/>
</node>
</node>
</node>
<node TEXT="naming convention" ID="ID_1068655910" CREATED="1413571820740" MODIFIED="1413571823535">
<node TEXT="if there&apos;s only one VC, it&apos;s common to name it the same name as the type" ID="ID_1704467531" CREATED="1412969423635" MODIFIED="1412983313812"/>
</node>
<node ID="ID_1714595804" CREATED="1412969927782" MODIFIED="1412969927782"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      need not be exported
    </p>
  </body>
</html>
</richcontent>
<node TEXT="why" ID="ID_227465654" CREATED="1412969983391" MODIFIED="1412969984722">
<node TEXT="if there are other functions -- say, to create a prototype and tweak it -- the value constructor might not be needed" ID="ID_1395230399" CREATED="1412969892807" MODIFIED="1412969923015"/>
</node>
<node TEXT="if VCs not exported, user can&apos;t pattern match against them" ID="ID_1558503207" CREATED="1412969986239" MODIFIED="1412970002625"/>
</node>
</node>
<node TEXT="as-patterns can help" ID="ID_460896307" CREATED="1412969579139" MODIFIED="1412969585910">
<node TEXT="If we wanted to reference the points themselves for some reason, we could have used as-patterns." ID="ID_1826837779" CREATED="1412969586267" MODIFIED="1412969586902"/>
</node>
<node TEXT="declaring an infix constructor" ID="ID_365479122" CREATED="1412982914025" MODIFIED="1412982919900">
<node TEXT="Learn You, chapter on defining types" ID="ID_1387189898" CREATED="1412983017417" MODIFIED="1412983047472"/>
<node TEXT="the passage starting with this text" ID="ID_789027292" CREATED="1412983025674" MODIFIED="1412983039091">
<node ID="ID_444151740" CREATED="1412983030593" MODIFIED="1412983030593"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      &quot;We can define functions to be automatically infix by making them comprised of only special characters. We can also do the same with constructors, since they're just functions that return a data type. So check this out.&quot;
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="&quot;never add typeclass constraints in data declarations&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1016870142" CREATED="1412970993445" MODIFIED="1412971022908">
<node TEXT="for why, search for that sentence verbatim in Learn You Haskell , the Defining Your Own Types chapter" ID="ID_994283713" CREATED="1412971031609" MODIFIED="1412971054139"/>
</node>
<node TEXT="type constructors" ID="ID_949109237" CREATED="1412983255693" MODIFIED="1412983263503">
<node TEXT="type constructor &#x2260; value constructor" ID="ID_1729017714" CREATED="1412971308247" MODIFIED="1412971316506">
<node TEXT="&quot;When declaring a data type, the part before the = is the type constructor and the constructors after it (possibly separated by |&apos;s) are value constructors&quot;" ID="ID_277955089" CREATED="1412971316870" MODIFIED="1412971322379"/>
</node>
<node TEXT="type constructor &#x2260; type" ID="ID_571491749" CREATED="1412973083080" MODIFIED="1412973086482">
<node TEXT="it&apos;s tempting to call Maybe a type, but it&apos;s not; Maybe Int is" ID="ID_1725826218" CREATED="1412973086656" MODIFIED="1412973099121"/>
</node>
<node TEXT="partial application for type constructors" ID="ID_1338642913" CREATED="1412973135228" MODIFIED="1412973140672">
<node TEXT="equivalent" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_201531926" CREATED="1412973178887" MODIFIED="1412974228913"/>
<node TEXT="type IntMap v = Map Int v" ID="ID_934882836" CREATED="1412973177807" MODIFIED="1412973178418"/>
<node TEXT="type IntMap = Map Int" ID="ID_1972229300" CREATED="1412973185486" MODIFIED="1412973186313"/>
</node>
</node>
<node TEXT="type parameters" ID="ID_32332246" CREATED="1412970430319" MODIFIED="1412970433332">
<node TEXT="like C++ templates" ID="ID_966055261" CREATED="1412970528910" MODIFIED="1412970531426"/>
<node TEXT="simple" ID="ID_1972899649" CREATED="1412970457716" MODIFIED="1412971250984">
<node TEXT="Maybe" ID="ID_96534974" CREATED="1412971240622" MODIFIED="1412971241713">
<node TEXT="data Maybe a = Nothing | Just a" ID="ID_758619447" CREATED="1412970452101" MODIFIED="1412970452808"/>
<node TEXT="&quot;a&quot; is a type param" ID="ID_1956281708" CREATED="1412970460076" MODIFIED="1412970464087"/>
<node TEXT="it makes Maybe a &quot;type constructor&quot;" ID="ID_1590999154" CREATED="1412970474091" MODIFIED="1412970489348"/>
</node>
<node TEXT="Vector" ID="ID_262450266" CREATED="1412971243437" MODIFIED="1412971244960">
<node TEXT="data Vector a = Vector a a a deriving (Show) &#xa; &#xa;vplus :: (Num t) =&gt; Vector t -&gt; Vector t -&gt; Vector t &#xa;(Vector i j k) `vplus` (Vector l m n) = Vector (i+l) (j+m) (k+n) &#xa; &#xa;vectMult :: (Num t) =&gt; Vector t -&gt; t -&gt; Vector t &#xa;(Vector i j k) `vectMult` m = Vector (i*m) (j*m) (k*m) &#xa; &#xa;scalarMult :: (Num t) =&gt; Vector t -&gt; Vector t -&gt; t &#xa;(Vector i j k) `scalarMult` (Vector l m n) = i*l + j*m + k*n" ID="ID_496102254" CREATED="1412971245717" MODIFIED="1412971246505"/>
</node>
</node>
<node TEXT="list and map are type constructors" ID="ID_1388290781" CREATED="1412970549476" MODIFIED="1412971259737"/>
</node>
<node TEXT="recursive data" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_666973494" CREATED="1412982641386" MODIFIED="1412984092490">
<node TEXT="ex&apos;ls" ID="ID_1624167155" CREATED="1412983494909" MODIFIED="1412983496201">
<node TEXT="List" ID="ID_824318340" CREATED="1412982653393" MODIFIED="1412983494592">
<node TEXT="declarations" ID="ID_477045103" CREATED="1412982656729" MODIFIED="1412982696488">
<node TEXT="equivalent" ID="ID_97310338" CREATED="1412982698348" MODIFIED="1412982700216"/>
<node TEXT="data List a = Empty | Cons a (List a) deriving (Show, Read, Eq, Ord)" ID="ID_808767313" CREATED="1412982645049" MODIFIED="1412982645693"/>
<node TEXT="data List a = Empty | Cons { listHead :: a, listTail :: List a} deriving (Show, Read, Eq, Ord)" ID="ID_56047015" CREATED="1412982651401" MODIFIED="1412982652052"/>
</node>
<node TEXT="Cons is &quot;:&quot;, a constructor" ID="ID_1865096077" CREATED="1412982702372" MODIFIED="1412982720257"/>
</node>
<node TEXT="Tree" ID="ID_133456871" CREATED="1412983497213" MODIFIED="1412983500927">
<node TEXT="data Tree a = EmptyTree | Node a (Tree a) (Tree a) deriving (Show, Read, Eq)" ID="ID_1721904874" CREATED="1412983501236" MODIFIED="1412983504895"/>
<node TEXT="singleton :: a -&gt; Tree a &#xa;singleton x = Node x EmptyTree EmptyTree &#xa; &#xa;treeInsert :: (Ord a) =&gt; a -&gt; Tree a -&gt; Tree a &#xa;treeInsert x EmptyTree = singleton x &#xa;treeInsert x (Node a left right)  &#xa;    | x == a = Node x left right &#xa;    | x &lt; a  = Node a (treeInsert x left) right &#xa;    | x &gt; a  = Node a left (treeInsert x right)" ID="ID_1595458491" CREATED="1412983838783" MODIFIED="1412983839385"/>
<node TEXT="treeElem :: (Ord a) =&gt; a -&gt; Tree a -&gt; Bool &#xa;treeElem x EmptyTree = False &#xa;treeElem x (Node a left right) &#xa;    | x == a = True &#xa;    | x &lt; a  = treeElem x left &#xa;    | x &gt; a  = treeElem x right" ID="ID_1783667340" CREATED="1412983942407" MODIFIED="1412983942786"/>
</node>
</node>
<node TEXT="the empty object is distinguished without subclassing" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_818471473" CREATED="1412983507692" MODIFIED="1412983518564"/>
</node>
</node>
<node TEXT="uuu" ID="ID_1947021603" CREATED="1418936758473" MODIFIED="1418936764856">
<font BOLD="true"/>
<node TEXT="abstract classes and transparency" LOCALIZED_STYLE_REF="default" ID="ID_16275027" CREATED="1413413152160" MODIFIED="1413507210387">
<node TEXT="what I mean" ID="ID_1351842026" CREATED="1413413171421" MODIFIED="1413413173801">
<node TEXT="I&apos;m not sure &quot;abstract&quot; is the word for it." ID="ID_98453640" CREATED="1413413167366" MODIFIED="1418932667715"/>
<node TEXT="But I&apos;m using it to mean List ([]) is abstract; [Int] is concrete" ID="ID_1723817457" CREATED="1413413175045" MODIFIED="1418932675475"/>
</node>
<node TEXT="def&apos;n by example" ID="ID_47908056" CREATED="1413413234976" MODIFIED="1418932633915">
<node TEXT="List is a Functor, so lists can be mapped over. For f to be mapped over a list of xs, neither f nor x need to know anything about how mapping across lists works." ID="ID_575329347" CREATED="1413413238352" MODIFIED="1413413276547"/>
</node>
<node TEXT="redun" ID="ID_29112750" CREATED="1418932642407" MODIFIED="1418932682051">
<node TEXT="the containing type &quot;knows&quot; about the interface; neither the function being applied nor the data it is applied to need to know" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1489073329" CREATED="1413224799182" MODIFIED="1413413105895"/>
</node>
</node>
<node TEXT="monomorphism" ID="ID_254653128" CREATED="1413741550354" MODIFIED="1413741552733">
<node TEXT="http://www.haskell.org/haskellwiki/Monomorphism_restriction" ID="ID_1158296335" CREATED="1413741553516" MODIFIED="1413741553516" LINK="http://www.haskell.org/haskellwiki/Monomorphism_restriction"/>
<node TEXT="in compiler, on by default" ID="ID_838016757" CREATED="1413741557282" MODIFIED="1418936694606"/>
<node TEXT="in interpreter, off by default" ID="ID_1870952715" CREATED="1413741565169" MODIFIED="1418936696942">
<node TEXT="lately, at least, in GHC" ID="ID_841310049" CREATED="1413741576784" MODIFIED="1413741584546"/>
</node>
<node TEXT="&quot;To a first approximation it means that you often cannot overload a function unless you provide an explicit type signature.&quot;" ID="ID_1004989303" CREATED="1413741849102" MODIFIED="1413741852010"/>
<node TEXT="restricts allowable polymorphism" ID="ID_796365685" CREATED="1413741595502" MODIFIED="1413741865315"/>
</node>
<node TEXT="constraints on class def&apos;s are backwards" LOCALIZED_STYLE_REF="default" ID="ID_699207385" CREATED="1413271979865" MODIFIED="1413272003907">
<node TEXT="class (Eq a) =&gt; Num a where     ...." ID="ID_691718750" CREATED="1413272007208" MODIFIED="1413272012412"/>
<node TEXT="that says &quot;To belong to the class defined herein, named Num, one must already belong to Eq&quot;" ID="ID_562406698" CREATED="1413272008104" MODIFIED="1413272042953"/>
<node TEXT="The same infix &quot;=&gt;&quot; could work, but with args reversed." ID="ID_466339187" CREATED="1413272045372" MODIFIED="1413272060841"/>
</node>
<node TEXT="types are &quot;instances&quot; of typeclasses" ID="ID_1691572695" CREATED="1413313713788" MODIFIED="1413313727615">
<node TEXT="conflicts with OOP language, in which objects are &quot;instances&quot; of classes" ID="ID_1626349628" CREATED="1413313734249" MODIFIED="1413313754108"/>
</node>
<node TEXT="interpret string as number" ID="ID_1366956933" CREATED="1413579786581" MODIFIED="1413579889354">
<node TEXT="let t = read s :: Int" ID="ID_653188445" CREATED="1413579793284" MODIFIED="1413579793856"/>
</node>
</node>
<node TEXT="pitfall : instance &gt; deriving" ID="ID_1938513447" CREATED="1421888582694" MODIFIED="1421888588411">
<node TEXT="only use &quot;deriving&quot; for the default implem of the built-in classes; for anything else, use &quot;instance&quot;" ID="ID_1170462015" CREATED="1421888519711" MODIFIED="1421888569340"/>
<node TEXT="see Haskell-beginners thread, &quot;Defining an instance: Syntax that works exactly sometimes&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_275330622" CREATED="1421888590262" MODIFIED="1421888626424"/>
</node>
<node TEXT="recently solved : the &quot;records problem&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1804646009" CREATED="1421807045346" MODIFIED="1421807057180">
<node TEXT="http://nikita-volkov.github.io/record/" LOCALIZED_STYLE_REF="default" ID="ID_174855684" CREATED="1421807041247" MODIFIED="1421807058587" LINK="http://nikita-volkov.github.io/record/"/>
<node TEXT="https://github.com/nikita-volkov/record" ID="ID_884099751" CREATED="1421807069358" MODIFIED="1421807069358" LINK="https://github.com/nikita-volkov/record"/>
</node>
</node>
<node TEXT="I/O" ID="ID_609241088" CREATED="1412990956095" MODIFIED="1430546925147">
<font BOLD="true"/>
<node TEXT="LYAH" ID="ID_375447411" CREATED="1430546914427" MODIFIED="1430546923364">
<font BOLD="false"/>
<node TEXT="concepts" ID="ID_952368125" CREATED="1413408360702" MODIFIED="1413408362801">
<node TEXT="IO is a type constructor" ID="ID_1963852914" CREATED="1413151351985" MODIFIED="1413151363123">
<node TEXT="e.g. IO String returns an IO action with a value of type String as its result" ID="ID_1074651964" CREATED="1413151363351" MODIFIED="1413151385369"/>
</node>
<node TEXT="action vs. value" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_653000404" CREATED="1413072512722" MODIFIED="1413408295229">
<node TEXT="&quot;I/O actions are values much like any other value in Haskell. We can pass them as parameters to functions and functions can return I/O actions as results. What&apos;s special about them is that if they fall into the main function (or are the result in a GHCI line), they are performed.&quot;" ID="ID_33334404" CREATED="1413072566902" MODIFIED="1413072571305"/>
<node TEXT="&quot;Think of [putStr] as a function that takes a string and returns an I/O action. That I/O action will, when performed, print beautiful poetry to your terminal.&quot;" ID="ID_876806983" CREATED="1413072517938" MODIFIED="1413072529469"/>
</node>
<node TEXT="separating IO and pure code" ID="ID_748497556" CREATED="1412991822994" MODIFIED="1412991833076">
<node TEXT="using &lt;-, data of type &quot;IO x&quot; can be unpacked, assigned to a variable" ID="ID_125151633" CREATED="1412991834488" MODIFIED="1412991883682"/>
<node TEXT="that variable is then of type x" ID="ID_1690420171" CREATED="1412991857576" MODIFIED="1412991861522"/>
</node>
</node>
<node TEXT="syntax" ID="ID_45150795" CREATED="1412991826018" MODIFIED="1413408285658">
<node TEXT="some of these cannot be made sense of in isolation, without reference to at least some others" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1154422793" CREATED="1413408013869" MODIFIED="1421803254685"/>
<node TEXT="main" ID="ID_1501743100" CREATED="1412991391067" MODIFIED="1412991394501">
<node TEXT="naming something &quot;main&quot; in a .hs file makes it run when the file is run" ID="ID_482522176" CREATED="1412991395769" MODIFIED="1412991408812"/>
<node TEXT="convention is not to declare its type" ID="ID_814042758" CREATED="1412991468189" MODIFIED="1412991475848"/>
</node>
<node TEXT="do" ID="ID_1070768939" CREATED="1413407951557" MODIFIED="1413407952055">
<node TEXT="ex&apos;l" ID="ID_1325180956" CREATED="1413408328081" MODIFIED="1413408330637">
<node TEXT="main = do &#xa;    putStrLn &quot;Hello, what&apos;s your name?&quot; &#xa;    name &lt;- getLine &#xa;    putStrLn (&quot;Hey &quot; ++ name ++ &quot;, you rock!&quot;)" ID="ID_188040001" CREATED="1412991418072" MODIFIED="1412991418771"/>
</node>
<node TEXT="groups IO actions" ID="ID_994113225" CREATED="1421803311556" MODIFIED="1421803312713"/>
<node TEXT="returns what the last returns" ID="ID_39870292" CREATED="1413183069932" MODIFIED="1421803311225"/>
<node TEXT="the last action cannot be bound (with &lt;-) to a name" LOCALIZED_STYLE_REF="default" ID="ID_405326197" CREATED="1412991976193" MODIFIED="1421803301855"/>
</node>
<node TEXT="&lt;-" ID="ID_1628032587" CREATED="1412991671433" MODIFIED="1412991673661">
<node TEXT="ex&apos;l" ID="ID_997320344" CREATED="1412992524930" MODIFIED="1412992525725">
<node TEXT="main = do &#xa;    putStrLn &quot;Hello, what&apos;s your name?&quot; &#xa;    name &lt;- getLine &#xa;    putStrLn (&quot;Hey &quot; ++ name ++ &quot;, you rock!&quot;)" ID="ID_1044086706" CREATED="1412991418072" MODIFIED="1412991418771"/>
</node>
<node TEXT="&quot;a &lt;- b&quot; evaluates b and binds* it to a" ID="ID_555219133" CREATED="1412992520018" MODIFIED="1447484097198">
<node TEXT="binding, I believe, only in the context of that do-block" ID="ID_1101310193" CREATED="1447484087560" MODIFIED="1447484102766"/>
</node>
<node TEXT="&quot;a = b&quot; would do neither" ID="ID_1295622767" CREATED="1412992537265" MODIFIED="1413183112036"/>
</node>
<node TEXT="let" ID="ID_1590667687" CREATED="1412992676772" MODIFIED="1412992677295">
<node TEXT="works in a do block" ID="ID_4736138" CREATED="1412992677500" MODIFIED="1412992680689"/>
<node TEXT="works the same as elsewhere" ID="ID_57118296" CREATED="1413408064889" MODIFIED="1413408075115"/>
<node TEXT="ex&apos;l" LOCALIZED_STYLE_REF="styles.topic" ID="ID_630009961" CREATED="1413408076759" MODIFIED="1413408079304">
<node TEXT="main = do &#xa;    putStrLn &quot;What&apos;s your first name?&quot; &#xa;    firstName &lt;- getLine &#xa;    putStrLn &quot;What&apos;s your last name?&quot; &#xa;    lastName &lt;- getLine &#xa;    let bigFirstName = map toUpper firstName &#xa;        bigLastName = map toUpper lastName &#xa;    putStrLn $ &quot;hey &quot; ++ bigFirstName ++ &quot; &quot; ++ bigLastName ++ &quot;, how are you?&quot;" ID="ID_343545028" CREATED="1412992688605" MODIFIED="1412992693888"/>
</node>
</node>
<node TEXT="&quot;if&quot;, and &quot;do&quot; within it" ID="ID_1467197396" CREATED="1413069139402" MODIFIED="1421803432535">
<node TEXT="req: one I/O action per branch" ID="ID_1765005765" CREATED="1413069258024" MODIFIED="1413069267090">
<node TEXT="&quot;in a do block, ifs have to have a form of if condition then I/O action else I/O action.&quot;" ID="ID_798811841" CREATED="1413069140842" MODIFIED="1413069148554"/>
</node>
<node TEXT="to satisfy that req, can with &quot;do&quot; merge I/O actions into one" ID="ID_842299727" CREATED="1413069272958" MODIFIED="1413183174728">
<node TEXT="why" ID="ID_968627687" CREATED="1413069280486" MODIFIED="1413069281969">
<node TEXT="&quot;we have to have exactly one I/O action after the else, [so] we use a do block to glue together two I/O actions into one&quot;" ID="ID_1695079292" CREATED="1413069233938" MODIFIED="1413069241278"/>
</node>
<node TEXT="how" ID="ID_213173836" CREATED="1413069308074" MODIFIED="1413069308606">
<node TEXT="equivalent alternatives" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_138582039" CREATED="1413069318458" MODIFIED="1413408156844"/>
<node TEXT="brief" ID="ID_742527394" CREATED="1413069299284" MODIFIED="1413408147591">
<node TEXT="        else do &#xa;            putStrLn $ reverseWords line &#xa;            main" ID="ID_1348561360" CREATED="1413069300500" MODIFIED="1413069301103"/>
</node>
<node TEXT="verbose, with parens" ID="ID_359938604" CREATED="1413069285973" MODIFIED="1413408131872">
<node TEXT="else (do &#xa;    putStrLn $ reverseWords line &#xa;    main)" ID="ID_1981740102" CREATED="1413069254024" MODIFIED="1413069254531"/>
</node>
</node>
</node>
</node>
<node TEXT="return" ID="ID_679350762" CREATED="1413069499650" MODIFIED="1413069500509">
<node TEXT="&quot;makes an I/O action out of a pure value&quot;" ID="ID_840797318" CREATED="1413069500689" MODIFIED="1413069507476"/>
<node TEXT="does *not* end execution" ID="ID_1902356521" CREATED="1413069536758" MODIFIED="1413069541057"/>
<node TEXT="returned values can be bound" ID="ID_1331999408" CREATED="1413069595265" MODIFIED="1413069601828">
<node TEXT="main = do &#xa;    a &lt;- return &quot;hell&quot; &#xa;    b &lt;- return &quot;yeah!&quot; &#xa;    putStrLn $ a ++ &quot; &quot; ++ b" ID="ID_1387717072" CREATED="1413069607192" MODIFIED="1413069608316"/>
<node TEXT="but let is easier, avoiding a box/unbox cycle" ID="ID_1276376205" CREATED="1413069693592" MODIFIED="1421803538197"/>
</node>
</node>
<node TEXT="return  !opposite!  &lt;-" ID="ID_867553212" CREATED="1413069629990" MODIFIED="1447484193929">
<node TEXT="&quot;While return takes a value and wraps it up in a box, &lt;- takes a box (and performs it) and takes the value out of it, binding it to a name.&quot;" ID="ID_1873498395" CREATED="1413069635742" MODIFIED="1413069637073"/>
</node>
<node TEXT="() can be of type IO x" ID="ID_644629752" CREATED="1413069923500" MODIFIED="1413151348645">
<node TEXT="often used for actions that return nothing, e.g. writing to screen" ID="ID_44246279" CREATED="1413408238257" MODIFIED="1413408257355"/>
</node>
</node>
<node TEXT="pitfall : might need a &quot;do&quot;" ID="ID_1968481671" CREATED="1413152174247" MODIFIED="1421803593977">
<node TEXT="main = do    &#xa;    withFile &quot;girlfriend.txt&quot; ReadMode (\handle -&gt; do &#xa;        contents &lt;- hGetContents handle    &#xa;        putStr contents)" ID="ID_148938909" CREATED="1413152177311" MODIFIED="1413152177883"/>
<node TEXT="why is the first &quot;do&quot; there? I&apos;m guessing because withFile returns an IO action, which must be evaluated." ID="ID_1444986885" CREATED="1413152182983" MODIFIED="1413408465432"/>
</node>
<node TEXT="functions, string IO" ID="ID_1966270581" CREATED="1421804057022" MODIFIED="1421804075386">
<node TEXT="putStr, putStrLn" ID="ID_1559349629" CREATED="1413069801878" MODIFIED="1413069808145">
<node TEXT="post a string to terminal, with (Ln) or without () newline" ID="ID_1827977063" CREATED="1413069808349" MODIFIED="1413069830759"/>
</node>
<node TEXT="putChar, getChar" ID="ID_1333406687" CREATED="1413069886543" MODIFIED="1413070217908">
<node TEXT="getChar :: IO Char" ID="ID_1446086819" CREATED="1413070213017" MODIFIED="1413070213893"/>
</node>
<node TEXT="print = putStr . show" ID="ID_1012433512" CREATED="1413070014563" MODIFIED="1413070022390">
<node TEXT="(at least &quot;basically&quot;)" ID="ID_359753587" CREATED="1413070023538" MODIFIED="1413070030053"/>
</node>
</node>
<node TEXT="functions, control &amp; loop" ID="ID_1649709864" CREATED="1421804065389" MODIFIED="1421804082324">
<node TEXT="when (from Control.Monad)" ID="ID_1148054203" CREATED="1413070441189" MODIFIED="1413070448983">
<node TEXT="input" ID="ID_295421765" CREATED="1413070501528" MODIFIED="1413070502563">
<node TEXT="boolean" ID="ID_1967374403" CREATED="1413070502783" MODIFIED="1413070513850"/>
<node TEXT="&quot;do&quot; statement" ID="ID_188677879" CREATED="1413070505039" MODIFIED="1413070527049"/>
</node>
<node TEXT="operation" ID="ID_410956827" CREATED="1413070527676" MODIFIED="1413070528784">
<node TEXT="returns the &quot;do&quot; action only if the boolean is True" ID="ID_1148129227" CREATED="1413070529293" MODIFIED="1413070624072"/>
<node TEXT="otherwise, returns the &quot;return ()&quot; action" ID="ID_65403664" CREATED="1413070604431" MODIFIED="1413070618680"/>
</node>
<node TEXT="example" ID="ID_539100296" CREATED="1413070542828" MODIFIED="1413070543783">
<node TEXT="import Control.Monad  &#xa; &#xa;main = do &#xa;    c &lt;- getChar &#xa;    when (c /= &apos; &apos;) $ do &#xa;        putChar c &#xa;        main" ID="ID_1269514261" CREATED="1413070544003" MODIFIED="1413070544575"/>
</node>
<node TEXT="it&apos;s an ordinary function" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_702584749" CREATED="1413070552322" MODIFIED="1413070561268">
<node TEXT="it does not execute the do statement; it returns it" ID="ID_1402763419" CREATED="1413070565298" MODIFIED="1413070571420"/>
</node>
</node>
<node TEXT="sequence" LOCALIZED_STYLE_REF="default" ID="ID_1923574684" CREATED="1413070752153" MODIFIED="1413070972458">
<node TEXT="sequence :: [IO a] -&gt; IO [a]" ID="ID_518442394" CREATED="1413070754417" MODIFIED="1413070755124"/>
<node TEXT="what it does" ID="ID_1014941607" CREATED="1413070769784" MODIFIED="1413070773370">
<node TEXT="this" ID="ID_80766276" CREATED="1413070782204" MODIFIED="1413070782703">
<node TEXT="main = do &#xa;    rs &lt;- sequence [getLine, getLine, getLine] &#xa;    print rs" ID="ID_46176349" CREATED="1413070789614" MODIFIED="1413070790217"/>
</node>
<node TEXT="is the same as" ID="ID_967688411" CREATED="1413070774855" MODIFIED="1413070781801">
<node TEXT="main = do &#xa;    a &lt;- getLine &#xa;    b &lt;- getLine &#xa;    c &lt;- getLine &#xa;    print [a,b,c]" ID="ID_342347882" CREATED="1413070773583" MODIFIED="1413070774291"/>
</node>
</node>
<node TEXT="works because &lt;- executes and binds" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_83221790" CREATED="1413070924215" MODIFIED="1421804009120">
<font BOLD="false"/>
<node TEXT="if you thought it just binds, you&apos;d wonder why &quot;print rs&quot; works" ID="ID_994083706" CREATED="1413070938334" MODIFIED="1413070949265"/>
<node TEXT="&quot;makes an I/O action that will perform getLine three times. If we bind that action to a name, the result is a list of all the results&quot;" ID="ID_1082780883" CREATED="1413070906193" MODIFIED="1413070914868"/>
</node>
</node>
<node TEXT="mapM and mapM_" ID="ID_751428773" CREATED="1413071620058" MODIFIED="1413071627773">
<node TEXT="mapM f &lt;list&gt; = sequence (map f &lt;list&gt;)" ID="ID_341160997" CREATED="1413071681263" MODIFIED="1413071681263"/>
<node TEXT="mapM_ is similar but discards the return type" ID="ID_1328880197" CREATED="1413071682269" MODIFIED="1413071688824"/>
</node>
<node TEXT="forM" ID="ID_1511656542" CREATED="1413071799354" MODIFIED="1413071812145">
<node TEXT="= flip mapM" ID="ID_457745257" CREATED="1413071813321" MODIFIED="1413071822020">
<node TEXT="at least more or less" ID="ID_61320779" CREATED="1413071823816" MODIFIED="1413071826027"/>
</node>
<node TEXT="ex&apos;l" ID="ID_1375831053" CREATED="1413071886291" MODIFIED="1413071887054">
<node TEXT="import Control.Monad &#xa; &#xa;main = do  &#xa;    colors &lt;- forM [1,2,3,4] (\a -&gt; do &#xa;        putStrLn $ &quot;Which color do you associate with the number &quot; ++ show a ++ &quot;?&quot; &#xa;        color &lt;- getLine &#xa;        return color) &#xa;    putStrLn &quot;The colors that you associate with 1, 2, 3 and 4 are: &quot; &#xa;    mapM putStrLn colors" ID="ID_1567393137" CREATED="1413071887355" MODIFIED="1413071888055"/>
</node>
</node>
<node TEXT="forever" ID="ID_270747302" CREATED="1413071734064" MODIFIED="1413071735083">
<node TEXT="in Control.Monad" ID="ID_1457679360" CREATED="1413071735288" MODIFIED="1413071737827"/>
<node TEXT="ex&apos;l" ID="ID_1481367805" CREATED="1413071740640" MODIFIED="1413071741795">
<node TEXT="main = forever $ do &#xa;    putStr &quot;Give me some input: &quot; &#xa;    l &lt;- getLine &#xa;    putStrLn $ map toUpper l" ID="ID_1875608638" CREATED="1413071738752" MODIFIED="1413071739340"/>
</node>
</node>
</node>
<node TEXT="buffering" ID="ID_322915993" CREATED="1413070301881" MODIFIED="1413070313476">
<node TEXT="consider this program" ID="ID_1518465546" CREATED="1413070363708" MODIFIED="1413070367381">
<node TEXT="main = do    &#xa;    c &lt;- getChar &#xa;    if c /= &apos; &apos; &#xa;        then do &#xa;            putChar c &#xa;            main &#xa;        else return ()" ID="ID_167349827" CREATED="1413070307961" MODIFIED="1413070308565"/>
</node>
<node TEXT="you would expect" ID="ID_1514364353" CREATED="1413070369547" MODIFIED="1413070371374">
<node TEXT="the user inputs characters one at a time" ID="ID_502191820" CREATED="1413070371611" MODIFIED="1413070379878"/>
</node>
<node TEXT="but in fact" ID="ID_1625788725" CREATED="1413070380442" MODIFIED="1413070381925">
<node TEXT="the user inputs a whole string" ID="ID_1297149918" CREATED="1413070382091" MODIFIED="1413070387245"/>
<node TEXT="they are processed one character at a time, but only once the user hits Return" ID="ID_1575770832" CREATED="1413070387426" MODIFIED="1413070402780"/>
</node>
</node>
<node TEXT="streams" ID="ID_1992891713" CREATED="1413148780036" MODIFIED="1413151156475">
<node TEXT="simplest" ID="ID_1538669851" CREATED="1413149186553" MODIFIED="1413149191082">
<node TEXT="code" ID="ID_208882999" CREATED="1413149211015" MODIFIED="1413149212410">
<node TEXT="import Data.Char &#xa; &#xa;main = do &#xa;    contents &lt;- getContents &#xa;    putStr (map toUpper contents)" ID="ID_407562113" CREATED="1413149191368" MODIFIED="1413149192204"/>
</node>
<node TEXT="unix" ID="ID_1566645176" CREATED="1413149216607" MODIFIED="1413149217826">
<node TEXT="cat haiku.txt | ./capslocker" ID="ID_458973429" CREATED="1413149204528" MODIFIED="1413149205339"/>
</node>
</node>
<node TEXT="compiled code works with Unix&apos;s &quot;|&quot; operator" ID="ID_513973822" CREATED="1413149044741" MODIFIED="1413151170909">
<node TEXT="this code" ID="ID_1838963758" CREATED="1413149064851" MODIFIED="1413149065958">
<node TEXT="import Control.Monad &#xa;import Data.Char &#xa; &#xa;main = forever $ do &#xa;    putStr &quot;Give me some input: &quot; &#xa;    l &lt;- getLine &#xa;    putStrLn $ map toUpper l" ID="ID_1524901846" CREATED="1413149063130" MODIFIED="1413149064048"/>
</node>
<node TEXT="can be fed a multi-line file, like this" ID="ID_570663102" CREATED="1413149078490" MODIFIED="1413149083012">
<node TEXT="cat haiku.txt | ./capslocker" ID="ID_1803783873" CREATED="1413149083217" MODIFIED="1413149083909"/>
</node>
</node>
<node TEXT="laziness" ID="ID_1279599179" CREATED="1413149249929" MODIFIED="1413149251469">
<node TEXT="this" ID="ID_1011217544" CREATED="1413149266512" MODIFIED="1413149267171">
<node TEXT="import Data.Char &#xa; &#xa;main = do &#xa;    contents &lt;- getContents &#xa;    putStr (map toUpper contents)" ID="ID_346728594" CREATED="1413149191368" MODIFIED="1413149192204"/>
</node>
<node TEXT="prints each line of its input before reading the next" ID="ID_927735774" CREATED="1413149269552" MODIFIED="1413149300045"/>
</node>
<node TEXT="functions" ID="ID_1476730306" CREATED="1413149777317" MODIFIED="1413149778489">
<node TEXT="getLine v. getContents" ID="ID_552440197" CREATED="1413149342633" MODIFIED="1413149357559">
<node TEXT="equivalent, but getLine requires a loop; getContents loops (over lines in a file or lines of user-supplied input) implicitly" ID="ID_1870534444" CREATED="1413149359263" MODIFIED="1413149406516"/>
</node>
<node TEXT="interact" ID="ID_474311171" CREATED="1413149787659" MODIFIED="1413149788912">
<node TEXT="these are eqivalent" ID="ID_1355434364" CREATED="1413149800699" MODIFIED="1413149805590">
<node TEXT="main = interact shortLinesOnly" ID="ID_1195369429" CREATED="1413149799635" MODIFIED="1413149800343"/>
<node TEXT="main = do &#xa;    contents &lt;- getContents &#xa;    putStr (shortLinesOnly contents)" ID="ID_1333271576" CREATED="1413149778716" MODIFIED="1413149779680"/>
</node>
<node TEXT="how it works" ID="ID_1602215375" CREATED="1413149809274" MODIFIED="1413149850834">
<node TEXT="&quot;interact takes a function of type String -&gt; String as a parameter and returns an I/O action that will take some input, run that function on it and then print out the function&apos;s result.&quot;" ID="ID_1562760798" CREATED="1413149851030" MODIFIED="1421804524172"/>
</node>
</node>
</node>
</node>
<node TEXT="files" ID="ID_1746829813" CREATED="1413151156675" MODIFIED="1413151157237">
<node TEXT="simplest" ID="ID_590890906" CREATED="1413151173985" MODIFIED="1413151174901">
<node TEXT="this" ID="ID_1022027628" CREATED="1413151176633" MODIFIED="1421804538308">
<node TEXT="import System.IO &#xa; &#xa;main = do &#xa;    handle &lt;- openFile &quot;girlfriend.txt&quot; ReadMode &#xa;    contents &lt;- hGetContents handle &#xa;    putStr contents &#xa;    hClose handle" ID="ID_609644039" CREATED="1413151172712" MODIFIED="1413151173589"/>
</node>
<node TEXT="prints a file to screen" ID="ID_1664109057" CREATED="1413151181063" MODIFIED="1448133665854"/>
</node>
<node TEXT="functions" ID="ID_1058884984" CREATED="1413151207999" MODIFIED="1413151208938">
<node TEXT="openFile" ID="ID_991630903" CREATED="1413151223709" MODIFIED="1413151224912">
<node TEXT="openFile :: FilePath -&gt; IOMode -&gt; IO Handle" ID="ID_648009241" CREATED="1413151210094" MODIFIED="1413151210855"/>
<node TEXT="use" ID="ID_1372287099" CREATED="1413151226452" MODIFIED="1413151228664">
<node TEXT="handle &lt;- openFile &quot;girlfriend.txt&quot; ReadMode" ID="ID_951610188" CREATED="1413151228965" MODIFIED="1413151229536"/>
</node>
</node>
<node TEXT="hGetContents :: Handle -&gt; IO String" ID="ID_1166978784" CREATED="1413151838339" MODIFIED="1413151838339"/>
<node TEXT="getContents v. hGetContents" ID="ID_161598728" CREATED="1413151909140" MODIFIED="1413151916879">
<node TEXT="the only difference" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_325495509" CREATED="1413151935858" MODIFIED="1413151938564"/>
<node TEXT="the first reads only from stdin" ID="ID_584562752" CREATED="1413151917083" MODIFIED="1413151941740"/>
</node>
<node TEXT="h*" ID="ID_373256664" CREATED="1413152616128" MODIFIED="1413152616986">
<node TEXT="hGetLine, hPutStr, hPutStrLn, hGetChar" ID="ID_37141695" CREATED="1413152617800" MODIFIED="1413152618692"/>
<node TEXT="like their h-less counterparts, but with file specifiable" ID="ID_1520972601" CREATED="1413152619649" MODIFIED="1413152627907"/>
</node>
<node TEXT="withFile" ID="ID_1378873555" CREATED="1413152080436" MODIFIED="1413152082175">
<node TEXT="use" ID="ID_1758217764" CREATED="1413152281583" MODIFIED="1413152283074">
<node TEXT="withFile :: FilePath -&gt; IOMode -&gt; (Handle -&gt; IO a) -&gt; IO a" ID="ID_1458178195" CREATED="1413152082429" MODIFIED="1413152083191"/>
<node TEXT="the return value is an IO action that applies the function (third argument) to the file described by the first two" ID="ID_1661192325" CREATED="1413152084588" MODIFIED="1413152107669"/>
</node>
<node TEXT="purpose" ID="ID_934877017" CREATED="1413152285534" MODIFIED="1413152286410">
<node TEXT="the only advantage I&apos;m aware of" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1777008304" CREATED="1413152307245" MODIFIED="1413152311462"/>
<node TEXT="closes the file automatically" ID="ID_655453395" CREATED="1413152286598" MODIFIED="1413152301851"/>
</node>
</node>
<node TEXT="readFile, writeFile, appendFile" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1736918740" CREATED="1413152713875" MODIFIED="1413152810881">
<node TEXT="readFile" ID="ID_1201515543" CREATED="1413152775790" MODIFIED="1413152776968">
<node TEXT="readFile :: FilePath -&gt; IO String" ID="ID_741910731" CREATED="1413152708100" MODIFIED="1413152708440"/>
<node TEXT="import System.IO &#xa; &#xa;main = do &#xa;    contents &lt;- readFile &quot;girlfriend.txt&quot; &#xa;    putStr contents" ID="ID_633127239" CREATED="1413152724178" MODIFIED="1413152724927"/>
</node>
<node TEXT="writeFile :: FilePath -&gt; String -&gt; IO ()" ID="ID_1636808006" CREATED="1413152781453" MODIFIED="1413152781864"/>
<node TEXT="appendFile : like writeFile but not destructive" ID="ID_1783258083" CREATED="1413152814554" MODIFIED="1413152822829"/>
<node TEXT="closes the file automatically" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1482671615" CREATED="1413152739561" MODIFIED="1413152745906">
<node TEXT="we couldn&apos;t if we wanted, because there&apos;s not handle made available" ID="ID_1946379614" CREATED="1413152751034" MODIFIED="1413152759898"/>
</node>
</node>
</node>
<node TEXT="types" ID="ID_1310248636" CREATED="1413151257755" MODIFIED="1413151258380">
<node TEXT="type FilePath = String" ID="ID_1219211519" CREATED="1413151258610" MODIFIED="1413151259453"/>
<node TEXT="data IOMode = ReadMode | WriteMode | AppendMode | ReadWriteMode" ID="ID_881507637" CREATED="1413151273057" MODIFIED="1413151273812"/>
</node>
<node TEXT="buffer size" ID="ID_1197866540" CREATED="1413152931008" MODIFIED="1413152932411">
<node TEXT="defaults" ID="ID_1224010350" CREATED="1413152993731" MODIFIED="1413152994639">
<node TEXT="default for text is one line" ID="ID_1483808749" CREATED="1413152933095" MODIFIED="1413152939250"/>
<node TEXT="default for binary files is one &quot;chunk&quot;" ID="ID_1761389205" CREATED="1413152940519" MODIFIED="1413152947329">
<node TEXT="&quot;The chunk size is some size that your operating system thinks is cool.&quot;" ID="ID_330579779" CREATED="1413152957646" MODIFIED="1413152961351"/>
</node>
</node>
<node TEXT="to use something else" ID="ID_675579360" CREATED="1421804697135" MODIFIED="1421804712075">
<node TEXT="use &quot;hSetBuffering&quot;" ID="ID_1349219619" CREATED="1413152996732" MODIFIED="1421804717483"/>
<node TEXT="&quot;takes a handle and a BufferMode and returns an I/O action that sets the buffering&quot;" ID="ID_1519208320" CREATED="1413153008837" MODIFIED="1413153013062"/>
</node>
</node>
<node TEXT="&quot;flushing&quot;" ID="ID_582249323" CREATED="1413153522248" MODIFIED="1413153523946">
<node TEXT="huh?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1254686234" CREATED="1421804728462" MODIFIED="1421804732784"/>
<node TEXT="link from &quot;puzzles&quot;" ID="ID_649289509" CREATED="1413153555908" MODIFIED="1413153560288"/>
<node TEXT="forces the choice that would otherwise be made lazily?" ID="ID_905185319" CREATED="1413153528767" MODIFIED="1413153537265"/>
</node>
</node>
<node TEXT="rad brevity" ID="ID_913915345" CREATED="1413149895762" MODIFIED="1421804774827">
<node TEXT="equivalent programs" ID="ID_1409238299" CREATED="1413149922992" MODIFIED="1413149925387"/>
<node TEXT="long" ID="ID_1574992079" CREATED="1413149914064" MODIFIED="1413149920588">
<node TEXT="main = do &#xa;    contents &lt;- getContents &#xa;    putStr (shortLinesOnly contents) &#xa; &#xa;shortLinesOnly :: String -&gt; String &#xa;shortLinesOnly input =  &#xa;    let allLines = lines input &#xa;        shortLines = filter (\line -&gt; length line &lt; 10) allLines &#xa;        result = unlines shortLines &#xa;    in  result" ID="ID_25812651" CREATED="1413149915568" MODIFIED="1413149916245"/>
</node>
<node TEXT="short" ID="ID_1785278277" CREATED="1413149920769" MODIFIED="1413149921324">
<node TEXT="main = interact $ unlines . filter ((&lt;10) . length) . lines" ID="ID_720216026" CREATED="1413149892818" MODIFIED="1413149893557"/>
</node>
</node>
<node TEXT="a nice long example" ID="ID_177782829" CREATED="1414651196012" MODIFIED="1421804800005">
<node TEXT="source" ID="ID_1347048143" CREATED="1421791963025" MODIFIED="1421791968406">
<node TEXT="http://web.cecs.pdx.edu/~antoy/Courses/TPFLP/lectures/MONADS/Noel/research/monads.html" ID="ID_1160008976" CREATED="1421791964261" MODIFIED="1421791964261" LINK="http://web.cecs.pdx.edu/~antoy/Courses/TPFLP/lectures/MONADS/Noel/research/monads.html"/>
</node>
<node TEXT="code" ID="ID_951278331" CREATED="1421804807503" MODIFIED="1421804808771">
<node TEXT="&gt; import System (getArgs)&#xa;&gt; main :: IO ()&#xa;&gt; main = do&#xa;&gt;   args &lt;- getArgs&#xa;&gt;   case args of&#xa;&gt;       [fname] -&gt; do fstr &lt;- readFile fname&#xa;&gt;                     let nWords = length . words $ fstr&#xa;&gt;                         nLines = length . lines $ fstr&#xa;&gt;                         nChars = length fstr&#xa;&gt;                     putStrLn . unwords $ [ show nLines&#xa;&gt;                                          , show nWords&#xa;&gt;                                          , show nChars&#xa;&gt;                                          , fname]&#xa;&gt;       _ -&gt; putStrLn &quot;usage: wc fname&quot;" ID="ID_1855397468" CREATED="1421804811502" MODIFIED="1421804812276"/>
</node>
<node TEXT="notes" ID="ID_798909431" CREATED="1421791974130" MODIFIED="1421804815763">
<node ID="ID_1664315269" CREATED="1421804820761" MODIFIED="1421804820761"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      &#8226; getArgs :: IO [String] returns the list of commandline arguments (like C's argv).
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1590315786" CREATED="1421804820777" MODIFIED="1421804820777"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      &#8226; We then check that the commandline is valid (i.e. contains one item, a filename). If it isn't we print a message and terminate. Otherwise the file is opened lazily by readFile and the statistics calculated.
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1627348067" CREATED="1421804820790" MODIFIED="1421804820790"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      &#8226; The statistics are produced usinglength :: [a] -&gt; Int to count the length of the lists of words, lines and characters in the file. The first two are produced using the Prelude functionswords :: String -&gt; [String] andlines :: String -&gt; [String].
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1149773105" CREATED="1421804820800" MODIFIED="1421804820800"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      &#8226; The statistics are formatted usingshow :: Show a =&gt; a -&gt; String andunwords :: [String] -&gt; String before being output by putStrLn.
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_928552163" CREATED="1421804820809" MODIFIED="1421804820809"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      &#8226; Notice the use of nested do blocks, the interaction of layout between case and dostatements, and the do notation's version of a letexpression (whose extent is defined by layout, so doesn't require a terminating in).
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1585295372" CREATED="1421804820816" MODIFIED="1421804820816"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      &#8226; Observe that we must perform the getArgsaction and get a result to pass to the casestatement. Doing something likecase getArgs of .. won't work - getArgs has typeIO [String], not [String]. As IO is an ADT, we can't pattern match against values of this type.
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1079342374" CREATED="1421804820824" MODIFIED="1421804820824"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      &#8226; This solution is inefficient -- it traverses the file string five times. A more efficient implementation would calculate the statistics simultaneously, either using a hand-coded recursive function, or by using foldr.
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node TEXT="RWH" ID="ID_1104141982" CREATED="1430468428835" MODIFIED="1430546923362">
<font BOLD="false"/>
<node TEXT="I read the entire RWH IO chapter (7)." ID="ID_390396393" CREATED="1430531338370" MODIFIED="1430531344928"/>
<node TEXT="pitfalls" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1104385094" CREATED="1430515965809" MODIFIED="1430515970445">
<node TEXT="let v. &lt;-" LOCALIZED_STYLE_REF="default" ID="ID_45425384" CREATED="1430469227732" MODIFIED="1430523074969">
<node TEXT="&quot;When you&apos;re working in a do block, you use &lt;- to get results from IO actions and let to get results from pure code.&quot;" ID="ID_1756645910" CREATED="1430523060199" MODIFIED="1430523065223"/>
</node>
<node TEXT="close handle" ID="ID_1589166132" CREATED="1430549140277" MODIFIED="1430549171160">
<node TEXT="without hClose, data might not get written to file" ID="ID_1455520246" CREATED="1430516068810" MODIFIED="1430516081114">
<node TEXT="because Haskell uses internal buffers, for speed" ID="ID_1020972494" CREATED="1430516092826" MODIFIED="1430516101026"/>
</node>
<node TEXT="open files cost memory; close them asap" ID="ID_957815106" CREATED="1430516119074" MODIFIED="1430516125440"/>
</node>
<node TEXT="close handle not before its dependents are done" ID="ID_1271508828" CREATED="1430519959773" MODIFIED="1430549168011">
<node TEXT="&quot;[for example] When using hGetContents, it is important to remember that even though you may never again explicitly reference Handle directly in the rest of the program, you must not close the Handle until you have finished consuming its results via hGetContents.&quot;" ID="ID_1727232387" CREATED="1430519967596" MODIFIED="1430519975754"/>
</node>
<node TEXT="binary files and cross-platform portability" LOCALIZED_STYLE_REF="styles.topic" ID="ID_85013278" CREATED="1430515953554" MODIFIED="1430516086507">
<node TEXT="what to do" ID="ID_1473950853" CREATED="1430516008082" MODIFIED="1430516013640">
<node TEXT="use openBinaryFile, etc. rather than openFile, etc." ID="ID_129191810" CREATED="1430516017154" MODIFIED="1430516029992"/>
</node>
<node TEXT="why" ID="ID_1587224888" CREATED="1430516014714" MODIFIED="1430516015320">
<node TEXT="in linux, binary and (character?) files are treated the same" ID="ID_1194590297" CREATED="1430515973322" MODIFIED="1430515989288"/>
<node TEXT="in Windows, though, they are different" ID="ID_1043351290" CREATED="1430515989490" MODIFIED="1430516007296"/>
</node>
</node>
</node>
<node TEXT="string io" ID="ID_1142442267" CREATED="1430468438451" MODIFIED="1430468444497">
<node TEXT="putStrLn :: String -&gt; IO ()" ID="ID_591890924" CREATED="1430468447172" MODIFIED="1430468459238"/>
<node TEXT="getLine :: IO String" ID="ID_1375790471" CREATED="1430468463403" MODIFIED="1430468471953"/>
<node TEXT="_ v. _Ln: _Ln appends a newline" ID="ID_601400698" CREATED="1430519165884" MODIFIED="1430519205742">
<node TEXT="e.g. putStr v. putStrLn" ID="ID_205357782" CREATED="1430519175988" MODIFIED="1430519191008"/>
</node>
</node>
<node TEXT="io actions can be stored, multiply executed" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_46916615" CREATED="1430468648475" MODIFIED="1430468754324">
<node TEXT="writefoo = putStrLn &quot;foo&quot;&#xa;writefoo&#xa;writefoo" ID="ID_559417137" CREATED="1430468763612" MODIFIED="1430468764633"/>
</node>
<node TEXT="perform != show" ID="ID_463537726" CREATED="1430468828180" MODIFIED="1430468833538">
<node TEXT="in fact, &quot;show $ putStrLn &quot;hi!&quot;&quot; errs" ID="ID_691713952" CREATED="1430468834211" MODIFIED="1430468849763"/>
</node>
<node TEXT="can come from pure code" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1646468801" CREATED="1430468908404" MODIFIED="1430468911719">
<node TEXT="&quot;Any expression may produce an action as its value, but the action will not perform I/O until it is executed inside another I/O action (or it is main)&quot;" ID="ID_677695342" CREATED="1430468912787" MODIFIED="1430468915721"/>
</node>
<node TEXT="do" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1714397298" CREATED="1430469046748" MODIFIED="1430469201238">
<node TEXT="= serialize multiple" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_766039065" CREATED="1430469201853" MODIFIED="1430469221344">
<node TEXT="&quot;You only need to use do if you have more than one action that you need to perform.&quot;" ID="ID_1655165199" CREATED="1430469054177" MODIFIED="1430469060484"/>
</node>
<node TEXT="how do desugars" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_159586253" CREATED="1430469089892" MODIFIED="1430469208413">
<node TEXT="http://book.realworldhaskell.org/read/monads.html#monads.do" ID="ID_570421641" CREATED="1430469094613" MODIFIED="1430469094613" LINK="http://book.realworldhaskell.org/read/monads.html#monads.do"/>
</node>
</node>
<node TEXT="files" LOCALIZED_STYLE_REF="default" ID="ID_1823683900" CREATED="1430515013914" MODIFIED="1430515018003">
<node TEXT="use System.IO" ID="ID_1574143968" CREATED="1430515018554" MODIFIED="1430515021103"/>
<node TEXT="assoc a Handle with a file" ID="ID_976284349" CREATED="1430515024450" MODIFIED="1430515028758">
<node TEXT="get with openFile" ID="ID_1073391066" CREATED="1430515048282" MODIFIED="1430515050647"/>
<node TEXT="close with hClose" ID="ID_1452009640" CREATED="1430515050849" MODIFIED="1430515053119"/>
</node>
<node TEXT="hGetLine is not functional" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1069309635" CREATED="1430515197162" MODIFIED="1430515208420">
<node TEXT="call it twice and the second time it will get the next line, not the same one" ID="ID_1796821960" CREATED="1430515209122" MODIFIED="1430515224598"/>
</node>
<node TEXT="position in file: hTell and hSeek" ID="ID_526761194" CREATED="1430516250738" MODIFIED="1430516259552">
<node TEXT="hTell reports position" ID="ID_1112005146" CREATED="1430516268123" MODIFIED="1430516271840"/>
<node TEXT="hSeek sets it" ID="ID_481760730" CREATED="1430516272459" MODIFIED="1430516276573">
<node TEXT="= three modes" LOCALIZED_STYLE_REF="default" ID="ID_782153690" CREATED="1430516332395" MODIFIED="1430516339389"/>
<node TEXT="absolute, relative to current place, and absolute backwards" ID="ID_221469390" CREATED="1430516318835" MODIFIED="1430516332048"/>
</node>
<node TEXT="hIsSeekable" ID="ID_1841984856" CREATED="1430516366201" MODIFIED="1430516366201">
<node TEXT="reports whether one can seek in the device (e.g. microphone: no)" ID="ID_1938482197" CREATED="1430516368067" MODIFIED="1430516388412"/>
</node>
</node>
<node TEXT="predefined handles" ID="ID_25611016" CREATED="1430516434459" MODIFIED="1430516498537">
<node TEXT="stdin" ID="ID_385815227" CREATED="1430516438338" MODIFIED="1430516457523">
<node TEXT="usually the keyboard" ID="ID_1819592745" CREATED="1430516458264" MODIFIED="1430516461479"/>
<node TEXT="getLine = hGetLine stdin" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_832426350" CREATED="1430516510386" MODIFIED="1430516533812"/>
</node>
<node TEXT="stdout" ID="ID_226876964" CREATED="1430516442394" MODIFIED="1430516443991">
<node TEXT="usually the monitor" ID="ID_137491753" CREATED="1430516458264" MODIFIED="1430516470647"/>
<node TEXT="putStrLn = hPutStrLn stdout" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_684234160" CREATED="1430516510386" MODIFIED="1430516532843"/>
<node TEXT="print = hPrint stdout" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1110466135" CREATED="1430516510386" MODIFIED="1430516532834"/>
</node>
<node TEXT="stderr" ID="ID_585779841" CREATED="1430516444219" MODIFIED="1430516445288">
<node TEXT="usually the monitor" ID="ID_114990217" CREATED="1430516458264" MODIFIED="1430516470647"/>
</node>
</node>
<node TEXT="preempting user input" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_961568142" CREATED="1430516945875" MODIFIED="1430517028771">
<node TEXT="without preemption" ID="ID_1887877239" CREATED="1430516969723" MODIFIED="1430516971840">
<node ID="ID_848344711" CREATED="1430517011568" MODIFIED="1430517011568"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      *Main&gt; :l callingPure.hs
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_902739273" CREATED="1430517011572" MODIFIED="1430517011572"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      [1 of 1] Compiling Main&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;( callingPure.hs, interpreted )
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1476151126" CREATED="1430517011578" MODIFIED="1430517011578"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Ok, modules loaded: Main.
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1896475223" CREATED="1430517011584" MODIFIED="1430517011584"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      *Main&gt; main
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1885585024" CREATED="1430517011590" MODIFIED="1430517011590"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Greetings once again.&#160;&#160;What is your name?
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_27402079" CREATED="1430517011596" MODIFIED="1430517011596"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      [jbb typed this]
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1617148770" CREATED="1430517011602" MODIFIED="1430517011602"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Pleased to meet you, [jbb typed this].
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1783313002" CREATED="1430517011608" MODIFIED="1430517011608"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Your name contains 16 characters.
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="with it" ID="ID_972365178" CREATED="1430516972891" MODIFIED="1430516974440">
<node ID="ID_1350692052" CREATED="1430517008001" MODIFIED="1430517008001"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      *Main&gt; :! echo &quot;[no interactive user input]&quot; | runghc callingPure.hs
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_2901472" CREATED="1430517008005" MODIFIED="1430517008005"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Greetings once again.&#160;&#160;What is your name?
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_357394939" CREATED="1430517008016" MODIFIED="1430517008016"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Pleased to meet you, [no interactive user input].
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1183589274" CREATED="1430517008024" MODIFIED="1430517008024"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Your name contains 27 characters.
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1865744691" CREATED="1430517008030" MODIFIED="1430517008030"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      *Main&gt;
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="System.Directory: file-external functions" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1384696692" CREATED="1430517557020" MODIFIED="1430517687275">
<node TEXT="= as opposed to writing characters into files" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1581696134" CREATED="1430517573101" MODIFIED="1430517588529"/>
<node TEXT="https://hackage.haskell.org/package/directory-1.2.1.0/docs/System-Directory.html" ID="ID_1928346118" CREATED="1430517666765" MODIFIED="1430517666765" LINK="https://hackage.haskell.org/package/directory-1.2.1.0/docs/System-Directory.html"/>
<node TEXT="examples: removeFile, renameFile, getCurrentDirectory" ID="ID_1163158302" CREATED="1430517658100" MODIFIED="1430517737653"/>
</node>
<node TEXT="openTempFile" ID="ID_1469633330" CREATED="1430518039756" MODIFIED="1430518048205">
<node TEXT="to avoid having to find a unique name" ID="ID_329053045" CREATED="1430518050443" MODIFIED="1430518056937"/>
</node>
</node>
<node TEXT="concise" ID="ID_256424752" CREATED="1430521319590" MODIFIED="1430522059184">
<font BOLD="true"/>
<node ID="ID_858393209" CREATED="1430521993471" MODIFIED="1430521993471"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      readFile, writeFile
    </p>
  </body>
</html>
</richcontent>
<node TEXT="example" ID="ID_958399679" CREATED="1430521366541" MODIFIED="1430521368322">
<node TEXT="-- file: ch07/toupper-lazy3.hs&#xa;import Data.Char(toUpper)&#xa;&#xa;main = do&#xa;       inpStr &lt;- readFile &quot;input.txt&quot;&#xa;       writeFile &quot;output.txt&quot; (map toUpper inpStr)" ID="ID_1243343410" CREATED="1430521333261" MODIFIED="1430521334043"/>
</node>
<node TEXT="they are lazy" ID="ID_798890677" CREATED="1430521369970" MODIFIED="1430521383288">
<node TEXT="readFile uses hGetContents" ID="ID_1126095485" CREATED="1430521383789" MODIFIED="1430521389558"/>
</node>
</node>
<node TEXT="even more concise: interact" ID="ID_1324617359" CREATED="1430521995070" MODIFIED="1430522003507">
<node TEXT="interact :: (String -&gt; String) -&gt; IO ()" ID="ID_1506736709" CREATED="1430522024542" MODIFIED="1430522043140"/>
<node TEXT="applies a function to stdin, writes to stdout" ID="ID_141694808" CREATED="1430522043421" MODIFIED="1430522055565"/>
</node>
</node>
<node TEXT="eval" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_311041605" CREATED="1430522874375" MODIFIED="1430522918245">
<node TEXT="eval only happens in do" ID="ID_1473202662" CREATED="1430522994975" MODIFIED="1430523006268">
<node TEXT="and that&apos;s almost all that happens in do" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1969558048" CREATED="1430523006632" MODIFIED="1430523015181"/>
<node TEXT="&quot;do x&quot;, if x is of type IO a, will execute x" ID="ID_259783571" CREATED="1430522878382" MODIFIED="1430522890684"/>
<node TEXT="&quot;every statement, except let, in a do block must yield an I/O action which will be executed&quot;" ID="ID_1410409274" CREATED="1430522990919" MODIFIED="1430522992436"/>
</node>
<node TEXT="in open functional code, though, x can appear and not be eval&apos;d" ID="ID_1598056735" CREATED="1430522893550" MODIFIED="1430522909165"/>
</node>
<node TEXT="mapM*: like map, but within a monad" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1099337917" CREATED="1430523204247" MODIFIED="1430523221388">
<node TEXT="mapM evaluates and returns its results" ID="ID_1898673462" CREATED="1430523229782" MODIFIED="1430523258015"/>
<node TEXT="mapM_ only evaluates them" ID="ID_695714475" CREATED="1430523259702" MODIFIED="1430523260156"/>
</node>
<node TEXT="sequencing" ID="ID_1094014840" CREATED="1430523956167" MODIFIED="1430523959111">
<font BOLD="true"/>
<node ID="ID_1091730209" CREATED="1430524018160" MODIFIED="1430524018160"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      combines two io actions into one
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="(&gt;&gt;) :: Monad m =&gt; m a -&gt; m b -&gt; m b" ID="ID_874610841" CREATED="1430523974095" MODIFIED="1430524064660">
<node TEXT="this just executes both" ID="ID_704639439" CREATED="1430524068559" MODIFIED="1430524072589"/>
</node>
<node TEXT="(&gt;&gt;=) :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b" ID="ID_1290600209" CREATED="1430524061999" MODIFIED="1430524061999">
<node TEXT="this executes both but uses the result of the first as the input to the second" ID="ID_1592939422" CREATED="1430524068559" MODIFIED="1430524091397"/>
</node>
<node TEXT="do-equivalence" ID="ID_1056770645" CREATED="1430524141327" MODIFIED="1430524143621">
<node TEXT="-- file: ch07/basicio.hs" ID="ID_571768440" CREATED="1430524144229" MODIFIED="1430524144229">
<node TEXT="main = do" LOCALIZED_STYLE_REF="styles.topic" ID="ID_409291120" CREATED="1430524144229" MODIFIED="1430524174145"/>
<node TEXT="putStrLn &quot;Greetings!  What is your name?&quot;" ID="ID_1503289795" CREATED="1430524144230" MODIFIED="1430524144230"/>
<node TEXT="inpStr &lt;- getLine" ID="ID_551160686" CREATED="1430524144230" MODIFIED="1430524144230"/>
<node TEXT="putStrLn $ &quot;Welcome to Haskell, &quot; ++ inpStr ++ &quot;!&quot;" ID="ID_1950223822" CREATED="1430524144230" MODIFIED="1430524144230"/>
</node>
<node TEXT="-- file: ch07/basicio-nodo.hs" ID="ID_990392237" CREATED="1430524150308" MODIFIED="1430524150308">
<node TEXT="main =" LOCALIZED_STYLE_REF="styles.topic" ID="ID_255822184" CREATED="1430524150308" MODIFIED="1430524175570"/>
<node TEXT="putStrLn &quot;Greetings!  What is your name?&quot; &gt;&gt;" ID="ID_686885517" CREATED="1430524150309" MODIFIED="1430524150309"/>
<node TEXT="getLine &gt;&gt;=" ID="ID_1114758477" CREATED="1430524150309" MODIFIED="1430524150309"/>
<node TEXT="(\inpStr -&gt; putStrLn $ &quot;Welcome to Haskell, &quot; ++ inpStr ++ &quot;!&quot;)" ID="ID_1067745275" CREATED="1430524150309" MODIFIED="1430524150309"/>
</node>
</node>
</node>
<node TEXT="buffering" ID="ID_316065862" CREATED="1430530893314" MODIFIED="1430530894695">
<node TEXT="is for speed" ID="ID_1422317613" CREATED="1430530896441" MODIFIED="1430530898135"/>
<node TEXT="causes input to be read in chunks larger than the units being processed" ID="ID_1187116335" CREATED="1430530898918" MODIFIED="1430530914126">
<node TEXT="e.g. if filtering on a character basis, might read nonetheless on a 4 kb basi" ID="ID_1176419421" CREATED="1430530915785" MODIFIED="1430530944708"/>
</node>
<node TEXT="three modes" ID="ID_101884031" CREATED="1430530994434" MODIFIED="1430530996152">
<node TEXT="NoBuffering: one char at a time. slow." ID="ID_1765960142" CREATED="1430530996746" MODIFIED="1430531030531"/>
<node TEXT="LineBuffering: at each \n, or when too big (whichever first)" ID="ID_1757863631" CREATED="1430531056995" MODIFIED="1430531069776"/>
<node TEXT="BlockBuffering: fastest, not suitable for interactive user input" ID="ID_1334216251" CREATED="1430531088474" MODIFIED="1430531095919"/>
</node>
<node TEXT="to query &amp; set it:  hGetBuffering, hSetBuffering" ID="ID_709460160" CREATED="1430531138346" MODIFIED="1430531164909"/>
<node TEXT="hFlush: &quot;write now&quot;" ID="ID_457808782" CREATED="1430531194706" MODIFIED="1430531213285">
<node TEXT="circumvent laziness" ID="ID_622477793" CREATED="1430531200178" MODIFIED="1430531202958"/>
</node>
</node>
<node TEXT="command-line args" ID="ID_1677351148" CREATED="1430531231834" MODIFIED="1430531235936">
<node TEXT="System.Environment.getArgs" ID="ID_1914587664" CREATED="1430531236806" MODIFIED="1430531236806"/>
</node>
<node TEXT="environment vars" ID="ID_1518659914" CREATED="1430531282602" MODIFIED="1430531285136">
<node TEXT="&quot;use ... getEnv or getEnvironment&quot;" ID="ID_447714435" CREATED="1430531286266" MODIFIED="1430531295711"/>
</node>
</node>
</node>
<node TEXT="Contexts" ID="ID_543129645" CREATED="1413875726074" MODIFIED="1414907855259">
<font BOLD="true"/>
<node TEXT="search for &quot;Huh?&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_84387553" CREATED="1421784356182" MODIFIED="1421784367924"/>
<node TEXT="_ ref&apos;s" ID="ID_872751160" CREATED="1421790668320" MODIFIED="1421790885942">
<node TEXT="Learn You a Haskell for Great Good!, three chapters" ID="ID_1450647302" CREATED="1421790815080" MODIFIED="1421790835270">
<node TEXT="named something like" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1689336420" CREATED="1421790856216" MODIFIED="1421790863107"/>
<node TEXT="Applicative Functors etc." ID="ID_83827961" CREATED="1421790850144" MODIFIED="1421790855493"/>
<node TEXT="Monads 1" ID="ID_1093851010" CREATED="1421790827784" MODIFIED="1421790848262"/>
<node TEXT="Monads 2" ID="ID_47516376" CREATED="1421790848640" MODIFIED="1421790849390"/>
</node>
<node TEXT="What the Hell Are Monads?" ID="ID_770012818" CREATED="1421790662237" MODIFIED="1421790668141">
<node TEXT="http://web.cecs.pdx.edu/~antoy/Courses/TPFLP/lectures/MONADS/Noel/research/monads.html" ID="ID_1677842809" CREATED="1414647581543" MODIFIED="1414647581543" LINK="http://web.cecs.pdx.edu/~antoy/Courses/TPFLP/lectures/MONADS/Noel/research/monads.html"/>
</node>
<node TEXT="Real World Haskell" ID="ID_174176642" CREATED="1421807765971" MODIFIED="1421807769472">
<node TEXT="at least for monad transformers (ch 18)" ID="ID_1326313763" CREATED="1421807770339" MODIFIED="1421807776417"/>
</node>
</node>
<node TEXT="brief compare" ID="ID_22714861" CREATED="1414718415866" MODIFIED="1414718420407">
<node TEXT="&quot;class diagram&quot;" LOCALIZED_STYLE_REF="default" ID="ID_1535738420" CREATED="1413427725410" MODIFIED="1413427832152">
<node TEXT="MonadPlus =&gt; Monad =&gt; Applicative =&gt; Functor" ID="ID_219920308" CREATED="1413426920441" MODIFIED="1413426944515"/>
<node TEXT="Monoid is alone" ID="ID_948798224" CREATED="1413427743640" MODIFIED="1414718453053"/>
</node>
<node TEXT="idioms" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1776102648" CREATED="1413426201218" MODIFIED="1421783586289">
<node TEXT="&lt;$&gt;" ID="ID_87943489" CREATED="1421782505706" MODIFIED="1421782508137">
<node TEXT="(&lt;$&gt;) :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b" ID="ID_772583976" CREATED="1421782439042" MODIFIED="1421782439927"/>
<node TEXT="lets you chain functions that start (rightmost) at an Applic-wrapped value" ID="ID_1216785419" CREATED="1421783320317" MODIFIED="1421783342279"/>
<node TEXT="example" ID="ID_1579791950" CREATED="1421783279715" MODIFIED="1421783280705">
<node TEXT="*Main Control.Applicative&gt; let f = (+1)" ID="ID_1975867846" CREATED="1421783117577" MODIFIED="1421783117577"/>
<node TEXT="*Main Control.Applicative&gt; f &lt;$&gt; f &lt;$&gt; Just 1" ID="ID_629501556" CREATED="1421783282403" MODIFIED="1421783282403"/>
<node TEXT="Just 3" ID="ID_1896486953" CREATED="1421783282403" MODIFIED="1421783282403"/>
</node>
</node>
<node TEXT="&lt;*&gt;" ID="ID_558726405" CREATED="1421782501362" MODIFIED="1421782503999">
<node TEXT="(&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b" ID="ID_277601884" CREATED="1421782504562" MODIFIED="1421782504562"/>
<node TEXT="lets you chain Applicative-wrapped functions" ID="ID_1418530303" CREATED="1413426205170" MODIFIED="1421782514825"/>
<node TEXT="example" ID="ID_1252245699" CREATED="1421782533458" MODIFIED="1421783142317">
<node TEXT="abstract" ID="ID_1765881846" CREATED="1421783144651" MODIFIED="1421783145914">
<node TEXT="if" ID="ID_396629023" CREATED="1421782627731" MODIFIED="1421782628185">
<node TEXT="g :: a -&gt; b" ID="ID_1488446082" CREATED="1421782539330" MODIFIED="1421782627440"/>
<node TEXT="h :: b -&gt; c" ID="ID_1946029366" CREATED="1421782616435" MODIFIED="1421782626097"/>
</node>
<node TEXT="then" ID="ID_1480485670" CREATED="1421782630690" MODIFIED="1421782632175">
<node TEXT="f g &lt;*&gt; f a :: f b" ID="ID_880643899" CREATED="1421782558915" MODIFIED="1421782659439"/>
<node TEXT="f h &lt;*&gt; (f g &lt;*&gt; f a) :: f c" ID="ID_1562839394" CREATED="1421782598547" MODIFIED="1421783133001"/>
</node>
</node>
<node TEXT="concrete" ID="ID_1265682248" CREATED="1421783147163" MODIFIED="1421783148312">
<node TEXT="*Main Control.Applicative&gt; let f = (+1)" ID="ID_555311588" CREATED="1421783117577" MODIFIED="1421783117577"/>
<node TEXT="*Main Control.Applicative&gt; Just f &lt;*&gt; (Just f &lt;*&gt; Just 3)" ID="ID_1895369897" CREATED="1421783117577" MODIFIED="1421783117577"/>
<node TEXT="Just 5" ID="ID_1661105312" CREATED="1421783117584" MODIFIED="1421783117584"/>
<node TEXT="*Main Control.Applicative&gt;" ID="ID_155064301" CREATED="1421783117585" MODIFIED="1421783117585"/>
</node>
</node>
</node>
<node TEXT="&gt;&gt;= can chain funcs of type Monad m =&gt; (a -&gt; m b) -&gt; m b" ID="ID_747193261" CREATED="1413426238495" MODIFIED="1421783539536"/>
<node TEXT="Monad-returning functions allow &quot;do notation&quot;" ID="ID_1467378747" CREATED="1413599308170" MODIFIED="1413599323663"/>
<node TEXT="Monoid and MonadPlus let you accumulate non-function data" ID="ID_334894732" CREATED="1413427463218" MODIFIED="1413427774745"/>
</node>
<node TEXT="things they define" LOCALIZED_STYLE_REF="default" ID="ID_1023967354" CREATED="1413427550050" MODIFIED="1413427830882">
<node TEXT="Functor" ID="ID_1948466606" CREATED="1413425189333" MODIFIED="1413426951884">
<node TEXT="fmap, &lt;$&gt;" ID="ID_16970561" CREATED="1413425179999" MODIFIED="1413425184859">
<node TEXT="&lt;$&gt; is just the other as an infix" LOCALIZED_STYLE_REF="styles.topic" ID="ID_643376647" CREATED="1413425199564" MODIFIED="1421783613854"/>
</node>
<node TEXT="they apply a function &quot;within&quot; a Functor" ID="ID_1865086452" CREATED="1413425229130" MODIFIED="1413425258963"/>
</node>
<node TEXT="Applicative" ID="ID_1118114127" CREATED="1413425177150" MODIFIED="1413426957673">
<node TEXT="&quot;pure&quot; wraps data" ID="ID_1122608413" CREATED="1413425221651" MODIFIED="1413425453874"/>
<node TEXT="&lt;*&gt; applies one Applicative&apos;s contents to another&apos;s" LOCALIZED_STYLE_REF="default" ID="ID_1394837556" CREATED="1413425185614" MODIFIED="1421783635013"/>
</node>
<node TEXT="Monad" ID="ID_972434748" CREATED="1413427009586" MODIFIED="1413427010413">
<node TEXT="its &gt;&gt;= is like Applicative&apos;s &lt;*&gt;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1540015177" CREATED="1413425623606" MODIFIED="1413427013252">
<node ID="ID_1709064502" CREATED="1413425878297" MODIFIED="1413425878297"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      (&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b
    </p>
  </body>
</html>
</richcontent>
<node TEXT="for f a Functor" ID="ID_1771733480" CREATED="1413425882358" MODIFIED="1413425885802"/>
</node>
<node ID="ID_1103323180" CREATED="1413425865142" MODIFIED="1413425865142"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      (&gt;&gt;=) :: m a -&gt; (a -&gt; m b) -&gt; m b
    </p>
  </body>
</html>
</richcontent>
<node TEXT="for m a Monad" ID="ID_1161460861" CREATED="1413425886335" MODIFIED="1413425888329"/>
</node>
<node TEXT="both functions input a Functor and output a Functor" ID="ID_883349137" CREATED="1413425951192" MODIFIED="1413425990138"/>
<node TEXT="but the other input is ..." ID="ID_650075906" CREATED="1413426023402" MODIFIED="1413426053659">
<node TEXT="for &lt;*&gt;, a Functor-wrapped function with ordinary input and output" ID="ID_1538376891" CREATED="1413426054112" MODIFIED="1413426071825"/>
<node TEXT="for &gt;&gt;=, a function from ordinary input to a Functor" ID="ID_1486732105" CREATED="1413426073382" MODIFIED="1413426101517"/>
</node>
<node TEXT="the only other difference is the order of inputs" ID="ID_1862529805" CREATED="1413425933012" MODIFIED="1413425943998"/>
</node>
<node TEXT="&quot;do notation&quot;" ID="ID_1394376743" CREATED="1413446434520" MODIFIED="1413446439746">
<node TEXT="do e1 ; e2      =        e1 &gt;&gt; e2&#xa;do p &lt;- e1; e2  =        e1 &gt;&gt;= \p -&gt; e2" ID="ID_1316745294" CREATED="1413446441223" MODIFIED="1413446462067"/>
<node TEXT="actually, failure is considered" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_243558693" CREATED="1413446542728" MODIFIED="1421784050868">
<node TEXT="Huh? 2015 01 20" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_35305705" CREATED="1421784051701" MODIFIED="1421784350220"/>
<node TEXT="the second would be more accurately represented this way" ID="ID_999510304" CREATED="1413446552853" MODIFIED="1413446560815"/>
<node TEXT="do p &lt;- e1; e2  =   e1 &gt;&gt;= (\v -&gt; case v of p -&gt; e2; _ -&gt; fail &quot;s&quot;)" ID="ID_360005253" CREATED="1413446550373" MODIFIED="1413446552521"/>
</node>
<node TEXT="punctuation" ID="ID_96875006" CREATED="1413446534721" MODIFIED="1421784082290">
<font BOLD="false"/>
<node TEXT="instead of &quot;;&quot; tab indentation works too" ID="ID_711360935" CREATED="1413446463429" MODIFIED="1413446479702"/>
</node>
</node>
<node TEXT="less conceptual" ID="ID_1321443356" CREATED="1413425538606" MODIFIED="1413425551420">
<font BOLD="true"/>
<node TEXT="&gt;&gt; applies (using &gt;&gt;=) the function that replaces the left operand with the right one (by default)" ID="ID_1382997566" CREATED="1413425561196" MODIFIED="1413425609084">
<node TEXT="it is overrideable" ID="ID_1316558902" CREATED="1413425609255" MODIFIED="1413425612618"/>
</node>
<node TEXT="&quot;return&quot; duplicates &quot;pure&quot; from Applicative" ID="ID_1954553053" CREATED="1413425463718" MODIFIED="1414906194270">
<node TEXT="but it gives you a monad, I&apos;m guessing, rather than an applicative (the one an extension of the other)" ID="ID_935603198" CREATED="1414906206271" MODIFIED="1414906239855"/>
</node>
<node TEXT="&quot;fail&quot; remains mysterious to me" LOCALIZED_STYLE_REF="default" ID="ID_1683694451" CREATED="1413425489274" MODIFIED="1413425552485"/>
</node>
</node>
<node TEXT="MonadPlus" ID="ID_314371310" CREATED="1413427563976" MODIFIED="1413427566269">
<node TEXT="mplus" ID="ID_340585669" CREATED="1413427569719" MODIFIED="1413427571050"/>
<node TEXT="mzero" ID="ID_644453346" CREATED="1413427571247" MODIFIED="1413427573203"/>
</node>
<node TEXT="Monoid" ID="ID_1297527400" CREATED="1413427666222" MODIFIED="1413427667530">
<node TEXT="mappend, mempty" ID="ID_126563767" CREATED="1413427668295" MODIFIED="1413427676425"/>
<node TEXT="and some overrideable things inferred from those" ID="ID_1900076183" CREATED="1413427702373" MODIFIED="1413427707862"/>
</node>
</node>
</node>
<node TEXT="Functor" ID="ID_323998963" CREATED="1412986038504" MODIFIED="1413418713380">
<node TEXT="a functor F is a type constructor with one type variable" ID="ID_263443007" CREATED="1413409588069" MODIFIED="1421784211300"/>
<node TEXT="if F is a functor, fmap exists such that for every function f :: x -&gt; y, fmap f :: F x -&gt; F y" ID="ID_727386340" CREATED="1414906348580" MODIFIED="1421784221896"/>
<node TEXT="functions are functors, where fmap is function attachment" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1516679555" CREATED="1413409999939" MODIFIED="1421784313402">
<node TEXT="Huh? 2015 01 20" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1299868736" CREATED="1421784316453" MODIFIED="1421784333396"/>
<node TEXT=". demo" ID="ID_267652729" CREATED="1413410043927" MODIFIED="1414907277109"/>
<node TEXT="Prelude&gt; (fmap (+3) (*3)) 10&#xa;33" ID="ID_936904651" CREATED="1413408766513" MODIFIED="1413408766925"/>
<node TEXT="Prelude&gt; :t fmap&#xa;fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b" ID="ID_1794703589" CREATED="1413410067157" MODIFIED="1413410067496"/>
</node>
<node TEXT="partial application is fine" ID="ID_302322216" CREATED="1413410368618" MODIFIED="1413410371732">
<node TEXT="Prelude&gt; :t fmap (*) [1,2]&#xa;fmap (*) [1,2] :: Num a =&gt; [a -&gt; a]" ID="ID_294210847" CREATED="1413410421637" MODIFIED="1413410422216"/>
</node>
<node TEXT="class declaration" ID="ID_1565270519" CREATED="1412986512455" MODIFIED="1412986515594">
<node TEXT="class Functor f where &#xa;    fmap :: (a -&gt; b) -&gt; f a -&gt; f b" ID="ID_1700188539" CREATED="1412986508415" MODIFIED="1412986509091"/>
<node TEXT="note: &quot;f&quot; is a type constructor" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_888548618" CREATED="1412986519895" MODIFIED="1421785138298">
<node TEXT="Functor is a typeclass on a type constructor;&#xa;a concrete type cannot be made an instance of it." ID="ID_871960805" CREATED="1413405153938" MODIFIED="1421785015938"/>
<node TEXT="because f appears with a type argument -- it&apos;s &quot;f a&quot; or &quot;f b&quot;, not just &quot;f&quot;." ID="ID_1169910660" CREATED="1421785035774" MODIFIED="1421785153551"/>
</node>
</node>
<node TEXT="functor laws" ID="ID_380859043" CREATED="1413160146616" MODIFIED="1413160150475">
<node TEXT="instances" ID="ID_38979190" CREATED="1413183021773" MODIFIED="1413183023071">
<node TEXT="for every functor, it should be that" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1657374482" CREATED="1413160180587" MODIFIED="1413183025742"/>
<node TEXT="fmap id = id" ID="ID_314811413" CREATED="1413160178347" MODIFIED="1413160179840"/>
<node TEXT="fmap (f . g) = fmap f . fmap g" ID="ID_1742302699" CREATED="1413160410405" MODIFIED="1413160440309">
<node TEXT="equiv" ID="ID_1607843939" CREATED="1413160437285" MODIFIED="1413160437881"/>
<node TEXT="fmap (f . g) F = fmap f (fmap g F)" ID="ID_1467909316" CREATED="1413160430774" MODIFIED="1413160436977"/>
</node>
</node>
<node TEXT="compiler will not test; user should" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_845017186" CREATED="1413160150878" MODIFIED="1421785219221"/>
</node>
<node TEXT="&lt;$&gt; is an infix for fmap" ID="ID_443362442" CREATED="1413410448162" MODIFIED="1421784876752">
<node TEXT="defined in Control.Applicative" LOCALIZED_STYLE_REF="styles.topic" ID="ID_709217488" CREATED="1413225147917" MODIFIED="1421785244864"/>
<node TEXT="(&lt;$&gt;) :: (Functor f) =&gt; (a -&gt; b) -&gt; f a -&gt; f b &#xa;f &lt;$&gt; x = fmap f x" LOCALIZED_STYLE_REF="styles.topic" ID="ID_217873420" CREATED="1413225146774" MODIFIED="1421785244877"/>
</node>
<node TEXT="skipped, inc. hard" LOCALIZED_STYLE_REF="default" ID="ID_1876031382" CREATED="1413410462289" MODIFIED="1421785325421">
<font BOLD="true"/>
<node TEXT="instances" ID="ID_700961638" CREATED="1412986774709" MODIFIED="1412986775768">
<node TEXT="simple" ID="ID_1394505075" CREATED="1413228807823" MODIFIED="1413228810983">
<font BOLD="true"/>
<node TEXT="List" ID="ID_940259864" CREATED="1412986548210" MODIFIED="1413182949791">
<node TEXT="instance Functor [] where &#xa;    fmap = map" ID="ID_420201813" CREATED="1412986550866" MODIFIED="1412986551405"/>
<node TEXT="had to use [], not [a], because Functor needs a type constructor" ID="ID_1993436284" CREATED="1412986585470" MODIFIED="1412986596793"/>
<node TEXT="probably the data type that Functor class was generalized from" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1566467744" CREATED="1413182961970" MODIFIED="1413182980388"/>
</node>
<node TEXT="Maybe" ID="ID_382409460" CREATED="1412986779173" MODIFIED="1412986792873">
<node TEXT="instance Functor Maybe where &#xa;    fmap f (Just x) = Just (f x) &#xa;    fmap f Nothing = Nothing" ID="ID_1031354193" CREATED="1412986793500" MODIFIED="1412986793983"/>
</node>
<node TEXT="Tree (recursive)" ID="ID_1424940753" CREATED="1412986934206" MODIFIED="1412987095691">
<node TEXT="instance Functor Tree where &#xa;    fmap f EmptyTree = EmptyTree &#xa;    fmap f (Node x leftsub rightsub) = Node (f x) (fmap f leftsub) (fmap f rightsub)" ID="ID_879322756" CREATED="1412986935823" MODIFIED="1412986936786"/>
</node>
<node TEXT="Either (asymmetric)" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_129093076" CREATED="1412987041278" MODIFIED="1413181281572">
<node TEXT="where would you use this?" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1563157822" CREATED="1413181282954" MODIFIED="1413181286965"/>
<node TEXT="(Either a) is a typeclass with one operand" ID="ID_1413634732" CREATED="1412987044613" MODIFIED="1412987060727"/>
<node TEXT="f can only be applied to the right branch" ID="ID_101325576" CREATED="1412987062484" MODIFIED="1412987075960">
<node TEXT="because the left is possibly of a different type" ID="ID_1442788129" CREATED="1412987076226" MODIFIED="1412987084277"/>
</node>
<node TEXT="instance Functor (Either a) where &#xa;    fmap f (Right x) = Right (f x) &#xa;    fmap f (Left x) = Left x" ID="ID_1089554037" CREATED="1412987043302" MODIFIED="1412987044089"/>
</node>
</node>
<node TEXT="&lt;IO&gt; is a functor" LOCALIZED_STYLE_REF="default" ID="ID_462720089" CREATED="1413157981810" MODIFIED="1413408612251">
<node TEXT="fmap (++&quot;!&quot;) getLine behaves just like getLine, only that its result always has &quot;!&quot; appended to it" ID="ID_439792271" CREATED="1413157979251" MODIFIED="1413405428828"/>
<node TEXT="reminder: getLine has type &quot;IO String&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_206712391" CREATED="1413408537430" MODIFIED="1413408629560">
<node TEXT="My intuition is wrong, that getLine should have a function&apos;s type. It takes no within-program input; instead it does an IO action (that reads from user input, which is different) and produces a String." ID="ID_375455590" CREATED="1413408544574" MODIFIED="1413408607911"/>
</node>
</node>
<node TEXT="&quot;(-&gt;) r&quot; is a functor" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_398476181" CREATED="1413158288933" MODIFIED="1413158527905">
<node TEXT="huh?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1388617601" CREATED="1421785450415" MODIFIED="1421785452642"/>
<node TEXT="links in" ID="ID_1386795113" CREATED="1414907801385" MODIFIED="1414907802668"/>
<node TEXT="links in" ID="ID_1731882415" CREATED="1413408661475" MODIFIED="1413408662830"/>
<node TEXT="= the operator that describes types" ID="ID_1523285262" CREATED="1413158534960" MODIFIED="1413158544563"/>
<node TEXT="implementation" ID="ID_1173412942" CREATED="1413228923094" MODIFIED="1413228925081">
<node TEXT="instance Functor ((-&gt;) r) where &#xa;    fmap f g = (\x -&gt; f (g x))" ID="ID_918551205" CREATED="1413228925229" MODIFIED="1413228926177"/>
</node>
<node TEXT="&quot;it&apos;s just function composition&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1665548192" CREATED="1413158917940" MODIFIED="1413158926748"/>
<node TEXT="r -&gt; a can be rewritten as (-&gt;) r a" ID="ID_1518659959" CREATED="1413158285837" MODIFIED="1413158287847"/>
<node TEXT="for some reason, the partial application can&apos;t be written &quot;r -&gt;&quot;, but &quot;(-&gt;) r&quot; works" ID="ID_1327975174" CREATED="1413158576252" MODIFIED="1413158615878"/>
<node TEXT="the box analogy" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_164814113" CREATED="1413159149847" MODIFIED="1413159154280">
<node TEXT="&quot;you can think of the function (+100) as a box that contains its eventual result. Sort of like how an I/O action can be thought of as a box that will go out into the real world and fetch some result. Using fmap (*3) on (+100) will create another function that acts like (+100), only before producing a result, (*3) will be applied to that result.&quot;" LOCALIZED_STYLE_REF="default" ID="ID_749115112" CREATED="1413159146663" MODIFIED="1413159149415"/>
</node>
</node>
</node>
<node TEXT="within-functor partial application" ID="ID_782758119" CREATED="1413222310961" MODIFIED="1413222317619">
<node TEXT="map n-arg function over a functor -&gt; functor containing (n-1)-arg functions" ID="ID_1374136665" CREATED="1413222162236" MODIFIED="1413222209231"/>
<node TEXT="ex&apos;l" ID="ID_441245250" CREATED="1413409091844" MODIFIED="1413409092881">
<node TEXT="start with a 2-arg function, *" ID="ID_1456854689" CREATED="1413409094405" MODIFIED="1413409105270"/>
<node TEXT="ghci&gt; let a = fmap (*) [1,2,3,4] &#xa;ghci&gt; :t a &#xa;a :: [Integer -&gt; Integer] &#xa;ghci&gt; fmap (\f -&gt; f 9) a &#xa;[9,18,27,36]" ID="ID_1945231148" CREATED="1413222185211" MODIFIED="1413222186049"/>
</node>
</node>
<node TEXT="fmap += transformation attachment" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_887041462" CREATED="1413185833370" MODIFIED="1413408791741">
<node TEXT="Huh?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_641816106" CREATED="1421785461959" MODIFIED="1421785464321"/>
<node TEXT="demo" ID="ID_1583866014" CREATED="1413408772593" MODIFIED="1413408795901">
<node TEXT="Prelude&gt; (fmap (+3) (*3)) 10&#xa;33" ID="ID_1260694343" CREATED="1413408766513" MODIFIED="1413408766925"/>
</node>
<node TEXT="verbose" ID="ID_1310035939" CREATED="1413408779177" MODIFIED="1413408780139">
<node TEXT="&quot;If you think of functors as things that output values, you can think of mapping over functors as attaching a transformation to the output of the functor that changes the value.&quot;" ID="ID_100459165" CREATED="1413185814676" MODIFIED="1413185901798"/>
<node TEXT="&quot;When we do fmap (+3) (*3), we attach the transformation (+3) to the eventual output of (*3).&quot;" ID="ID_1077926076" CREATED="1413185896363" MODIFIED="1413185899733"/>
</node>
</node>
</node>
</node>
<node TEXT="Applicative" ID="ID_1148800288" CREATED="1413185964508" MODIFIED="1413418724009">
<node TEXT="class def" ID="ID_1424232677" CREATED="1413224930680" MODIFIED="1421786493239">
<node TEXT="class (Functor f) =&gt; Applicative f where &#xa;    pure :: a -&gt; f a &#xa;    (&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b" ID="ID_1828439496" CREATED="1413222499612" MODIFIED="1413222500320"/>
</node>
<node TEXT="defines two functions" ID="ID_723911777" CREATED="1413416427409" MODIFIED="1413416433331">
<node TEXT="pure : wraps data" ID="ID_1603611261" CREATED="1413413790878" MODIFIED="1421785611975">
<node TEXT="pure :: F Applicatuve =&gt; x -&gt; F x" ID="ID_331036155" CREATED="1413413488298" MODIFIED="1413413583700"/>
</node>
<node TEXT="&lt;*&gt; : like function application" ID="ID_96577983" CREATED="1413413800286" MODIFIED="1421785608566">
<node TEXT="&lt;*&gt; :: F Applicative =&gt; F (a -&gt; b) -&gt; F a -&gt; F b" ID="ID_510207638" CREATED="1413413519176" MODIFIED="1413413761217"/>
<node TEXT="for function and data in Functors" ID="ID_1886902339" CREATED="1421785601975" MODIFIED="1421785602692"/>
</node>
</node>
<node TEXT="a leading &lt;$&gt; can make a &lt;*&gt; chain prettier" ID="ID_1289080006" CREATED="1413225500338" MODIFIED="1414909586808">
<node TEXT="from Functor, not (its descendent) Applicative" ID="ID_1655365886" CREATED="1413416532217" MODIFIED="1413416538756"/>
<node TEXT="how to use" ID="ID_486756793" CREATED="1413416325323" MODIFIED="1413416329781">
<node TEXT="if we want to apply a function f between three applicative functors, we can write f &lt;$&gt; x &lt;*&gt; y &lt;*&gt; z" ID="ID_1386604033" CREATED="1413225511337" MODIFIED="1413225513587"/>
</node>
<node TEXT="why that&apos;s how" ID="ID_750945543" CREATED="1413416331673" MODIFIED="1413416336372">
<node TEXT="because in a chain f (F a) (F b) ..., f is the only non-Functor" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_401684438" CREATED="1413414031928" MODIFIED="1413416324859"/>
</node>
<node TEXT="what it is better than" ID="ID_1892626041" CREATED="1414909563364" MODIFIED="1414909567328">
<node TEXT="ghci&gt; pure (+) &lt;*&gt; Just 3 &lt;*&gt; Just 5 &#xa;Just 8 &#xa;ghci&gt; pure (+) &lt;*&gt; Just 3 &lt;*&gt; Nothing &#xa;Nothing &#xa;ghci&gt; pure (+) &lt;*&gt; Nothing &lt;*&gt; Just 5 &#xa;Nothing" ID="ID_1072181740" CREATED="1413224661948" MODIFIED="1413224662640"/>
</node>
</node>
<node TEXT="has laws" ID="ID_394055603" CREATED="1421786576633" MODIFIED="1421786578149"/>
<node TEXT="implies Functor: why" ID="ID_1102951751" CREATED="1413413460140" MODIFIED="1414959905387">
<node TEXT="brief" ID="ID_658885052" CREATED="1414909204859" MODIFIED="1414909205670">
<node TEXT="Functors let you apply functions to the data within them" ID="ID_324467559" CREATED="1414909206131" MODIFIED="1414909247236"/>
<node TEXT="Applicatives let you attach a function held by one to the data or function held by another" ID="ID_1155072719" CREATED="1414909214466" MODIFIED="1414959925904"/>
</node>
<node TEXT="verbose" ID="ID_914019186" CREATED="1414909202451" MODIFIED="1414909203334">
<node TEXT="a functor is a (generalization of data structure that includes functions) that lets you map a function a -&gt; b onto the a in an F a, yielding an F b" ID="ID_958715329" CREATED="1414909043683" MODIFIED="1414909121553"/>
<node TEXT="A is an Applicative if it can hold a function x -&gt; y (the A thus being of concrete type &quot;A (x -&gt; y )&quot;), and apply that function into the a inside another Applicative of concrete type F a" ID="ID_1913202617" CREATED="1414909083763" MODIFIED="1414909190634"/>
</node>
</node>
<node TEXT="less dense" LOCALIZED_STYLE_REF="default" ID="ID_1081194686" CREATED="1413413436365" MODIFIED="1421786497224">
<font BOLD="true"/>
<node TEXT="motivation" ID="ID_374529820" CREATED="1413222331942" MODIFIED="1413222333465">
<node TEXT="allow us to view values of certain data types as values with contexts and use normal functions on those values while preserving the meaning of those contexts" ID="ID_964166498" CREATED="1413313564146" MODIFIED="1413313565509"/>
<node TEXT="ex&apos;l" ID="ID_872401461" CREATED="1413412770290" MODIFIED="1413412771101">
<node TEXT="want to apply the (*3) in Just (*3) to the 5 in Just 5" ID="ID_1358784903" CREATED="1413222333638" MODIFIED="1413222351377"/>
<node TEXT="&quot;allow us to take a function that expects parameters that aren&apos;t necessarily wrapped in functors and use that function to operate on several values that are in functor contexts&quot;" ID="ID_454037063" CREATED="1413224783487" MODIFIED="1413224788387"/>
</node>
</node>
<node TEXT="is a subclass of Functor" ID="ID_1457071840" CREATED="1413232423197" MODIFIED="1413232424776">
<node TEXT="in the calss definition, &quot;class (Functor f) =&gt; Applicative f where&quot; states that" ID="ID_1393718211" CREATED="1413224985899" MODIFIED="1413232436627"/>
</node>
<node TEXT="members, inc. implementing" ID="ID_630669396" CREATED="1413224935296" MODIFIED="1413225962915">
<node TEXT="Maybe" ID="ID_387164814" CREATED="1413222974612" MODIFIED="1413225966594">
<node TEXT="instance Applicative Maybe where &#xa;    pure = Just &#xa;    Nothing &lt;*&gt; _ = Nothing &#xa;    (Just f) &lt;*&gt; something = fmap f something" ID="ID_486464060" CREATED="1413222994203" MODIFIED="1413222995023"/>
</node>
<node TEXT="[]" ID="ID_1937494071" CREATED="1413225971407" MODIFIED="1413225974602">
<node TEXT="instance Applicative [] where &#xa;    pure x = [x] &#xa;    fs &lt;*&gt; xs = [f x | f &lt;- fs, x &lt;- xs]" ID="ID_1106005640" CREATED="1413225972406" MODIFIED="1413225973074"/>
<node TEXT="&lt;*&gt; is the outer product" ID="ID_15459915" CREATED="1413225975575" MODIFIED="1413225980497"/>
</node>
<node TEXT="IO" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_588121437" CREATED="1413226435724" MODIFIED="1421786275722">
<node TEXT="huh?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1470927334" CREATED="1421786259560" MODIFIED="1421786261267"/>
<node TEXT="link in from &quot;uses/IO (hard)&quot;" ID="ID_749475216" CREATED="1413227763137" MODIFIED="1413227771252"/>
<node TEXT="instance Applicative IO where &#xa;    pure = return &#xa;    a &lt;*&gt; b = do &#xa;        f &lt;- a &#xa;        x &lt;- b &#xa;        return (f x)" ID="ID_575084589" CREATED="1413226436709" MODIFIED="1413226437408"/>
</node>
<node TEXT="(-&gt;) r" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_927357578" CREATED="1413228264335" MODIFIED="1413413369677">
<node TEXT="huh?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1821504197" CREATED="1421786264681" MODIFIED="1421786267011"/>
<node TEXT="skipped on review" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_96545099" CREATED="1413413371579" MODIFIED="1413413376475"/>
<node TEXT="links in" ID="ID_917887844" CREATED="1414909368152" MODIFIED="1414909369234"/>
<node TEXT="instance Applicative ((-&gt;) r) where &#xa;    pure x = (\_ -&gt; x) &#xa;    f &lt;*&gt; g = \x -&gt; f x (g x)" ID="ID_1916119278" CREATED="1413228267312" MODIFIED="1413228268003"/>
</node>
<node TEXT="ZipList" ID="ID_456753714" CREATED="1413229908706" MODIFIED="1413229910877">
<node TEXT="links in from &quot;two implementations for one type&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1641793484" CREATED="1413229958903" MODIFIED="1413229968740"/>
<node TEXT="why" ID="ID_1207948850" CREATED="1413229937626" MODIFIED="1413229938612">
<node TEXT="example: [] could be an AF using the outer product, or something else" ID="ID_424825011" CREATED="1413229872381" MODIFIED="1413229894262"/>
</node>
<node TEXT="requires duplicating the type" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_492211762" CREATED="1413229855001" MODIFIED="1413230186924">
<node TEXT="&quot;Because one type can&apos;t have two instances for the same typeclass, the ZipList a type was introduced, which has one constructor ZipList that has just one field, and that field is a list.&quot;" ID="ID_1165318562" CREATED="1413229863519" MODIFIED="1413229866666"/>
</node>
<node TEXT="implementation" ID="ID_703499481" CREATED="1413229941945" MODIFIED="1413229944075">
<node TEXT="instance Applicative ZipList where &#xa;        pure x = ZipList (repeat x) &#xa;        ZipList fs &lt;*&gt; ZipList xs = ZipList (zipWith (\f x -&gt; f x) fs xs)" ID="ID_1652035103" CREATED="1413229911162" MODIFIED="1413229911783"/>
</node>
<node TEXT="the &quot;repeat&quot; is to satisfy the identity law" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_39511508" CREATED="1413230304038" MODIFIED="1413230341137">
<node TEXT="links in from &quot;requirements/laws/...&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_169138019" CREATED="1413230362450" MODIFIED="1413230400891"/>
<node TEXT="&quot;If pure 3 just returned ZipList [3], pure (*2) &lt;*&gt; ZipList [1,5,10] would result in ZipList [2]&quot;" ID="ID_1569214015" CREATED="1413230317132" MODIFIED="1413230322138"/>
</node>
</node>
</node>
<node TEXT="uses" ID="ID_252219197" CREATED="1413225018100" MODIFIED="1413225018758">
<node TEXT="&lt;*&gt; can chain" ID="ID_965757021" CREATED="1413224659879" MODIFIED="1413224665742">
<node TEXT="left-associative" ID="ID_1542696286" CREATED="1413224692859" MODIFIED="1413224695191">
<node TEXT="a b c = (a b) c" ID="ID_1977098442" CREATED="1413224695404" MODIFIED="1413224701630"/>
</node>
<node TEXT="ghci&gt; pure (+) &lt;*&gt; Just 3 &lt;*&gt; Just 5 &#xa;Just 8 &#xa;ghci&gt; pure (+) &lt;*&gt; Just 3 &lt;*&gt; Nothing &#xa;Nothing &#xa;ghci&gt; pure (+) &lt;*&gt; Nothing &lt;*&gt; Just 5 &#xa;Nothing" ID="ID_128995580" CREATED="1413224661948" MODIFIED="1413224662640"/>
</node>
<node TEXT="explicit &quot;casting&quot;" ID="ID_53853903" CREATED="1413225771982" MODIFIED="1413416198713">
<node TEXT="I&apos;m inventing that term" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_376266263" CREATED="1413225777144" MODIFIED="1413225780819"/>
<node TEXT="ghci&gt; pure &quot;Hey&quot; :: [String] &#xa;[&quot;Hey&quot;] &#xa;ghci&gt; pure &quot;Hey&quot; :: Maybe String &#xa;Just &quot;Hey&quot;" ID="ID_44530797" CREATED="1413225773839" MODIFIED="1413225774587"/>
<node TEXT="not always needed; can often be inferred" ID="ID_945769339" CREATED="1413416200853" MODIFIED="1413416212599"/>
</node>
<node TEXT="IO (hard)" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1505998739" CREATED="1413227737723" MODIFIED="1413227740197">
<node TEXT="link to &quot;members .../IO&quot;" ID="ID_382938286" CREATED="1413227771553" MODIFIED="1413227782253">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_749475216" STARTINCLINATION="52;0;" ENDINCLINATION="52;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="equiv" LOCALIZED_STYLE_REF="default" ID="ID_970749982" CREATED="1413227804782" MODIFIED="1413416263280">
<node TEXT="myAction :: IO String &#xa;myAction = do &#xa;    a &lt;- getLine &#xa;    b &lt;- getLine &#xa;    return $ a ++ b" ID="ID_161686480" CREATED="1413227806117" MODIFIED="1413227806745">
<node TEXT="separate question: why the $?" ID="ID_176451539" CREATED="1413227966277" MODIFIED="1413227980733">
<node TEXT="I&apos;m guessing just for the operator precedence" ID="ID_459937908" CREATED="1414909652282" MODIFIED="1414909660742"/>
</node>
</node>
<node TEXT="myAction :: IO String &#xa;myAction = (++) &lt;$&gt; getLine &lt;*&gt; getLine" ID="ID_340077579" CREATED="1413227812925" MODIFIED="1413227813632"/>
</node>
<node TEXT="are they equivalent in effect only, or in internal representation too?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1305299555" CREATED="1413416243457" MODIFIED="1413416265172"/>
</node>
</node>
<node TEXT="obscure or redundant" ID="ID_1354442056" CREATED="1413416290885" MODIFIED="1413416371305">
<node TEXT="collapse many functors into one" ID="ID_1352168583" CREATED="1413231320533" MODIFIED="1413231328696">
<node TEXT="equiv" ID="ID_1564287538" CREATED="1413231369436" MODIFIED="1413231370344"/>
<node TEXT="sequenceA :: (Applicative f) =&gt; [f a] -&gt; f [a] &#xa;sequenceA [] = pure [] &#xa;sequenceA (x:xs) = (:) &lt;$&gt; x &lt;*&gt; sequenceA xs" ID="ID_111617127" CREATED="1413231331772" MODIFIED="1413231332607"/>
<node TEXT="sequenceA :: (Applicative f) =&gt; [f a] -&gt; f [a] &#xa;sequenceA = foldr (liftA2 (:)) (pure [])" ID="ID_882193767" CREATED="1413231367861" MODIFIED="1413231368577"/>
</node>
<node TEXT="outer product =&gt; combinatorial explosion" ID="ID_452712591" CREATED="1413226160172" MODIFIED="1413226179382">
<node TEXT="e.g. for Lists, because their &lt;*&gt; operator is an outer product" ID="ID_1682591971" CREATED="1413226180682" MODIFIED="1413226190389"/>
<node TEXT="ghci&gt; [(+),(*)] &lt;*&gt; [1,2] &lt;*&gt; [3,4] &#xa;[4,5,5,6,3,4,6,8]" ID="ID_1829095960" CREATED="1413226165555" MODIFIED="1413226166223"/>
</node>
<node TEXT="how to think about" ID="ID_1332177195" CREATED="1413225010564" MODIFIED="1413225014488">
<node TEXT="&lt;pure&gt; wraps or (better) puts in context the value a" ID="ID_817016057" CREATED="1413222622807" MODIFIED="1413222756497"/>
<node TEXT="&lt;*&gt; &quot;is sort of a beefed up fmap&quot;" ID="ID_1001747808" CREATED="1413226660649" MODIFIED="1413226667923"/>
<node TEXT="extraction and sequencing" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_297115612" CREATED="1413227039622" MODIFIED="1413227048092">
<node TEXT="With Maybe and [], we could think of &lt;*&gt; as simply extracting a function from its left parameter and then sort of applying it over the right one. With IO, extracting is still in the game, but now we also have a notion of sequencing, because we&apos;re taking two I/O actions and we&apos;re sequencing, or gluing, them into one.  We have to extract the function from the first I/O action, but to extract a result from an I/O action, it has to be performed.&quot;" ID="ID_245815029" CREATED="1413227043574" MODIFIED="1413227103570"/>
</node>
</node>
</node>
<node TEXT="laws" ID="ID_879874639" CREATED="1413224879124" MODIFIED="1413224879868">
<node TEXT="again, compiler won&apos;t check?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_150739167" CREATED="1413224880347" MODIFIED="1413224903374"/>
<node TEXT="pure f &lt;*&gt; x equals fmap f x" ID="ID_309441425" CREATED="1413224896026" MODIFIED="1413224900933">
<node TEXT="infinite repetition can help" ID="ID_1590850163" CREATED="1413230349666" MODIFIED="1413230359669"/>
<node TEXT="link to example in &quot;ZipList&quot;" ID="ID_49193980" CREATED="1413230379752" MODIFIED="1413230393070">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_169138019" STARTINCLINATION="88;0;" ENDINCLINATION="88;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="pure id &lt;*&gt; v = v" ID="ID_1720189275" CREATED="1413232339703" MODIFIED="1413232339703"/>
<node TEXT="pure (.) &lt;*&gt; u &lt;*&gt; v &lt;*&gt; w = u &lt;*&gt; (v &lt;*&gt; w)" ID="ID_935861665" CREATED="1413232339703" MODIFIED="1413232339703"/>
<node TEXT="pure f &lt;*&gt; pure x = pure (f x)" ID="ID_1121781638" CREATED="1413232339708" MODIFIED="1413232339708"/>
<node TEXT="u &lt;*&gt; pure y = pure ($ y) &lt;*&gt; u" ID="ID_462270229" CREATED="1413232339708" MODIFIED="1413232339708"/>
</node>
</node>
</node>
<node TEXT="Monad" ID="ID_1430472438" CREATED="1413390045165" MODIFIED="1413426720825">
<node TEXT="motiv" ID="ID_1796788368" CREATED="1421787872475" MODIFIED="1421787873320">
<node TEXT="add ctx to f without f&apos;s internal recog" ID="ID_1698860825" CREATED="1414905742693" MODIFIED="1414905767064">
<node TEXT="f can be written by someone unaware of the context" ID="ID_995831076" CREATED="1414905769631" MODIFIED="1414905778729"/>
<node TEXT="because the use of f is distinct from the internal mech" ID="ID_1687759654" CREATED="1414905779038" MODIFIED="1414905790889"/>
</node>
</node>
<node TEXT="ancestry : Functor, Applicative" ID="ID_931677714" CREATED="1414906276301" MODIFIED="1421787853707">
<font BOLD="false"/>
<node TEXT="implies each, kind of" ID="ID_537885733" CREATED="1413424734406" MODIFIED="1421788025480">
<node TEXT="e.g. all Monads are (Applicative, right?) Functors" ID="ID_1811856002" CREATED="1413315812261" MODIFIED="1421788028641"/>
<node TEXT="but it doesn&apos;t say so" ID="ID_1939281341" CREATED="1413315818196" MODIFIED="1413315821623"/>
<node TEXT="that&apos;s for historical reasons" ID="ID_1007506187" CREATED="1413315821828" MODIFIED="1413315827164"/>
</node>
<node TEXT="Functor" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1388672535" CREATED="1414906282789" MODIFIED="1421787856685">
<node TEXT="F is a functor if fmap exists such that for every function f :: x -&gt; y, fmap f :: F x -&gt; F y" ID="ID_703760845" CREATED="1414906348580" MODIFIED="1414906475550"/>
<node TEXT="If a monad is a functor, that lets you map functions into the monad&apos;s &quot;non-ctx&quot; content." ID="ID_1757693530" CREATED="1414906493858" MODIFIED="1414906856379"/>
</node>
<node TEXT="Applicative" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1005032184" CREATED="1414906969513" MODIFIED="1421787856690">
<node TEXT="Functor&apos;s fmap &#x2260; Applicative&apos;s &lt;*&gt;" ID="ID_1011143224" CREATED="1414908971093" MODIFIED="1414960220116">
<node TEXT="&gt; import Control.Applicative" ID="ID_898085690" CREATED="1414908977270" MODIFIED="1414908977270"/>
<node TEXT="&gt; :t fmap" ID="ID_696217238" CREATED="1414908977270" MODIFIED="1414908977270"/>
<node TEXT="fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b" ID="ID_622046740" CREATED="1414908977271" MODIFIED="1414908977271"/>
<node TEXT="&gt; :t (&lt;*&gt;)" ID="ID_729522391" CREATED="1414908977271" MODIFIED="1414908977271"/>
<node TEXT="(&lt;*&gt;) :: Applicative f =&gt; f (a -&gt; b) -&gt; f a -&gt; f b" ID="ID_1309584723" CREATED="1414908977272" MODIFIED="1414908977272"/>
<node TEXT="&gt;" ID="ID_1743545620" CREATED="1414908977272" MODIFIED="1414908977272"/>
</node>
</node>
</node>
<node TEXT="class def" ID="ID_686766990" CREATED="1413315799630" MODIFIED="1413315800801">
<node TEXT="def" ID="ID_468109064" CREATED="1421786995858" MODIFIED="1421786996312">
<node TEXT="class Monad m where &#xa;    return :: a -&gt; m a &#xa; &#xa;    (&gt;&gt;=) :: m a -&gt; (a -&gt; m b) -&gt; m b &#xa; &#xa;    (&gt;&gt;) :: m a -&gt; m b -&gt; m b &#xa;    x &gt;&gt; y = x &gt;&gt;= \_ -&gt; y &#xa; &#xa;    fail :: String -&gt; m a &#xa;    fail msg = error msg" ID="ID_1979700682" CREATED="1413315802605" MODIFIED="1413315803250"/>
</node>
<node TEXT="notes" ID="ID_1965060453" CREATED="1421786997490" MODIFIED="1421786998104">
<node TEXT="pitfall: there&apos;s no class constraint" ID="ID_247063854" CREATED="1413315804374" MODIFIED="1421786825201">
<node TEXT="even though Monad implies Applicative" ID="ID_1559965887" CREATED="1421786825617" MODIFIED="1421786829288"/>
<node TEXT="that&apos;s for historical reasons" ID="ID_1896429395" CREATED="1413315821828" MODIFIED="1413315827164"/>
</node>
<node TEXT="return should = the pure function defined in Applicative" ID="ID_26390810" CREATED="1413315870625" MODIFIED="1421786972120"/>
<node TEXT="&gt;&gt;= is pronounced &quot;bind&quot;" ID="ID_1414732234" CREATED="1413314547778" MODIFIED="1413314557437"/>
<node TEXT="&gt;&gt; we almost never override" ID="ID_6833848" CREATED="1413315982001" MODIFIED="1413315989300">
<node TEXT="the default implementation usually works" ID="ID_38965046" CREATED="1413315990089" MODIFIED="1413315998371"/>
</node>
<node TEXT="&quot;fail&quot; is never used explicitly" ID="ID_656940000" CREATED="1413316012367" MODIFIED="1413316019337">
<node TEXT="&quot;it&apos;s used by Haskell to enable failure in a special syntactic construct for monads that we&apos;ll meet later&quot;" ID="ID_1542443636" CREATED="1413316045285" MODIFIED="1413316055839"/>
</node>
</node>
</node>
<node TEXT="eval quirks" ID="ID_1665292413" CREATED="1421788073076" MODIFIED="1421788078410">
<node TEXT="names propogate rightward in &gt;&gt;= chains" LOCALIZED_STYLE_REF="default" ID="ID_1818331885" CREATED="1413334747549" MODIFIED="1421787259948">
<node TEXT="links in" ID="ID_1233697647" CREATED="1413334865291" MODIFIED="1413334867325"/>
<node TEXT="I think it&apos;s because of precedence and order of eval." ID="ID_1563768982" CREATED="1414910893707" MODIFIED="1414910914889">
<node TEXT="That is, in a flat chain of &gt;&gt;= or &gt;&gt; and lambda, precedence the reason later expr&apos;s can refer to earlier ones." ID="ID_303988350" CREATED="1414910863187" MODIFIED="1414910906919"/>
</node>
<node TEXT="code" ID="ID_1144215734" CREATED="1413334875354" MODIFIED="1413334875885">
<node TEXT="ghci&gt; [1,2] &gt;&gt;= \n -&gt; [&apos;a&apos;,&apos;b&apos;] &gt;&gt;= \ch -&gt; return (n,ch) &#xa;[(1,&apos;a&apos;),(1,&apos;b&apos;),(2,&apos;a&apos;),(2,&apos;b&apos;)]" ID="ID_15734407" CREATED="1413334756125" MODIFIED="1413334756832"/>
</node>
<node TEXT="why it works" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_326789721" CREATED="1413334876913" MODIFIED="1413335763291">
<node TEXT="lambda equivalence" ID="ID_104273420" CREATED="1413335767234" MODIFIED="1413335783563">
<node TEXT="the &gt;&gt;= notation is (I believe) equivalent to a series of right-nested (parens denser on the right) lambdas" ID="ID_862938587" CREATED="1413334886585" MODIFIED="1413334909122"/>
</node>
<node TEXT="how certain I am" ID="ID_1899880698" CREATED="1413335773968" MODIFIED="1413335778092">
<node TEXT="(the equivalence certainly holds in do notation, and do notation is I believe just longhand for &gt;&gt;= chains)" ID="ID_6942906" CREATED="1413334913958" MODIFIED="1413334937071"/>
</node>
</node>
<node TEXT="what it does" ID="ID_329461168" CREATED="1413335383356" MODIFIED="1413335384695">
<node TEXT="[1,2] gets bound to n" ID="ID_1138434610" CREATED="1413335389636" MODIFIED="1413335395046"/>
<node TEXT="[&apos;a&apos;,&apos;b&apos;] gets bound to ch" ID="ID_97792402" CREATED="1413335395267" MODIFIED="1413335401214"/>
<node TEXT="&quot;return (n,ch)&quot; produces a list of pairs, which is flattened" ID="ID_669743754" CREATED="1413335663557" MODIFIED="1413335685470"/>
</node>
<node TEXT="equiv, do notation" ID="ID_637616562" CREATED="1413335642511" MODIFIED="1413335646490">
<node TEXT="listOfTuples :: [(Int,Char)] &#xa;listOfTuples = do &#xa;    n &lt;- [1,2] &#xa;    ch &lt;- [&apos;a&apos;,&apos;b&apos;] &#xa;    return (n,ch)" ID="ID_1848718569" CREATED="1413335646775" MODIFIED="1413335647274"/>
</node>
<node TEXT="equiv, list comp" ID="ID_694190068" CREATED="1413335757586" MODIFIED="1413335789707">
<node TEXT="ghci&gt; [ (n,ch) | n &lt;- [1,2], ch &lt;- [&apos;a&apos;,&apos;b&apos;] ] &#xa;[(1,&apos;a&apos;),(1,&apos;b&apos;),(2,&apos;a&apos;),(2,&apos;b&apos;)]" ID="ID_1439047222" CREATED="1413335790120" MODIFIED="1413335790691"/>
</node>
</node>
<node TEXT="&quot;disregarded&quot; values still matter" ID="ID_159413981" CREATED="1414910566507" MODIFIED="1421787993800">
<node TEXT="monad-valued expressions that disregard their input (in one of multiple ways, such as with &gt;&gt;, or by in a do loop not assigning something&apos;s result to an LHS variable with &lt;-, or maybe more ways) can still affect the context." ID="ID_801928355" CREATED="1414910405942" MODIFIED="1414910552912"/>
<node TEXT="links out to example" ID="ID_399534833" CREATED="1414910553115" MODIFIED="1414910561689">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1024510966" STARTINCLINATION="116;0;" ENDINCLINATION="116;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="assignment" ID="ID_188851284" CREATED="1413405916817" MODIFIED="1421790562476">
<node TEXT="the type of &quot;= putStrLn&quot;" ID="ID_1197870401" CREATED="1413405910653" MODIFIED="1421790539804">
<node TEXT="Prelude&gt; let x = putStrLn &quot;np&quot;" ID="ID_3385470" CREATED="1413405910653" MODIFIED="1413405910653"/>
<node TEXT="Prelude&gt; x" ID="ID_1738674787" CREATED="1413405910653" MODIFIED="1413405910653"/>
<node TEXT="np" ID="ID_572641265" CREATED="1413405910653" MODIFIED="1413405910653"/>
<node TEXT="Prelude&gt; :t x" ID="ID_174477969" CREATED="1413405910653" MODIFIED="1413405910653"/>
<node TEXT="x :: IO ()" ID="ID_134234691" CREATED="1413405910653" MODIFIED="1413405910653"/>
</node>
<node TEXT="the type of &quot;&lt;- putStrLn&quot;" ID="ID_1142716252" CREATED="1413405910653" MODIFIED="1421790543885">
<node TEXT="&lt;interactive&gt;:65:7: parse error on input &#x2018;&lt;-&#x2019;" ID="ID_390646601" CREATED="1413405910653" MODIFIED="1413405910653"/>
<node TEXT="Prelude&gt; y &lt;- putStrLn &quot;np&quot;" ID="ID_872769215" CREATED="1413405910653" MODIFIED="1413405910653"/>
<node TEXT="np" ID="ID_1158072996" CREATED="1413405910653" MODIFIED="1413405910653"/>
<node TEXT="Prelude&gt; y" ID="ID_1972421590" CREATED="1413405910653" MODIFIED="1413405910653"/>
<node TEXT="()" ID="ID_156549214" CREATED="1413405910653" MODIFIED="1413405910653"/>
<node TEXT="Prelude&gt; :t y" ID="ID_338019314" CREATED="1413405910653" MODIFIED="1413405910653"/>
<node TEXT="y :: ()" ID="ID_652179883" CREATED="1413405910653" MODIFIED="1413405910653"/>
</node>
<node TEXT="&quot;&lt;- putStrLn&quot;: Why not to use let?" ID="ID_1793287233" CREATED="1413405910653" MODIFIED="1413405910653">
<node TEXT="Prelude&gt; let y &lt;- putStrLn &quot;np&quot;" ID="ID_407701859" CREATED="1413405910653" MODIFIED="1413405910653"/>
<node TEXT="&lt;interactive&gt;:65:7: parse error on input &#x2018;&lt;-&#x2019;" ID="ID_1953509997" CREATED="1413405910653" MODIFIED="1413405910653"/>
</node>
<node TEXT="Why is &lt;- available in open code?" ID="ID_1182541125" CREATED="1421790505376" MODIFIED="1421790511334">
<node TEXT="at least in GHCI; maybe not in a file, outside of a do loop" ID="ID_1084824843" CREATED="1421790512043" MODIFIED="1421790526988"/>
</node>
</node>
</node>
<node TEXT="laws" ID="ID_1978005606" CREATED="1413336831474" MODIFIED="1413336832421">
<node TEXT="one statement" ID="ID_702417820" CREATED="1421791168016" MODIFIED="1421791170621">
<node TEXT="left identity" ID="ID_1710628358" CREATED="1413336837098" MODIFIED="1413336838828">
<node TEXT="(return x &gt;&gt;= f)   =   f x" ID="ID_1723494949" CREATED="1413336850530" MODIFIED="1413336877651"/>
<node TEXT="why" ID="ID_100268507" CREATED="1413336983206" MODIFIED="1413336998910">
<node TEXT="return x puts x in a default minimal context" ID="ID_1402509392" CREATED="1413336988500" MODIFIED="1413336997022"/>
<node TEXT="m x &gt;&gt;= f takes a value (x) from the monad its in (m x) and feeds it to f, resulting in f x" ID="ID_195375167" CREATED="1413336999683" MODIFIED="1413337026523"/>
</node>
</node>
<node TEXT="right identity" ID="ID_216150485" CREATED="1413337073572" MODIFIED="1413337075231">
<node TEXT="(m &gt;&gt;= return)   =    m" ID="ID_968439842" CREATED="1413337075484" MODIFIED="1413337090200"/>
</node>
<node TEXT="associativity" ID="ID_1324543743" CREATED="1413337243013" MODIFIED="1413337244928">
<node TEXT="with &gt;&gt;=" ID="ID_477130434" CREATED="1413337257963" MODIFIED="1413337260872"/>
<node TEXT="(a b) c = a (b c)" ID="ID_710679635" CREATED="1413337246605" MODIFIED="1413337253023"/>
<node TEXT="the same, verbose" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1450100830" CREATED="1413337322853" MODIFIED="1413337334956">
<node TEXT="(a &gt;&gt;= b) &gt;&gt;= c   =   a &gt;&gt;= (b &gt;&gt;= c)" ID="ID_1994773347" CREATED="1413337311262" MODIFIED="1413337311690"/>
</node>
</node>
</node>
<node TEXT="another" LOCALIZED_STYLE_REF="default" ID="ID_1197639780" CREATED="1414648993147" MODIFIED="1421791173069">
<node TEXT="return a `then` f === f a" ID="ID_39353666" CREATED="1414648864114" MODIFIED="1421791146022"/>
<node TEXT="m `then` return   === m" ID="ID_462001343" CREATED="1414648864114" MODIFIED="1421791147197"/>
<node TEXT="m `then` (\a -&gt; f a `then` h) === (m `then` f) `then` h" ID="ID_402443652" CREATED="1414648864115" MODIFIED="1421791148357"/>
</node>
<node TEXT="a cool intuition" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_506687436" CREATED="1413337578039" MODIFIED="1413337580591">
<node TEXT="if we define &quot;&lt;=&lt;&quot;, monadic function composition" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1669289785" CREATED="1413337582422" MODIFIED="1413337728970">
<node TEXT="I don&apos;t really understand this def&apos;n." LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_332858058" CREATED="1413337729905" MODIFIED="1413337735849"/>
<node TEXT="(&lt;=&lt;) :: (Monad m) =&gt; (b -&gt; m c) -&gt; (a -&gt; m b) -&gt; (a -&gt; m c) &#xa;f &lt;=&lt; g = (\x -&gt; g x &gt;&gt;= f)" ID="ID_1512521501" CREATED="1413337581151" MODIFIED="1413337581706"/>
</node>
<node TEXT="then" ID="ID_1950418257" CREATED="1413337663175" MODIFIED="1413337666890">
<node TEXT="the left ID law is this" ID="ID_1886756201" CREATED="1413337697644" MODIFIED="1413337700359">
<node TEXT="f &lt;=&lt; return   =  f" ID="ID_45139444" CREATED="1413337700540" MODIFIED="1413337709305"/>
</node>
<node TEXT="the right ID law is this" ID="ID_1820611831" CREATED="1413337716506" MODIFIED="1413337719206">
<node TEXT="return &lt;=&lt; f   =  f" ID="ID_845559" CREATED="1413337719435" MODIFIED="1413337725741"/>
</node>
<node TEXT="associativity is this" ID="ID_221501026" CREATED="1413337667135" MODIFIED="1413337670177">
<node TEXT="f &lt;=&lt; (g &lt;=&lt; h) is the same as (f &lt;=&lt; g) &lt;=&lt; h" ID="ID_1452768855" CREATED="1413337670382" MODIFIED="1414656675329"/>
</node>
</node>
</node>
</node>
<node TEXT="idioms" ID="ID_434474231" CREATED="1418948098099" MODIFIED="1421791800449">
<font BOLD="true"/>
<node TEXT="recursion, with and without do notat" ID="ID_718439110" CREATED="1414650052208" MODIFIED="1421791752775">
<node TEXT="with" ID="ID_1482545267" CREATED="1421791739145" MODIFIED="1421791739774">
<node TEXT="&gt; accumulate       :: Monad m =&gt; [m a] -&gt; m [a]&#xa;&gt; accumulate []     = return []&#xa;&gt; accumulate (c:cs) = do x  &lt;- c&#xa;&gt;                        xs &lt;- accumulate cs&#xa;&gt;                        return (x:xs)" ID="ID_953915786" CREATED="1414650042825" MODIFIED="1414650043484"/>
</node>
<node TEXT="without" ID="ID_1702689154" CREATED="1414649904891" MODIFIED="1421791724022">
<node TEXT="&gt; sequence       :: Monad m =&gt; [m a] -&gt; m [a]&#xa;&gt; sequence []     = return []&#xa;&gt; sequence (c:cs) = c           &gt;&gt;= \x -&gt;&#xa;&gt;                   sequence cs &gt;&gt;= \xs -&gt;&#xa;&gt;                   return (x:xs)" ID="ID_707262132" CREATED="1414649911083" MODIFIED="1414649911870"/>
</node>
</node>
<node TEXT="&quot;do notation&quot;" ID="ID_408504193" CREATED="1413332001965" MODIFIED="1421791796889">
<font BOLD="true"/>
<node TEXT="motiv" ID="ID_1204788855" CREATED="1414906104296" MODIFIED="1421787955362">
<node TEXT=". links out" ID="ID_1850358815" CREATED="1414910041724" MODIFIED="1414910330334">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_547346821" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node ID="ID_21275518" CREATED="1421787956001" MODIFIED="1421787956001"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      to hide the ctx threading?
    </p>
  </body>
</html>
</richcontent>
<node TEXT="tentative yes" ID="ID_1510022769" CREATED="1414910039748" MODIFIED="1414910291975"/>
<node TEXT="why the caveat" ID="ID_24628692" CREATED="1414910288128" MODIFIED="1414910289731">
<node TEXT="I drew that explanation referring only to a comparison of do notation to what it replaces under the conditions that every line of both function bodies was monad-valued." ID="ID_1496683561" CREATED="1414910298536" MODIFIED="1414910321715"/>
</node>
<node TEXT="explanation of yes" ID="ID_566162733" CREATED="1414910283784" MODIFIED="1414910293867">
<node TEXT="if foo is a body of code that returns a monad of concrete type &quot;M a&quot;, and it works by stringing a series of monad-valued functions together, each monad will be passed to a lambda expression that takes one argument, equial to the value (not the ctx) of the preceding one. In that chain, every successively inner lambda expression can refer to the input arguments of any of the outer ones, because it is part of them all." ID="ID_1084424856" CREATED="1414910060107" MODIFIED="1414910230090"/>
<node TEXT="Do notation does just that -- at least for the case in which every line in monad-valued" ID="ID_1516811082" CREATED="1414910242504" MODIFIED="1414910263764"/>
</node>
</node>
</node>
<node TEXT="is for any Monad, not just IO" ID="ID_1527986895" CREATED="1413332028043" MODIFIED="1413425007289"/>
<node TEXT="&quot;def&apos;n&quot; example" ID="ID_1209962307" CREATED="1413332360500" MODIFIED="1413332549894">
<node TEXT="links in" ID="ID_547346821" CREATED="1414910043012" MODIFIED="1414910044047"/>
<node TEXT="equivalent" ID="ID_1785474925" CREATED="1413332364606" MODIFIED="1413332365702"/>
<node TEXT="lambdas (ugly)" ID="ID_1525189783" CREATED="1413332385323" MODIFIED="1413332391580">
<node TEXT="foo :: Maybe String &#xa;foo = Just 3   &gt;&gt;= (\x -&gt;&#xa;      Just &quot;!&quot; &gt;&gt;= (\y -&gt;&#xa;      Just (show x ++ y)))" ID="ID_596770112" CREATED="1413332362236" MODIFIED="1413332362848"/>
</node>
<node TEXT="do (simpler)" ID="ID_1957992952" CREATED="1413332392817" MODIFIED="1413332395844">
<node TEXT="foo :: Maybe String &#xa;foo = do &#xa;    x &lt;- Just 3 &#xa;    y &lt;- Just &quot;!&quot; &#xa;    Just (show x ++ y)" ID="ID_1024270805" CREATED="1413332372402" MODIFIED="1413332372742"/>
</node>
</node>
<node TEXT="how to think about it" ID="ID_893865219" CREATED="1413332543611" MODIFIED="1413332546694">
<node TEXT="&quot;every line is a monadic value&quot;" ID="ID_316932846" CREATED="1413332550883" MODIFIED="1413332559677"/>
<node TEXT="&lt;- is to inspect a line&apos;s result (its &quot;contents&quot;)" ID="ID_1967143072" CREATED="1413332555465" MODIFIED="1413332602800"/>
</node>
<node TEXT="even &quot;unused&quot; values are used" ID="ID_1471140996" CREATED="1413332862887" MODIFIED="1413332867274">
<node TEXT="links in" ID="ID_1024510966" CREATED="1414910559274" MODIFIED="1414910560382"/>
<node TEXT="code" ID="ID_1915649308" CREATED="1413333317622" MODIFIED="1413333318193">
<node TEXT="foo :: Maybe String &#xa;foo = do &#xa;    x &lt;- Just 3&#xa;    y &lt;- Just &quot;!&quot;&#xa;    Nothing&#xa;    Just (show x ++ y)" ID="ID_1318552013" CREATED="1413332867766" MODIFIED="1413333306342"/>
</node>
<node TEXT="effect" ID="ID_335598700" CREATED="1413333319174" MODIFIED="1413333326624">
<node TEXT="even though the Nothing is &quot;unused&quot;, it gives an end result of &quot;Nothing&quot;" ID="ID_1177427048" CREATED="1413332883981" MODIFIED="1413333301167"/>
<node TEXT="if it had been assigned to something (z &lt;- Nothing), same result" ID="ID_1590027203" CREATED="1413333313798" MODIFIED="1413333355495"/>
</node>
<node TEXT="why" ID="ID_1415608654" CREATED="1413333328109" MODIFIED="1413333328744">
<node TEXT="reading the do block as a series of lambdas and considering the implementation of &gt;&gt;= for Maybe makes it clear why" ID="ID_1221665268" CREATED="1413332902643" MODIFIED="1413332957039"/>
</node>
</node>
<node TEXT="LHS of &lt;- can be a pattern" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_272960991" CREATED="1413333489289" MODIFIED="1421787171937">
<node TEXT=".= pattern matching in do blocks" ID="ID_918533852" CREATED="1414910801119" MODIFIED="1414910808074"/>
<node TEXT="a use" ID="ID_1233798591" CREATED="1413333604294" MODIFIED="1413333607513">
<node TEXT="justH :: Maybe Char &#xa;justH = do &#xa;    (x:xs) &lt;- Just &quot;hello&quot; &#xa;    return x" ID="ID_1767131959" CREATED="1413333494008" MODIFIED="1413333494620"/>
<node TEXT="evaluates to (Just &apos;h&apos;)" ID="ID_220733318" CREATED="1414910763896" MODIFIED="1414910772395"/>
</node>
<node TEXT="if PM fails" ID="ID_1123377938" CREATED="1413333609198" MODIFIED="1413333622016">
<node TEXT="that&apos;s where this part of the Monad def&apos;n comes in" ID="ID_1649323836" CREATED="1413333628900" MODIFIED="1413333636077"/>
<node TEXT="fail :: (Monad m) =&gt; String -&gt; m a &#xa;fail msg = error msg" ID="ID_625505559" CREATED="1413333636841" MODIFIED="1413333637207"/>
<node TEXT="&quot;by default it does make our program crash&quot;" ID="ID_529871293" CREATED="1413333669136" MODIFIED="1413333674071"/>
<node TEXT="Maybe overrides the default" ID="ID_1394598909" CREATED="1413333684775" MODIFIED="1413333691490">
<node TEXT="fail _ = Nothing" ID="ID_550675178" CREATED="1413333692198" MODIFIED="1413333692760"/>
</node>
</node>
</node>
<node TEXT="recursion" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_627865377" CREATED="1413600268725" MODIFIED="1421789555003">
<node TEXT="cep" ID="ID_1974962127" CREATED="1414912231076" MODIFIED="1414912232527">
<node TEXT="a do loop can contain another do loop, as long as what they return are of the same type" ID="ID_236362785" CREATED="1414912233083" MODIFIED="1421789455751"/>
</node>
<node TEXT="example" ID="ID_211711740" CREATED="1413600336239" MODIFIED="1414912239303">
<node ID="ID_166492666" CREATED="1414912239766" MODIFIED="1414912239766"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      code
    </p>
  </body>
</html>
</richcontent>
<node TEXT="import Control.Monad.Writer" ID="ID_1134363059" CREATED="1413600324713" MODIFIED="1413600324713"/>
<node TEXT="gcd&apos; :: Int -&gt; Int -&gt; Writer [String] Int" ID="ID_847751387" CREATED="1413600324713" MODIFIED="1413600324713"/>
<node TEXT="gcd&apos; a b" ID="ID_1276294064" CREATED="1413600324714" MODIFIED="1413600324714">
<node TEXT="| b == 0 = do" ID="ID_447737524" CREATED="1413600324714" MODIFIED="1413600324714">
<node TEXT="tell [&quot;Finished with &quot; ++ show a]" ID="ID_771306690" CREATED="1413600324714" MODIFIED="1413600324714"/>
<node TEXT="return a" ID="ID_1290707583" CREATED="1413600324714" MODIFIED="1413600324714"/>
</node>
<node TEXT="| otherwise = do" ID="ID_1494277621" CREATED="1413600324714" MODIFIED="1413600324714">
<node TEXT="tell [show a ++ &quot; mod &quot; ++ show b ++ &quot; = &quot; ++ show (a `mod` b)]" ID="ID_367937266" CREATED="1413600324714" MODIFIED="1413600324714"/>
<node TEXT="gcd&apos; b (a `mod` b)" ID="ID_1231682725" CREATED="1413600324714" MODIFIED="1413600324714"/>
</node>
</node>
</node>
<node TEXT="does" ID="ID_597868245" CREATED="1413600340486" MODIFIED="1414912255522">
<node TEXT="the &quot;otherwise&quot; branch recurses. It does not call &quot;return&quot;; instead it ends on another call to gcd&apos;" ID="ID_1420503954" CREATED="1413600346822" MODIFIED="1414912229288"/>
<node TEXT="the &quot;b == 0&quot; branch calls &quot;return&quot;, ending the recursion" ID="ID_1606124132" CREATED="1413600356725" MODIFIED="1413600384813"/>
</node>
</node>
</node>
<node TEXT="&quot;The do statement must finish with a return or a monadic computation (not a &lt;-)&quot;" ID="ID_1010059574" CREATED="1414650199262" MODIFIED="1414650213689"/>
</node>
</node>
<node TEXT="tricks" ID="ID_1560392223" CREATED="1421791776649" MODIFIED="1421791777366">
<node TEXT="dodge stack order questions" ID="ID_1996607308" CREATED="1418948119738" MODIFIED="1418948136478">
<node TEXT="use newtype deriving to avoid most prob&apos;s of monad stack order" ID="ID_1703387463" CREATED="1415126281398" MODIFIED="1415126296930"/>
<node TEXT="&quot;the lifting is done at instance declarations&quot;" ID="ID_1525642703" CREATED="1415126338606" MODIFIED="1415126344897">
<node TEXT="using get, ask, etc. with no regard for monad stack order works because &quot;someone made the Monad in question an instance of all those typeclasses&quot;" ID="ID_1735335638" CREATED="1415126388172" MODIFIED="1415126408544"/>
<node TEXT="&quot;so that you could use these functions as if they were all on the same layer.&quot;" ID="ID_1161704355" CREATED="1415126347021" MODIFIED="1415126370800"/>
</node>
</node>
<node TEXT="lift" LOCALIZED_STYLE_REF="default" ID="ID_1483904206" CREATED="1413863561640" MODIFIED="1421806105826">
<node TEXT="Monad liftM ~ Functor fmap" ID="ID_1291053775" CREATED="1413863871708" MODIFIED="1413863885478">
<node TEXT="liftM :: (Monad m) =&gt; (a -&gt; b) -&gt; m a -&gt; m b" ID="ID_391714348" CREATED="1413863887228" MODIFIED="1413863888166"/>
<node TEXT="fmap :: (Functor f) =&gt; (a -&gt; b) -&gt; f a -&gt; f b" ID="ID_725423130" CREATED="1413863892506" MODIFIED="1413863893630"/>
<node TEXT="&quot;This is kind of like pure and return do the same thing, only one has an Applicative class constraint whereas the other has a Monad one.&quot;" ID="ID_979418020" CREATED="1413863954461" MODIFIED="1413863955736"/>
</node>
</node>
</node>
<node TEXT="instances" LOCALIZED_STYLE_REF="default" ID="ID_396999670" CREATED="1413317502651" MODIFIED="1421791769351">
<font BOLD="true"/>
<node TEXT="surprising or cool" ID="ID_803139378" CREATED="1413334832926" MODIFIED="1413334837928">
<node TEXT="elegance with Maybe" ID="ID_1843395215" CREATED="1413334534472" MODIFIED="1413334858998">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_176145489" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node ID="ID_244525283" CREATED="1413334863991" MODIFIED="1413334868194"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      bind chains with names
    </p>
  </body>
</html>
</richcontent>
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1233697647" STARTINCLINATION="135;0;" ENDINCLINATION="135;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="functions are monads!" ID="ID_1595396079" CREATED="1413850146622" MODIFIED="1421789318707">
<node TEXT="huh?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1028584419" CREATED="1421789330054" MODIFIED="1421789331982"/>
<node TEXT="are monads (and applic, and functor)" ID="ID_212499994" CREATED="1414912466224" MODIFIED="1414912473435"/>
<node TEXT="function as reader" ID="ID_361872325" CREATED="1413850157196" MODIFIED="1413850182614">
<node TEXT="links in" ID="ID_1621691126" CREATED="1414912401049" MODIFIED="1414912402100"/>
<node TEXT="links in" ID="ID_295771296" CREATED="1414912408750" MODIFIED="1414912409732"/>
<node TEXT="&quot;the function monad is also called the reader monad. All the functions read from a common source. &quot;" ID="ID_1722149091" CREATED="1413850183114" MODIFIED="1413850184934"/>
<node TEXT="&quot;the reader monad allows us to treat functions as values with a context. We can act as if we already know what the functions will return. It does this by gluing functions together into one function and then giving that function&apos;s parameter to all of the functions that it was glued from.&quot;" ID="ID_718421261" CREATED="1413850299640" MODIFIED="1413850301403"/>
<node TEXT="ex&apos;l" ID="ID_13755318" CREATED="1413850195634" MODIFIED="1413850196828">
<node TEXT="import Control.Monad.Instances &#xa; &#xa;addStuff :: Int -&gt; Int &#xa;addStuff = do &#xa;    a &lt;- (*2) &#xa;    b &lt;- (+10) &#xa;    return (a+b)" ID="ID_1661259343" CREATED="1413850197585" MODIFIED="1413850198221"/>
<node TEXT="ghci&gt; addStuff 3 &#xa;19" ID="ID_970803132" CREATED="1413850207777" MODIFIED="1413850208164"/>
</node>
</node>
</node>
<node TEXT="Maybe" ID="ID_760252236" CREATED="1413317505387" MODIFIED="1413317506950">
<node TEXT="imp&apos;n" ID="ID_1683861969" CREATED="1413334383432" MODIFIED="1413334389174">
<node TEXT="instance Monad Maybe where &#xa;    return x = Just x &#xa;    Nothing &gt;&gt;= f = Nothing &#xa;    Just x &gt;&gt;= f  = f x &#xa;    fail _ = Nothing" ID="ID_1553298636" CREATED="1413317504347" MODIFIED="1413317505038"/>
</node>
<node TEXT="use: birds and tightropes" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1866954841" CREATED="1413331972487" MODIFIED="1413334377283">
<node TEXT="links in" ID="ID_176145489" CREATED="1413334536104" MODIFIED="1413334537243"/>
<node TEXT="Learn You, chapter &quot;Fistful of Monads&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_860458495" CREATED="1413318175998" MODIFIED="1413318243667"/>
<node TEXT="saved as &quot;haskell/monad/tightrope_bird.hs&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_149597155" CREATED="1413319067318" MODIFIED="1413319077280"/>
<node TEXT="problem" ID="ID_645097452" CREATED="1413318696144" MODIFIED="1413318697179">
<node TEXT="birds can land on a tightrope walker&apos;s pole" ID="ID_1962932105" CREATED="1413318149665" MODIFIED="1413319479644"/>
<node TEXT="if one side outweighs the other by more than 3, the walker should fall" ID="ID_1518324932" CREATED="1413318463541" MODIFIED="1413318482998"/>
</node>
<node TEXT="code" ID="ID_1804997811" CREATED="1413318698409" MODIFIED="1413318698994">
<node TEXT="type Birds = Int &#xa;type Pole = (Birds,Birds)" ID="ID_1909609018" CREATED="1413318163272" MODIFIED="1413318163955"/>
<node TEXT="landLeft :: Birds -&gt; Pole -&gt; Maybe Pole &#xa;landLeft n (left,right) &#xa;    | abs ((left + n) - right) &lt; 4 = Just (left + n, right) &#xa;    | otherwise                    = Nothing &#xa; &#xa;landRight :: Birds -&gt; Pole -&gt; Maybe Pole &#xa;landRight n (left,right) &#xa;    | abs (left - (right + n)) &lt; 4 = Just (left, right + n) &#xa;    | otherwise                    = Nothing" ID="ID_317536374" CREATED="1413318431191" MODIFIED="1413318432067"/>
</node>
<node TEXT="using it" ID="ID_1186047834" CREATED="1413318718965" MODIFIED="1413318720177">
<node TEXT="ghci&gt; return (0,0) &gt;&gt;= landRight 2 &gt;&gt;= landLeft 2 &gt;&gt;= landRight 2 &#xa;Just (2,4)" ID="ID_1260592651" CREATED="1413318687697" MODIFIED="1413318688196"/>
<node TEXT="ghci&gt; return (0,0) &gt;&gt;= landLeft 1 &gt;&gt; Nothing &gt;&gt;= landRight 1 &#xa;Nothing" ID="ID_74141977" CREATED="1413319628436" MODIFIED="1413319628855"/>
</node>
</node>
</node>
<node TEXT="List : by flattening" ID="ID_1095913035" CREATED="1413334354707" MODIFIED="1421788975651">
<node TEXT="see also MonadPlus" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_971969170" CREATED="1413336769175" MODIFIED="1413336774488"/>
<node TEXT="imp&apos;n" ID="ID_1537325757" CREATED="1413334390360" MODIFIED="1413334391323">
<node TEXT="instance Monad [] where &#xa;    return x = [x] &#xa;    xs &gt;&gt;= f = concat (map f xs) &#xa;    fail _ = []" ID="ID_192200742" CREATED="1413334355755" MODIFIED="1413334356334"/>
</node>
<node TEXT="uses" ID="ID_273968677" CREATED="1413334394927" MODIFIED="1413334395522">
<node TEXT="ordinary" ID="ID_1931477040" CREATED="1413334519570" MODIFIED="1413334520645">
<node TEXT="ghci&gt; [3,4,5] &gt;&gt;= \x -&gt; [x,-x] &#xa;[3,-3,4,-4,5,-5]" ID="ID_1275007716" CREATED="1413334397639" MODIFIED="1413334398458"/>
</node>
<node TEXT="failure" ID="ID_1367409726" CREATED="1413334509244" MODIFIED="1413334518178">
<node TEXT="ghci&gt; [] &gt;&gt;= \x -&gt; [&quot;bad&quot;,&quot;mad&quot;,&quot;rad&quot;] &#xa;[] &#xa;ghci&gt; [1,2,3] &gt;&gt;= \x -&gt; [] &#xa;[]" ID="ID_1226156524" CREATED="1413334510571" MODIFIED="1413334511160"/>
</node>
</node>
<node TEXT="list comp is synt sugar for list as monad" ID="ID_277542405" CREATED="1413335830372" MODIFIED="1413335845310"/>
</node>
<node TEXT="IO" ID="ID_1027806658" CREATED="1414905845109" MODIFIED="1421788984067"/>
<node TEXT="exception" ID="ID_188138219" CREATED="1414905836741" MODIFIED="1414905840216"/>
<node TEXT="Writer" ID="ID_1122271291" CREATED="1413393159119" MODIFIED="1421789784791">
<font BOLD="false"/>
<node TEXT="for state, but (I guess) not read until destroyed" ID="ID_1943715494" CREATED="1421789785998" MODIFIED="1421789802597"/>
<node TEXT="** pitfalls" ID="ID_1577487187" CREATED="1414911923651" MODIFIED="1414911925719">
<node TEXT="Control.Monad.Writer = Control.Monad.Writer.Lazy" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_683270398" CREATED="1413598619697" MODIFIED="1414911928774">
<node TEXT="http://hackage.haskell.org/package/mtl-2.2.1/docs/Control-Monad-Writer.html" ID="ID_1692347612" CREATED="1413598642091" MODIFIED="1413598642091" LINK="http://hackage.haskell.org/package/mtl-2.2.1/docs/Control-Monad-Writer.html"/>
</node>
<node TEXT="constructor not exported" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_699939766" CREATED="1413598801042" MODIFIED="1414911922991">
<node TEXT="to construct, use writer, not Writer" LOCALIZED_STYLE_REF="default" ID="ID_1376410875" CREATED="1413598758772" MODIFIED="1413598839062">
<node TEXT="&quot;The Control.Monad.Writer module reserves the right to change the way it internally implements the Writer w a type, so it doesn&#x2019;t export the Writer value constructor. However, it does export the writer function, which does the same thing that the Writer constructor would do.&quot;" ID="ID_1123817239" CREATED="1413598764564" MODIFIED="1413598766087"/>
</node>
<node TEXT="to unwrap, use runWriter, not pattern matching" ID="ID_615300519" CREATED="1413598831910" MODIFIED="1413598838497">
<node TEXT="links in" ID="ID_1913104636" CREATED="1414911358556" MODIFIED="1414911359606"/>
<node TEXT="&quot;Because the Writer value constructor is not exported, you also can&#x2019;t pat- tern match against it. Instead, you need to use the runWriter function, which takes a tuple that&#x2019;s wrapped in a Writer newtype and unwraps it, returning a simple tuple.&quot;" ID="ID_960910415" CREATED="1413598828222" MODIFIED="1413598830945"/>
</node>
</node>
</node>
<node TEXT="type def" ID="ID_1400263614" CREATED="1413393241454" MODIFIED="1413597880145">
<node TEXT="newtype Writer w a = Writer { runWriter :: (a, w) }" ID="ID_1600810657" CREATED="1413393160959" MODIFIED="1413393161754"/>
<node TEXT="the w is the &quot;attached&quot; monoid value" ID="ID_640682176" CREATED="1413393207040" MODIFIED="1413393216699"/>
<node TEXT="note the operand reversal" LOCALIZED_STYLE_REF="default" ID="ID_148535117" CREATED="1413397251421" MODIFIED="1413443541486"/>
<node TEXT="conjecture: w comes second in the pair because it is the attached data, but first in the Writer type constructor because you&apos;re likely to want to define behaviors specifying w and leaving a abstract." LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1138695687" CREATED="1413443550507" MODIFIED="1413443639713">
<node TEXT="&quot;because it is the attached data&quot; being a weak reason, and the other a strong one" ID="ID_38745682" CREATED="1421788250027" MODIFIED="1421788260800"/>
</node>
</node>
<node TEXT="Monad implem&apos;n" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_897439168" CREATED="1413393243541" MODIFIED="1421788804982">
<node TEXT="instance (Monoid w) =&gt; Monad (Writer w) where &#xa;    return a = Writer (a, mempty) &#xa;    (Writer (a,v)) &gt;&gt;= f = let (Writer (b, v&apos;)) = f a in Writer (b, v `mappend` v&apos;)" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_573861302" CREATED="1413443858686" MODIFIED="1421788805592"/>
<node TEXT="where f has type &quot;f :: a -&gt; (a,w)&quot;, for a and w as specified in the Writer type definition" ID="ID_254098638" CREATED="1413393659784" MODIFIED="1413393709610"/>
</node>
<node TEXT="&quot;runWriter&quot;" ID="ID_247234954" CREATED="1413394102129" MODIFIED="1421788914379">
<node TEXT="There&apos;s no Show instance, but can use runWriter." ID="ID_1096963960" CREATED="1413394110663" MODIFIED="1413394121297"/>
<node TEXT="ghci&gt; runWriter (return 3 :: Writer String Int) &#xa;(3,&quot;&quot;) &#xa;ghci&gt; runWriter (return 3 :: Writer (Sum Int) Int) &#xa;(3,Sum {getSum = 0}) &#xa;ghci&gt; runWriter (return 3 :: Writer (Product Int) Int) &#xa;(3,Product {getProduct = 1})" ID="ID_529663983" CREATED="1413394104321" MODIFIED="1413394107411"/>
</node>
<node TEXT="&quot;tell&quot;" ID="ID_1347443367" CREATED="1413599863128" MODIFIED="1413599884526">
<node TEXT="why" ID="ID_1354156324" CREATED="1413599886431" MODIFIED="1413599887162">
<node TEXT="change ctx, leaving value(s) unchanged" ID="ID_1435936837" CREATED="1413599884921" MODIFIED="1414912050682"/>
<node TEXT="useful in a chain of &gt;&gt;= (inc. implicitly via do)" ID="ID_678444938" CREATED="1413599930803" MODIFIED="1413599944734"/>
</node>
<node TEXT="how" ID="ID_854816749" CREATED="1413599888039" MODIFIED="1413599888490">
<node TEXT="code" ID="ID_276566003" CREATED="1413599920742" MODIFIED="1413599920742">
<node TEXT="multWithLog :: Writer [String] Int" ID="ID_1387171394" CREATED="1413599920742" MODIFIED="1413599920742"/>
<node TEXT="multWithLog = do" ID="ID_119066832" CREATED="1413599920742" MODIFIED="1413599920742">
<node TEXT="a &lt;- logNumber 3" ID="ID_1936493210" CREATED="1413599920742" MODIFIED="1413599920742"/>
<node TEXT="b &lt;- logNumber 5" ID="ID_1291498951" CREATED="1413599920742" MODIFIED="1413599920742"/>
<node TEXT="tell [&quot;Gonna multiply these two&quot;]" ID="ID_1178869864" CREATED="1413599920742" MODIFIED="1413599920742"/>
<node TEXT="return (a*b)" ID="ID_1373276718" CREATED="1413599920742" MODIFIED="1413599920742"/>
</node>
</node>
<node TEXT="effect" ID="ID_886790210" CREATED="1413599920742" MODIFIED="1413599920742">
<node TEXT="ghci&gt; runWriter multWithLog" ID="ID_745964089" CREATED="1413599920743" MODIFIED="1413599920743"/>
<node TEXT="(15,[&quot;Got number: 3&quot;,&quot;Got number: 5&quot;,&quot;Gonna multiply these two&quot;])" ID="ID_339351176" CREATED="1413599920743" MODIFIED="1413599920743"/>
</node>
</node>
</node>
</node>
<node TEXT="State" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1021070598" CREATED="1413851110455" MODIFIED="1421790313772">
<node TEXT="Huh?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_953953048" CREATED="1414216562817" MODIFIED="1421792086118"/>
<node TEXT="must nest multiple unlike into one?" ID="ID_1700257604" CREATED="1414216744318" MODIFIED="1414216755554"/>
<node TEXT="State wraps a function!" ID="ID_1237589523" CREATED="1415134337512" MODIFIED="1415134347592">
<node TEXT="quote" ID="ID_916548837" CREATED="1415133873687" MODIFIED="1415133877273">
<node TEXT="newtype State s a = St (s &#x2192; (a, s))&#xa;runSt :: State s a &#x2192; s &#x2192; (a, s)&#xa;runSt (St f ) = f" ID="ID_844577208" CREATED="1415133971543" MODIFIED="1415133981900">
<node TEXT="quote" ID="ID_1196909848" CREATED="1415133873687" MODIFIED="1415133877273"/>
<node TEXT="source" ID="ID_672051416" CREATED="1415133877511" MODIFIED="1415133878354">
<node TEXT="Datatype-Generic Programming" ID="ID_1988170258" CREATED="1415133878855" MODIFIED="1415133878855"/>
<node TEXT="Jeremy Gibbons" ID="ID_1278528062" CREATED="1415133883455" MODIFIED="1415133884049"/>
</node>
</node>
</node>
<node TEXT="source" ID="ID_1829674644" CREATED="1415133877511" MODIFIED="1415133878354">
<node TEXT="Datatype-Generic Programming" ID="ID_1227118806" CREATED="1415133878855" MODIFIED="1415133878855"/>
<node TEXT="Jeremy Gibbons" ID="ID_767617358" CREATED="1415133883455" MODIFIED="1415133884049"/>
</node>
<node TEXT="why I was confused" ID="ID_1211851291" CREATED="1415134401872" MODIFIED="1415134405867">
<node TEXT="&quot;State s a&quot; looked to me like something that would hold two things" ID="ID_690280477" CREATED="1415134409496" MODIFIED="1415134427266"/>
</node>
</node>
<node TEXT="Control.Monad.State" ID="ID_1279207522" CREATED="1413851115310" MODIFIED="1413851119954"/>
<node TEXT="def&apos;n" ID="ID_1009114488" CREATED="1413851126389" MODIFIED="1413851127105">
<node TEXT="newtype State s a = State { runState :: s -&gt; (a,s) }" ID="ID_1218232734" CREATED="1413851128662" MODIFIED="1413851128985"/>
<node TEXT="&quot;wraps stateful computations&quot;" ID="ID_543545784" CREATED="1413851137597" MODIFIED="1413851146655"/>
<node TEXT="note reversal: the (State s a) type has a value of (a,s)" ID="ID_161535635" CREATED="1413860839660" MODIFIED="1413860863425">
<node TEXT="a is &quot;the&quot; value, s is the state" ID="ID_1098915182" CREATED="1413860864467" MODIFIED="1413860870742"/>
</node>
</node>
<node TEXT="Monad implem&apos;" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_795962909" CREATED="1413851186976" MODIFIED="1421789893070">
<node TEXT="huh?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_876243583" CREATED="1421789895038" MODIFIED="1421789897145"/>
<node TEXT="instance Monad (State s) where &#xa;    return x = State $ \s -&gt; (x,s) &#xa;    (State h) &gt;&gt;= f = State $ \s -&gt; let (a, newState) = h s &#xa;                                        (State g) = f a &#xa;                                    in  g newState" ID="ID_1779446284" CREATED="1413851198096" MODIFIED="1413851198675"/>
</node>
<node TEXT="example: a stack" LOCALIZED_STYLE_REF="default" ID="ID_1866882433" CREATED="1413856380654" MODIFIED="1421789742762">
<node TEXT="&gt; import Control.Monad.State &#xa;&gt; let pop = state $ \(x:xs) -&gt; (x,xs)&#xa;&gt; let push a = state $ \xs -&gt; ((),a:xs)&#xa;&gt; :t push&#xa;push :: MonadState [a] m =&gt; a -&gt; m ()&#xa;&gt; :t pop&#xa;pop :: MonadState [a] m =&gt; m a&#xa;&gt; let stackManip = do push 3; a &lt;- pop; pop&#xa;&gt; :t stackManip&#xa;stackManip :: (MonadState [a] m, Num a) =&gt; m a&#xa;&gt; runState stackManip [5,8,2,1]&#xa;(5,[8,2,1])" ID="ID_418421353" CREATED="1413856448991" MODIFIED="1413856449739"/>
</node>
</node>
</node>
<node TEXT="transformers" ID="ID_1788090182" CREATED="1414779554397" MODIFIED="1421804950535">
<font BOLD="true"/>
<node TEXT=". from &quot;Real World Haskell&quot;, ch 18" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_72880089" CREATED="1421804896967" MODIFIED="1421804963213"/>
<node TEXT="link in from sources" ID="ID_164519301" CREATED="1414825892017" MODIFIED="1414825895422"/>
<node TEXT="most monads have transformer equiv&apos;s" ID="ID_955272562" CREATED="1414785452528" MODIFIED="1414785457492">
<node TEXT="at least the monads in the mtl library" ID="ID_166282621" CREATED="1414785469768" MODIFIED="1414785476299"/>
</node>
<node TEXT="ex&apos;l: WriterT" ID="ID_833720781" CREATED="1414786642828" MODIFIED="1414796350397">
<node TEXT="abstract form" ID="ID_349700109" CREATED="1414796088246" MODIFIED="1414796092993">
<node TEXT="WriterT w m a" ID="ID_732740546" CREATED="1414786644788" MODIFIED="1414786650623"/>
<node TEXT="&quot;m a&quot; is the &quot;underlying&quot; monad" ID="ID_1183643500" CREATED="1414786650844" MODIFIED="1414786714729"/>
<node TEXT="&quot;w&quot; is the type of thing the WriterT-added functionality will write (which at least sometimes, perhaps always, means accumulate)" ID="ID_984074100" CREATED="1414786657811" MODIFIED="1414786704927"/>
</node>
<node TEXT="concrete form" ID="ID_510439191" CREATED="1414796094742" MODIFIED="1414796097514">
<node TEXT="WriterT [(FilePath, Int)] IO a" ID="ID_755764976" CREATED="1414796099333" MODIFIED="1414796102618"/>
<node TEXT="That would augment an &quot;IO a&quot; to accumulate a list of FilePath, Int pairs" ID="ID_1998565099" CREATED="1414796102893" MODIFIED="1414796126161"/>
</node>
<node TEXT="to run" ID="ID_627054165" CREATED="1414796345913" MODIFIED="1414796360764">
<node TEXT="ghci&gt; :type runWriterT&#xa;runWriterT :: WriterT w m a -&gt; m (a, w)&#xa;ghci&gt; :type execWriterT&#xa;execWriterT :: (Monad m) =&gt; WriterT w m a -&gt; m w" ID="ID_53304821" CREATED="1414796351681" MODIFIED="1414796352421"/>
<node TEXT="run&apos; returns its result; exec&apos; discards the result" ID="ID_1883612044" CREATED="1414796361857" MODIFIED="1414796377380"/>
</node>
</node>
<node TEXT="* idioms" ID="ID_262048791" CREATED="1414807962855" MODIFIED="1414807966147">
<node TEXT="use liftIO, etc. liberally" ID="ID_240826287" CREATED="1414800076800" MODIFIED="1414800090348">
<node TEXT="example: CountEntriesT.hs" ID="ID_706243619" CREATED="1414800093776" MODIFIED="1414800096212"/>
<node TEXT="even functions designed to operate on monads will not be designed for the transformed/stack monad" ID="ID_766892548" CREATED="1414800132649" MODIFIED="1421805092193"/>
<node TEXT="liftIO can under some conditions make what they return suitable for being the result of a line in a do loop" ID="ID_734617621" CREATED="1421805092471" MODIFIED="1421805093062"/>
</node>
<node TEXT="IO at the bottom (if present)" ID="ID_344991722" CREATED="1414807971088" MODIFIED="1414807982843">
<node TEXT="because there is no IO transformer" ID="ID_1517659102" CREATED="1414796500343" MODIFIED="1414807991475"/>
</node>
<node TEXT="name the type" ID="ID_1952342326" CREATED="1414807996135" MODIFIED="1414808289296">
<node TEXT="for the otherwise long-named monad and monad transformer stack" ID="ID_475088503" CREATED="1414808001567" MODIFIED="1414808021229"/>
<node TEXT="typically, use newtype" ID="ID_1097816649" CREATED="1414808291370" MODIFIED="1414808297822"/>
<node TEXT="can use type (pure alias), but be careful" ID="ID_345972161" CREATED="1414808298011" MODIFIED="1414808315544">
<node TEXT="example of use" ID="ID_499008231" CREATED="1414808050950" MODIFIED="1414808319181">
<node TEXT="from RWH, ch 18" ID="ID_32286941" CREATED="1414808057294" MODIFIED="1414808059778"/>
<node TEXT="-- file: ch18/UglyStack.hs&#xa;type App = ReaderT AppConfig (StateT AppState IO)" ID="ID_909334334" CREATED="1414808052383" MODIFIED="1414808052890"/>
<node TEXT="where these are defined earlier" ID="ID_730167920" CREATED="1414808119135" MODIFIED="1414808122888">
<node TEXT="-- file: ch18/UglyStack.hs&#xa;import System.Directory&#xa;import System.FilePath&#xa;import Control.Monad.Reader&#xa;import Control.Monad.State&#xa;&#xa;data AppConfig = AppConfig {&#xa;      cfgMaxDepth :: Int&#xa;    } deriving (Show)&#xa;&#xa;data AppState = AppState {&#xa;      stDeepestReached :: Int&#xa;    } deriving (Show)" ID="ID_1962324227" CREATED="1414808115013" MODIFIED="1414808115876"/>
</node>
</node>
<node TEXT="the problem" ID="ID_892887437" CREATED="1414808319371" MODIFIED="1414808320725">
<node TEXT="see &quot;Where&apos;s the missing type parameter?&quot; in RWH ch. 18" ID="ID_765255421" CREATED="1414808323113" MODIFIED="1414808329725"/>
</node>
</node>
</node>
</node>
<node TEXT="ask and local" ID="ID_1892087066" CREATED="1414807340379" MODIFIED="1414807342054">
<node TEXT="http://book.realworldhaskell.org/read/monad-transformers.html" ID="ID_420242676" CREATED="1414779557793" MODIFIED="1414779557793" LINK="http://book.realworldhaskell.org/read/monad-transformers.html"/>
</node>
<node TEXT="to run UglyStack.hs" ID="ID_942245087" CREATED="1414893716471" MODIFIED="1414893719762">
<node TEXT="give it an app &quot;k&quot; (made with one of the functions) and an integer &quot;maxDepth&quot;" ID="ID_1972717555" CREATED="1414893738606" MODIFIED="1414954352692"/>
</node>
</node>
<node TEXT="u, 2015 01 20, largely state" ID="ID_587539551" CREATED="1415063490553" MODIFIED="1421806176542">
<font BOLD="true"/>
<node TEXT="liftIO lifts across mult ctx&apos;s" ID="ID_1917467949" CREATED="1415063491417" MODIFIED="1415063499483">
<node TEXT="http://stackoverflow.com/questions/3921237/haskell-lift-vs-liftio" ID="ID_1390063764" CREATED="1415063506238" MODIFIED="1415063506238" LINK="http://stackoverflow.com/questions/3921237/haskell-lift-vs-liftio"/>
<node TEXT="advantage: brief" ID="ID_1834663942" CREATED="1415063676728" MODIFIED="1415063683682">
<node TEXT="so if there&apos;s a stack of transformers on top of an IO monad, liftIO is faster than the alternative, which is a series of lifts" ID="ID_1365794774" CREATED="1415063506864" MODIFIED="1415063532702"/>
</node>
<node TEXT="advantage: modular" ID="ID_1586015959" CREATED="1415063685199" MODIFIED="1415063689147">
<node TEXT="if the number of monads in the stack changes, code written with liftIO still works (assuming each monad transformer is an instance of MonadIO, which the type checker will notice)" ID="ID_1563461270" CREATED="1415063689343" MODIFIED="1415063721851"/>
</node>
</node>
<node TEXT="runReader: initial env&apos;t is a sep&apos;t arg" ID="ID_1921294265" CREATED="1415067053611" MODIFIED="1415067074869">
<node TEXT="runReader :: Reader r a -&gt; r -&gt; a" ID="ID_818216988" CREATED="1415067078106" MODIFIED="1415067078629"/>
<node TEXT="I was expecting the initial environment to be part of the first argument (the Reader r a). It is not." ID="ID_1920281591" CREATED="1415067085042" MODIFIED="1415067110144"/>
<node TEXT="However, when run using runReader, the Reader r a has access to that initial environment (the second argument to runReader)." ID="ID_1242053171" CREATED="1415067105003" MODIFIED="1415067143451"/>
<node TEXT="Pitfall: The second arg to runReader is not an arg to the first arg. (I made that mistake earlier.)" ID="ID_861625014" CREATED="1415067188643" MODIFIED="1415067244534"/>
</node>
<node TEXT="runApp idiom" ID="ID_895179635" CREATED="1415403000379" MODIFIED="1415403009478">
<node TEXT="example" ID="ID_1802189285" CREATED="1415403006498" MODIFIED="1415403007374">
<node TEXT="RWH, ch 18, UglyStack.hs&#xa;code saved in Haskell/monad/transf&apos;s/UglyStack/" ID="ID_869949318" CREATED="1415403011699" MODIFIED="1415404620997"/>
<node TEXT="runApp :: App a -&gt; Int -&gt; IO (a, AppState)&#xa;runApp k maxDepth =&#xa;    let config = AppConfig maxDepth&#xa;        state = AppState 0&#xa;    in runStateT (runReaderT k config) state" ID="ID_1578637511" CREATED="1415403003155" MODIFIED="1415403003807"/>
<node TEXT="runApp (constrainedCount 0 &quot;.&quot;) 1" ID="ID_1033159484" CREATED="1415403227355" MODIFIED="1415403227355"/>
</node>
<node TEXT="why" ID="ID_1175731139" CREATED="1415403052642" MODIFIED="1415404625093">
<node TEXT="in a monad stack, must call run* functions for each layer in the appropriate order" ID="ID_668370327" CREATED="1415403068178" MODIFIED="1415403087357"/>
<node TEXT="user wants not to have to know that order" ID="ID_1512610745" CREATED="1415403090506" MODIFIED="1415403105173"/>
<node TEXT="run* functions require initial condition arguments (e.g. runStateT requires an initial state)" ID="ID_554793857" CREATED="1415403105658" MODIFIED="1415403149484"/>
<node TEXT="user might have to supply at least some of those initial conditions" ID="ID_1470237918" CREATED="1415403163425" MODIFIED="1415403176228"/>
</node>
</node>
<node TEXT="unlike readers or states, writers are not given an initial record state" ID="ID_1972614348" CREATED="1415406204444" MODIFIED="1415406272250">
<node ID="ID_971877027" CREATED="1415406272540" MODIFIED="1415406272540"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      (states are given an initial state. readers are given an initial set of data, which is immutable thereafter.)
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="the identity is a functor" ID="ID_1181209855" CREATED="1414825248893" MODIFIED="1414825251704">
<node TEXT="defined, strangely, in something like Data.Traversible" ID="ID_1729296454" CREATED="1414825347348" MODIFIED="1414956065015">
<node TEXT="according to Simon Peyton Jones in this video" ID="ID_735780544" CREATED="1414956065375" MODIFIED="1414956069868"/>
<node TEXT="SPJ .ppt talk" ID="ID_264704077" CREATED="1414825731125" MODIFIED="1414955935382">
<node TEXT="https://skillsmatter.com/skillscasts/4251-lenses-compositional-data-access-and-manipulation#showModal?modal-signup-complete" ID="ID_552486987" CREATED="1414825656989" MODIFIED="1414825656989" LINK="https://skillsmatter.com/skillscasts/4251-lenses-compositional-data-access-and-manipulation#showModal?modal-signup-complete"/>
</node>
</node>
</node>
<node TEXT="the State monad transforms functions of type &quot;a&quot; to ones of type &quot;s -&gt; (a,s)&quot;" ID="ID_260505083" CREATED="1415133757465" MODIFIED="1415133781100"/>
<node TEXT="&quot;then&quot; folds into &quot;do them all, in serial&quot;" ID="ID_1224281354" CREATED="1413268857292" MODIFIED="1421785306471"/>
<node TEXT="Constructors are functions, mappable." ID="ID_1337197089" CREATED="1413238292362" MODIFIED="1413873801891">
<node TEXT="ghci&gt; getProduct . mconcat . map Product $ [3,4,2] &#xa;24" ID="ID_1848126683" CREATED="1413238297448" MODIFIED="1413238298349"/>
</node>
<node TEXT="types" ID="ID_1800861297" CREATED="1421789674774" MODIFIED="1421789675499">
<node TEXT="one type can have two instances" ID="ID_393848245" CREATED="1413229828521" MODIFIED="1421786544391">
<node TEXT="use newtype" ID="ID_755636083" CREATED="1413414141663" MODIFIED="1413416398184">
<node TEXT="link to &quot;types/newtype&quot;" ID="ID_1554646894" CREATED="1413414123104" MODIFIED="1413414164068">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_18536815" STARTINCLINATION="117;0;" ENDINCLINATION="117;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="example" ID="ID_1280844608" CREATED="1413416398771" MODIFIED="1413416399847">
<node TEXT="see &quot;ZipList&quot;, compare to &quot;List&quot;" ID="ID_1681991259" CREATED="1413229951310" MODIFIED="1413413926213">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1641793484" STARTINCLINATION="336;0;" ENDINCLINATION="336;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
</node>
<node TEXT="some types" ID="ID_1733792561" CREATED="1421789181085" MODIFIED="1421789186277">
<font BOLD="true"/>
<node TEXT="DList (difference list)" LOCALIZED_STYLE_REF="default" ID="ID_619329478" CREATED="1413601438844" MODIFIED="1421789439060">
<node TEXT="motivation" ID="ID_75815755" CREATED="1413601440764" MODIFIED="1413601441920">
<node TEXT="lists are built quickest rightward" ID="ID_392142121" CREATED="1413601797499" MODIFIED="1413601830067">
<node TEXT="which can be nonobvious, e.g. dependent on whether the building function is tail-recursive" ID="ID_266000955" CREATED="1413601429692" MODIFIED="1413601860571">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1932954612" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="&quot;When we append two nor- mal lists with ++, the code must walk all the way to the end of the list on the left of ++,&quot;" ID="ID_281797928" CREATED="1413601794323" MODIFIED="1413601796079"/>
</node>
<node TEXT="skipped the rest" ID="ID_190067837" CREATED="1413601982429" MODIFIED="1413601985312"/>
</node>
<node TEXT="Either" ID="ID_1657083672" CREATED="1413860944228" MODIFIED="1413861235656">
<node TEXT="Learn You, ch. 14, monads 2" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1912571098" CREATED="1413861237217" MODIFIED="1413861244536"/>
<node TEXT="Either imp&apos;s Monad" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1348009016" CREATED="1413861136050" MODIFIED="1413861486313">
<node TEXT="does that mean Either might still be symmetric?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_6262686" CREATED="1413861198420" MODIFIED="1413861211636">
<node TEXT="and it&apos;s just Monad Either that isn&apos;t?" ID="ID_419069814" CREATED="1413861212691" MODIFIED="1413861218134"/>
</node>
<node TEXT="instance (Error e) =&gt; Monad (Either e) where &#xa;    return x = Right x  &#xa;    Right x &gt;&gt;= f = f x &#xa;    Left err &gt;&gt;= f = Left err &#xa;    fail msg = Left (strMsg msg)" ID="ID_1130239018" CREATED="1413861105421" MODIFIED="1413861106008"/>
<node TEXT="the left type, e, must belong to* Error" ID="ID_1383261847" CREATED="1413861389172" MODIFIED="1414953349890">
<node TEXT="* by that did I mean &quot;be an instance of&quot;?" ID="ID_1032756621" CREATED="1414953350090" MODIFIED="1414953356986"/>
</node>
<node TEXT="the right type is free" ID="ID_1924695242" CREATED="1413861615767" MODIFIED="1413861616226"/>
</node>
<node TEXT="pitfall: it is asymmetric" ID="ID_313424311" CREATED="1413861110053" MODIFIED="1413861114287">
<node TEXT="though it looks otherwise, using these tests" ID="ID_80374805" CREATED="1413860950003" MODIFIED="1413861134093"/>
<node TEXT="Prelude System.Random Control.Monad.State&gt; :t Left &quot;error&quot;&#xa;Left &quot;error&quot; :: Either [Char] b&#xa;Prelude System.Random Control.Monad.State&gt; :t Right &quot;error&quot;&#xa;Right &quot;error&quot; :: Either a [Char]&#xa;Prelude System.Random Control.Monad.State&gt; :t Left 3&#xa;Left 3 :: Num a =&gt; Either a b&#xa;Prelude System.Random Control.Monad.State&gt; :t Right 3&#xa;Right 3 :: Num b =&gt; Either a b&#xa;Prelude System.Random Control.Monad.State&gt;" ID="ID_1907198306" CREATED="1413860956442" MODIFIED="1413860957046"/>
</node>
<node TEXT="impressively polymorphic?" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1384678680" CREATED="1413862085484" MODIFIED="1413862093181">
<node TEXT="ghci&gt; Left &quot;boom&quot; &gt;&gt;= \x -&gt; return (x+1) &#xa;Left &quot;boom&quot; &#xa;ghci&gt; Right 100 &gt;&gt;= \x -&gt; Left &quot;no way!&quot; &#xa;Left &quot;no way!&quot;" ID="ID_634521657" CREATED="1413862089508" MODIFIED="1413862090016"/>
</node>
</node>
</node>
</node>
<node TEXT="vocab" ID="ID_164816950" CREATED="1421805404128" MODIFIED="1421805405005">
<node TEXT="type const&apos;r v. value const&apos;r" ID="ID_1329765324" CREATED="1421805406391" MODIFIED="1421805417324">
<node TEXT="Maybe is a type constructor; Nothing and Just are value constructors." ID="ID_222237855" CREATED="1415140266920" MODIFIED="1415140279627"/>
</node>
</node>
</node>
</node>
<node TEXT="Monoid" ID="ID_1586894422" CREATED="1412914803147" MODIFIED="1413418476788">
<node TEXT="intro" ID="ID_333116082" CREATED="1421788345148" MODIFIED="1421788346563">
<font BOLD="true"/>
<node TEXT="must define empty and add (&quot;mappend&quot;)" ID="ID_1522873723" CREATED="1413418159726" MODIFIED="1413418227714">
<node TEXT=".=&gt; default concat, overrideable" ID="ID_695089071" CREATED="1413418175907" MODIFIED="1414656699813"/>
</node>
<node TEXT="should obey some laws; user must check" ID="ID_564714889" CREATED="1413418201682" MODIFIED="1413418244465">
<node TEXT="compiler won&apos;t" ID="ID_68136299" CREATED="1413418236702" MODIFIED="1413418238513"/>
</node>
<node TEXT="Ordering as Monoid" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1077049456" CREATED="1413418269100" MODIFIED="1413418525612">
<node ID="ID_1521301300" CREATED="1413418326401" MODIFIED="1413418326401"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      is like Bool
    </p>
  </body>
</html>
</richcontent>
<node TEXT="as soon as it finds a &quot;resulty&quot; value, it stops" ID="ID_1071547730" CREATED="1413418284322" MODIFIED="1413418318178"/>
</node>
<node TEXT="allows concat on comparison functions" ID="ID_1902645750" CREATED="1413418331982" MODIFIED="1413418352231"/>
</node>
<node TEXT="imagined use: Characterize" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1030342387" CREATED="1413418371402" MODIFIED="1421788338227">
<font BOLD="false"/>
<node TEXT="would be like Ordering: look for one way to characterize; if still unresolved, try another ..." ID="ID_1367171233" CREATED="1413418391832" MODIFIED="1413418423470"/>
</node>
</node>
<node TEXT="class def&apos;n" ID="ID_1512542131" CREATED="1413237026111" MODIFIED="1413237027666">
<node TEXT="class Monoid m where &#xa;    mempty :: m &#xa;    mappend :: m -&gt; m -&gt; m &#xa;    mconcat :: [m] -&gt; m &#xa;    mconcat = foldr mappend mempty" ID="ID_769249186" CREATED="1413237033102" MODIFIED="1413237034067"/>
<node TEXT="note that m must be concrete" ID="ID_1548818705" CREATED="1413237916582" MODIFIED="1413237921113">
<node TEXT="as opposed to Functor" ID="ID_1423896258" CREATED="1413237921702" MODIFIED="1413237926368"/>
</node>
</node>
<node TEXT="laws, req&apos;s" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_342747895" CREATED="1413237643537" MODIFIED="1413247153708">
<node TEXT="compiler won&apos;t check, user should" LOCALIZED_STYLE_REF="default" ID="ID_903708172" CREATED="1413237856251" MODIFIED="1413237863787"/>
<node TEXT="identity exists" ID="ID_1373174271" CREATED="1413237842092" MODIFIED="1413237844640">
<node TEXT="mempty `mappend` x = x" ID="ID_252360340" CREATED="1413237654475" MODIFIED="1413237654475"/>
<node TEXT="x `mappend` mempty = x" ID="ID_1387163625" CREATED="1413237654475" MODIFIED="1413237654475"/>
</node>
<node TEXT="&quot;associativity&quot;" ID="ID_7399899" CREATED="1413237838933" MODIFIED="1413237839384">
<node TEXT="(x `mappend` y) `mappend` z = x `mappend` (y `mappend` z)" ID="ID_773956403" CREATED="1413237654475" MODIFIED="1413237838662"/>
</node>
<node TEXT="absent: commutativity" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_879720201" CREATED="1413238014165" MODIFIED="1413416573952">
<node TEXT="&quot;monoids don&apos;t require that a `mappend` b be equal to b `mappend` a&quot;" ID="ID_456740430" CREATED="1413238030859" MODIFIED="1413238033279"/>
<node TEXT="equiv., commutative &lt;=&gt; mappend = flip mappend" ID="ID_1688270868" CREATED="1412916324914" MODIFIED="1413245780135"/>
</node>
</node>
<node TEXT="how to think about" ID="ID_1667711112" CREATED="1413237219761" MODIFIED="1413237221837">
<node TEXT="mempty" ID="ID_1215045838" CREATED="1413237222033" MODIFIED="1413237258301">
<node TEXT="returns the identity element" ID="ID_1712993564" CREATED="1413237260445" MODIFIED="1413237265433"/>
<node ID="ID_215845171" CREATED="1413237258918" MODIFIED="1413237258918"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      is a &quot;polymorphic constant&quot;
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="&quot;not really a function&quot;" ID="ID_1631872956" CREATED="1413237231560" MODIFIED="1413237243426"/>
</node>
<node TEXT="mappend" ID="ID_1547402756" CREATED="1413237334342" MODIFIED="1413237335842">
<node TEXT="is &quot;the&quot; binary function of interest" ID="ID_916237990" CREATED="1413237336086" MODIFIED="1413237347301"/>
<node TEXT="usually totally unlike appending" ID="ID_1675896212" CREATED="1413237348286" MODIFIED="1413237362104"/>
</node>
<node TEXT="monocat" ID="ID_988444051" CREATED="1413237599679" MODIFIED="1413237604025">
<node TEXT="When making a type an instance of Monoid, it suffices to just implement mempty and mappend. The reason mconcat is there at all is because for some instances, there might be a more efficient way to implement mconcat, but for most instances the default implementation is just fine." ID="ID_783941804" CREATED="1413237604294" MODIFIED="1413237605352"/>
</node>
</node>
<node TEXT="instances" ID="ID_1456765752" CREATED="1413237896152" MODIFIED="1413237898387">
<node TEXT="[a]" ID="ID_628669873" CREATED="1413237898727" MODIFIED="1413237913477">
<node TEXT="instance Monoid [a] where &#xa;    mempty = [] &#xa;    mappend = (++)" ID="ID_1972289467" CREATED="1413237903519" MODIFIED="1413237904274"/>
</node>
<node TEXT="Product: multiplicative int" ID="ID_1980459380" CREATED="1413238112035" MODIFIED="1413416833512">
<node TEXT="in Data.Monoid" ID="ID_515519216" CREATED="1413238594235" MODIFIED="1413238595270"/>
<node TEXT="newtype Product a =  Product { getProduct :: a } &#xa;    deriving (Eq, Ord, Read, Show, Bounded)" ID="ID_1730720112" CREATED="1413238121753" MODIFIED="1413238122614"/>
<node TEXT="instance Num a =&gt; Monoid (Product a) where &#xa;    mempty = Product 1 &#xa;    Product x `mappend` Product y = Product (x * y)" ID="ID_929196969" CREATED="1413238126977" MODIFIED="1413238127613"/>
</node>
<node TEXT="Sum: additive int" ID="ID_1339431825" CREATED="1413238575588" MODIFIED="1413416841167">
<node TEXT="in Data.Monoid" ID="ID_523990154" CREATED="1413238594235" MODIFIED="1413238595270"/>
</node>
<node TEXT="Bool with &quot;or&quot; and &quot;False&quot;" ID="ID_597247642" CREATED="1413238643078" MODIFIED="1413238682748">
<node TEXT="newtype Any = Any { getAny :: Bool } &#xa;    deriving (Eq, Ord, Read, Show, Bounded)" ID="ID_58309976" CREATED="1413238669379" MODIFIED="1413238670663"/>
<node TEXT="instance Monoid Any where &#xa;        mempty = Any False &#xa;        Any x `mappend` Any y = Any (x || y)" ID="ID_625231703" CREATED="1413238690330" MODIFIED="1413238691021"/>
<node TEXT="&quot;it&apos;s called Any is because x `mappend` y will be True if any one of those two is True&quot;" ID="ID_327556515" CREATED="1413238715640" MODIFIED="1413238717987"/>
</node>
<node TEXT="Bool with &quot;and&quot; and &quot;True&quot;" ID="ID_79973173" CREATED="1413238674130" MODIFIED="1413238679558">
<node TEXT="newtype All = All { getAll :: Bool } &#xa;        deriving (Eq, Ord, Read, Show, Bounded)" ID="ID_1208401152" CREATED="1413238744911" MODIFIED="1413238747729"/>
<node TEXT="instance Monoid All where &#xa;        mempty = All True &#xa;        All x `mappend` All y = All (x &amp;&amp; y)" ID="ID_296173960" CREATED="1413238756141" MODIFIED="1413238756864"/>
</node>
<node TEXT="Maybe" ID="ID_1457322087" CREATED="1413245237282" MODIFIED="1413245239028">
<node TEXT="default" ID="ID_1322798452" CREATED="1413245239250" MODIFIED="1413245627165">
<node TEXT="instance def" ID="ID_1768103857" CREATED="1413245343235" MODIFIED="1413245346542">
<node TEXT="instance Monoid a =&gt; Monoid (Maybe a) where &#xa;    mempty = Nothing &#xa;    Nothing `mappend` m = m &#xa;    m `mappend` Nothing = m &#xa;    Just m1 `mappend` Just m2 = Just (m1 `mappend` m2)" ID="ID_340437618" CREATED="1413245240432" MODIFIED="1413245241069"/>
</node>
<node TEXT="class constraint" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1148273083" CREATED="1413245653595" MODIFIED="1413245670972">
<node TEXT="must hold a monoid" ID="ID_1226405002" CREATED="1413245652885" MODIFIED="1413245663430"/>
</node>
<node TEXT="why" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1149607679" CREATED="1413245348323" MODIFIED="1413245677076">
<node TEXT="&quot;Because of this instance, we don&apos;t have to check if the computations have failed by seeing if they&apos;re a Nothing or Just value; we can just continue to treat them as normal monoids.&quot;" ID="ID_1409195033" CREATED="1413245349899" MODIFIED="1413245351558"/>
</node>
<node TEXT="uses" ID="ID_1038603615" CREATED="1413245364642" MODIFIED="1413245365412">
<node TEXT="ghci&gt; Nothing `mappend` Just &quot;andy&quot; &#xa;Just &quot;andy&quot; &#xa;ghci&gt; Just LT `mappend` Nothing &#xa;Just LT &#xa;ghci&gt; Just (Sum 3) `mappend` Just (Sum 4) &#xa;Just (Sum {getSum = 7})" ID="ID_402730197" CREATED="1413245365602" MODIFIED="1413245366421"/>
</node>
</node>
<node TEXT="synonym First" ID="ID_274093490" CREATED="1413245449058" MODIFIED="1413245628564">
<node TEXT="purpose: to find the first non-Nothing" ID="ID_1788809872" CREATED="1413245573916" MODIFIED="1413245580631"/>
<node TEXT="def" ID="ID_1006597623" CREATED="1413245460528" MODIFIED="1413245461315">
<node TEXT="newtype First a = First { getFirst :: Maybe a } &#xa;    deriving (Eq, Ord, Read, Show)" ID="ID_373548270" CREATED="1413245450129" MODIFIED="1413245451445"/>
<node TEXT="instance Monoid (First a) where &#xa;    mempty = First Nothing &#xa;    First (Just x) `mappend` _ = First (Just x) &#xa;    First Nothing `mappend` x = x" ID="ID_1395379507" CREATED="1413245451681" MODIFIED="1413245459380"/>
</node>
<node TEXT="uses" ID="ID_1229664792" CREATED="1413245523646" MODIFIED="1413245524680">
<node TEXT="ghci&gt; getFirst $ First (Just &apos;a&apos;) `mappend` First (Just &apos;b&apos;) &#xa;Just &apos;a&apos; &#xa;ghci&gt; getFirst $ First Nothing `mappend` First (Just &apos;b&apos;) &#xa;Just &apos;b&apos; &#xa;ghci&gt; getFirst $ First (Just &apos;a&apos;) `mappend` First Nothing &#xa;Just &apos;a&apos;" ID="ID_200002427" CREATED="1413245524869" MODIFIED="1413245525520"/>
<node TEXT="ghci&gt; getFirst . mconcat . map First $ [Nothing, Just 9, Just 10] &#xa;Just 9" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1159340189" CREATED="1413245555206" MODIFIED="1413245563490"/>
</node>
</node>
<node TEXT="synonym Last" ID="ID_1493667906" CREATED="1413245718903" MODIFIED="1413245721626">
<node TEXT="like First" ID="ID_1863699839" CREATED="1413245722873" MODIFIED="1413245724154"/>
</node>
</node>
<node TEXT="Ordering" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_913885096" CREATED="1413238939150" MODIFIED="1413417667212">
<node TEXT="implementation" ID="ID_154539497" CREATED="1413239006640" MODIFIED="1413239010187">
<node TEXT="instance Monoid Ordering where &#xa;    mempty = EQ &#xa;    LT `mappend` _ = LT &#xa;    EQ `mappend` y = y &#xa;    GT `mappend` _ = GT" ID="ID_973051889" CREATED="1413238947084" MODIFIED="1413238948041"/>
</node>
<node TEXT="(the?) purpose: chain comparisons" ID="ID_1515179638" CREATED="1413239416589" MODIFIED="1413417847060">
<node TEXT="&quot;allows us to easily compare things by many different criteria and put those criteria in an order themselves&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_203912541" CREATED="1413239426885" MODIFIED="1413239430430"/>
<node TEXT="is like lexicographic comparison, generalized" ID="ID_1323482169" CREATED="1413239011208" MODIFIED="1413239425793">
<node TEXT="&quot;We compare the first two letters and if they differ, we can already decide which word would go first in a dictionary&quot;" ID="ID_1225516086" CREATED="1413239012535" MODIFIED="1413239016167"/>
</node>
</node>
<node TEXT="laziness helps" ID="ID_712208495" CREATED="1413417684664" MODIFIED="1413417705506">
<node TEXT="consider a chain like the one at right" ID="ID_1730910470" CREATED="1413417709574" MODIFIED="1413417764332">
<node TEXT="lengthCompare x y = (length x `compare` length y) `mappend` &#xa;                    (x `compare` y)" ID="ID_1963558721" CREATED="1413417751162" MODIFIED="1413417751805"/>
</node>
<node TEXT="if the first comparison is not EQ, the `mappend` operator will match on one of the two (out of three) cases in which it ignores its second operator" ID="ID_823205584" CREATED="1413417765665" MODIFIED="1413417820887"/>
</node>
<node TEXT="a use" ID="ID_1508031115" CREATED="1413239263820" MODIFIED="1413239264583">
<node TEXT="purpose" ID="ID_1735121786" CREATED="1413239296777" MODIFIED="1413239297732">
<node TEXT="compare lengths on length; if equal that way, compare alphabetically" ID="ID_1827300102" CREATED="1413239283825" MODIFIED="1413239296564"/>
</node>
<node TEXT="verbose without Monoid" ID="ID_482378484" CREATED="1413239264763" MODIFIED="1413239303148">
<node TEXT="lengthCompare :: String -&gt; String -&gt; Ordering &#xa;lengthCompare x y = let a = length x `compare` length y  &#xa;                        b = x `compare` y &#xa;                    in  if a == EQ then b else a" ID="ID_395028051" CREATED="1413239266556" MODIFIED="1413239267200"/>
</node>
<node TEXT="terse with Monoid" ID="ID_764929622" CREATED="1413239277731" MODIFIED="1413239306713">
<node TEXT="import Data.Monoid &#xa; &#xa;lengthCompare :: String -&gt; String -&gt; Ordering &#xa;lengthCompare x y = (length x `compare` length y) `mappend` &#xa;                    (x `compare` y)" ID="ID_568546650" CREATED="1413239279243" MODIFIED="1413239279798"/>
</node>
<node TEXT="logic" ID="ID_1614317905" CREATED="1413239334904" MODIFIED="1413239336657">
<node TEXT="&quot;when we use mappend, its left parameter is always kept unless it&apos;s EQ, in which case the right one is kept. That&apos;s why we put the comparison that we consider to be the first, more important criterion as the first parameter&quot;" ID="ID_624415154" CREATED="1413239336872" MODIFIED="1413239339505"/>
</node>
</node>
</node>
</node>
<node TEXT="folding with monoids" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1268957741" CREATED="1413245734746" MODIFIED="1413417920409">
<node TEXT="obscure?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1761787760" CREATED="1413418465682" MODIFIED="1413418468458"/>
<node TEXT="skipped on review" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1869204279" CREATED="1413417921371" MODIFIED="1413417924723"/>
<node TEXT="why" ID="ID_1555939875" CREATED="1413245879685" MODIFIED="1413245880944">
<node TEXT="lists aren&apos;t the only data structure that can be folded over" ID="ID_1290506710" CREATED="1413245878397" MODIFIED="1413245879464"/>
<node TEXT="inc. trees" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1799590342" CREATED="1413245881908" MODIFIED="1413245883741"/>
</node>
<node TEXT="name conflict =&gt; import qualified" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_300779574" CREATED="1413245915168" MODIFIED="1413246302323">
<node TEXT="import qualified Foldable as F" ID="ID_266681938" CREATED="1413245921431" MODIFIED="1413245922211"/>
</node>
<node TEXT="generalizes from List" ID="ID_1766025253" CREATED="1413245951184" MODIFIED="1413245955539">
<node TEXT="ghci&gt; :t foldr &#xa;foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b &#xa;ghci&gt; :t F.foldr &#xa;F.foldr :: (F.Foldable t) =&gt; (a -&gt; b -&gt; b) -&gt; b -&gt; t a -&gt; b" ID="ID_626791698" CREATED="1413245955784" MODIFIED="1413245956403"/>
</node>
<node TEXT="uses" ID="ID_1091232387" CREATED="1413246052967" MODIFIED="1413246113434">
<node TEXT="easy" ID="ID_386166579" CREATED="1413246114390" MODIFIED="1413246115130">
<node TEXT="for List, no change" ID="ID_1442812231" CREATED="1413246058790" MODIFIED="1413246065947">
<node TEXT="ghci&gt; foldr (*) 1 [1,2,3] &#xa;6 &#xa;ghci&gt; F.foldr (*) 1 [1,2,3] &#xa;6" ID="ID_75533530" CREATED="1413246060565" MODIFIED="1413246061161"/>
</node>
<node TEXT="ghci&gt; F.foldl (+) 2 (Just 9) &#xa;11 &#xa;ghci&gt; F.foldr (||) False (Just True) &#xa;True" ID="ID_1630880940" CREATED="1413246054318" MODIFIED="1413246054905"/>
</node>
<node TEXT="Tree" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_502655992" CREATED="1413246110367" MODIFIED="1413247277451">
<node TEXT="module dependencies" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_595770694" CREATED="1413247821669" MODIFIED="1413247837989">
<node TEXT="relies on modules Data.Monoid and (as &quot;F&quot;) Data.Foldable" LOCALIZED_STYLE_REF="default" ID="ID_491470354" CREATED="1413247778560" MODIFIED="1413247829169"/>
</node>
<node TEXT="data definition" ID="ID_496245169" CREATED="1413246190096" MODIFIED="1413246191859">
<node TEXT="data Tree a = Empty | Node a (Tree a) (Tree a) deriving (Show, Read, Eq)" ID="ID_222883446" CREATED="1413246122486" MODIFIED="1413246123121"/>
</node>
<node TEXT="implementation" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_439759668" CREATED="1413246185999" MODIFIED="1413247929295">
<node TEXT="rather than implement foldr and all its siblings, implement foldMap; the rest are implied" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1570521666" CREATED="1413246169009" MODIFIED="1413246905038"/>
<node TEXT="instance F.Foldable Tree where &#xa;    foldMap f Empty = mempty &#xa;    foldMap f (Node x l r) = F.foldMap f l `mappend` &#xa;                             f x           `mappend` &#xa;                             F.foldMap f r" ID="ID_1681252540" CREATED="1413246977124" MODIFIED="1413246979735"/>
</node>
<node TEXT="uses" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1052272638" CREATED="1413247760811" MODIFIED="1413247928596">
<node TEXT="test if any of its elts is 3" ID="ID_1033179133" CREATED="1413247767921" MODIFIED="1413247772600">
<node TEXT="ghci&gt; getAny $ F.foldMap (\x -&gt; Any $ x &gt; 15) testTree &#xa;False" ID="ID_747128665" CREATED="1413247772897" MODIFIED="1413247773437"/>
</node>
<node TEXT="transform into list" ID="ID_370098289" CREATED="1413247942924" MODIFIED="1413247947398">
<node TEXT="ghci&gt; F.foldMap (\x -&gt; [x]) testTree &#xa;[1,3,6,5,8,9,10]" ID="ID_1407250206" CREATED="1413247947722" MODIFIED="1413247948302"/>
</node>
</node>
</node>
</node>
<node TEXT="foldMap" ID="ID_77455897" CREATED="1413246852127" MODIFIED="1413246853714">
<node TEXT="foldMap :: (Monoid m, Foldable t) =&gt; (a -&gt; m) -&gt; t a -&gt; m" ID="ID_317311200" CREATED="1413246194464" MODIFIED="1413246194930"/>
<node TEXT="where &quot;t&quot; is a type constructor, and &quot;a&quot; is its operand" ID="ID_636648066" CREATED="1413246265190" MODIFIED="1413246276928"/>
<node TEXT="what it does" ID="ID_837225347" CREATED="1413246984595" MODIFIED="1413246987479">
<node TEXT="Its first parameter is a function that takes a value of the type that our foldable structure contains (denoted here with a) and returns a monoid value. Its second parameter is a foldable structure that contains values of type a. It maps that function over the foldable structure, thus producing a foldable structure that contains monoid values. Then, by doing mappend between those monoid values, it joins them all into a single monoid value." ID="ID_733193610" CREATED="1413246853902" MODIFIED="1413246854618"/>
</node>
</node>
</node>
<node TEXT="obscure" ID="ID_450369640" CREATED="1413416562854" MODIFIED="1413416564634">
<node TEXT="they do not remove elts froma lists" ID="ID_183781380" CREATED="1412914849943" MODIFIED="1412925650268">
<node TEXT="somehow this is an implication from the three properties" ID="ID_709695194" CREATED="1412914868556" MODIFIED="1412914880433"/>
</node>
</node>
</node>
<node TEXT="MonadPlus" ID="ID_219612717" CREATED="1413335904165" MODIFIED="1413335907808">
<node TEXT=". skipped on review, 2015 01 20" ID="ID_1500766966" CREATED="1421787390850" MODIFIED="1421787398167"/>
<node TEXT=".= monoid monads" ID="ID_848271904" CREATED="1413335975560" MODIFIED="1414656776043"/>
<node TEXT="implies Monad" ID="ID_814349574" CREATED="1413426880189" MODIFIED="1413426882976"/>
<node TEXT="def&apos;n" ID="ID_1164686636" CREATED="1413335946707" MODIFIED="1413335947452">
<node TEXT="class Monad m =&gt; MonadPlus m where &#xa;    mzero :: m a &#xa;    mplus :: m a -&gt; m a -&gt; m a" ID="ID_209004179" CREATED="1413335945754" MODIFIED="1413335946469"/>
</node>
<node TEXT="instance: List" ID="ID_477899133" CREATED="1413336038865" MODIFIED="1413336754276">
<node TEXT="instance MonadPlus [] where &#xa;    mzero = [] &#xa;    mplus = (++)" ID="ID_352627823" CREATED="1413336039737" MODIFIED="1413336040244"/>
</node>
<node TEXT="guard" ID="ID_253200783" CREATED="1413336100643" MODIFIED="1413336103830">
<node TEXT="def&apos;n" ID="ID_1808507775" CREATED="1413336176157" MODIFIED="1413336177513">
<node TEXT="guard :: (MonadPlus m) =&gt; Bool -&gt; m () &#xa;guard True = return () &#xa;guard False = mzero" ID="ID_1995424780" CREATED="1413336093613" MODIFIED="1413336094823"/>
</node>
<node TEXT="use, alone" ID="ID_1348684634" CREATED="1413336219297" MODIFIED="1413336235227">
<node TEXT="ghci&gt; guard (5 &gt; 2) :: Maybe () &#xa;Just () &#xa;ghci&gt; guard (1 &gt; 2) :: Maybe () &#xa;Nothing &#xa;ghci&gt; guard (5 &gt; 2) :: [()] &#xa;[()] &#xa;ghci&gt; guard (1 &gt; 2) :: [()] &#xa;[]" ID="ID_1028785408" CREATED="1413336179156" MODIFIED="1413336179624"/>
</node>
<node TEXT="use, with &gt;&gt;" ID="ID_1751053040" CREATED="1413336296676" MODIFIED="1413336298647">
<node TEXT="ghci&gt; guard (5 &gt; 2) &gt;&gt; return &quot;cool&quot; :: [String] &#xa;[&quot;cool&quot;] &#xa;ghci&gt; guard (1 &gt; 2) &gt;&gt; return &quot;cool&quot; :: [String] &#xa;[]" ID="ID_39548926" CREATED="1413336289020" MODIFIED="1413336289425"/>
<node TEXT="&quot;If guard succeeds, the result contained within it is an empty tuple. So then, we use &gt;&gt; to ignore that empty tuple and present something else as the result&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_110303198" CREATED="1413336333041" MODIFIED="1413336334691"/>
</node>
<node TEXT="use, to filter a list" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_35848090" CREATED="1413336223433" MODIFIED="1413336235981">
<node TEXT="ghci&gt; [1..50] &gt;&gt;= (\x -&gt; guard (&apos;7&apos; `elem` show x) &gt;&gt; return x) &#xa;[7,17,27,37,47]" ID="ID_1481933924" CREATED="1413336225689" MODIFIED="1413336226277"/>
</node>
</node>
</node>
</node>
<node TEXT="o: learning" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1533283741" CREATED="1422077107498" MODIFIED="1422077115036">
<node TEXT="indentation mystery" ID="ID_1958752013" CREATED="1422076352169" MODIFIED="1422076362606">
<node TEXT="an example of &quot;2ndary indent disregard&quot;" ID="ID_586922901" CREATED="1422076368042" MODIFIED="1422077143292">
<node TEXT=". not in itself problematic to me but perhaps illuminative of how Haskell processes indentation" ID="ID_1499704696" CREATED="1422076380809" MODIFIED="1422076404475"/>
<node TEXT="The (probably syntactically invalidly) doubled deriving line can show up in either place without effect." ID="ID_1174727904" CREATED="1422076363151" MODIFIED="1422076363151"/>
<node TEXT="data Gnode = Gnode { gIdx :: GnodeIdx" ID="ID_429251100" CREATED="1422076363151" MODIFIED="1422076363151">
<node TEXT=", tx :: String" ID="ID_1690064645" CREATED="1422076363151" MODIFIED="1422076363151"/>
<node TEXT=", conns :: Map.Map Reln [GnodeIdx] }" ID="ID_1248137616" CREATED="1422076363151" MODIFIED="1422076363151"/>
<node TEXT="deriving (Show, Eq)" ID="ID_585243557" CREATED="1422076363151" MODIFIED="1422076363151"/>
<node TEXT="deriving (Show, Eq)" ID="ID_1641460617" CREATED="1422076363151" MODIFIED="1422076363151"/>
</node>
</node>
</node>
<node TEXT="precedence" ID="ID_1320596979" CREATED="1422077099330" MODIFIED="1422077105816">
<node TEXT="some of them, ordered" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_728801828" CREATED="1422077187899" MODIFIED="1422077498445">
<node TEXT="1, bind last" ID="ID_1528119131" CREATED="1422077209690" MODIFIED="1422077329220">
<node TEXT="$" ID="ID_1741460881" CREATED="1422077516315" MODIFIED="1422077517465"/>
</node>
<node TEXT="2" ID="ID_1562079817" CREATED="1422077216018" MODIFIED="1422077220649">
<node TEXT="||" ID="ID_1433425480" CREATED="1422077220882" MODIFIED="1422077222049"/>
</node>
<node TEXT="3" ID="ID_899577383" CREATED="1422077222722" MODIFIED="1422077223416">
<node TEXT="&amp;&amp;" ID="ID_573920875" CREATED="1422077223794" MODIFIED="1422077224648"/>
</node>
<node TEXT="4:" ID="ID_54389470" CREATED="1422077225154" MODIFIED="1422077576018">
<node TEXT="eq, compar" ID="ID_1957820316" CREATED="1422077576644" MODIFIED="1422077600568">
<node TEXT="==, /=" ID="ID_313555992" CREATED="1422077226786" MODIFIED="1422077604664"/>
<node TEXT="&lt;, &gt;, etc." ID="ID_483021295" CREATED="1422077290034" MODIFIED="1422077293777"/>
</node>
<node TEXT="&lt;*&gt;" ID="ID_855821639" CREATED="1422077581202" MODIFIED="1422077589176">
<node ID="ID_173474540" CREATED="1422077589492" MODIFIED="1422077589492"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Applicative
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node TEXT="lowest value binds last" ID="ID_1915062010" CREATED="1422077156450" MODIFIED="1422077511113"/>
<node TEXT="view with :i" ID="ID_42400356" CREATED="1422077151178" MODIFIED="1422077505232">
<node ID="ID_362526938" CREATED="1422077505731" MODIFIED="1422077505731"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      listed last
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
</node>
<node TEXT="modules" ID="ID_825433900" CREATED="1422085846968" MODIFIED="1439718155215">
<font BOLD="true"/>
<node TEXT="making and using" LOCALIZED_STYLE_REF="default" ID="ID_1225992010" CREATED="1412752262396" MODIFIED="1422665843194">
<font BOLD="true"/>
<node TEXT="import" ID="ID_1923744022" CREATED="1412743639211" MODIFIED="1418933596519">
<node TEXT="from interpreter, :m and import seem to be equivalent" ID="ID_1276815889" CREATED="1413392148459" MODIFIED="1413392165844"/>
<node TEXT="example" ID="ID_1836044469" CREATED="1413390470496" MODIFIED="1418933494386">
<node TEXT="http://learnyouahaskell.com/starting-out#ready-set-go" ID="ID_903478197" CREATED="1412743659471" MODIFIED="1412743659471" LINK="http://learnyouahaskell.com/starting-out#ready-set-go"/>
<node TEXT="&quot;Save this as baby.hs or something. Now navigate to where it&apos;s saved and run ghci from there. Once inside GHCI, do :l baby.&quot;" ID="ID_936298429" CREATED="1412743646931" MODIFIED="1412743648303"/>
<node TEXT="run ghci from a folder with functions defined to be able to use them" ID="ID_1019522346" CREATED="1412743687367" MODIFIED="1412743697098">
<node TEXT="elegant" ID="ID_1452937826" CREATED="1412743701613" MODIFIED="1412743704929"/>
<node TEXT="but can you define them from the interpreter too?" ID="ID_419793837" CREATED="1412743705141" MODIFIED="1412743716200"/>
</node>
</node>
<node TEXT="find the package&apos;s tree of modules on Hackage" ID="ID_1142126066" CREATED="1413390536877" MODIFIED="1413390741020">
<node TEXT="example" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1440391870" CREATED="1413390570240" MODIFIED="1413390571337"/>
<node TEXT="http://hackage.haskell.org/package/hosc" ID="ID_1684453089" CREATED="1413390724820" MODIFIED="1413390724820" LINK="http://hackage.haskell.org/package/hosc"/>
<node TEXT="the &quot;hosc&quot; package has a Modules tree with &quot;Sound.OSC&quot; near the root. &quot;:m Sound.OSC&quot; works to load it." ID="ID_649789278" CREATED="1413390727082" MODIFIED="1413390777660"/>
</node>
<node TEXT="qualified, into interpreter" ID="ID_673047074" CREATED="1413392059547" MODIFIED="1413392062645">
<node TEXT="Prelude Sound.MIDI.IO&gt; import qualified Data.ByteString.Lazy as B&#xa;Prelude Sound.MIDI.IO B&gt;" ID="ID_574315371" CREATED="1413392073385" MODIFIED="1413392074116"/>
</node>
<node TEXT="load package &#x2260; load module" LOCALIZED_STYLE_REF="default" ID="ID_1774027576" CREATED="1412792922652" MODIFIED="1413146721332">
<node TEXT=":set -package midi" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_23163508" CREATED="1412792889231" MODIFIED="1412792893662"/>
<node TEXT=":set -package hos" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1600895994" CREATED="1412792916277" MODIFIED="1412792917714"/>
</node>
<node TEXT="syntax" ID="ID_1661135909" CREATED="1412958241505" MODIFIED="1412958244365">
<node TEXT="works as well for user-defined scripts" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_77881584" CREATED="1412965351872" MODIFIED="1412965359000"/>
<node TEXT="import in script" ID="ID_1804940076" CREATED="1412958488027" MODIFIED="1412958491357">
<node TEXT="import &lt;module name&gt;" ID="ID_1376941545" CREATED="1412958244721" MODIFIED="1412958253131"/>
</node>
<node TEXT="import in interpreter" ID="ID_1111433444" CREATED="1412958492866" MODIFIED="1412958501533">
<node TEXT="ghci&gt; :m + Data.List Data.Map Data.Set" ID="ID_703225914" CREATED="1412958528327" MODIFIED="1412958529034">
<node TEXT="imports three at once" ID="ID_573286439" CREATED="1412958533832" MODIFIED="1412958559624"/>
</node>
</node>
<node TEXT="import some of" ID="ID_141743167" CREATED="1412958589129" MODIFIED="1412958600206">
<node TEXT="import Data.List (nub, sort)" ID="ID_1073898421" CREATED="1412958592801" MODIFIED="1412958593444"/>
</node>
<node TEXT="import most of" ID="ID_226502257" CREATED="1412958611975" MODIFIED="1412958613722">
<node TEXT="import Data.List hiding (nub)" ID="ID_463720624" CREATED="1412958614055" MODIFIED="1412958614650"/>
</node>
<node TEXT="import qualified" ID="ID_1394527025" CREATED="1412958643941" MODIFIED="1412958658502">
<node TEXT="import qualified Data.Map" ID="ID_655707113" CREATED="1412958658995" MODIFIED="1412958660110"/>
<node TEXT="import qualified Data.Map as M" ID="ID_888180678" CREATED="1412958718741" MODIFIED="1412958719073"/>
</node>
</node>
<node TEXT="imports from a script are retained in interpreter" ID="ID_1466100776" CREATED="1412958561492" MODIFIED="1412958568846"/>
<node TEXT="qualified imports" ID="ID_601578800" CREATED="1412958663124" MODIFIED="1412958665606">
<node TEXT="to avoid name conflicts" ID="ID_1495106640" CREATED="1412958693568" MODIFIED="1412958701211"/>
<node TEXT="&quot;if we want to reference Data.Map&apos;s filter function, we have to do Data.Map.filter&quot;" ID="ID_1691360141" CREATED="1412958665859" MODIFIED="1412958693300"/>
</node>
<node TEXT="silent imports" ID="ID_154620989" CREATED="1412958884447" MODIFIED="1412958899754">
<node TEXT="Prelude module exports some functions from Data.List (e.g. map, filter) for convenience" ID="ID_355221359" CREATED="1412958886910" MODIFIED="1412958893532"/>
</node>
<node TEXT="shorten the name" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_662618651" CREATED="1412964624970" MODIFIED="1412964628826">
<node TEXT="import qualified Data.Map as Map" ID="ID_23531813" CREATED="1412963548027" MODIFIED="1412963548606"/>
</node>
<node TEXT="midi, OSC" ID="ID_1258060361" CREATED="1413390473105" MODIFIED="1413390474868">
<node TEXT=":m Sound.MIDI.IO" ID="ID_1625712353" CREATED="1413390490455" MODIFIED="1413390492532"/>
<node TEXT=":m Sound.OSC" ID="ID_757887233" CREATED="1413390492855" MODIFIED="1413390495554"/>
</node>
</node>
<node TEXT="export" ID="ID_1177737658" CREATED="1412969756260" MODIFIED="1418933456861">
<font BOLD="false"/>
<node TEXT="use folders" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_31147372" CREATED="1412965450206" MODIFIED="1412965452095">
<node TEXT="e.g. a folder named Geometry/, with files Cube.hs, Sphere.hs, etc." ID="ID_942764489" CREATED="1412965452774" MODIFIED="1412965537322"/>
<node TEXT="one file in such a folder can import from the others" ID="ID_1939775120" CREATED="1412965533040" MODIFIED="1412965546370">
<node TEXT="it needs to specify the full path, i.e. include the &quot;Geometry.&quot; prefix" ID="ID_1299087213" CREATED="1412965556021" MODIFIED="1412965572559"/>
<node TEXT="e.g. the Geometry.Cube module could include the line &quot;import qualified Geometry.Cuboid as Cuboid&quot;" ID="ID_366656751" CREATED="1412965580572" MODIFIED="1412965596247"/>
</node>
</node>
<node TEXT="a module need not export all of its functions" ID="ID_432087230" CREATED="1412965042981" MODIFIED="1412965053286"/>
<node TEXT="example" ID="ID_1946902162" CREATED="1418933529142" MODIFIED="1418933530088">
<node TEXT="module Shapes  &#xa;( Point(..) &#xa;, Shape(..) &#xa;, surface &#xa;, nudge &#xa;, baseCircle &#xa;, baseRect &#xa;) where" ID="ID_1349743642" CREATED="1412969758219" MODIFIED="1412969758846"/>
<node TEXT="would export Point and Shape, including all their value constructors (the &quot;(...)&quot;), and the 4 functions specified thereafter" ID="ID_88672037" CREATED="1412969761571" MODIFIED="1412969804549"/>
</node>
</node>
<node TEXT="file tree" ID="ID_1020809993" CREATED="1418933438375" MODIFIED="1418933600032">
<node TEXT="modules have been installing to here" ID="ID_1222201286" CREATED="1412751161308" MODIFIED="1412752277278">
<node TEXT="/Users/dopethatwantscash/Library/Haskell/ghc-7.8.3-x86_64/lib" ID="ID_621198690" CREATED="1412751166932" MODIFIED="1412751941467"/>
</node>
<node TEXT="it&apos;s bad on mac" ID="ID_1804812407" CREATED="1412752352819" MODIFIED="1412752359607">
<node TEXT="http://www.haskell.org/haskellwiki/Mac_OS_X_Strike_Force" ID="ID_207833734" CREATED="1412752360010" MODIFIED="1412752360010" LINK="http://www.haskell.org/haskellwiki/Mac_OS_X_Strike_Force"/>
</node>
<node TEXT="mac os file tree advice" ID="ID_954518899" CREATED="1412752491151" MODIFIED="1412752497898">
<node TEXT="http://www.haskell.org/haskellwiki/Mac_OS_X_Common_Installation_Paths" ID="ID_902534064" CREATED="1412752498269" MODIFIED="1412752498269" LINK="http://www.haskell.org/haskellwiki/Mac_OS_X_Common_Installation_Paths"/>
</node>
</node>
</node>
<node TEXT="&gt; insts" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1751976349" CREATED="1418932939565" MODIFIED="1427780367917">
<font BOLD="true"/>
</node>
<node TEXT="= modules, problems, domains" ID="ID_563373962" CREATED="1422085913696" MODIFIED="1422085924232"/>
<node TEXT="Control.Lens" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1467816538" CREATED="1433714122338" MODIFIED="1435564938991">
<node TEXT="internalized" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_594947040" CREATED="1435565000213" MODIFIED="1435565007600">
<node TEXT="Lens&apos; is Lens with 2 instead of 4 type parameters" ID="ID_185366951" CREATED="1433714129569" MODIFIED="1433714137479"/>
<node TEXT="start field names with _ for makeLenses (TemplateHaskell) to make getters and setters for them" ID="ID_1677576808" CREATED="1433714146385" MODIFIED="1433714173024"/>
<node TEXT="(Lens&apos; a b) focuses from a to b, that is into a onto b" ID="ID_1003448627" CREATED="1433714208706" MODIFIED="1433714231498"/>
</node>
<node TEXT="&gt; the three main things?" ID="ID_853965059" CREATED="1435565287364" MODIFIED="1435565295242">
<font BOLD="true"/>
<node TEXT="view" ID="ID_1958986897" CREATED="1435565295954" MODIFIED="1435565297154">
<node TEXT="Lens.view Lens._1 (&quot;goal&quot;, &quot;chaff&quot;)&#xa;== &quot;goal&quot;" ID="ID_1101408251" CREATED="1435565362364" MODIFIED="1435565424244"/>
</node>
<node TEXT="over (modify)" ID="ID_300947471" CREATED="1435565297389" MODIFIED="1435565304370">
<node TEXT="Lens.over Lens._1 (++ &quot;!!!&quot;) (&quot;goal&quot;, &quot;the crowd goes wild&quot;)&#xa;== (&quot;goal!!!&quot;, &quot;the crowd goes wild&quot;)" ID="ID_106668206" CREATED="1435565408181" MODIFIED="1435565434231"/>
</node>
<node TEXT="set" ID="ID_473785814" CREATED="1435565299413" MODIFIED="1435565300068">
<node TEXT="Lens.set   Lens._1   &quot;set&quot;  (&quot;game&quot;, &quot;match&quot;)&#xa;== (&quot;set&quot;, &quot;match&quot;)" ID="ID_1756805339" CREATED="1435565463530" MODIFIED="1436230807312"/>
</node>
</node>
<node TEXT="composition (backwards?)" ID="ID_90650246" CREATED="1433714290802" MODIFIED="1435564998655">
<node TEXT=".one" ID="ID_385238908" CREATED="1433714309066" MODIFIED="1433714310295"/>
<node TEXT="if this" ID="ID_391902029" CREATED="1433714296186" MODIFIED="1433714303896">
<node TEXT="la :: Lens&apos; s x" ID="ID_669676570" CREATED="1433714293272" MODIFIED="1433714293272"/>
<node TEXT="lb :: Lens&apos; x a" ID="ID_623446296" CREATED="1433714293272" MODIFIED="1433714293272"/>
</node>
<node TEXT="then this" ID="ID_1355280101" CREATED="1433714304114" MODIFIED="1435564967945">
<node TEXT="la . lb :: Lens&apos; s a" ID="ID_424276907" CREATED="1433714293274" MODIFIED="1433714293274"/>
</node>
</node>
<node TEXT="(^.) is view as infix" ID="ID_1640418486" CREATED="1433714465506" MODIFIED="1433714545382">
<node TEXT=".one" ID="ID_1209900638" CREATED="1433714487762" MODIFIED="1433714489817"/>
<node TEXT="this" ID="ID_1077366402" CREATED="1433714481450" MODIFIED="1433714484408">
<node TEXT="Meetup { ... } ^. location . _1" ID="ID_140862844" CREATED="1433714479318" MODIFIED="1433714479318"/>
</node>
<node TEXT="will do this" ID="ID_1059392583" CREATED="1433714485553" MODIFIED="1433714487169">
<node TEXT="from the Meetup, find its location, then find the first field of that, and return it" ID="ID_1621241077" CREATED="1433714492410" MODIFIED="1433714512169"/>
</node>
</node>
<node TEXT="lens operator name conventions" ID="ID_1008198316" CREATED="1433714619426" MODIFIED="1433714630295">
<node TEXT="https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/a-little-lens-starter-tutorial#actually-there-are-a-whole-lot-of-operators-in-lens---over-100" ID="ID_194143004" CREATED="1433714631083" MODIFIED="1433714631083" LINK="https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/a-little-lens-starter-tutorial#actually-there-are-a-whole-lot-of-operators-in-lens---over-100"/>
</node>
<node TEXT="excellent tutorial, incompletely read" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1111340162" CREATED="1433714718098" MODIFIED="1433714730448">
<node TEXT="https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/a-little-lens-starter-tutorial" ID="ID_28953030" CREATED="1433714735137" MODIFIED="1433714735137" LINK="https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/a-little-lens-starter-tutorial"/>
<node TEXT="where I started skimming" ID="ID_714131999" CREATED="1433714741258" MODIFIED="1433714757759">
<node TEXT="&quot;... Some examples would be nice&quot;" ID="ID_1260537935" CREATED="1433714725784" MODIFIED="1433714761483"/>
</node>
</node>
</node>
<node TEXT="Data.Function" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_117459223" CREATED="1412962157008" MODIFIED="1413179875860">
<node TEXT="on" ID="ID_636464300" CREATED="1412962160688" MODIFIED="1412962161155">
<node TEXT="f `on` g = \x y -&gt; f (g x) (g y)" ID="ID_97824202" CREATED="1412962201900" MODIFIED="1412962203049"/>
<node TEXT="&quot;(==) `on` (&gt; 0) returns an equality function that looks like \x y -&gt; (x &gt; 0) == (y &gt; 0)&quot;" ID="ID_372122968" CREATED="1412962161487" MODIFIED="1412962168459"/>
</node>
</node>
<node TEXT="Data.List" ID="ID_696298788" CREATED="1412958236937" MODIFIED="1412958238804">
<node TEXT="functions" ID="ID_1879391259" CREATED="1412962428594" MODIFIED="1413179670584">
<node TEXT="mysterious" ID="ID_1489486650" CREATED="1412962494570" MODIFIED="1412962495829">
<node TEXT="\\: list difference" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1082857683" CREATED="1412961405300" MODIFIED="1412961410188">
<node TEXT="not at all set difference" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_956964161" CREATED="1412961749631" MODIFIED="1412961754121"/>
<node TEXT="ghci&gt; [1..10] \\ [2,5,9] &#xa;[1,3,4,6,7,8,10] &#xa;ghci&gt; &quot;Im a big baby&quot; \\ &quot;big&quot; &#xa;&quot;Im a  baby&quot;" ID="ID_1679562638" CREATED="1412961410644" MODIFIED="1412961411326"/>
<node TEXT="Prelude Data.List&gt; [1,1,3]\\[1,1,3]&#xa;[]" ID="ID_739130085" CREATED="1412961689586" MODIFIED="1412961690054"/>
</node>
<node TEXT="union: list union" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_200959780" CREATED="1412961728303" MODIFIED="1412961757495">
<node TEXT="not at all set union" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1646494094" CREATED="1412961739590" MODIFIED="1412961757498"/>
</node>
<node TEXT="intersect" ID="ID_804420528" CREATED="1412961775869" MODIFIED="1412961777190"/>
</node>
<node TEXT="*By functions" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_34311696" CREATED="1412961997462" MODIFIED="1413179655063">
<node TEXT="&quot;When you&apos;re dealing with By functions that take an equality function, you usually do (==) `on` something and when you&apos;re dealing with By functions that take an ordering function, you usually do compare `on` something.&quot;" LOCALIZED_STYLE_REF="default" ID="ID_134291948" CREATED="1412962414339" MODIFIED="1413271382778"/>
<node TEXT="&quot;nubBy, deleteBy, unionBy, intersectBy and groupBy. The difference between them is that the first set of functions use == to test for equality, whereas the By ones also take an equality function&quot;" ID="ID_1207916436" CREATED="1412962000814" MODIFIED="1412962006609"/>
<node TEXT="&quot;sortBy, insertBy, maximumBy and minimumBy take a function that determine if one element is greater, smaller or equal to the other&quot;" ID="ID_119297523" CREATED="1412962290372" MODIFIED="1412962292255"/>
</node>
<node TEXT="generic* functions" ID="ID_344932118" CREATED="1412961913230" MODIFIED="1413179659120">
<node TEXT="&quot;hey could be more generic and usable if they just took any type that&apos;s part of the Integral or Num typeclasses (depending on the functions). They do that for historical reasons. However, fixing that would probably break a lot of existing code. That&apos;s why Data.List has their more generic equivalents, named genericLength, genericTake, genericDrop, genericSplitAt, genericIndex and genericReplicate&quot;" ID="ID_1750015875" CREATED="1412961940188" MODIFIED="1412961942199"/>
</node>
<node TEXT="others" ID="ID_982454004" CREATED="1413179737628" MODIFIED="1413179780459">
<font BOLD="true"/>
<node TEXT="nub :: [a] -&gt; [a]" ID="ID_598776254" CREATED="1412958442103" MODIFIED="1412958451603">
<node TEXT="removes duplicates" ID="ID_335070379" CREATED="1412958443854" MODIFIED="1412958446537"/>
</node>
<node TEXT="intersperse" ID="ID_647716076" CREATED="1412958982912" MODIFIED="1412958985395">
<node TEXT="ghci&gt; intersperse &apos;.&apos; &quot;MONKEY&quot; &#xa;&quot;M.O.N.K.E.Y&quot;" ID="ID_282839792" CREATED="1412958985696" MODIFIED="1412958988997"/>
</node>
<node TEXT="intercalate" ID="ID_1629204432" CREATED="1412959015115" MODIFIED="1412959016918">
<node TEXT="ghci&gt; intercalate &quot; &quot; [&quot;hey&quot;,&quot;there&quot;,&quot;guys&quot;] &#xa;&quot;hey there guys&quot;" ID="ID_1353937286" CREATED="1412959017171" MODIFIED="1412959017761"/>
</node>
<node TEXT="transpose" ID="ID_656242231" CREATED="1412959041523" MODIFIED="1412959042789">
<node TEXT="ghci&gt; transpose [[1,2,3],[4,5,6],[7,8,9]] &#xa;[[1,4,7],[2,5,8],[3,6,9]] &#xa;ghci&gt; transpose [&quot;hey&quot;,&quot;there&quot;,&quot;guys&quot;] &#xa;[&quot;htg&quot;,&quot;ehu&quot;,&quot;yey&quot;,&quot;rs&quot;,&quot;e&quot;]" ID="ID_704557751" CREATED="1412959042994" MODIFIED="1412959043542"/>
</node>
<node TEXT="concat, concatMap" ID="ID_652609245" CREATED="1412959376625" MODIFIED="1412959380117"/>
<node TEXT="and, or" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_457993906" CREATED="1412959380321" MODIFIED="1412959426484"/>
<node TEXT="any, all" ID="ID_905277231" CREATED="1412959450108" MODIFIED="1412959451375">
<node TEXT="ghci&gt; any (==4) [2,3,5,6,1,4] &#xa;True &#xa;ghci&gt; all (&gt;4) [6,9,10] &#xa;True" ID="ID_628324326" CREATED="1412959451724" MODIFIED="1412959452360"/>
</node>
<node TEXT="iterate" ID="ID_1546036034" CREATED="1412959488505" MODIFIED="1412959489763">
<node TEXT="ghci&gt; take 10 $ iterate (*2) 1 &#xa;[1,2,4,8,16,32,64,128,256,512] &#xa;ghci&gt; take 3 $ iterate (++ &quot;haha&quot;) &quot;haha&quot; &#xa;[&quot;haha&quot;,&quot;hahahaha&quot;,&quot;hahahahahaha&quot;]" ID="ID_28373507" CREATED="1412959490016" MODIFIED="1412959490659"/>
</node>
<node TEXT="split" ID="ID_1393251029" CREATED="1412959534731" MODIFIED="1412959536943">
<node TEXT="ghci&gt; splitAt 3 &quot;heyman&quot; &#xa;(&quot;hey&quot;,&quot;man&quot;) &#xa;ghci&gt; splitAt 100 &quot;heyman&quot; &#xa;(&quot;heyman&quot;,&quot;&quot;) &#xa;ghci&gt; splitAt (-3) &quot;heyman&quot; &#xa;(&quot;&quot;,&quot;heyman&quot;)" ID="ID_1892293717" CREATED="1412959537172" MODIFIED="1412959537815"/>
</node>
<node TEXT="takeWhile, dropWhile, span, break" ID="ID_712201111" CREATED="1412959701805" MODIFIED="1412960036126">
<node TEXT="dropWhile" ID="ID_9525922" CREATED="1412959949199" MODIFIED="1412959951394">
<node TEXT="ghci&gt; dropWhile (/=&apos; &apos;) &quot;This is a sentence&quot; &#xa;&quot; is a sentence&quot; &#xa;ghci&gt; dropWhile (&lt;3) [1,2,2,2,3,4,5,4,3,2,1] &#xa;[3,4,5,4,3,2,1]" ID="ID_705781070" CREATED="1412959703573" MODIFIED="1412959704464"/>
</node>
<node TEXT="span returns a (takeWhile, dropWhile)" ID="ID_890427139" CREATED="1412959932033" MODIFIED="1412959947618">
<node TEXT="ghci&gt; let (fw, rest) = span (/=&apos; &apos;) &quot;This is a sentence&quot; in &quot;First word:&quot; ++ fw ++ &quot;, the rest:&quot; ++ rest &#xa;&quot;First word: This, the rest: is a sentence&quot;" ID="ID_1367955678" CREATED="1412959930696" MODIFIED="1412959931356"/>
</node>
<node TEXT="&quot;break p&quot; is &quot;span (not . p)&quot;" ID="ID_352479781" CREATED="1412960037223" MODIFIED="1412960056256"/>
</node>
<node TEXT="sort" ID="ID_1357213759" CREATED="1412960094466" MODIFIED="1412960095053"/>
<node TEXT="group" ID="ID_900035404" CREATED="1412960115152" MODIFIED="1412960116093">
<node TEXT="ghci&gt; group [1,1,1,1,2,2,2,2,3,3,2,2,2,5,6,7] &#xa;[[1,1,1,1],[2,2,2,2],[3,3],[2,2,2],[5],[6],[7]]" ID="ID_1988611589" CREATED="1412960121423" MODIFIED="1412960122098"/>
</node>
<node TEXT="inits, tails" ID="ID_8193236" CREATED="1412960301735" MODIFIED="1412960303402">
<node TEXT="ghci&gt; inits &quot;w00t&quot; &#xa;[&quot;&quot;,&quot;w&quot;,&quot;w0&quot;,&quot;w00&quot;,&quot;w00t&quot;] &#xa;ghci&gt; tails &quot;w00t&quot; &#xa;[&quot;w00t&quot;,&quot;00t&quot;,&quot;0t&quot;,&quot;t&quot;,&quot;&quot;]" ID="ID_1261355826" CREATED="1412960303591" MODIFIED="1412960304306"/>
</node>
<node TEXT="isInfixOf, isPrefixOf, isSuffixOf" ID="ID_1711938374" CREATED="1412960680237" MODIFIED="1412960687384">
<node TEXT="search for (e.g.) substring in string" ID="ID_482894323" CREATED="1412960688188" MODIFIED="1412960696983"/>
</node>
<node TEXT="elem, notElem" ID="ID_1538443033" CREATED="1412960720266" MODIFIED="1412960722340"/>
<node TEXT="partition predicate list" ID="ID_1431785419" CREATED="1412960736072" MODIFIED="1412960748980">
<node TEXT="returns two lists" ID="ID_1959033977" CREATED="1412960749191" MODIFIED="1412960752018"/>
</node>
<node TEXT="find pred list" ID="ID_887218534" CREATED="1412960837822" MODIFIED="1412960841234">
<node TEXT="returns a &quot;Maybe&quot; of the first instance" ID="ID_69572770" CREATED="1412960842214" MODIFIED="1412960854571"/>
</node>
<node TEXT="delete a [a]: deletes the first" ID="ID_1480770255" CREATED="1412961300045" MODIFIED="1412961310591">
<node TEXT="if not present, fails silently, returns the whole thing" ID="ID_1586575997" CREATED="1412961348785" MODIFIED="1412961356811"/>
</node>
<node TEXT="insert: considers order" ID="ID_362544759" CREATED="1412961815569" MODIFIED="1412961847703">
<node ID="ID_1737734851" CREATED="1412961844919" MODIFIED="1412961844919"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      insert :: a -&gt; [a] -&gt; [a]
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node TEXT="some return Maybe" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_708552076" CREATED="1412962462558" MODIFIED="1412962516273">
<node TEXT="elemIndex :: Eq a =&gt; a -&gt; [a] -&gt; Maybe Int&#xa;elemIndices too" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_932385027" CREATED="1412961013007" MODIFIED="1412961071040"/>
<node TEXT="findIndex, findIndices" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1166587896" CREATED="1412961110942" MODIFIED="1412961116502">
<node TEXT="like elem but for predicates" ID="ID_1156157723" CREATED="1412961127743" MODIFIED="1412961132962"/>
<node TEXT="ghci&gt; findIndex (==4) [5,3,2,1,6,4] &#xa;Just 5 &#xa;ghci&gt; findIndex (==7) [5,3,2,1,6,4] &#xa;Nothing" ID="ID_962870890" CREATED="1412961117878" MODIFIED="1412961118636"/>
</node>
</node>
</node>
<node TEXT="Data.Char" ID="ID_1022216567" CREATED="1412962557988" MODIFIED="1412962559519">
<node TEXT="lots of tests: isSpace, isDigit ..." ID="ID_1128329698" CREATED="1412962934946" MODIFIED="1412962950684"/>
<node TEXT="lots of conversions" ID="ID_59766106" CREATED="1412963109817" MODIFIED="1412963113445"/>
<node TEXT="generalCategory" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_13810992" CREATED="1412962971735" MODIFIED="1413179794531">
<node TEXT="is an enumeration on the char type" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_317370842" CREATED="1412963021506" MODIFIED="1413179815867"/>
<node TEXT="implements Eq" LOCALIZED_STYLE_REF="default" ID="ID_1782075251" CREATED="1412963043168" MODIFIED="1413179818631"/>
<node TEXT="there are 31 of them" ID="ID_1535531031" CREATED="1412962983686" MODIFIED="1412962986394"/>
<node TEXT="ghci&gt; map generalCategory &quot; \t\nA9?|&quot; &#xa;[Space,Control,Control,UppercaseLetter,DecimalNumber,OtherPunctuation,MathSymbol]" ID="ID_1684891047" CREATED="1412962975752" MODIFIED="1412962976459"/>
</node>
</node>
<node TEXT="Data.Map" ID="ID_1891977234" CREATED="1412963206657" MODIFIED="1412963208436">
<node TEXT="are python dictionaries: tree-based lookup tables" ID="ID_365238154" CREATED="1412963213345" MODIFIED="1412964594727"/>
<node TEXT="keys must be orderable" ID="ID_925328902" CREATED="1412963800341" MODIFIED="1412963803743"/>
<node TEXT="functions" ID="ID_934257132" CREATED="1412963858679" MODIFIED="1412963860050">
<node TEXT="that return dictionaries" LOCALIZED_STYLE_REF="default" ID="ID_1242835257" CREATED="1412963876885" MODIFIED="1412963951144">
<node TEXT="fromList" ID="ID_665102157" CREATED="1412963860294" MODIFIED="1412963863761"/>
<node TEXT="empty" ID="ID_705535237" CREATED="1412963864246" MODIFIED="1412963865634"/>
<node TEXT="insert" ID="ID_726698764" CREATED="1412963870006" MODIFIED="1412963871009"/>
<node TEXT="singleton" ID="ID_1311078253" CREATED="1412963974076" MODIFIED="1412963975319"/>
</node>
<node TEXT="that handle duplicates" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_586789218" CREATED="1412964518614" MODIFIED="1412964522735">
<node TEXT="fromListWith" LOCALIZED_STYLE_REF="default" ID="ID_1938007012" CREATED="1412964370952" MODIFIED="1412964523590">
<node TEXT="says what to do if a duplicate key appears" ID="ID_301838952" CREATED="1412964375858" MODIFIED="1412964382029"/>
<node TEXT="e.g. this says &quot;concatenate them&quot;" ID="ID_250624839" CREATED="1412964389377" MODIFIED="1412964393500">
<node TEXT="phoneBookToMap :: (Ord k) =&gt; [(k, String)] -&gt; Map.Map k String &#xa;phoneBookToMap xs = Map.fromListWith (\number1 number2 -&gt; number1 ++ &quot;, &quot; ++ number2) xs" ID="ID_1716636465" CREATED="1412964393776" MODIFIED="1412964394298"/>
</node>
<node TEXT="easier: this says &quot;take the biggest&quot;" ID="ID_1581428209" CREATED="1412964480617" MODIFIED="1412964484980">
<node TEXT="ghci&gt; Map.fromListWith max [(2,3),(2,5),(2,100),(3,29),(3,22),(3,11),(4,22),(4,15)] &#xa;fromList [(2,100),(3,29),(4,22)]" ID="ID_270164232" CREATED="1412964485192" MODIFIED="1412964485692"/>
</node>
</node>
<node TEXT="insertWith" LOCALIZED_STYLE_REF="default" ID="ID_1481809917" CREATED="1412964503134" MODIFIED="1412964523798">
<node TEXT="ghci&gt; Map.insertWith (+) 3 100 $ Map.fromList [(3,4),(5,103),(6,339)] &#xa;fromList [(3,104),(5,103),(6,339)]" ID="ID_261566771" CREATED="1412964535748" MODIFIED="1412964536343"/>
</node>
</node>
<node TEXT="lookup (&quot;!!&quot;?)" ID="ID_183683959" CREATED="1412964009512" MODIFIED="1412964028317"/>
<node TEXT="tests" ID="ID_579219613" CREATED="1412963954238" MODIFIED="1412963955601">
<node TEXT="null" ID="ID_1604489797" CREATED="1412963955821" MODIFIED="1412963956633"/>
<node TEXT="size (returns a number)" ID="ID_618793822" CREATED="1412963960902" MODIFIED="1412964006820"/>
<node TEXT="member" ID="ID_1497757641" CREATED="1412964001122" MODIFIED="1412964002013"/>
</node>
</node>
</node>
<node TEXT="Data.Set" ID="ID_1379446047" CREATED="1412964640376" MODIFIED="1412964644227">
<node TEXT="functions" ID="ID_1619443859" CREATED="1412964747598" MODIFIED="1412964749465">
<node TEXT="that return Sets" ID="ID_206621952" CREATED="1412964749638" MODIFIED="1412964751713">
<node TEXT="fromList" ID="ID_1353304447" CREATED="1412964752614" MODIFIED="1412964753921"/>
<node TEXT="intersection" ID="ID_1764158772" CREATED="1412964771820" MODIFIED="1412964773895"/>
<node TEXT="difference" ID="ID_1390242617" CREATED="1412964780428" MODIFIED="1412964781751"/>
<node TEXT="union" ID="ID_485904639" CREATED="1412964786891" MODIFIED="1412964788030"/>
</node>
<node TEXT="tests" ID="ID_587568850" CREATED="1412964892305" MODIFIED="1412964892900">
<node TEXT="is(Proper)SubsetOf" ID="ID_1326693795" CREATED="1412964879938" MODIFIED="1412964884221"/>
</node>
</node>
<node TEXT="are faster than Data.List.nub" ID="ID_189194450" CREATED="1412964930670" MODIFIED="1412964953295">
<node TEXT="but only applicable to orderable things, whereas ub only requires Eq" ID="ID_1957528429" CREATED="1412964936686" MODIFIED="1412964962702"/>
</node>
</node>
<node TEXT="Data.Wave (audio)" LOCALIZED_STYLE_REF="default" ID="ID_1005699438" CREATED="1430454816062" MODIFIED="1430454826823">
<font BOLD="true"/>
<node TEXT="goals" ID="ID_1481536528" CREATED="1430456757415" MODIFIED="1430456758636">
<node TEXT="interval" ID="ID_1035672638" CREATED="1430456774927" MODIFIED="1430456776725">
<node TEXT="has behavior" ID="ID_203339802" CREATED="1430456777583" MODIFIED="1430456779596"/>
</node>
<node TEXT="duration" ID="ID_1702771707" CREATED="1430456780791" MODIFIED="1430456781998">
<node TEXT="intervals map to a global one" ID="ID_244648228" CREATED="1430456791687" MODIFIED="1430456795805"/>
</node>
<node TEXT="waveables" ID="ID_429928629" CREATED="1430457018700" MODIFIED="1430457019926">
<node TEXT="error" ID="ID_591542820" CREATED="1430457022665" MODIFIED="1430457023884"/>
</node>
</node>
<node TEXT="range" ID="ID_862531108" CREATED="1430455174710" MODIFIED="1430455179620">
<node TEXT="= and how to find it" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_748763970" CREATED="1430455182582" MODIFIED="1430455188677"/>
<node TEXT="Prelude Data.WAVE&gt; [minBound, maxBound] :: [WAVESample]" ID="ID_792762742" CREATED="1430455172234" MODIFIED="1430455172234"/>
<node TEXT="[-2147483648,2147483647]" ID="ID_1826927303" CREATED="1430455172234" MODIFIED="1430455172234"/>
</node>
<node TEXT="audio" ID="ID_1182943126" CREATED="1430547006756" MODIFIED="1430547035665"/>
</node>
<node TEXT="Test.HUnit" ID="ID_159498072" CREATED="1422058469835" MODIFIED="1422058472259">
<node TEXT="each test aborts at the first failed assertion" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_735462" CREATED="1422058477972" MODIFIED="1422058514094"/>
</node>
<node TEXT="Record &amp; Lens" ID="ID_1879842025" CREATED="1422084998703" MODIFIED="1427780398472">
<font BOLD="false"/>
<node TEXT="asking on Reddit" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1616645277" CREATED="1422172180145" MODIFIED="1422172186083">
<node TEXT="http://www.reddit.com/r/haskell/comments/2svayz/i_think_ive_nailed_it_ive_solved_the_records/co03emu" ID="ID_1737287601" CREATED="1422172183069" MODIFIED="1422172183069" LINK="http://www.reddit.com/r/haskell/comments/2svayz/i_think_ive_nailed_it_ive_solved_the_records/co03emu"/>
</node>
<node TEXT="Record" ID="ID_1750148105" CREATED="1422170565022" MODIFIED="1422170566475">
<node TEXT="start ghci" ID="ID_1281371578" CREATED="1415127851156" MODIFIED="1422170452491">
<node TEXT="start GHC with this option" ID="ID_710264708" CREATED="1415127857297" MODIFIED="1415127860910">
<node TEXT="ghci -XTemplateHaskell" ID="ID_655148717" CREATED="1415127861191" MODIFIED="1422170435139"/>
</node>
<node TEXT="once in GHCI" ID="ID_184204640" CREATED="1415127862411" MODIFIED="1422170971478">
<node TEXT=":set prompt &quot;ghci &gt; &quot;" ID="ID_374154121" CREATED="1422171399303" MODIFIED="1422171549726"/>
<node TEXT=":m + Language.Haskell.TH" ID="ID_676921186" CREATED="1415127848707" MODIFIED="1422170437139"/>
<node TEXT="{-# LANGUAGE NoImplicitPrelude, QuasiQuotes, DataKinds #-}" ID="ID_192643513" CREATED="1422170971964" MODIFIED="1422170971964"/>
<node TEXT="import BasePrelude" ID="ID_1583332390" CREATED="1422171531488" MODIFIED="1422171532365"/>
<node TEXT="import Record" ID="ID_1402811038" CREATED="1422171169759" MODIFIED="1422171173916"/>
<node TEXT="import Record.Types" ID="ID_1831989750" CREATED="1422171169759" MODIFIED="1422171236925"/>
<node TEXT="import Record.Lens" ID="ID_741329962" CREATED="1422171169759" MODIFIED="1422171240789"/>
</node>
<node TEXT="testing Main" ID="ID_215293363" CREATED="1422171187127" MODIFIED="1422171193340">
<node TEXT=":l Main" ID="ID_242810754" CREATED="1422171293551" MODIFIED="1422171295893"/>
<node TEXT="person :: Person" ID="ID_400974991" CREATED="1422171198127" MODIFIED="1422207685029"/>
<node TEXT="person" ID="ID_1766712847" CREATED="1422207696564" MODIFIED="1422207697457"/>
<node TEXT="getPersonBirthdayYear person" ID="ID_1961453215" CREATED="1422171199439" MODIFIED="1422171206404"/>
</node>
</node>
<node TEXT="requires lenses" ID="ID_1202049009" CREATED="1422170648582" MODIFIED="1422170653555">
<node TEXT="You can only access members of a record using lenses. So instead of" ID="ID_591290327" CREATED="1422085002685" MODIFIED="1422085002685">
<node TEXT="a == b = (myInt a) == (myInt b)" ID="ID_883424907" CREATED="1422085002685" MODIFIED="1422085002685"/>
</node>
<node TEXT="you need" ID="ID_1932131819" CREATED="1422085002685" MODIFIED="1422085002685">
<node TEXT="MyInt a == MyInt b = view [l|myInt|] a == view [l|myInt|] b" ID="ID_808028004" CREATED="1422085002688" MODIFIED="1422085002688"/>
</node>
</node>
<node TEXT="explanation from Nikita" LOCALIZED_STYLE_REF="default" ID="ID_955844314" CREATED="1422063151604" MODIFIED="1423529460641">
<node TEXT=". in response to my quesitons" ID="ID_541611888" CREATED="1423529461222" MODIFIED="1423529471551"/>
<node TEXT="data definitions" ID="ID_1491432292" CREATED="1422063161339" MODIFIED="1422085550752">
<node TEXT="http://www.reddit.com/r/haskell/comments/2svayz/i_think_ive_nailed_it_ive_solved_the_records/" ID="ID_898424335" CREATED="1422063172036" MODIFIED="1422063172036" LINK="http://www.reddit.com/r/haskell/comments/2svayz/i_think_ive_nailed_it_ive_solved_the_records/"/>
<node TEXT="quote" ID="ID_48549059" CREATED="1422063173859" MODIFIED="1422063174761">
<node TEXT="I didn&apos;t include it because it seemed evident. Here is:" ID="ID_1738013763" CREATED="1422063157631" MODIFIED="1422063157631"/>
<node TEXT="data Connection =" ID="ID_1617093304" CREATED="1422063157631" MODIFIED="1422063157631">
<node TEXT="Local [r| {socket :: FilePath} |] |" ID="ID_1314051367" CREATED="1422063157632" MODIFIED="1422063157632"/>
<node TEXT="Remote [r| {hostName :: String, port :: Int} |]" ID="ID_1354413094" CREATED="1422063157632" MODIFIED="1422063157632"/>
</node>
</node>
</node>
<node TEXT="access" ID="ID_1580443622" CREATED="1422084998703" MODIFIED="1422085537941">
<node TEXT="http://www.reddit.com/r/haskell/comments/2svayz/i_think_ive_nailed_it_ive_solved_the_records/cnyzw63" ID="ID_96042060" CREATED="1422067547757" MODIFIED="1422067547757" LINK="http://www.reddit.com/r/haskell/comments/2svayz/i_think_ive_nailed_it_ive_solved_the_records/cnyzw63"/>
<node TEXT="You can only access members of a record using lenses. So instead of" ID="ID_910726543" CREATED="1422085002685" MODIFIED="1422085002685">
<node TEXT="a == b = (myInt a) == (myInt b)" ID="ID_1982377927" CREATED="1422085002685" MODIFIED="1422085002685"/>
</node>
<node TEXT="you need" ID="ID_691110825" CREATED="1422085002685" MODIFIED="1422085002685">
<node TEXT="MyInt a == MyInt b = view [l|myInt|] a == view [l|myInt|] b" ID="ID_1699835606" CREATED="1422085002688" MODIFIED="1422085002688"/>
</node>
</node>
</node>
</node>
<node TEXT="Lens" ID="ID_1467184695" CREATED="1414821691146" MODIFIED="1422170563516">
<font BOLD="false"/>
<node TEXT=". still don&apos;t know" ID="ID_1196070445" CREATED="1422168566187" MODIFIED="1422168569377">
<node TEXT=". Prisms are simpler than Traversals, I think" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1182469979" CREATED="1422168580155" MODIFIED="1422168588053"/>
<node TEXT="Prisms" ID="ID_1962263934" CREATED="1422168569579" MODIFIED="1422168571072"/>
<node TEXT="Traversals" ID="ID_793329280" CREATED="1422168571323" MODIFIED="1422168573113"/>
</node>
<node TEXT="sources" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1835619081" CREATED="1422170610582" MODIFIED="1422170624752">
<node TEXT="Joseph Abramson notes" ID="ID_334805370" CREATED="1422168515355" MODIFIED="1422168519104">
<node TEXT="https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/a-little-lens-starter-tutorial" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_521087577" CREATED="1422168250256" MODIFIED="1422168534281" LINK="https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/a-little-lens-starter-tutorial"/>
<node TEXT="A Little Lens Starter Tutorial" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1813390766" CREATED="1422168519651" MODIFIED="1422168534276"/>
</node>
<node TEXT="SPJ .ppt talk" ID="ID_1188750457" CREATED="1414825731125" MODIFIED="1414955935382">
<node TEXT="https://skillsmatter.com/skillscasts/4251-lenses-compositional-data-access-and-manipulation#showModal?modal-signup-complete" ID="ID_1590241603" CREATED="1414825656989" MODIFIED="1414825656989" LINK="https://skillsmatter.com/skillscasts/4251-lenses-compositional-data-access-and-manipulation#showModal?modal-signup-complete"/>
</node>
</node>
<node TEXT="SPJ notes, to merge" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_833197191" CREATED="1422167540897" MODIFIED="1422170632904">
<node TEXT="a lens lifts a function" ID="ID_934872301" CREATED="1414872391670" MODIFIED="1414872395353">
<node TEXT="I think" ID="ID_1033317136" CREATED="1414872477789" MODIFIED="1414872478744"/>
<node TEXT="if S has a field A, f is a functor, and g: A -&gt; f A, and LN is an appropriate lens (one of type Lens S A), then LN f a s returns an (f s)" ID="ID_314465396" CREATED="1414872399543" MODIFIED="1414872472945"/>
</node>
<node TEXT="lens composition is function composition" ID="ID_634130709" CREATED="1414875702165" MODIFIED="1414875706953">
<node TEXT="it&apos;s not contrived or assumed or imposed; it just works out from the math" ID="ID_1269039497" CREATED="1414875707157" MODIFIED="1414875727935"/>
</node>
<node TEXT="** makeLenses: automates the lens definition process" ID="ID_1001098553" CREATED="1414875795115" MODIFIED="1414875815006">
<node TEXT="input is a data field" ID="ID_1058058730" CREATED="1414875817331" MODIFIED="1414875825350"/>
<node TEXT="weird double-apostrophe notation: (makeLenses &apos;&apos;Person)" ID="ID_1109556787" CREATED="1414875830763" MODIFIED="1414875919719">
<node TEXT="parens needed, I&apos;m guessing, because otherwise it&apos;s ambiguous where the scope of the &apos;&apos; ends" ID="ID_197593507" CREATED="1414875920145" MODIFIED="1414875935676"/>
</node>
<node TEXT="expects the attributes to have underscores" ID="ID_1282120325" CREATED="1414875874826" MODIFIED="1414875885373"/>
<node TEXT="the lenses it creates have the same names, with no underscores" ID="ID_36037458" CREATED="1414875885577" MODIFIED="1414875895045"/>
</node>
<node TEXT="To set, use the Identity functor; for view, use the Const one; for Maybe, IO, etc., use those functors." ID="ID_1751932040" CREATED="1414876293333" MODIFIED="1414876340193">
<node TEXT="I think." ID="ID_569697720" CREATED="1414876421243" MODIFIED="1414876422325"/>
<node TEXT="The use of Const is, I thought, clever. If you&apos;re using a lense from P to Q, when you use &quot;view&quot; you want a Q, not a P. Const discards its P argument and returns the Q." ID="ID_1517320292" CREATED="1414876344139" MODIFIED="1414876420982"/>
</node>
<node TEXT="virtual fields" ID="ID_773318812" CREATED="1414876648317" MODIFIED="1414876650975">
<node TEXT="example: store farenheit, treat as centigrade" ID="ID_1131993426" CREATED="1414876668108" MODIFIED="1414876678520">
<node TEXT="SPJ in his lens video gives this example" ID="ID_1848979628" CREATED="1414876654613" MODIFIED="1414876667360"/>
<node TEXT="data is farenheit" ID="ID_1199579981" CREATED="1414876680228" MODIFIED="1414876684447"/>
<node TEXT="a lens called centigrade permits the application onto that data of functions designed to be performed on centigrade values" ID="ID_730457126" CREATED="1414876684684" MODIFIED="1414876717198"/>
</node>
</node>
<node TEXT="&quot;maintaining invariants&quot; &amp;/or letting a change in one field affect another" ID="ID_450755401" CREATED="1414877040173" MODIFIED="1414877066985">
<node TEXT="example: minutes affect hours" ID="ID_1626886305" CREATED="1414877069701" MODIFIED="1414877111824">
<node TEXT="source" ID="ID_1902746400" CREATED="1414877099277" MODIFIED="1414877099968">
<node TEXT="https://skillsmatter.com/skillscasts/4251-lenses-compositional-data-access-and-manipulation#showModal?modal-signup-complete" ID="ID_483225350" CREATED="1414877088202" MODIFIED="1414877088202" LINK="https://skillsmatter.com/skillscasts/4251-lenses-compositional-data-access-and-manipulation#showModal?modal-signup-complete"/>
<node TEXT="time 43:55" ID="ID_471232305" CREATED="1414877093156" MODIFIED="1414877096888"/>
</node>
<node TEXT="add or subtract enough to the minutes, and the hour should change" ID="ID_1591415777" CREATED="1414877112404" MODIFIED="1414877121911"/>
</node>
</node>
<node TEXT="parameterized lenses &amp; non-record data" ID="ID_1616209754" CREATED="1414877231906" MODIFIED="1414877322375">
<node TEXT=".= example" ID="ID_930419016" CREATED="1414877249818" MODIFIED="1414877254029"/>
<node TEXT=". source" ID="ID_1439943618" CREATED="1414877099277" MODIFIED="1414877256221">
<node TEXT="https://skillsmatter.com/skillscasts/4251-lenses-compositional-data-access-and-manipulation#showModal?modal-signup-complete" ID="ID_1614766728" CREATED="1414877088202" MODIFIED="1414877088202" LINK="https://skillsmatter.com/skillscasts/4251-lenses-compositional-data-access-and-manipulation#showModal?modal-signup-complete"/>
<node TEXT="time 44:50" ID="ID_1847668826" CREATED="1414877093156" MODIFIED="1414877240077"/>
</node>
<node TEXT="a lens parameterized by a key into a map, focusing on the value that key would Maybe return" ID="ID_1861448798" CREATED="1414877256753" MODIFIED="1414877296100"/>
</node>
<node TEXT="* multi-focus lenses are traversals" ID="ID_1516263094" CREATED="1414877960886" MODIFIED="1414877969137">
<node TEXT="SPJ thought this was awesome" ID="ID_1388836572" CREATED="1414877969309" MODIFIED="1414877976233"/>
<node TEXT="requires using Applicatives, which inherit from but are more complex than Functors" ID="ID_1362822669" CREATED="1414878158644" MODIFIED="1414878176725"/>
</node>
</node>
<node TEXT="important functions" ID="ID_1845687949" CREATED="1422167552130" MODIFIED="1422167566439">
<node TEXT="view" ID="ID_1372013468" CREATED="1422167562329" MODIFIED="1422167563111">
<node TEXT="or ^. as infix" ID="ID_1448629463" CREATED="1422168146418" MODIFIED="1422168157018"/>
</node>
<node TEXT="over" ID="ID_277402937" CREATED="1422167567313" MODIFIED="1422167568134"/>
<node TEXT="set" ID="ID_1065287971" CREATED="1422167616554" MODIFIED="1422167617007">
<node TEXT="a special case of over" ID="ID_532194678" CREATED="1422167617265" MODIFIED="1422167623039"/>
</node>
</node>
<node TEXT="composition" ID="ID_474534527" CREATED="1422168002714" MODIFIED="1422168004199">
<node TEXT="if" ID="ID_660363836" CREATED="1422168030322" MODIFIED="1422168030863">
<node ID="ID_764829532" CREATED="1422168031247" MODIFIED="1422168031247"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      la :: Lens' s x
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1058782895" CREATED="1422168031251" MODIFIED="1422168031251"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      lb :: Lens' x a
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="then" ID="ID_1326305340" CREATED="1422168032051" MODIFIED="1422168032679">
<node TEXT="la . lb :: Lens&apos; s a" ID="ID_1592440959" CREATED="1422168020242" MODIFIED="1422168029722"/>
</node>
</node>
<node TEXT="the logic of the operator names" ID="ID_1116220804" CREATED="1422168237003" MODIFIED="1422168242960">
<node TEXT="https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/a-little-lens-starter-tutorial" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_238075390" CREATED="1422168250256" MODIFIED="1422168534281" LINK="https://www.fpcomplete.com/school/to-infinity-and-beyond/pick-of-the-week/a-little-lens-starter-tutorial"/>
<node TEXT="    Operators that begin with ^ are kinds of views. The only example we&apos;ve seen so far is (^.) which is... well, it&apos;s just view exactly.&#xa;    Operators that end with ~ are like over or set. In fact, (.~) == set and (%~) is over.&#xa;    Operators that have . in them are usually somehow &quot;basic&quot;&#xa;    Operators that have % in them usually take functions&#xa;    Operators that have = in them are just like their cousins where = is replaced by ~, but instead of taking the whole object as an argument, they apply their modifications in a State monad." ID="ID_1362038319" CREATED="1422168243691" MODIFIED="1422168245289"/>
</node>
<node TEXT="reading the type" ID="ID_231052887" CREATED="1422170636982" MODIFIED="1422170641051">
<node TEXT="in &quot;Lens s a&quot;, s is what it&apos;s looking for, and a what it&apos;s looking into" ID="ID_931696964" CREATED="1422142619541" MODIFIED="1422142640435"/>
</node>
</node>
</node>
<node TEXT="concur" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_260155764" CREATED="1413520301377" MODIFIED="1427780398470">
<font BOLD="false"/>
<node TEXT="= not a single library" ID="ID_8260072" CREATED="1422085958320" MODIFIED="1422085964117"/>
<node TEXT="functions" ID="ID_1369861958" CREATED="1413580522530" MODIFIED="1413580523910">
<node TEXT="forkIO" ID="ID_132689764" CREATED="1413520375659" MODIFIED="1413520377998">
<node TEXT="in Control.Concurrent" ID="ID_1545953667" CREATED="1413579546202" MODIFIED="1413579547030"/>
<node TEXT="forkIO :: IO () -&gt; IO ThreadId" ID="ID_1656241424" CREATED="1413520400504" MODIFIED="1413520400740"/>
<node TEXT="uses" ID="ID_1865643816" CREATED="1413521223944" MODIFIED="1413579568708">
<node TEXT="simplest: interleave putChar" ID="ID_1188086036" CREATED="1413579569823" MODIFIED="1413579699032">
<node TEXT="import" ID="ID_728322048" CREATED="1413520362388" MODIFIED="1413520362388">
<node TEXT="import Control.Concurrent" ID="ID_92069365" CREATED="1413520362388" MODIFIED="1413520362388"/>
<node TEXT="import Control.Monad" ID="ID_1664255416" CREATED="1413520362388" MODIFIED="1413520362388"/>
<node TEXT="import System.IO" ID="ID_307371818" CREATED="1413520362388" MODIFIED="1413520362388"/>
</node>
<node TEXT="main = do" ID="ID_1295004610" CREATED="1413520362388" MODIFIED="1413520362388">
<node TEXT="hSetBuffering stdout NoBuffering" ID="ID_215790931" CREATED="1413520362388" MODIFIED="1413520362388"/>
<node TEXT="forkIO (replicateM_ 100000 (putChar &apos;A&apos;))" ID="ID_1030379000" CREATED="1413520362388" MODIFIED="1413520362388"/>
<node TEXT="replicateM_ 100000 (putChar &apos;B&apos;)" ID="ID_1676117503" CREATED="1413520362388" MODIFIED="1413520362388"/>
</node>
<node TEXT="uses replicateM_" ID="ID_1976022449" CREATED="1413520520054" MODIFIED="1413520523457">
<node TEXT="which does something and discards the result, returning IO ()" ID="ID_466470974" CREATED="1413520523814" MODIFIED="1413520532050"/>
</node>
<node TEXT="output" ID="ID_1329283732" CREATED="1413520362388" MODIFIED="1413520362388">
<node TEXT="AAAAAAAAABABABABABABABABABABABABABABABABABABABABABABAB" ID="ID_1531402322" CREATED="1413520362388" MODIFIED="1413520362388"/>
<node TEXT="ABABABABABABABABABABABABABABABABABABABABABABABABABABAB" ID="ID_1833945729" CREATED="1413520362388" MODIFIED="1413520362388"/>
<node TEXT="ABABABABABABABABABABABABABABABABABABABABABABABABABABAB" ID="ID_1516742395" CREATED="1413520362388" MODIFIED="1413520362388"/>
<node TEXT="ABABABABABABABABABABABABABABABA" ID="ID_1953943173" CREATED="1413520362388" MODIFIED="1413520362388"/>
</node>
</node>
<node TEXT="new thread per user input" ID="ID_819640372" CREATED="1413521229568" MODIFIED="1413579578171">
<node TEXT="main =&#xa;    forever $ do&#xa;        s &lt;- getLine&#xa;        forkIO $ setReminder s&#xa;setReminder :: String -&gt; IO ()&#xa;setReminder s = ..." ID="ID_575844972" CREATED="1413521262237" MODIFIED="1413521277051"/>
</node>
</node>
</node>
<node TEXT="forever" ID="ID_1539147607" CREATED="1413579441548" MODIFIED="1413579444167">
<node TEXT="in Control.Monad" ID="ID_1535150835" CREATED="1413579459947" MODIFIED="1413579461598"/>
<node TEXT="forever :: Monad m =&gt; m a -&gt; m b" ID="ID_1338660840" CREATED="1413579449267" MODIFIED="1413579449839"/>
<node TEXT="is equiv. to a recursion" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1550011169" CREATED="1413580042469" MODIFIED="1413580344221">
<node TEXT="these are equiv" ID="ID_1988466940" CREATED="1413580347675" MODIFIED="1413580349733"/>
<node TEXT="main =&#xa;  forever $ do&#xa;    s &lt;- getLine           -- &lt;1&gt;&#xa;    forkIO $ setReminder s -- &lt;2&gt;" ID="ID_1366962373" CREATED="1413580055332" MODIFIED="1413580057456"/>
<node TEXT="main = loop&#xa;  where loop = do&#xa;    s &lt;- getLine&#xa;    forkIO $ setReminder s&#xa;    loop" ID="ID_767720614" CREATED="1413580320525" MODIFIED="1413580321057"/>
</node>
</node>
<node TEXT="threadDelay" ID="ID_1724069386" CREATED="1413521116265" MODIFIED="1413521119315">
<node TEXT="threadDelay (10^6 * t)" ID="ID_158280090" CREATED="1413521119768" MODIFIED="1413521120403"/>
<node TEXT="measured in microseconds" ID="ID_1414710831" CREATED="1413521120904" MODIFIED="1413521124531"/>
</node>
</node>
<node TEXT="types" ID="ID_456185115" CREATED="1413580525499" MODIFIED="1413580526182">
<node TEXT="MVar" ID="ID_190237760" CREATED="1413580518587" MODIFIED="1413580519894">
<node TEXT=".= an abstract type" ID="ID_805783389" CREATED="1413580719425" MODIFIED="1414653928933"/>
<node TEXT="in Control.Concurrent" ID="ID_1988462650" CREATED="1413580939358" MODIFIED="1413580941066"/>
<node TEXT="interface" ID="ID_1947372869" CREATED="1413580542426" MODIFIED="1413580544228">
<node TEXT="data MVar a  -- abstract&#xa;&#xa;newEmptyMVar :: IO (MVar a)&#xa;newMVar      :: a -&gt; IO (MVar a)&#xa;takeMVar     :: MVar a -&gt; IO a&#xa;putMVar      :: MVar a -&gt; a -&gt; IO ()" ID="ID_1719551849" CREATED="1413580540033" MODIFIED="1413580540462"/>
</node>
<node TEXT="the blocking symmetry, and chaining" LOCALIZED_STYLE_REF="default" ID="ID_1724844968" CREATED="1413580988625" MODIFIED="1413585126802">
<node TEXT="&quot;take&quot; blocks if empty, and &quot;put&quot; blocks if full" ID="ID_1014290722" CREATED="1413581022605" MODIFIED="1413581032208"/>
<node TEXT="example" ID="ID_478423399" CREATED="1413580999600" MODIFIED="1413581000819">
<node TEXT="code" ID="ID_813056732" CREATED="1413581001896" MODIFIED="1413581002395">
<node TEXT="Marlow/Concurrency/mvar2.hs" ID="ID_1449035594" CREATED="1413581061898" MODIFIED="1413581070803"/>
<node TEXT="main = do&#xa;  m &lt;- newEmptyMVar&#xa;  forkIO $ do putMVar m &apos;x&apos;; putMVar m &apos;y&apos;&#xa;  r &lt;- takeMVar m&#xa;  print r&#xa;  r &lt;- takeMVar m&#xa;  print r" ID="ID_1203604631" CREATED="1413580994880" MODIFIED="1413580995557"/>
</node>
<node TEXT="output" ID="ID_963116841" CREATED="1413581003663" MODIFIED="1413581004514">
<node TEXT="serial" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1417281170" CREATED="1413581010375" MODIFIED="1413581011584"/>
<node TEXT="x" ID="ID_480633764" CREATED="1413581008247" MODIFIED="1413581008898"/>
<node TEXT="y" ID="ID_1069477068" CREATED="1413581009159" MODIFIED="1413581009522"/>
</node>
</node>
</node>
<node TEXT="replace ASAP" LOCALIZED_STYLE_REF="default" ID="ID_626258778" CREATED="1413529455811" MODIFIED="1413585126990">
<node TEXT="lookup (PhoneBookState m) name = do&#xa;  book &lt;- takeMVar m&#xa;  putMVar m book&#xa;  return (Map.lookup name book)" ID="ID_1764343602" CREATED="1413529462626" MODIFIED="1413529463261"/>
<node TEXT="so something else can use it while the rest of this process executes" ID="ID_1604091680" CREATED="1413530033951" MODIFIED="1413530059187"/>
</node>
<node TEXT="dummy MVars" ID="ID_671875068" CREATED="1413581952130" MODIFIED="1413581957741">
<node TEXT="even without holding data, they can coordinate threads" ID="ID_1653113569" CREATED="1413581959098" MODIFIED="1413581975292"/>
<node TEXT="example: logger.hs" ID="ID_1052187956" CREATED="1413587928953" MODIFIED="1413587932284">
<node TEXT="from Marlow/Concurrency" ID="ID_471808528" CREATED="1413587932496" MODIFIED="1413587936995"/>
<node TEXT="code" ID="ID_720868132" CREATED="1413587966101" MODIFIED="1413587966913">
<node TEXT="logStop :: Logger -&gt; IO ()&#xa;logStop (Logger m) = do&#xa;  s &lt;- newEmptyMVar&#xa;  putMVar m (Stop s)&#xa;  takeMVar s" ID="ID_1385370658" CREATED="1413587938720" MODIFIED="1413587939052"/>
</node>
<node TEXT="the block that calls logStop is one thread, and the logger is another. therefore the first must wait for the second to stop before acting like it&apos;s stopped. the MVar &quot;s&quot; that they share allows that: logStop won&apos;t return until it can take () (that is, nothing) from &quot;s&quot;" ID="ID_705264333" CREATED="1413587968246" MODIFIED="1413588121982"/>
</node>
</node>
</node>
</node>
<node TEXT="concepts" ID="ID_1753426417" CREATED="1413580551944" MODIFIED="1413580553779">
<node TEXT="lazy eval can blow things up" ID="ID_1598202679" CREATED="1413530156851" MODIFIED="1413530163630">
<node TEXT="quote, ch 7, marlow&apos;s conc&apos;y" ID="ID_1514873885" CREATED="1413530168730" MODIFIED="1413530176053"/>
<node TEXT="The effect of lazy evaluation here is important to understand. The insert operation had this line:&#xa;&#xa;  putMVar m (Map.insert name number book)&#xa;This places in the MVar the unevaluated expression Map.insert name&#xa;number book. There are both good and bad consequences to this. The benefit is that we don&#x2019;t have to wait for Map.insert to finish before we can unlock the state; as in lookup, the state is only locked very briefly. However, if we were to do many insert operations consecutively, the MVar would build up a large chain of unevaluated expressions, which could create a space leak. As an alternative, we might try:&#xa;&#xa;  putMVar m $! Map.insert name number book&#xa;The $! operator is like the infix apply operator $, but it evaluates the argument strictly before applying the function. The effect is to reverse the two consequences of the lazy version noted previously. Now we hold the lock until Map.insert has completed, but there is no risk of a space leak. To get brief locking and no space leaks, we need to use a trick:&#xa;&#xa;  let book&apos; = Map.insert name number book&#xa;  putMVar m book&apos;&#xa;  seq book&apos; (return ())&#xa;With this sequence, we&#x2019;re storing an unevaluated expression in the MVar, but it is evaluated immediately after the putMVar. The lock is held only briefly, but now the thunk is also evaluated so we avoid building up a long chain of thunks." ID="ID_1840961869" CREATED="1413530164827" MODIFIED="1413530267979"/>
</node>
<node TEXT="&quot;callback&quot;" ID="ID_1742235978" CREATED="1413584838639" MODIFIED="1413584840402">
<node TEXT="example: logger.hs" ID="ID_524126262" CREATED="1413584862949" MODIFIED="1413584989652">
<node TEXT="from Marlow&apos;s Concurrency" ID="ID_1743428741" CREATED="1413584996657" MODIFIED="1413584999660"/>
<node TEXT="consider the Stop constructor for the LogCommand type" ID="ID_1215618443" CREATED="1413584861198" MODIFIED="1413584996301"/>
<node TEXT="it takes an MVar () from the caller" ID="ID_191795806" CREATED="1413584890091" MODIFIED="1413584898965"/>
<node TEXT="the MVar is replaced when the stop executes" ID="ID_1467134116" CREATED="1413584900393" MODIFIED="1413584922266"/>
<node TEXT="the caller can be sure the stop has executed before executing code that needs it to have stopped by waiting for the (data-free) MVar" ID="ID_1189552120" CREATED="1413584930439" MODIFIED="1413584980165"/>
</node>
</node>
</node>
<node TEXT="questions" ID="ID_1797641572" CREATED="1413581645392" MODIFIED="1413581646273">
<node TEXT="MVar holds an immutable data type, but is itself mutable?" ID="ID_861246475" CREATED="1413581646696" MODIFIED="1413581653208">
<node TEXT="I suspect it has something to do with the fact that the MVar interface involves a lot of the IO monad." ID="ID_880356" CREATED="1413581813822" MODIFIED="1413581831512"/>
</node>
</node>
<node TEXT="ghc and" ID="ID_980809626" CREATED="1413697445587" MODIFIED="1413697466916">
<node TEXT="saved somewhere" ID="ID_59608790" CREATED="1413697468673" MODIFIED="1413697471180"/>
</node>
<node TEXT="_ inapp" ID="ID_362249031" CREATED="1414959316089" MODIFIED="1418933242874">
<node TEXT="Atom" ID="ID_567041338" CREATED="1413689517852" MODIFIED="1413703756911">
<node TEXT="not appropriate, because" ID="ID_935872387" CREATED="1414959326624" MODIFIED="1418933236756">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1187829601" STARTINCLINATION="52;0;" ENDINCLINATION="52;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="for embedded systems" ID="ID_1187829601" CREATED="1414959343136" MODIFIED="1414959348980"/>
<node TEXT="rn" ID="ID_1016467630" CREATED="1414959334904" MODIFIED="1414959341068">
<node TEXT="external" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_54717321" CREATED="1413691593305" MODIFIED="1413691613258">
<node TEXT="https://hackage.haskell.org/package/atom" ID="ID_665944214" CREATED="1413689232634" MODIFIED="1413689232634" LINK="https://hackage.haskell.org/package/atom"/>
<node TEXT="might help learn STM" ID="ID_1311637761" CREATED="1413691562416" MODIFIED="1413691584151">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1688821322" STARTINCLINATION="80;0;" ENDINCLINATION="80;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="links in from reading" ID="ID_1328275196" CREATED="1413697180114" MODIFIED="1413697184758"/>
</node>
<node TEXT="= realtime scheduler haskell" ID="ID_236833698" CREATED="1413689221840" MODIFIED="1413691608787"/>
<node TEXT="hierarchy of rules" ID="ID_1972445330" CREATED="1413691666475" MODIFIED="1413691668902"/>
<node TEXT="&quot;phase&quot;: allows some bound-specified timing inaccuracy" ID="ID_584324133" CREATED="1413691680418" MODIFIED="1413691739924"/>
<node TEXT="&quot;period&quot;: rule (&quot;loop&quot;) speed" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1556318710" CREATED="1413691872696" MODIFIED="1413691993314">
<node TEXT="language I do not understand" ID="ID_973344844" CREATED="1413691990224" MODIFIED="1413691996609"/>
<node TEXT="&quot;Rule period is bound by the closest period assertion. For example:&quot;&#xa;&#xa;in &quot;period 10 $ period 2 a&quot;, rules in &apos;a&apos; have a period of 2, not 10." ID="ID_668628380" CREATED="1413691996887" MODIFIED="1413692026615"/>
</node>
<node TEXT="?, they use the word" ID="ID_1818036176" CREATED="1413691759450" MODIFIED="1413691771188">
<node TEXT="scope" ID="ID_1864511372" CREATED="1413691757939" MODIFIED="1413691759181"/>
<node TEXT="rule" ID="ID_754632398" CREATED="1413691780360" MODIFIED="1413691781683"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="GUI" ID="ID_1867549362" CREATED="1417252708051" MODIFIED="1427780398469">
<font BOLD="false"/>
<node TEXT="wxHaskell" ID="ID_520463213" CREATED="1422669479629" MODIFIED="1422671018868">
<font BOLD="true"/>
<node TEXT="see comp build/../&quot;al: haskell gui&quot;" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_227719719" CREATED="1423042207612" MODIFIED="1423042225526"/>
<node TEXT="! latest wx examples" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_375630663" CREATED="1427831268486" MODIFIED="1430885341721">
<node TEXT="https://github.com/wxHaskell/wxHaskell/tree/master/samples/wx" ID="ID_533082449" CREATED="1427831260882" MODIFIED="1427831260882" LINK="https://github.com/wxHaskell/wxHaskell/tree/master/samples/wx"/>
</node>
<node TEXT="ref, hackage" ID="ID_1188286773" CREATED="1422669496053" MODIFIED="1424122381527">
<node TEXT="https://hackage.haskell.org/package/wx" ID="ID_1767206173" CREATED="1422669495327" MODIFIED="1422669495327" LINK="https://hackage.haskell.org/package/wx"/>
</node>
<node TEXT="reading the lib" ID="ID_1058188370" CREATED="1422669501461" MODIFIED="1422669502907">
<node TEXT="?" ID="ID_1162478813" CREATED="1422676845667" MODIFIED="1422676849426">
<node TEXT="varCreate used without importing?" ID="ID_1578605992" CREATED="1422676858299" MODIFIED="1422676864066">
<node TEXT="https://www.haskell.org/haskellwiki/WxHaskell/Quickstart" ID="ID_1992664397" CREATED="1422676864792" MODIFIED="1422676867905" LINK="https://www.haskell.org/haskellwiki/WxHaskell/Quickstart"/>
<node TEXT="that test program, &quot;BounceBalls&quot;, uses the function varCreate" ID="ID_1381042493" CREATED="1422676868213" MODIFIED="1422676950502"/>
<node TEXT="when I search for it in my wx libraries (egrep &quot;^varCreate\W&quot; . -R), I find it only here" ID="ID_471782122" CREATED="1422676881693" MODIFIED="1422676935336"/>
<node TEXT="/Graphics/UI/WXCore/Types.hs" ID="ID_1645387418" CREATED="1422676936203" MODIFIED="1422676937092"/>
<node TEXT="but BounceBalls only imports Graphics.UI.WX" ID="ID_42116025" CREATED="1422676938204" MODIFIED="1422676966227"/>
</node>
<node TEXT="Window is the only Paint instance" ID="ID_1159515064" CREATED="1423272206351" MODIFIED="1423272219934">
<node TEXT="and Window is a type, not a class" ID="ID_1068306079" CREATED="1423272220973" MODIFIED="1423272226716"/>
</node>
</node>
<node TEXT="classes" ID="ID_1176727283" CREATED="1422669551469" MODIFIED="1422669556770">
<node TEXT="DC = &quot;Device Context&quot;" ID="ID_1205462545" CREATED="1422669556981" MODIFIED="1422669560491">
<node TEXT="like a paintbrush" ID="ID_670745842" CREATED="1422669606589" MODIFIED="1422669611372"/>
</node>
<node TEXT="Event" ID="ID_1238220947" CREATED="1422669849093" MODIFIED="1422669849955">
<node TEXT="They &quot;Define event handling.&quot;" ID="ID_645093059" CREATED="1422670409490" MODIFIED="1422670412119"/>
<node TEXT="reading the type sig" ID="ID_1030983168" CREATED="1422669923957" MODIFIED="1422670431141">
<node TEXT=". quote" ID="ID_354567831" CREATED="1422670432527" MODIFIED="1422670434028"/>
<node TEXT="Events are parametrised by the widget that can correspond to a certain event and the type of the event handler. For example, the resize event has type:" ID="ID_687555520" CREATED="1422669922958" MODIFIED="1422670408716"/>
<node TEXT="Reactive w =&gt; Event w (IO ())" ID="ID_1858885370" CREATED="1422669922958" MODIFIED="1422669922958"/>
</node>
<node TEXT="use &quot;on&quot; to turn it into an Attr" ID="ID_990803613" CREATED="1422669927222" MODIFIED="1422669932331">
<node TEXT="on :: Event w a -&gt; Attr w a" ID="ID_1310099083" CREATED="1422669946885" MODIFIED="1422669953908"/>
</node>
</node>
<node TEXT="Paint" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_803993255" CREATED="1422670712855" MODIFIED="1422670714850">
<node TEXT="in WX.Event" ID="ID_168021646" CREATED="1422670720910" MODIFIED="1422670723774"/>
<node TEXT="canvas-like objects" ID="ID_1491243506" CREATED="1422670724521" MODIFIED="1422670730702"/>
</node>
</node>
<node TEXT="types" ID="ID_826786849" CREATED="1422671468847" MODIFIED="1422671470062">
<node TEXT="Object" ID="ID_419566422" CREATED="1422671471092" MODIFIED="1422671472558">
<node TEXT="WX.Types" ID="ID_1787372943" CREATED="1422671569464" MODIFIED="1422671572768"/>
</node>
<node TEXT="Color" ID="ID_1888923735" CREATED="1422671472760" MODIFIED="1422671474302">
<node TEXT="WX.Types" ID="ID_344199960" CREATED="1422671569464" MODIFIED="1422671572768"/>
</node>
<node TEXT="Id" ID="ID_1778491161" CREATED="1422671490167" MODIFIED="1422671491542">
<node TEXT="WX.Types" ID="ID_738308900" CREATED="1422671569464" MODIFIED="1422671572768"/>
<node TEXT="Integer, used to identify widgets" ID="ID_1747611326" CREATED="1422671492256" MODIFIED="1422671498758"/>
<node TEXT="user can explicitly ask for a window&apos;s" ID="ID_1771741671" CREATED="1422671498951" MODIFIED="1422671505015"/>
<node TEXT="user can ask for an unused one, using idAny" ID="ID_194064317" CREATED="1422671505239" MODIFIED="1422671513446"/>
</node>
<node TEXT="EventId" ID="ID_1737011166" CREATED="1422671528791" MODIFIED="1422671530991">
<node TEXT="WX.Types" ID="ID_417108102" CREATED="1422671569464" MODIFIED="1422671572768"/>
</node>
<node TEXT="Frame" ID="ID_17029009" CREATED="1422744704897" MODIFIED="1422744705941">
<node TEXT="=toplevel" ID="ID_202802907" CREATED="1422744708099" MODIFIED="1422744710212"/>
</node>
<node TEXT="MDIFrame" ID="ID_1354513966" CREATED="1422744814362" MODIFIED="1422744816729"/>
<node TEXT="Point" ID="ID_185676213" CREATED="1422671566879" MODIFIED="1422671568206">
<node TEXT="WX.Types" ID="ID_1092864053" CREATED="1422671569464" MODIFIED="1422671572768"/>
</node>
<node TEXT="Size" ID="ID_1588348230" CREATED="1422671602648" MODIFIED="1422671603559">
<node TEXT="WX.Types" ID="ID_1749441875" CREATED="1422671569464" MODIFIED="1422671572768"/>
</node>
<node TEXT="Vector" ID="ID_1985581458" CREATED="1422671610823" MODIFIED="1422671611780">
<node TEXT="WX.Types" ID="ID_729227285" CREATED="1422671569464" MODIFIED="1422671572768"/>
</node>
<node TEXT="Rect" ID="ID_806792617" CREATED="1422671640487" MODIFIED="1422671641430">
<node TEXT="WX.Types" ID="ID_669277536" CREATED="1422671569464" MODIFIED="1422671572768"/>
</node>
<node TEXT="Form" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1257489728" CREATED="1422676315923" MODIFIED="1422676320048">
<node TEXT="something that holds other widgets" ID="ID_151778173" CREATED="1422676328939" MODIFIED="1422743366252"/>
<node TEXT="WX.Layout" ID="ID_1269381248" CREATED="1422676332027" MODIFIED="1422676337074"/>
</node>
<node TEXT="Window" ID="ID_1552482958" CREATED="1422744195837" MODIFIED="1422744197354"/>
</node>
<node TEXT="wx libs" ID="ID_32707739" CREATED="1422669621413" MODIFIED="1422672515414">
<font BOLD="true"/>
<node TEXT="order to read them in" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_362750516" CREATED="1422670971503" MODIFIED="1422670975778">
<node TEXT="view source, start from ones that import (ideally zero) other WX libs" ID="ID_912038658" CREATED="1422670977783" MODIFIED="1422670998878"/>
</node>
<node TEXT="Attr" ID="ID_1166802257" CREATED="1422672071354" MODIFIED="1422672076727">
<node TEXT="= WX.Attributes" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1367099288" CREATED="1422672082557" MODIFIED="1422672092776"/>
<node TEXT="Attr (what has it) (what it says)" ID="ID_348484506" CREATED="1422672097926" MODIFIED="1422672122258">
<node TEXT=".quote" ID="ID_372740126" CREATED="1422672124341" MODIFIED="1422672127173"/>
<node TEXT="Widgets w can have attributes of type a represented by the type Attr w a" ID="ID_1043310325" CREATED="1422672078172" MODIFIED="1422672078172"/>
</node>
<node TEXT="If the type &quot;Attr w a&quot; exists, then every w has one." ID="ID_1299394068" CREATED="1422672159377" MODIFIED="1422672201584">
<node TEXT="that is, every w has an Attr w a" ID="ID_824784160" CREATED="1422672203426" MODIFIED="1422672210410"/>
</node>
<node TEXT="Prop w = &quot;an Attr w a associated with a value&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1179063947" CREATED="1422672274366" MODIFIED="1422672305455">
<node TEXT="huh?" ID="ID_120882936" CREATED="1422672306127" MODIFIED="1422672307324"/>
<node TEXT="Why is &quot;a&quot; not a type variable of Prop?" ID="ID_1875923425" CREATED="1422743442101" MODIFIED="1422743458283"/>
<node TEXT="I guess this means, for instance, &quot;size&quot; is an attribute of a window, and &quot;size 300 pixels&quot; is a property." ID="ID_636634012" CREATED="1422743405915" MODIFIED="1422743427098"/>
</node>
</node>
<node TEXT="Classes" ID="ID_1638658274" CREATED="1422672628407" MODIFIED="1422673064242">
<font BOLD="true"/>
<node TEXT="Border" ID="ID_887840913" CREATED="1422672633113" MODIFIED="1422672634228"/>
<node TEXT="Bordered" ID="ID_529652978" CREATED="1422672754293" MODIFIED="1422672755775"/>
<node TEXT="Textual" ID="ID_1009156090" CREATED="1422672682024" MODIFIED="1422672683322"/>
<node TEXT="Literate (has font)" ID="ID_1323282177" CREATED="1422672702883" MODIFIED="1422672706134"/>
<node TEXT="Dimensions (has size)" ID="ID_285552272" CREATED="1422672718665" MODIFIED="1422672725134"/>
<node TEXT="Colored" ID="ID_814944237" CREATED="1422672736134" MODIFIED="1422672737472"/>
<node TEXT="Visible" ID="ID_1945118503" CREATED="1422672744811" MODIFIED="1422672745989"/>
<node TEXT="Child" ID="ID_168139143" CREATED="1422672760935" MODIFIED="1422672762074"/>
<node TEXT="Parent" ID="ID_1180733623" CREATED="1422672775038" MODIFIED="1422672775958"/>
<node TEXT="Closeable" ID="ID_1946344548" CREATED="1422672832157" MODIFIED="1422672833493"/>
<node TEXT="Selection" ID="ID_1246953400" CREATED="1422672838820" MODIFIED="1422672840187"/>
<node TEXT="Selections" ID="ID_1101073204" CREATED="1422672851459" MODIFIED="1422672853018"/>
<node TEXT="Items" ID="ID_249468859" CREATED="1422672857641" MODIFIED="1422672858614"/>
<node TEXT="Able (can be disabled)" ID="ID_962925664" CREATED="1422672865903" MODIFIED="1422743489701"/>
<node TEXT="Help" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1759319485" CREATED="1422672879039" MODIFIED="1422672882432">
<node TEXT="has help text, inc. popup" ID="ID_1988704444" CREATED="1422672882966" MODIFIED="1422672888427"/>
</node>
<node TEXT="Tipped" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_6393074" CREATED="1422672893261" MODIFIED="1422672896224">
<node TEXT="has tooltip" ID="ID_894263148" CREATED="1422672897502" MODIFIED="1422672900764"/>
</node>
<node TEXT="Styled" ID="ID_93605813" CREATED="1422672924656" MODIFIED="1422672928610">
<node TEXT="style is a bitmask" ID="ID_33814062" CREATED="1422672933487" MODIFIED="1422672937240"/>
</node>
<node TEXT="Framed" ID="ID_1017247085" CREATED="1422672942263" MODIFIED="1422672943456"/>
<node TEXT="Checkable" ID="ID_1507532445" CREATED="1422672962365" MODIFIED="1422672964280"/>
<node TEXT="Dockable" ID="ID_1596538691" CREATED="1422672967560" MODIFIED="1422672969771"/>
<node TEXT="Pictured (has one)" ID="ID_1309504771" CREATED="1422672973716" MODIFIED="1422672979099"/>
<node TEXT="Valued (has one)" ID="ID_1278541059" CREATED="1422672987242" MODIFIED="1422672992014"/>
<node TEXT="Sized (has one)" ID="ID_1983034824" CREATED="1422673005949" MODIFIED="1422673016800"/>
<node TEXT="? HasDefault" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1493060200" CREATED="1422673033804" MODIFIED="1422743505696"/>
</node>
<node TEXT="Controls" ID="ID_1484667144" CREATED="1422677103115" MODIFIED="1422743517275">
<font BOLD="true"/>
<node TEXT="data Align" ID="ID_706751560" CREATED="1422677110028" MODIFIED="1422677112195"/>
<node TEXT="class Aligned" ID="ID_882951324" CREATED="1422677117676" MODIFIED="1422677120024"/>
<node TEXT="data Wrap" ID="ID_1478049590" CREATED="1422677128828" MODIFIED="1422677142934">
<node TEXT="wrap mode" ID="ID_1649004009" CREATED="1422677143411" MODIFIED="1422677146347"/>
</node>
<node TEXT="class Wrapped" ID="ID_650006747" CREATED="1422677164076" MODIFIED="1422677166336"/>
<node TEXT="class Sorted" ID="ID_225576325" CREATED="1422677170835" MODIFIED="1422677174041">
<node TEXT="widgets can have sorted contents" ID="ID_1539754595" CREATED="1422677178860" MODIFIED="1422677186944"/>
</node>
<node TEXT="type Panel a = Window (CPanel a)" ID="ID_1569891011" CREATED="1422677196876" MODIFIED="1422677206641">
<node TEXT="normally a container for controls" ID="ID_1706774095" CREATED="1422677213915" MODIFIED="1422677217747"/>
</node>
<node TEXT="type Notebook a = Control (CNotebook a)" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_331310835" CREATED="1422677249308" MODIFIED="1422677776607">
<node TEXT="for complex layouts?" ID="ID_545628242" CREATED="1422677286820" MODIFIED="1422677292115"/>
</node>
<node TEXT="TextCtrl" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_86762194" CREATED="1422677296211" MODIFIED="1422677322856"/>
<node TEXT="Button, CheckBox, ComboBox, ListBox, RadioBox, SpinCtrl, Slider, Gauge, ToggleButton" ID="ID_853541175" CREATED="1422677323059" MODIFIED="1422677527808">
<font BOLD="true"/>
</node>
<node TEXT="TreeCtrl, ListCtrl" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_929723736" CREATED="1422677469220" MODIFIED="1422677529883"/>
<node TEXT="StaticText" ID="ID_1401392541" CREATED="1422677609595" MODIFIED="1422677612946"/>
<node TEXT="type Choice a = Control (CChoice a)" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1742253704" CREATED="1422677334220" MODIFIED="1422677772969"/>
<node TEXT="SplitterWindow" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_175416889" CREATED="1422677716020" MODIFIED="1422677740753"/>
<node TEXT="ImageList" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1893105917" CREATED="1422677767708" MODIFIED="1422677770069"/>
<node TEXT="MediaCtrlBackend" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_538255779" CREATED="1422677804068" MODIFIED="1422677805840"/>
<node TEXT="StyledTextCtrl" ID="ID_1485002836" CREATED="1422677818204" MODIFIED="1422677818946"/>
<node TEXT="PropertyGrid" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_546966431" CREATED="1422677826628" MODIFIED="1422677835135"/>
</node>
<node TEXT="Draw" ID="ID_597006738" CREATED="1422669623686" MODIFIED="1422669624706">
<node TEXT="drawng functions -- circle, line, etc." ID="ID_1745548500" CREATED="1422669626117" MODIFIED="1422669689976"/>
<node TEXT="WX.Types also has such things" ID="ID_1797574271" CREATED="1422671584607" MODIFIED="1422671593141"/>
</node>
<node TEXT="Events" ID="ID_951691305" CREATED="1422670581647" MODIFIED="1422744640952">
<node TEXT="propogate events" ID="ID_1199286701" CREATED="1422670588215" MODIFIED="1422670590894">
<node TEXT=".quote, WX.Event" ID="ID_710145095" CREATED="1422670592191" MODIFIED="1422670598855"/>
<node TEXT="call propagateEvent (or skipCurrentEvent) whenever you do not process the event yourself in an event handler. This propagates the event to the parent event handlers and give them a chance to handle the event in an appropiate way" ID="ID_732809288" CREATED="1422670586837" MODIFIED="1422670586837"/>
</node>
<node TEXT="&quot;filters&quot; to (get?) keyboard, mouse input" ID="ID_1714065423" CREATED="1422670770735" MODIFIED="1422670799810"/>
</node>
<node TEXT="Frame" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_853850167" CREATED="1422744996133" MODIFIED="1422744998515">
<node TEXT="switch focus among frames" ID="ID_1187549995" CREATED="1422744998997" MODIFIED="1422745002416"/>
<node TEXT="nest multiple windows into one parent (&quot;MDI&quot;, &quot;Multiple Document Interface&quot;)" ID="ID_943587483" CREATED="1422745002640" MODIFIED="1422745020148"/>
</node>
<node TEXT="Types" ID="ID_1236849286" CREATED="1422671031800" MODIFIED="1422671032732">
<node TEXT="defines the Object type" ID="ID_1617449341" CREATED="1422671392447" MODIFIED="1422671404420"/>
<node TEXT="explains how phantom types indicate inheritance" ID="ID_255981471" CREATED="1422671405663" MODIFIED="1422671426823"/>
</node>
<node TEXT="Layout" ID="ID_93741456" CREATED="1422676273043" MODIFIED="1422676274363">
<node TEXT="&quot;just re-exports ... WXCore.Layout&quot;" ID="ID_1456261515" CREATED="1422676282243" MODIFIED="1422676296818"/>
<node TEXT="see also WX.Controls" ID="ID_1578517992" CREATED="1422677256203" MODIFIED="1422677263082"/>
</node>
<node TEXT="Media (inc. sound)" ID="ID_569565936" CREATED="1422676533883" MODIFIED="1422676614406">
<node TEXT="sight and sound" ID="ID_1878658051" CREATED="1422676540523" MODIFIED="1422676548092"/>
</node>
<node TEXT="TopLevelWindow" ID="ID_1853050887" CREATED="1422744451501" MODIFIED="1422744454300">
<node TEXT="&quot;o encapsulate some of the common functionality between the Dialog and Frame modules.&quot;" ID="ID_1767833303" CREATED="1422744602399" MODIFIED="1422744605206"/>
</node>
<node TEXT="Variable" ID="ID_585434997" CREATED="1422677036899" MODIFIED="1422677039819">
<node TEXT="very small" ID="ID_548686747" CREATED="1422677040411" MODIFIED="1422677042570"/>
</node>
<node TEXT="Window" ID="ID_1509551941" CREATED="1422744215506" MODIFIED="1422744217721">
<node TEXT="find immediate and root parent" ID="ID_541838044" CREATED="1422744402009" MODIFIED="1422744410959"/>
<node TEXT="scrolling, tab traversal" ID="ID_760841388" CREATED="1422744415421" MODIFIED="1422744418858"/>
</node>
<node TEXT="unread, not press" LOCALIZED_STYLE_REF="default" ID="ID_50217435" CREATED="1422743604255" MODIFIED="1423271762382">
<font BOLD="true"/>
<node TEXT=". with no giant tutorial passages" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1947997385" CREATED="1423271740801" MODIFIED="1423271744427"/>
<node TEXT="dialog" ID="ID_1550784750" CREATED="1422743607082" MODIFIED="1422743610456"/>
<node TEXT="menu" ID="ID_1525144308" CREATED="1422743626597" MODIFIED="1422743627570"/>
<node TEXT="timer" ID="ID_294968245" CREATED="1422743627769" MODIFIED="1422743628397"/>
</node>
</node>
<node TEXT="wxcore" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_396384921" CREATED="1422670367847" MODIFIED="1422673504272">
<node TEXT="extens" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_629102660" CREATED="1422673586925" MODIFIED="1422673597783">
<node TEXT="I hope, I can ignore most of these, but at least WXCore.Layout is necessary -- WX.Layout refers the reader to it." LOCALIZED_STYLE_REF="default" ID="ID_964368086" CREATED="1422673506408" MODIFIED="1422673591384"/>
</node>
<node TEXT="WXCore.Layout" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1572715631" CREATED="1422673539607" MODIFIED="1422676279930">
<node TEXT="includes explanation" ID="ID_861320913" CREATED="1422676191771" MODIFIED="1422676195489"/>
<node TEXT="grid, stretch, resizeable, etc." ID="ID_862451375" CREATED="1422673841096" MODIFIED="1422674013155"/>
</node>
<node TEXT="WXCore.WxcClassTypes" ID="ID_406199804" CREATED="1422673676349" MODIFIED="1422673681736">
<node TEXT="where Haskell mirrors the WX C library, I think" ID="ID_1420074097" CREATED="1422673683304" MODIFIED="1422673702260"/>
</node>
</node>
<node TEXT="pitfalls" ID="ID_800632085" CREATED="1422670488135" MODIFIED="1422670489263">
<node TEXT="&quot;Event filters&quot; can conflict" ID="ID_1142384735" CREATED="1422670489455" MODIFIED="1422670500719">
<node TEXT=".quote, WX.Event" ID="ID_1618811961" CREATED="1422670512111" MODIFIED="1422670533574"/>
<node TEXT="For example, the following program makes sense:&#xa;&#xa;set w [on click := ..., on drag := ...]&#xa;&#xa;But in the following program, only the handler for mouse will be called:&#xa;&#xa;set w [on click := ..., on mouse := ...]" ID="ID_1613820055" CREATED="1422670509646" MODIFIED="1422670510978"/>
</node>
<node TEXT="garbage coll" ID="ID_351026212" CREATED="1422671310935" MODIFIED="1422671330670">
<node TEXT="quote, WX.Types" ID="ID_365485953" CREATED="1422671332480" MODIFIED="1422671342864">
<node TEXT="Objects are not automatically deleted. Normally you can use a delete function like windowDelete to delete an object. However, almost all objects in the wxWidgets library are automatically deleted by the library. The only objects that should be used with care are resources as bitmaps, fonts and brushes." ID="ID_1705848851" CREATED="1422671334206" MODIFIED="1422671334206"/>
</node>
</node>
<node TEXT="finding instances and inheritance" ID="ID_1607090196" CREATED="1422672638689" MODIFIED="1422672648862">
<node TEXT=".q WX.Classes" ID="ID_1973143926" CREATED="1422672656061" MODIFIED="1422672660018"/>
<node TEXT="Sometimes it is hard to find what attributes a certain widget supports since the instance definitions might be on some class higher in the hierarchy. For example, many instances are defined for Window a -- this means that all those attributes are applicable to any kind of Window, i.e. frames, buttons, panels etc. However, these attributes will not be explicitly listed at the type definitions of those classes." ID="ID_816950404" CREATED="1422672660466" MODIFIED="1422672662287"/>
</node>
</node>
<node TEXT="cool or handy" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_1356310603" CREATED="1422672801871" MODIFIED="1422744233750">
<node TEXT="clipChildren" ID="ID_1975196352" CREATED="1422672803017" MODIFIED="1422672804759">
<node TEXT="Reduce flicker by not redrawing the background under child controls." ID="ID_1754662262" CREATED="1422672814979" MODIFIED="1422672819440"/>
</node>
<node TEXT="TreeCtrl" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_589852221" CREATED="1422677428540" MODIFIED="1422677493275"/>
<node TEXT="refit" ID="ID_1342797360" CREATED="1422744237652" MODIFIED="1422744238696">
<node TEXT="&quot;Ensure that a widget is refitted inside a window when its size changes, for example when the text of a staticText control changes. (calls windowReFit) &quot;" ID="ID_1443891794" CREATED="1422744262410" MODIFIED="1422744264264"/>
</node>
<node TEXT="MDIFrame" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_312565028" CREATED="1422744814362" MODIFIED="1423271788165">
<node TEXT="in Graphics.UI.WX.Frame" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1786677660" CREATED="1423271793223" MODIFIED="1423271818743"/>
<node TEXT="&quot;multiple document interface&quot;" ID="ID_102375184" CREATED="1422744825407" MODIFIED="1422744836484"/>
<node TEXT="although I thought all frames were like this" ID="ID_1641133326" CREATED="1422744850412" MODIFIED="1422744860065"/>
</node>
<node TEXT="Form" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_260858691" CREATED="1422676315923" MODIFIED="1422676320048">
<node TEXT="WX.Layout" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1049830339" CREATED="1422676332027" MODIFIED="1423271876408"/>
<node TEXT="something that holds other widgets" ID="ID_1619530616" CREATED="1422676328939" MODIFIED="1422743366252"/>
</node>
<node TEXT="Paint (class)" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_837242071" CREATED="1422670712855" MODIFIED="1423271906478">
<node TEXT="in WX.Event" ID="ID_327566040" CREATED="1422670720910" MODIFIED="1422670723774"/>
<node TEXT="canvas-like objects" ID="ID_952989836" CREATED="1422670724521" MODIFIED="1422670730702"/>
</node>
</node>
</node>
<node TEXT="how to search for a thing&apos;s def&apos;n" ID="ID_1613164799" CREATED="1422669576477" MODIFIED="1422669582935">
<node TEXT="egrep &quot;^DC\W&quot; . -R" ID="ID_826930553" CREATED="1422669583749" MODIFIED="1422669599891"/>
</node>
<node TEXT="emul demos" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1190678303" CREATED="1424979994892" MODIFIED="1424979998982">
<node TEXT="Grid.hs: keyboard input" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_710421416" CREATED="1426278957503" MODIFIED="1426278961676"/>
<node TEXT="TimeFlows.hs: varCreate" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1776965701" CREATED="1426278962936" MODIFIED="1426278976364">
<node TEXT="for state" ID="ID_604643800" CREATED="1426278977116" MODIFIED="1426278978245"/>
</node>
<node TEXT="Controls.hs: change view" ID="ID_3016853" CREATED="1424979999517" MODIFIED="1424980010697"/>
<node TEXT="Grid.hs: arrows keys move among text entry windows" ID="ID_1366495313" CREATED="1424980571752" MODIFIED="1424980718856"/>
<node TEXT="Paint.hs: not a lot of code!" ID="ID_1692790413" CREATED="1424981521545" MODIFIED="1424981526070"/>
<node TEXT="PropertyGrid.hs: mouse over tooltips" ID="ID_58149718" CREATED="1424982017721" MODIFIED="1424982026841"/>
<node TEXT="TimeFlowsEx.hs: change font" ID="ID_1431620675" CREATED="1424982302921" MODIFIED="1424982312783"/>
</node>
<node TEXT="might forget why I&apos;m using" ID="ID_582151928" CREATED="1426280843434" MODIFIED="1426280846758">
<node TEXT=", fullRepaintOnResize := False ] -- prevents flickering" ID="ID_1552374402" CREATED="1426280856476" MODIFIED="1426280856476">
<node TEXT="-- at cost of manual redraw" ID="ID_1599013480" CREATED="1426280856476" MODIFIED="1426280856476"/>
</node>
<node TEXT=", layout := minsize (sz 300 200) $ fill $ widget sw]" ID="ID_1235860372" CREATED="1426280908604" MODIFIED="1426280908604">
<node TEXT="-- fill = stretch . expand" ID="ID_880494954" CREATED="1426280908604" MODIFIED="1426280908604"/>
</node>
</node>
<node TEXT="from coding.mm" LOCALIZED_STYLE_REF="default" ID="ID_644286413" CREATED="1420747165094" MODIFIED="1426287688378">
<font BOLD="true"/>
<node TEXT="nx: I might already know enough to ..." LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_974371595" CREATED="1420856443454" MODIFIED="1420856452753">
<node TEXT="try blowing up BarTab&apos;s memory" ID="ID_607207380" CREATED="1421280871522" MODIFIED="1421280889222"/>
<node TEXT="make the list of widgets variable" ID="ID_432968513" CREATED="1420856454047" MODIFIED="1420856684659">
<node TEXT="using wx and not rb" ID="ID_754370452" CREATED="1420856684942" MODIFIED="1420856688147"/>
</node>
<node TEXT="use different widgets" ID="ID_1729272551" CREATED="1420856667023" MODIFIED="1420856679326">
<node TEXT="usnig rb" ID="ID_664953518" CREATED="1420856667023" MODIFIED="1420856683243"/>
</node>
</node>
<node TEXT="-&gt; learned through experim" ID="ID_884801133" CREATED="1421198014249" MODIFIED="1421203359264">
<node TEXT="IO function defined in do loop needs another do loop" ID="ID_891877183" CREATED="1421198116306" MODIFIED="1421198129585">
<node TEXT="can call &quot;set&quot; in a do loop, but to define in that do loop a function that involves &quot;set&quot;, the function must itself open (and of course implicitly close) another do loop" ID="ID_1707625172" CREATED="1421198018082" MODIFIED="1421198112089"/>
<node TEXT="(set is defined in `Graphics.UI.WX.Attributes&apos;)" ID="ID_1368196012" CREATED="1421198083508" MODIFIED="1421198140497"/>
</node>
<node TEXT="space matters even beyond lines&apos; relative indentation" ID="ID_354773032" CREATED="1421280162338" MODIFIED="1421280182863">
<node TEXT="e.g. this works" ID="ID_357237273" CREATED="1421280188457" MODIFIED="1421280190286">
<node TEXT="    let networkDescription :: forall t. Frameworks t =&gt; Moment t ()&#xa;        networkDescription = do" ID="ID_638367088" CREATED="1421280184529" MODIFIED="1421280185984"/>
</node>
<node TEXT="but this does not" ID="ID_1530927714" CREATED="1421280191442" MODIFIED="1421280195679">
<node TEXT="let networkDescription :: forall t. Frameworks t =&gt; Moment t ()&#xa;  networkDescription = do" ID="ID_1728087166" CREATED="1421280197777" MODIFIED="1421280202144"/>
</node>
<node TEXT="because the two instances of the string &quot;networkDescription&quot; must align" ID="ID_1358708837" CREATED="1421280205058" MODIFIED="1421280217975"/>
</node>
</node>
<node TEXT="misc" ID="ID_1377249223" CREATED="1420747172999" MODIFIED="1420747173973">
<node TEXT="run module from ghci" ID="ID_904056265" CREATED="1420747143919" MODIFIED="1420747152875">
<node TEXT="example" ID="ID_1803936750" CREATED="1420747161359" MODIFIED="1420747162333">
<node TEXT="https://www.haskell.org/haskellwiki/WxHaskell/Quickstart" ID="ID_300099665" CREATED="1420747159265" MODIFIED="1420747159265" LINK="https://www.haskell.org/haskellwiki/WxHaskell/Quickstart"/>
<node TEXT="&gt; ghci -package wx Hello.hs" ID="ID_1934912642" CREATED="1420747153640" MODIFIED="1420747153640"/>
<node TEXT="[snip]" ID="ID_1625633353" CREATED="1420747153640" MODIFIED="1420747153640"/>
<node TEXT="Loading package wx ... linking ... done." ID="ID_1663669915" CREATED="1420747153641" MODIFIED="1420747153641"/>
<node TEXT="Compiling Main ( Hello.hs, interpreted )" ID="ID_229767790" CREATED="1420747153642" MODIFIED="1420747153642"/>
<node TEXT="Ok, modules loaded: Main." ID="ID_824538601" CREATED="1420747153643" MODIFIED="1420747153643"/>
<node TEXT="*Main&gt; main" ID="ID_1953435479" CREATED="1420747153643" MODIFIED="1420747153643"/>
</node>
</node>
<node TEXT="pitfalls" ID="ID_1398764431" CREATED="1420748643783" MODIFIED="1420748645165">
<node TEXT="do loop appears empty" ID="ID_1937434840" CREATED="1420748645358" MODIFIED="1420748666134">
<node TEXT="the contents of a do loop do not need to be indented any farther rightward than the line the initial &quot;do&quot; is on" ID="ID_43158500" CREATED="1420748703679" MODIFIED="1420748792880"/>
<node TEXT="example at reactive-banana-wx/examples/Arithmetic" ID="ID_1474504892" CREATED="1420748736519" MODIFIED="1420748746085">
<node TEXT="the second of its two do loops" ID="ID_69530510" CREATED="1420748753686" MODIFIED="1420748758868"/>
</node>
</node>
</node>
</node>
<node TEXT="wxHaskell" ID="ID_1073662830" CREATED="1420746959615" MODIFIED="1420746961933">
<node TEXT="refs" ID="ID_763854094" CREATED="1420849016309" MODIFIED="1420849017042">
<node TEXT="hackage" ID="ID_300549080" CREATED="1420849321821" MODIFIED="1420849322786">
<node TEXT="https://hackage.haskell.org/package/wx" ID="ID_1759538487" CREATED="1420569933988" MODIFIED="1420569933988" LINK="https://hackage.haskell.org/package/wx"/>
</node>
<node TEXT="more intro" ID="ID_531145953" CREATED="1420849325509" MODIFIED="1420849326922">
<node TEXT="https://www.haskell.org/haskellwiki/WxHaskell" ID="ID_7709252" CREATED="1420569886279" MODIFIED="1420849201290" LINK="https://www.haskell.org/haskellwiki/WxHaskell"/>
<node TEXT="https://www.haskell.org/haskellwiki/WxHaskell/Documentation" ID="ID_194947125" CREATED="1420849037535" MODIFIED="1420849037535" LINK="https://www.haskell.org/haskellwiki/WxHaskell/Documentation"/>
<node TEXT=". prev wiki includes a doc&apos;n section" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_175853214" CREATED="1420849178732" MODIFIED="1420849339914">
<node ID="ID_75664108" CREATED="1420849198997" MODIFIED="1420849198997" LINK="https://www.haskell.org/haskellwiki/WxHaskell#Documentation"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      https://www.haskell.org/haskellwiki/WxHaskell#Documentation
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="Leijen 2004 paper" ID="ID_895130232" CREATED="1420854718470" MODIFIED="1420854765022">
<node TEXT="skipped" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1878932250" CREATED="1420854836478" MODIFIED="1420854838616">
<node TEXT="section 3, asteroids" LOCALIZED_STYLE_REF="default" ID="ID_1776328456" CREATED="1420854769551" MODIFIED="1420855994516"/>
<node TEXT="sections 6.1 onward" ID="ID_94514397" CREATED="1420855982734" MODIFIED="1420856107015"/>
</node>
<node TEXT="https://www.haskell.org/wikiupload/6/65/Wxhaskell.pdf" ID="ID_1302122911" CREATED="1420849030701" MODIFIED="1420849030701" LINK="https://www.haskell.org/wikiupload/6/65/Wxhaskell.pdf"/>
<node TEXT="I downloaded it" ID="ID_1531980279" CREATED="1420854726646" MODIFIED="1420854728562">
<node TEXT="as wxHaskell/paper.pdf" ID="ID_295831401" CREATED="1420854728886" MODIFIED="1420854735875"/>
</node>
<node TEXT="title" ID="ID_142331804" CREATED="1420854740366" MODIFIED="1420854740987">
<node TEXT="wxHaskell" ID="ID_543188943" CREATED="1420854737426" MODIFIED="1420854737426"/>
<node TEXT="A Portable and Concise GUI Library for Haskell" ID="ID_1998484632" CREATED="1420854737426" MODIFIED="1420854737426"/>
</node>
<node TEXT="author" ID="ID_1193794281" CREATED="1420854742406" MODIFIED="1420854743187">
<node TEXT="Daan Leijen" ID="ID_134804428" CREATED="1420854747910" MODIFIED="1420854750435"/>
</node>
</node>
</node>
<node TEXT="Linux install" LOCALIZED_STYLE_REF="styles.topic" ID="ID_629752185" CREATED="1420569827009" MODIFIED="1420849221983">
<node TEXT="https://www.haskell.org/haskellwiki/WxHaskell/Linux" ID="ID_59604599" CREATED="1420569830703" MODIFIED="1420569830703" LINK="https://www.haskell.org/haskellwiki/WxHaskell/Linux"/>
</node>
</node>
<node TEXT="? what is :=" ID="ID_661842001" CREATED="1420746962095" MODIFIED="1420746978941">
<node TEXT="hello&#xa;  = do f    &lt;- frame    [text := &quot;Hello!&quot;]&#xa;       quit &lt;- button f [text := &quot;Quit&quot;, on command := close f]&#xa;       set f [layout := widget quit]" ID="ID_369655359" CREATED="1420746992023" MODIFIED="1420746993304"/>
</node>
<node TEXT="libs" ID="ID_639650426" CREATED="1420747642447" MODIFIED="1420747645205">
<node TEXT="usually need Graphics.UI.WX, which is higher, and not Graphics.UI.Core" ID="ID_1153093309" CREATED="1420747247151" MODIFIED="1420747267781"/>
</node>
<node TEXT="Prop and Attr" ID="ID_959682901" CREATED="1420855572582" MODIFIED="1420855576339">
<node TEXT="Attr&apos;s two type param&apos;s" ID="ID_1001046652" CREATED="1420855582646" MODIFIED="1420855588692">
<node TEXT="&quot;The type of an attribute reflects both the type of the object it belongs to [jbb: describes], and the type of the values it can hold.&quot;" ID="ID_497152983" CREATED="1420855554887" MODIFIED="1420855598399">
<node LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_60945669" CREATED="1420855055559" MODIFIED="1420855059344"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Leijen 2004
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="Prop = a spec&apos;d Attr" ID="ID_707154177" CREATED="1420747647095" MODIFIED="1420747718621">
<node TEXT="my paraph" ID="ID_924415163" CREATED="1420747688007" MODIFIED="1420747690596">
<node TEXT="An attribute is a dimension." ID="ID_1799560447" CREATED="1420747655071" MODIFIED="1420747668053"/>
<node TEXT="A property is an assignment of a value in a dimension to an object." ID="ID_842643254" CREATED="1420747668239" MODIFIED="1420747687701"/>
</node>
<node TEXT="&quot;Properties are constructed by assigning a value to an attribute with the (:=) constructor:&quot;" ID="ID_671041450" CREATED="1420747694423" MODIFIED="1420855553214">
<node TEXT="https://hackage.haskell.org/package/wx-0.91.0.0/docs/Graphics-UI-WX-Attributes.html" ID="ID_1780240835" CREATED="1420747702892" MODIFIED="1420747702892" LINK="https://hackage.haskell.org/package/wx-0.91.0.0/docs/Graphics-UI-WX-Attributes.html"/>
</node>
</node>
</node>
<node TEXT="layout" ID="ID_1923454700" CREATED="1420851445637" MODIFIED="1420851448186">
<node TEXT="wrap window objects in nested functions" ID="ID_1280101770" CREATED="1420851493406" MODIFIED="1420851499090"/>
<node TEXT="align + marg" ID="ID_1279961488" CREATED="1420851190949" MODIFIED="1420851507110">
<node TEXT="set f [layout := margin 10 (floatCentre (widget quit))]" ID="ID_1170476395" CREATED="1420851207788" MODIFIED="1420851207788"/>
<node TEXT="this causes the &quot;widget quit&quot; object to float in the center of whatever it&apos;s in, with a minimum (user can exceed it by resizing) 10 point border" ID="ID_1033210383" CREATED="1420851209614" MODIFIED="1420851269687"/>
</node>
<node TEXT="create a column" ID="ID_1328026717" CREATED="1420851452669" MODIFIED="1420851482782">
<node TEXT="first arg to column says how much space between items in the same column" ID="ID_1527617036" CREATED="1420851455406" MODIFIED="1420851476789"/>
<node TEXT="set f [layout := margin 10 (column 20 [floatCentre (label &quot;Hello&quot;)" ID="ID_260320371" CREATED="1420851454365" MODIFIED="1420851454365">
<node TEXT=",floatCentre (widget quit)" ID="ID_374304132" CREATED="1420851454365" MODIFIED="1420851454365"/>
<node TEXT="] ) ]" ID="ID_890753226" CREATED="1420851454365" MODIFIED="1420851454365"/>
</node>
</node>
</node>
<node TEXT="common errors" ID="ID_583816748" CREATED="1420855052438" MODIFIED="1420855054315">
<node LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_374388211" CREATED="1420855055559" MODIFIED="1420855059344"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Leijen 2004
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="forgetting widgets" ID="ID_1446793575" CREATED="1420855060270" MODIFIED="1420855064235"/>
<node TEXT="duplicating widgets in a layout" ID="ID_429709845" CREATED="1420855064486" MODIFIED="1420855069811">
<node TEXT="mentioning the same one twice; it&apos;s supposed to only be in one place" ID="ID_398175978" CREATED="1420855070038" MODIFIED="1420855083203"/>
</node>
<node TEXT="violating the hierarchy" ID="ID_178148803" CREATED="1420855086222" MODIFIED="1420855089388">
<node TEXT="if x is created as child of y, and then z&apos;s layout contains x" ID="ID_1145359463" CREATED="1420855089558" MODIFIED="1420855105203"/>
</node>
</node>
<node TEXT="inheritance" ID="ID_123977122" CREATED="1420855334734" MODIFIED="1420855342348">
<node LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_372369191" CREATED="1420855055559" MODIFIED="1420855059344"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Leijen 2004
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="&quot;A type C () denotes an object of exactly class C; a type C a denotes an object that is at least an instance of class C&quot;" ID="ID_107129545" CREATED="1420855342670" MODIFIED="1420855361665"/>
</node>
</node>
<node TEXT="wxWidgets" ID="ID_1543273772" CREATED="1420849050277" MODIFIED="1420849061234">
<node TEXT="http://www.wxwidgets.org/" ID="ID_1816549897" CREATED="1420849059456" MODIFIED="1420849059456" LINK="http://www.wxwidgets.org/"/>
</node>
<node TEXT="reactive-banana" ID="ID_1803827636" CREATED="1420569776305" MODIFIED="1420586733464">
<node TEXT="= and reactive-banana-wx" ID="ID_773960702" CREATED="1420569786617" MODIFIED="1420750513092"/>
<node TEXT="?" ID="ID_1307305908" CREATED="1420753793312" MODIFIED="1420753793844">
<node TEXT="eventN" ID="ID_960890378" CREATED="1421287387643" MODIFIED="1421287474519">
<node TEXT="event0" ID="ID_16333406" CREATED="1421287416674" MODIFIED="1421287483619">
<node TEXT="def&apos;n" ID="ID_1939463087" CREATED="1421287847643" MODIFIED="1421287849424">
<node TEXT="event0 :: Frameworks t =&gt;" ID="ID_747865393" CREATED="1421287413782" MODIFIED="1421287413782">
<node TEXT="w -&gt; WX.Event w (IO ()) -&gt; Moment t (Event t ())" ID="ID_1284610976" CREATED="1421287413782" MODIFIED="1421287413782"/>
</node>
<node TEXT="event0 widget = event1 widget . event0ToEvent1" ID="ID_399233962" CREATED="1421287413782" MODIFIED="1421287413782"/>
</node>
<node TEXT="a use" ID="ID_608814526" CREATED="1421287883315" MODIFIED="1421287884024">
<node TEXT="add    &lt;- button f [text := &quot;Add&quot;]" ID="ID_178078919" CREATED="1421287893671" MODIFIED="1421287893671"/>
<node TEXT="..." ID="ID_1446569962" CREATED="1421287894779" MODIFIED="1421287895368"/>
<node TEXT="eAdd    &lt;- event0 add command" ID="ID_191050431" CREATED="1421287884511" MODIFIED="1421287884511"/>
</node>
</node>
<node TEXT="event1" ID="ID_672531885" CREATED="1421287466883" MODIFIED="1421287468576">
<node TEXT="def&apos;n" ID="ID_1519500337" CREATED="1421287851299" MODIFIED="1421287851992">
<node TEXT="event1 :: Frameworks t =&gt;" ID="ID_1678547122" CREATED="1421287475522" MODIFIED="1421287475522">
<node TEXT="w -&gt; WX.Event w (a -&gt; IO ()) -&gt; Moment t (Event t a)" ID="ID_1141799075" CREATED="1421287475522" MODIFIED="1421287475522"/>
</node>
<node TEXT="event1 widget e = do" ID="ID_1139076430" CREATED="1421287475522" MODIFIED="1421287475522">
<node TEXT="addHandler &lt;- liftIO $ event1ToAddHandler widget e" ID="ID_1688441210" CREATED="1421287475522" MODIFIED="1421287475522"/>
<node TEXT="fromAddHandler addHandler" ID="ID_958353300" CREATED="1421287475522" MODIFIED="1421287475522"/>
</node>
</node>
</node>
<node TEXT="their WX.Event arguments" ID="ID_2386514" CREATED="1421287526618" MODIFIED="1421287584855">
<node TEXT="event0 takes a WX.Event w (IO ())" ID="ID_1355134783" CREATED="1421287585659" MODIFIED="1421287590608"/>
<node TEXT="event1 takes a WX.Event w (a -&gt; IO ())" ID="ID_533945810" CREATED="1421287608523" MODIFIED="1421287611495"/>
</node>
<node TEXT="the &quot;WX.Event w a&quot; type" ID="ID_1084799141" CREATED="1421287699403" MODIFIED="1421287865967">
<node TEXT="descr&apos;n" ID="ID_438962025" CREATED="1421287724547" MODIFIED="1421287817352">
<node TEXT="An event for a widget w that expects an event handler of type a." ID="ID_607234002" CREATED="1421287723413" MODIFIED="1421287723413"/>
</node>
<node TEXT="def&apos;n" ID="ID_1641222090" CREATED="1421287807507" MODIFIED="1421287808259">
<node TEXT="data Event w a  = Event (Attr w a)" ID="ID_1784386397" CREATED="1421287800867" MODIFIED="1421287800867"/>
</node>
</node>
<node TEXT="class &quot;Commanding&quot; and (field?) &quot;command&quot;" ID="ID_1393895959" CREATED="1421287938939" MODIFIED="1421288028841">
<node TEXT="-- | &apos;Commanding&apos; widgets fire a &apos;command&apos; event." ID="ID_1930273283" CREATED="1421288029387" MODIFIED="1421288029387"/>
<node TEXT="class Commanding w where" ID="ID_662501626" CREATED="1421288029387" MODIFIED="1421288029387">
<node TEXT="-- | A commanding event, for example a button press." ID="ID_670714789" CREATED="1421288029388" MODIFIED="1421288029388"/>
<node TEXT="command :: Event w (IO ())" ID="ID_1135240804" CREATED="1421288029388" MODIFIED="1421288029388"/>
</node>
</node>
</node>
<node TEXT="stale" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1404157321" CREATED="1421287080891" MODIFIED="1421287086629">
<node TEXT="how are &lt;$ and &lt;$&gt; different from &lt;@ and &lt;@&gt;?" ID="ID_470716125" CREATED="1420753804288" MODIFIED="1420753831167">
<node TEXT="https://www.haskell.org/haskellwiki/FRP_explanation_using_reactive-banana#Behaviors" ID="ID_477273433" CREATED="1420753842348" MODIFIED="1420753842348" LINK="https://www.haskell.org/haskellwiki/FRP_explanation_using_reactive-banana#Behaviors"/>
</node>
</node>
</node>
<node TEXT="cep: time and func prog" ID="ID_1328513082" CREATED="1420754101953" MODIFIED="1420754111285">
<node TEXT="quot" ID="ID_1704945044" CREATED="1420754114504" MODIFIED="1420754115333">
<node TEXT="If a behavior has value 1 up to the 30th&apos;s second and from that point forward value 2 we could express the behavior as:" ID="ID_134686146" CREATED="1420754112637" MODIFIED="1420754118411"/>
<node TEXT="\t -&gt; if t &lt; 30 then 1 else 2" ID="ID_1320117972" CREATED="1420754112637" MODIFIED="1420754112637"/>
<node TEXT="This is important: by making time explicit we can reason about behaviors as if they were pure functions." ID="ID_412243235" CREATED="1420754112640" MODIFIED="1420754120715"/>
</node>
</node>
<node TEXT="cep: events outside the network" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1185505857" CREATED="1420754562800" MODIFIED="1420754644554">
<node TEXT="I did not understand." LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_91377564" CREATED="1420754645561" MODIFIED="1420754652112">
<font BOLD="false"/>
</node>
<node TEXT="https://www.haskell.org/haskellwiki/FRP_explanation_using_reactive-banana#Behaviors" ID="ID_1786912816" CREATED="1420754586151" MODIFIED="1420754586151" LINK="https://www.haskell.org/haskellwiki/FRP_explanation_using_reactive-banana#Behaviors"/>
<node TEXT="see the paragraph that starts like this" ID="ID_498237901" CREATED="1420754587512" MODIFIED="1420754591471">
<node TEXT="To create an event that you can fire from outside the event network" ID="ID_1360403414" CREATED="1420754572253" MODIFIED="1420754572253"/>
</node>
</node>
<node TEXT="terms" ID="ID_1995193446" CREATED="1420750505136" MODIFIED="1420750506006">
<node TEXT="Behavior" ID="ID_920182926" CREATED="1420750514808" MODIFIED="1420750645481">
<node TEXT="is something that can respond to events" ID="ID_962939766" CREATED="1420750520488" MODIFIED="1420750526580"/>
<node TEXT="includes values and functions" ID="ID_1119297593" CREATED="1420753970224" MODIFIED="1420753976324">
<node TEXT="&quot;a time-varying value is simply a behavior as behaviors can have different values at different points in time. A time-varying function is also just a behavior, one where the value is a function&quot;" ID="ID_1294935602" CREATED="1420753976552" MODIFIED="1420753978285"/>
</node>
</node>
<node TEXT="Event" ID="ID_510684727" CREATED="1420750631311" MODIFIED="1420750633414">
<node TEXT="&quot;Event t Int&quot; means a stream of events carrying Int values." ID="ID_926558906" CREATED="1420750634104" MODIFIED="1420750641727"/>
</node>
<node TEXT="transform a stream" ID="ID_1395581839" CREATED="1420750684455" MODIFIED="1420750781249">
<node TEXT="effect" ID="ID_1849016606" CREATED="1420751143136" MODIFIED="1420751144052">
<node TEXT="creates a new stream" ID="ID_1186873981" CREATED="1420750781831" MODIFIED="1420750785008"/>
</node>
<node TEXT="syntax" ID="ID_207278472" CREATED="1420751145480" MODIFIED="1420751148574">
<node TEXT="quot, examp" ID="ID_1890398839" CREATED="1420750752919" MODIFIED="1420750792164">
<node TEXT="show `fmap` eInt&#xa;(or with the (&lt;$&gt;) operator&#xa;show &lt;$&gt; eInts&#xa;) with eInt having the type&#xa;Event t Int&#xa;creates a new event stream of the type&#xa;Event String&#xa;with the int in every event in the original stream being a string in the new stream" ID="ID_1794743389" CREATED="1420750754895" MODIFIED="1420750768285"/>
</node>
<node TEXT="special case: replacement: (&lt;$)" ID="ID_171699161" CREATED="1420750822376" MODIFIED="1420751134796">
<node TEXT="quot" ID="ID_719510931" CREATED="1420750826688" MODIFIED="1420750827406"/>
<node TEXT="&quot;MOO!&quot; &lt;$ eWhatever&#xa;causes every value in the stream eWhatever to be replaced by MOO" ID="ID_1441917944" CREATED="1420750824936" MODIFIED="1420750839332"/>
</node>
<node TEXT="? &lt;@ and &lt;@&gt; are the same?" ID="ID_51295899" CREATED="1420753858681" MODIFIED="1420753863630"/>
</node>
</node>
<node TEXT="filter a stream" ID="ID_218942505" CREATED="1420751111440" MODIFIED="1420751128124">
<node TEXT="quot" ID="ID_247807557" CREATED="1420751158032" MODIFIED="1420751159006"/>
<node TEXT="To only deal with events with positive integers you can create a filtered stream using&#xa;filterE (&gt;= 0) eInt" ID="ID_1347224098" CREATED="1420751114223" MODIFIED="1420751155643"/>
</node>
<node TEXT="combine streams" ID="ID_931986941" CREATED="1420751182535" MODIFIED="1420751185590">
<node TEXT="eThree = eOne `union` eTwo" ID="ID_605485151" CREATED="1420751185912" MODIFIED="1420751188158"/>
</node>
<node TEXT="create a behavior" ID="ID_1793020927" CREATED="1420753188152" MODIFIED="1420753190686">
<node TEXT="https://www.haskell.org/haskellwiki/FRP_explanation_using_reactive-banana#Behaviors" ID="ID_1032917928" CREATED="1420753033738" MODIFIED="1420753033738" LINK="https://www.haskell.org/haskellwiki/FRP_explanation_using_reactive-banana#Behaviors"/>
<node TEXT="stepper and accum" ID="ID_36836111" CREATED="1420753030616" MODIFIED="1420753033127">
<node TEXT="allow behaviors to respond to events" ID="ID_1694680968" CREATED="1420753051088" MODIFIED="1420753055007"/>
</node>
<node TEXT="pure: for unchanging beaviors" ID="ID_622424153" CREATED="1420753192936" MODIFIED="1420753199214"/>
<node TEXT="formulas" ID="ID_37820465" CREATED="1420753265336" MODIFIED="1420753267782">
<node TEXT="To express that the value of b3 is the sum of the value of b1 and the value of b2 we write:" ID="ID_1520108440" CREATED="1420753271062" MODIFIED="1420753271062"/>
<node TEXT="b3 = (+) &lt;$&gt; b1 &lt;*&gt; b2" ID="ID_1798999915" CREATED="1420753271062" MODIFIED="1420753271062"/>
</node>
</node>
</node>
<node TEXT="myst" ID="ID_1139589224" CREATED="1420748112951" MODIFIED="1420748116876">
<node TEXT="set frame" ID="ID_1560853276" CREATED="1420748140287" MODIFIED="1420748178915">
<node TEXT="e.g. from Arithmetic.hs, in rb-wx-examples" ID="ID_337094546" CREATED="1420748183159" MODIFIED="1420748190059"/>
<node TEXT="    set f [layout := margin 10 $ row 10&#xa;            [widget input1, label &quot;+&quot;, widget input2&#xa;            , label &quot;=&quot;, minsize (sz 40 20) $ widget output]]" ID="ID_156967879" CREATED="1420748133983" MODIFIED="1420748135422"/>
</node>
</node>
<node TEXT="ref&apos;s" ID="ID_1049410690" CREATED="1420569803657" MODIFIED="1420569804863">
<node TEXT="RB" ID="ID_711421837" CREATED="1420569960641" MODIFIED="1420584684570">
<node TEXT="hackage" ID="ID_1478742196" CREATED="1420570002745" MODIFIED="1420570003694">
<node TEXT="http://hackage.haskell.org/package/reactive-banana" ID="ID_1423438814" CREATED="1420569962997" MODIFIED="1420569962997" LINK="http://hackage.haskell.org/package/reactive-banana"/>
</node>
<node TEXT="overview + install instruc" ID="ID_1323162747" CREATED="1420570004665" MODIFIED="1420570008880">
<node TEXT="https://www.haskell.org/haskellwiki/Reactive-banana" ID="ID_1915828781" CREATED="1420569999215" MODIFIED="1420569999215" LINK="https://www.haskell.org/haskellwiki/Reactive-banana"/>
</node>
</node>
<node TEXT="RB-wx" ID="ID_1136075244" CREATED="1420569970561" MODIFIED="1420584686266">
<node TEXT="useless on Hackage; see instead native copy of source" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_418464712" CREATED="1421286982755" MODIFIED="1421287008744"/>
<node TEXT="http://hackage.haskell.org/package/reactive-banana-wx" ID="ID_1909113973" CREATED="1420569976866" MODIFIED="1420569976866" LINK="http://hackage.haskell.org/package/reactive-banana-wx"/>
</node>
<node TEXT="obsol" LOCALIZED_STYLE_REF="styles.topic" ID="ID_454874385" CREATED="1421017202286" MODIFIED="1421017205753">
<node TEXT="RB-sdl" LOCALIZED_STYLE_REF="default" ID="ID_512557245" CREATED="1420584629611" MODIFIED="1421017207497">
<node TEXT="This worked, but it gave me SDL 2. For RB I need SDL 0.6.5." ID="ID_1230213161" CREATED="1420584644779" MODIFIED="1420584663930"/>
<node TEXT="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/linux/index.php" ID="ID_580816267" CREATED="1420584665671" MODIFIED="1420584665671" LINK="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/linux/index.php"/>
</node>
</node>
</node>
</node>
<node TEXT="reactive &amp; dwt" ID="ID_1541732833" CREATED="1420750041377" MODIFIED="1420750046268">
<node TEXT="are a good match" ID="ID_466981030" CREATED="1420750047417" MODIFIED="1420750072771">
<node TEXT="quote" ID="ID_1909203774" CREATED="1420750053799" MODIFIED="1420750054877">
<node TEXT="https://www.haskell.org/haskellwiki/FRP_explanation_using_reactive-banana" ID="ID_813362959" CREATED="1420750066302" MODIFIED="1420750066302" LINK="https://www.haskell.org/haskellwiki/FRP_explanation_using_reactive-banana"/>
<node TEXT="Though this may seem mundane what we&apos;ve just seen is actually a very good example of reactive programming. We didn&apos;t tell the C cells to update; they updated on their own because a value they depend on changed." ID="ID_1834177611" CREATED="1420750051680" MODIFIED="1420750053399"/>
</node>
</node>
</node>
</node>
<node TEXT="os x" LOCALIZED_STYLE_REF="styles.topic" ID="ID_704967914" CREATED="1417381084756" MODIFIED="1427753980494">
<node TEXT="** do not move wxWidgets from ~ (home)" ID="ID_810093376" CREATED="1417393054786" MODIFIED="1419896045037"/>
<node TEXT="* forum" ID="ID_789796772" CREATED="1417381076596" MODIFIED="1417381081855">
<node TEXT="https://groups.google.com/forum/#!forum/wx-users/home" ID="ID_247882332" CREATED="1417381075037" MODIFIED="1417381075037" LINK="https://groups.google.com/forum/#!forum/wx-users/home"/>
</node>
<node TEXT="* thread" ID="ID_719555543" CREATED="1417382136833" MODIFIED="1417382138021">
<node TEXT="https://groups.google.com/forum/#!topic/wx-users/HjUTEkGK4F4" ID="ID_1594357768" CREATED="1417382138382" MODIFIED="1417382138382" LINK="https://groups.google.com/forum/#!topic/wx-users/HjUTEkGK4F4"/>
</node>
<node TEXT="wxWidgets, install" ID="ID_176315545" CREATED="1417335027724" MODIFIED="1417337194217">
<node TEXT="I installed it for Cocoa." ID="ID_540203244" CREATED="1417337196557" MODIFIED="1417337204865"/>
<node TEXT="It includes also install instruc&apos;s for Carbon, which is deprecated." ID="ID_1496507609" CREATED="1417337205077" MODIFIED="1417337220840"/>
<node TEXT="The install instructions (wxwidgets/docs/osx/install.txt) say that I should then try double-clicking the executables in the demos/ and samples/ subfolders of wxwidgets/build-cocoa-debug/. When I do I get an error:" ID="ID_1264655502" CREATED="1417380525621" MODIFIED="1417380631656">
<node TEXT="headline" ID="ID_438344672" CREATED="1417380738530" MODIFIED="1417380743893">
<node TEXT="life cannot be opened because of a problem. Check with the developer to make sure life works with this version of OS X. You may need to reinstall the application. Be sure to install any available updates for the applicaiton and OS X." ID="ID_76357697" CREATED="1417380742083" MODIFIED="1417380742083"/>
</node>
<node TEXT="details" ID="ID_919222737" CREATED="1417380635972" MODIFIED="1417380640679">
<node TEXT="Process:         life [31031]" ID="ID_636429973" CREATED="1417380632113" MODIFIED="1417380632113"/>
<node TEXT="Path:            /Users/USER/*/life.app/Contents/MacOS/life" ID="ID_1762620604" CREATED="1417380632113" MODIFIED="1417380632113"/>
<node TEXT="Identifier:      org.wxwindows.demos.life" ID="ID_87144693" CREATED="1417380632114" MODIFIED="1417380632114"/>
<node TEXT="Version:         ???" ID="ID_1500669226" CREATED="1417380632115" MODIFIED="1417380632115"/>
<node TEXT="Code Type:       X86-64 (Native)" ID="ID_1411561715" CREATED="1417380632115" MODIFIED="1417380632115"/>
<node TEXT="Parent Process:  launchd [205]" ID="ID_382045510" CREATED="1417380632117" MODIFIED="1417380632117"/>
<node TEXT="Responsible:     life [31031]" ID="ID_1002059746" CREATED="1417380632117" MODIFIED="1417380632117"/>
<node TEXT="User ID:         501" ID="ID_1498147836" CREATED="1417380632118" MODIFIED="1417380632118"/>
<node TEXT="Date/Time:       2014-11-30 12:50:08.150 -0800" ID="ID_1069140762" CREATED="1417380632118" MODIFIED="1417380632118"/>
<node TEXT="OS Version:      Mac OS X 10.9.5 (13F34)" ID="ID_1367344409" CREATED="1417380632119" MODIFIED="1417380632119"/>
<node TEXT="Report Version:  11" ID="ID_1687898507" CREATED="1417380632120" MODIFIED="1417380632120"/>
<node TEXT="Anonymous UUID:  C745EDE1-1EF5-51DA-D4AD-36D510D8BAFB" ID="ID_486115730" CREATED="1417380632120" MODIFIED="1417380632120"/>
<node TEXT="Sleep/Wake UUID: EEF36244-6B60-4B62-923C-EB14B68EC0A6" ID="ID_373964073" CREATED="1417380632121" MODIFIED="1417380632121"/>
<node TEXT="Crashed Thread:  0" ID="ID_1123951516" CREATED="1417380632121" MODIFIED="1417380632121"/>
<node TEXT="Exception Type:  EXC_BREAKPOINT (SIGTRAP)" ID="ID_1787731540" CREATED="1417380632122" MODIFIED="1417380632122"/>
<node TEXT="Exception Codes: 0x0000000000000002, 0x0000000000000000" ID="ID_520774548" CREATED="1417380632122" MODIFIED="1417380632122"/>
<node TEXT="Application Specific Information:" ID="ID_378876287" CREATED="1417380632123" MODIFIED="1417380632123"/>
<node TEXT="dyld: launch, loading dependent libraries" ID="ID_44699648" CREATED="1417380632123" MODIFIED="1417380632123"/>
<node TEXT="Dyld Error Message:" ID="ID_349457077" CREATED="1417380632124" MODIFIED="1417380632124">
<node TEXT="Library not loaded: /Users/jbb/wxWidgets-3.0.2/build-cocoa-debug/lib/libwx_osx_cocoau_core-3.0.0.2.0.dylib" ID="ID_1405327368" CREATED="1417380632124" MODIFIED="1417380632124"/>
<node TEXT="Referenced from: /Users/USER/*/life.app/Contents/MacOS/life" ID="ID_320386262" CREATED="1417380632124" MODIFIED="1417380632124"/>
<node TEXT="Reason: image not found" ID="ID_558548227" CREATED="1417380632124" MODIFIED="1417380632124"/>
</node>
<node TEXT="Binary Images:" ID="ID_1112463020" CREATED="1417380632124" MODIFIED="1417380632124">
<node TEXT="0x7fff6df21000 -     0x7fff6df54817  dyld (239.4) &lt;7AD43B9B-5CEA-3C7E-9836-A06909F9CA56&gt; /usr/lib/dyld" ID="ID_609693016" CREATED="1417380632124" MODIFIED="1417380632124"/>
<node TEXT="0x7fff887d3000 -     0x7fff887d3fff  com.apple.Cocoa (6.8 - 20) &lt;E90E99D7-A425-3301-A025-D9E0CD11918E&gt; /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa" ID="ID_237037133" CREATED="1417380632124" MODIFIED="1417380632124"/>
<node TEXT="0x7fff8e0ba000 -     0x7fff8e0bbff7  libSystem.B.dylib (1197.1.1) &lt;70B235FC-BCED-367B-BA6C-67C299BAE7D9&gt; /usr/lib/libSystem.B.dylib" ID="ID_1394309742" CREATED="1417380632124" MODIFIED="1417380632124"/>
<node TEXT="0x7fff8e5c4000 -     0x7fff8e5d2fff  com.apple.opengl (9.6.1 - 9.6.1) &lt;359D0ECB-D100-341B-B437-BDE56E27B74B&gt; /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL" ID="ID_1792227409" CREATED="1417380632124" MODIFIED="1417380632124"/>
<node TEXT="0x7fff8fabd000 -     0x7fff8fc11ff3  com.apple.audio.toolbox.AudioToolbox (1.10 - 1.10) &lt;69B273E8-5A8E-3FC7-B807-C16B657662FE&gt; /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox" ID="ID_794039471" CREATED="1417380632124" MODIFIED="1417380632124"/>
<node TEXT="0x7fff90c1c000 -     0x7fff90c88fff  com.apple.framework.IOKit (2.0.1 - 907.100.13) &lt;057FDBA3-56D6-3903-8C0B-849214BF1985&gt; /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit" ID="ID_1807715403" CREATED="1417380632124" MODIFIED="1417380632124"/>
<node TEXT="0x7fff9227e000 -     0x7fff9227efff  com.apple.Carbon (154 - 157) &lt;EFC1A1C0-CB07-395A-B038-CFA2E71D3E69&gt; /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon" ID="ID_1024021876" CREATED="1417380632124" MODIFIED="1417380632124"/>
</node>
</node>
</node>
</node>
<node TEXT="should I use &quot;brew&quot;?" ID="ID_498833121" CREATED="1417394143760" MODIFIED="1417394150594">
<node TEXT="this link says yes" ID="ID_1581076592" CREATED="1417394152600" MODIFIED="1417394155914">
<node TEXT="https://www.haskell.org/haskellwiki/WxHaskell/MacOS_X" ID="ID_152879416" CREATED="1417394151126" MODIFIED="1417394151126" LINK="https://www.haskell.org/haskellwiki/WxHaskell/MacOS_X"/>
</node>
</node>
</node>
<node TEXT="2015 03 30, mutable collections" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_126780036" CREATED="1430383884620" MODIFIED="1430882949829">
<node TEXT="thread" ID="ID_594445043" CREATED="1430882950314" MODIFIED="1430882951007">
<node TEXT="https://mail.google.com/mail/u/0/#search/haskell/14c6d9be4cfc555d" ID="ID_1774805775" CREATED="1430383873792" MODIFIED="1430383873792" LINK="https://mail.google.com/mail/u/0/#search/haskell/14c6d9be4cfc555d"/>
</node>
<node TEXT="latest code (on hard drive)" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_170666061" CREATED="1430384044339" MODIFIED="1430882957744">
<node TEXT="/home/jeff/work/computer/Haskell/wx/modStudy" ID="ID_1240514464" CREATED="1430384031622" MODIFIED="1430384031622"/>
</node>
</node>
</node>
<node TEXT="Grapefruit" ID="ID_429569315" CREATED="1417252732520" MODIFIED="1420506131280">
<node TEXT=". appears not to do graphics" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1945432123" CREATED="1420564932195" MODIFIED="1420564939482"/>
<node TEXT="to run examples" ID="ID_1311038101" CREATED="1420530153610" MODIFIED="1420530188208">
<node TEXT="https://www.haskell.org/haskellwiki/Grapefrut" ID="ID_1987380935" CREATED="1420530156682" MODIFIED="1420530382920" LINK="https://www.haskell.org/haskellwiki/Grapefruit#Community"/>
<node TEXT="https://www.haskell.org/haskellwiki/Grapefruit#Running_the_examples" ID="ID_13212951" CREATED="1420530378631" MODIFIED="1420530378631" LINK="https://www.haskell.org/haskellwiki/Grapefruit#Running_the_examples"/>
<node TEXT="import Graphics.UI.Grapefruit.GTK" ID="ID_1270154145" CREATED="1420563591399" MODIFIED="1420563602948"/>
<node TEXT="import Graphics.UI.Grapefruit.Circuit" ID="ID_1120077577" CREATED="1420563591399" MODIFIED="1420563591399"/>
<node TEXT="run GTK mainCircuit ()" ID="ID_693088123" CREATED="1420563591401" MODIFIED="1420563682940"/>
<node TEXT="import Examples.Grapefruit.[name of example]" ID="ID_683896951" CREATED="1420563591400" MODIFIED="1420563608994"/>
</node>
<node TEXT="refs" ID="ID_1426426191" CREATED="1417253222544" MODIFIED="1420530358992">
<node TEXT="code" ID="ID_848920842" CREATED="1420565253686" MODIFIED="1420565255014">
<font BOLD="true"/>
<node TEXT="https://hackage.haskell.org/package/grapefruit-frp" ID="ID_69047550" CREATED="1420530609984" MODIFIED="1420530609984" LINK="https://hackage.haskell.org/package/grapefruit-frp"/>
<node TEXT="https://hackage.haskell.org/package/grapefruit-ui-gtk" ID="ID_1782259688" CREATED="1420565299959" MODIFIED="1420565299959" LINK="https://hackage.haskell.org/package/grapefruit-ui-gtk"/>
</node>
<node TEXT="https://www.haskell.org/haskellwiki/Grapefruit" ID="ID_164736882" CREATED="1417252706908" MODIFIED="1417252706908" LINK="https://www.haskell.org/haskellwiki/Grapefruit"/>
<node TEXT="https://wolfgang.jeltsch.info/publications-and-talks" ID="ID_1077654800" CREATED="1417253269369" MODIFIED="1417253269369" LINK="https://wolfgang.jeltsch.info/publications-and-talks"/>
<node TEXT="https://wolfgang.jeltsch.info/software/haskell" LOCALIZED_STYLE_REF="default" ID="ID_77301101" CREATED="1420530525366" MODIFIED="1420530561981" LINK="https://wolfgang.jeltsch.info/software/haskell">
<node TEXT="main developer&apos;s site" ID="ID_686911061" CREATED="1420530553667" MODIFIED="1420530559080"/>
</node>
<node TEXT="https://grapefruit-project.org/" LOCALIZED_STYLE_REF="styles.topic" ID="ID_586190873" CREATED="1420530491336" MODIFIED="1420530506149" LINK="https://grapefruit-project.org/">
<node TEXT="link comes up a lot, but just contains external ref&apos;s" ID="ID_1358688038" CREATED="1420530523426" MODIFIED="1420530542120"/>
</node>
</node>
<node TEXT="mailing list" ID="ID_911356445" CREATED="1420505954363" MODIFIED="1420506067105">
<node TEXT="http://projects.haskell.org/cgi-bin/mailman/listinfo/grapefruit" ID="ID_557309914" CREATED="1420505966378" MODIFIED="1420505966378" LINK="http://projects.haskell.org/cgi-bin/mailman/listinfo/grapefruit"/>
</node>
<node TEXT="bug reports" ID="ID_1148808034" CREATED="1420506070235" MODIFIED="1420506072568">
<node TEXT="I don&apos;t get it." ID="ID_1640688947" CREATED="1420506073659" MODIFIED="1420506075785"/>
<node TEXT="http://trac.haskell.org/grapefruit/" ID="ID_1658578292" CREATED="1420506038761" MODIFIED="1420506038761" LINK="http://trac.haskell.org/grapefruit/"/>
</node>
<node TEXT="uses Gtk2Hs" ID="ID_199147853" CREATED="1417253204890" MODIFIED="1417253213917">
<node TEXT="I might not need to know about it." ID="ID_1738420226" CREATED="1417253215168" MODIFIED="1420530334383"/>
<node TEXT="https://www.haskell.org/haskellwiki/Gtk2Hs" ID="ID_1841931554" CREATED="1417253214579" MODIFIED="1417253214579" LINK="https://www.haskell.org/haskellwiki/Gtk2Hs"/>
</node>
</node>
<node TEXT="lib cho" ID="ID_488682837" CREATED="1417501540560" MODIFIED="1420530226136">
<node TEXT="= across toolkits" ID="ID_1458108140" CREATED="1417247984191" MODIFIED="1420530230216"/>
<node TEXT="recently maintained ones" ID="ID_1544224582" CREATED="1420533794638" MODIFIED="1420533798595">
<node TEXT="Grapefruit" ID="ID_1479258660" CREATED="1420533826261" MODIFIED="1420533829514">
<node TEXT="last upload Oct 2014" ID="ID_1551068542" CREATED="1420533830165" MODIFIED="1420533834813">
<node TEXT="evid" ID="ID_332167640" CREATED="1420533855062" MODIFIED="1420533855659">
<node TEXT="http://darcs.grapefruit-project.org/monolithic/0.1/" ID="ID_823772961" CREATED="1420533846796" MODIFIED="1420533846796" LINK="http://darcs.grapefruit-project.org/monolithic/0.1/"/>
</node>
<node TEXT="where I found that" ID="ID_628079551" CREATED="1420533856670" MODIFIED="1420533860363">
<node TEXT="http://hackage.haskell.org/package/grapefruit-frp" ID="ID_249175580" CREATED="1420533861021" MODIFIED="1420533861021" LINK="http://hackage.haskell.org/package/grapefruit-frp"/>
</node>
</node>
<node TEXT="by Wolfgang Jeltsch" ID="ID_1925116744" CREATED="1420533863886" MODIFIED="1420533879611"/>
</node>
<node TEXT="reactive-banana" ID="ID_416161080" CREATED="1420533800342" MODIFIED="1420533805301">
<node TEXT="Heinrich Aq&apos;, last updated Jan 2014" ID="ID_1715197682" CREATED="1420533805469" MODIFIED="1420533816317"/>
<node TEXT="but I know he&apos;s responsive" ID="ID_872196036" CREATED="1420533816950" MODIFIED="1420533820427"/>
</node>
</node>
<node TEXT="haskellish GUI paradigm-toolkits exist" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1929540058" CREATED="1413275482124" MODIFIED="1413275904015"/>
<node TEXT="list with ranking and detail" ID="ID_290492850" CREATED="1413275677566" MODIFIED="1417248053279">
<node TEXT="http://www.haskell.org/haskellwiki/Applications_and_libraries/GUI_libraries" ID="ID_385344984" CREATED="1413275668985" MODIFIED="1413275675468" LINK="http://www.haskell.org/haskellwiki/Applications_and_libraries/GUI_libraries#Fudgets"/>
</node>
<node TEXT="reactive ones" ID="ID_716303191" CREATED="1417258343696" MODIFIED="1417258345493">
<node TEXT="https://www.haskell.org/haskellwiki/Functional_Reactive_Programming" ID="ID_1343035226" CREATED="1417258345934" MODIFIED="1417258345934" LINK="https://www.haskell.org/haskellwiki/Functional_Reactive_Programming"/>
</node>
<node TEXT="list with tiny descriptions" ID="ID_195118471" CREATED="1417248032751" MODIFIED="1417248044520">
<node TEXT="http://hackage.haskell.org/packages/#cat:GUI" ID="ID_637014691" CREATED="1417248038388" MODIFIED="1417248038388" LINK="http://hackage.haskell.org/packages/#cat:GUI"/>
</node>
<node TEXT="Phooey &gt; Fruit" ID="ID_493645431" CREATED="1417336131201" MODIFIED="1417336316637">
<node TEXT="Phooey is maintained" ID="ID_418055024" CREATED="1417336145720" MODIFIED="1417336148843"/>
<node TEXT="both use wx" ID="ID_247281023" CREATED="1417336149167" MODIFIED="1417336151251"/>
<node TEXT="https://www.haskell.org/haskellwiki/Phooey" ID="ID_173036416" CREATED="1417336199209" MODIFIED="1417336199209" LINK="https://www.haskell.org/haskellwiki/Phooey"/>
</node>
<node TEXT="Phooey uses Reactive" ID="ID_973895760" CREATED="1417336182464" MODIFIED="1417336306682">
<node TEXT="https://www.haskell.org/haskellwiki/Reactive" ID="ID_484000269" CREATED="1417336194724" MODIFIED="1417336194724" LINK="https://www.haskell.org/haskellwiki/Reactive"/>
</node>
<node TEXT="GuiTV uses Phooey and TV" ID="ID_1157411435" CREATED="1417336275006" MODIFIED="1417336313249"/>
<node TEXT="u" ID="ID_766657139" CREATED="1418870851252" MODIFIED="1420530661783">
<node TEXT="* FRP" ID="ID_1968842435" CREATED="1417253640803" MODIFIED="1417255826185">
<node TEXT="https://www.haskell.org/haskellwiki/Functional_Reactive_Programming" ID="ID_290591224" CREATED="1417253641840" MODIFIED="1417253641840" LINK="https://www.haskell.org/haskellwiki/Functional_Reactive_Programming"/>
</node>
<node TEXT="ThreePenny" ID="ID_786504365" CREATED="1417255793876" MODIFIED="1420530646056">
<node TEXT="installed on Mac" ID="ID_640292479" CREATED="1420530646778" MODIFIED="1420530649095"/>
<node TEXT="links" ID="ID_465304285" CREATED="1419896193876" MODIFIED="1419896194903">
<node TEXT="see &quot;Documentation&quot; here" ID="ID_1741329343" CREATED="1417255796866" MODIFIED="1417255812489">
<node TEXT="https://www.haskell.org/haskellwiki/Threepenny-gui" ID="ID_879586778" CREATED="1417255812795" MODIFIED="1417255812795" LINK="https://www.haskell.org/haskellwiki/Threepenny-gui"/>
</node>
<node ID="ID_1755583129" CREATED="1417503153518" MODIFIED="1417503153518"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      stackov question
    </p>
  </body>
</html>
</richcontent>
<node TEXT="http://stackoverflow.com/questions/27211978/installing-threepenny-gui-with-cabal-what-did-i-do-wrong" ID="ID_617931205" CREATED="1417341097078" MODIFIED="1417341097078" LINK="http://stackoverflow.com/questions/27211978/installing-threepenny-gui-with-cabal-what-did-i-do-wrong"/>
</node>
</node>
<node TEXT="is browser-based" LOCALIZED_STYLE_REF="default" ID="ID_1261721525" CREATED="1413275687133" MODIFIED="1419896210951"/>
</node>
<node TEXT="** want: wxFruit" ID="ID_584337088" CREATED="1417258598940" MODIFIED="1417258605112">
<node TEXT=".= argum&apos;s for" ID="ID_1979320081" CREATED="1417258535470" MODIFIED="1417258616152"/>
<node TEXT="if I want to &quot;bind mutable data and lists to IO objects&quot;, a lib exists for that, using wxHaskell" ID="ID_414518400" CREATED="1417258430478" MODIFIED="1417258624850">
<node TEXT="http://hackage.haskell.org/package/binding-core" ID="ID_954433214" CREATED="1417258468907" MODIFIED="1417258468907" LINK="http://hackage.haskell.org/package/binding-core"/>
<node TEXT="that lib also supports GTK, but I could not install GTK" ID="ID_1255016185" CREATED="1417258469853" MODIFIED="1417258477409"/>
</node>
<node TEXT="wx is &quot;mature&quot; (1992), with &quot;a very active community&quot;" ID="ID_1978018486" CREATED="1417258543524" MODIFIED="1417258631784">
<node TEXT="https://www.haskell.org/haskellwiki/Applications_and_libraries/GUI_libraries#Fudgets" ID="ID_878473663" CREATED="1417258558352" MODIFIED="1417258558352" LINK="https://www.haskell.org/haskellwiki/Applications_and_libraries/GUI_libraries#Fudgets"/>
</node>
</node>
<node TEXT="** these look good, too" ID="ID_1145443544" CREATED="1417257712321" MODIFIED="1417258637181">
<node TEXT="do they depend on difficult to have things?" ID="ID_1165228845" CREATED="1417257887196" MODIFIED="1417257896461"/>
<node TEXT="wxFruit, wxHaskell, Reactive, elerea" ID="ID_9243296" CREATED="1417257646307" MODIFIED="1417257746781"/>
<node TEXT="reactive-banana (can use wx or SDL)" ID="ID_1101347785" CREATED="1417257904935" MODIFIED="1417257909843">
<node TEXT="SDL: cross-platform C-written graphics tools" ID="ID_1830831235" CREATED="1417257910846" MODIFIED="1417257918972"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="graph" ID="ID_1389264960" CREATED="1422081765481" MODIFIED="1427780398463">
<font BOLD="false"/>
<node TEXT="Data.Graph" LOCALIZED_STYLE_REF="default" ID="ID_1219958693" CREATED="1422085982193" MODIFIED="1422086396131">
<node TEXT="cannot label edges" ID="ID_1279099848" CREATED="1422086248353" MODIFIED="1422086251406"/>
</node>
<node TEXT="graph-db" ID="ID_999188764" CREATED="1421530199964" MODIFIED="1433400159457">
<node TEXT="Volkov: Approachable." ID="ID_1622901250" CREATED="1422086210691" MODIFIED="1433400177530">
<node TEXT="Nikita" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1821208905" CREATED="1433400182785" MODIFIED="1433400185040"/>
<node TEXT="He answered my question on Reddit, within hours." ID="ID_718474406" CREATED="1422086226625" MODIFIED="1422086235864"/>
<node TEXT="also Elliot says that" ID="ID_18966086" CREATED="1433400178497" MODIFIED="1433400181767"/>
</node>
<node TEXT="to do" ID="ID_204453915" CREATED="1432944587015" MODIFIED="1432944587708">
<node TEXT="understand" ID="ID_1554998852" CREATED="1432944590911" MODIFIED="1432944592252">
<node TEXT="getValue" ID="ID_603571530" CREATED="1432944593295" MODIFIED="1432944597051"/>
<node TEXT="getTargets" ID="ID_618001272" CREATED="1432944597239" MODIFIED="1432944599220"/>
<node TEXT="index" LOCALIZED_STYLE_REF="styles.topic" ID="ID_313299962" CREATED="1432944600159" MODIFIED="1432944602623"/>
<node TEXT="why target != edge" ID="ID_803129511" CREATED="1432944693871" MODIFIED="1432944697027"/>
<node TEXT="Graph.getSources" ID="ID_1036952813" CREATED="1432944804535" MODIFIED="1432944806989">
<node TEXT="? opposite getTarget" ID="ID_1107077433" CREATED="1432944812247" MODIFIED="1432944817372"/>
</node>
</node>
<node TEXT="be able to" ID="ID_361585151" CREATED="1432944604655" MODIFIED="1432944607668">
<node TEXT="get predecessors, successors" ID="ID_1044181528" CREATED="1432944608375" MODIFIED="1432944618555"/>
<node TEXT="remove edge, node" ID="ID_1761878279" CREATED="1432944679111" MODIFIED="1432944686528"/>
</node>
</node>
<node TEXT="?" ID="ID_1930062960" CREATED="1432944232406" MODIFIED="1432944232852">
<node TEXT="~ in type sig" ID="ID_706291135" CREATED="1432944238318" MODIFIED="1432944241988">
<node TEXT="getTargets ::&#xa;  (Model.PolyIndex u i, i ~ Model.Index v v&apos;) =&gt;" ID="ID_1591651590" CREATED="1432944235022" MODIFIED="1432944236004"/>
</node>
</node>
<node TEXT="answered !" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1364570426" CREATED="1432943522518" MODIFIED="1432943835808">
<node TEXT="if must runPersistentSession to query|modify graph, how to ghci experiment" ID="ID_625193824" CREATED="1432943526342" MODIFIED="1432943543307"/>
<node TEXT="answer" ID="ID_1689467438" CREATED="1432943836766" MODIFIED="1432943837548">
<node TEXT="can eval in ghci" ID="ID_728820510" CREATED="1432943848078" MODIFIED="1432943850490"/>
<node TEXT=":{&#xa;  G.runPersistentSession (Catalogue, &quot;./dist/demo/db&quot;, 1) $ do&#xa;    G.read G.getStats &gt;&gt;= \(nodes, edges, indexes) -&gt;&#xa;            liftIO $ putStrLn $&#xa;              &quot;There&apos;s &quot; &lt;&gt; show nodes &lt;&gt; &quot; nodes, &quot; &lt;&gt; show edges &lt;&gt; &quot; edges &quot; &lt;&gt;&#xa;              &quot;and &quot; &lt;&gt; show indexes &lt;&gt; &quot; indexes in the graph.&quot;&#xa;:}" ID="ID_194746859" CREATED="1432943842062" MODIFIED="1432943843263"/>
</node>
</node>
<node TEXT="G.getTargets" ID="ID_1430072131" CREATED="1432941862466" MODIFIED="1432941862466">
<node TEXT=".all one type sig" ID="ID_1518541812" CREATED="1432941866900" MODIFIED="1432941869842"/>
<node TEXT=":: (G.PolyIndex u (G.Index v v&apos;), GraphDB.Transaction tr," ID="ID_1692042787" CREATED="1432941862466" MODIFIED="1432941862466"/>
<node TEXT="Applicative (tr s u t), Monad (tr s u t)) =&gt;" ID="ID_141912605" CREATED="1432941862466" MODIFIED="1432941862466"/>
<node TEXT="G.Node s u t v -&gt; G.Index v v&apos; -&gt; tr s u t [G.Node s u t v&apos;]" ID="ID_196120532" CREATED="1432941862466" MODIFIED="1432941862466"/>
</node>
</node>
<node TEXT="FGL/" ID="ID_587886838" CREATED="1442785878861" MODIFIED="1442789636795">
<node TEXT="?" ID="ID_1749504030" CREATED="1442800172003" MODIFIED="1442800173165">
<node TEXT="find LNode by label" ID="ID_562974764" CREATED="1442800174829" MODIFIED="1442800197321"/>
</node>
<node TEXT="use" ID="ID_1141167127" CREATED="1442788809536" MODIFIED="1442788823980">
<node TEXT="by name" ID="ID_1249474099" CREATED="1442788884639" MODIFIED="1442788889287">
<node TEXT="the Decomp type" ID="ID_661740529" CREATED="1421649156344" MODIFIED="1421649159437">
<node TEXT="in Data.Graph.Inductive.Graph" ID="ID_1065462260" CREATED="1421649162911" MODIFIED="1421649171269"/>
</node>
<node TEXT="? use fold, gfold" LOCALIZED_STYLE_REF="default" ID="ID_737246865" CREATED="1438850842445" MODIFIED="1438910343193">
<node TEXT="gfold" ID="ID_1680735292" CREATED="1438910345244" MODIFIED="1438910346688">
<node TEXT="source code" ID="ID_998649670" CREATED="1438850882436" MODIFIED="1438850884401">
<node TEXT="https://hackage.haskell.org/package/fgl-5.5.2.1/docs/src/Data-Graph-Inductive-Basic.html#gfold" ID="ID_265821076" CREATED="1438850857144" MODIFIED="1438850857144" LINK="https://hackage.haskell.org/package/fgl-5.5.2.1/docs/src/Data-Graph-Inductive-Basic.html#gfold"/>
<node TEXT="-- | Directed graph fold.&#xa;gfold :: (Graph gr) =&gt;   (Context a b -&gt; [Node])    -- ^ direction of fold&#xa;        -&gt; (Context a b -&gt; c -&gt; d)    -- ^ depth aggregation&#xa;        -&gt; (Maybe d -&gt; c -&gt; c, c)      -- ^ breadth\/level aggregation&#xa;        -&gt; [Node]&#xa;        -&gt; gr a b&#xa;        -&gt; c&#xa;gfold f d b l g = fst (gfoldn f d b l g)" ID="ID_590454330" CREATED="1438850846725" MODIFIED="1438850847734"/>
</node>
<node TEXT="it might say in the paper" ID="ID_1757313252" CREATED="1438850878734" MODIFIED="1438850881610"/>
</node>
<node TEXT="delNodes, uses foldl&apos;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1324215222" CREATED="1438849871012" MODIFIED="1438910358423">
<node TEXT="https://hackage.haskell.org/package/fgl-5.5.2.1/docs/src/Data-Graph-Inductive-Graph.html#delNode" ID="ID_1185817620" CREATED="1438849886474" MODIFIED="1438849886474" LINK="https://hackage.haskell.org/package/fgl-5.5.2.1/docs/src/Data-Graph-Inductive-Graph.html#delNode"/>
<node ID="ID_194167626" CREATED="1438849873395" MODIFIED="1438849881806"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <pre http-equiv="content-type" style="letter-spacing: normal; text-indent: 0px; color: rgb(0, 0, 0); font-style: normal; word-spacing: 0px; line-height: normal; text-align: start; font-variant: normal; font-weight: normal; text-transform: none" content="text/html; charset=utf-8">-- | Remove multiple 'Node's from the 'Graph'.
delNodes :: (Graph gr) =&gt; [Node] -&gt; gr a b -&gt; gr a b
delNodes vs g = foldl' (snd .: flip match) g vs</pre>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node TEXT="by operation" ID="ID_519798917" CREATED="1442788890771" MODIFIED="1442788892376">
<node TEXT="add node to graph" ID="ID_1686288935" CREATED="1439150335338" MODIFIED="1439152018741">
<node TEXT="insNode :: DynGraph gr =&gt; LNode a -&gt; gr a b -&gt; gr a b" ID="ID_1468837947" CREATED="1439151082324" MODIFIED="1439151083648"/>
<node TEXT="insNodes :: DynGraph gr =&gt; [LNode a] -&gt; gr a b -&gt; gr a b" ID="ID_1802142914" CREATED="1439151291285" MODIFIED="1439151292307"/>
</node>
<node TEXT="change label of node in graph" ID="ID_1760605905" CREATED="1439152022283" MODIFIED="1439152255783">
<node TEXT="use match and (&amp;)" ID="ID_1966180155" CREATED="1439151094332" MODIFIED="1439152027519"/>
</node>
<node TEXT="delete node from graph" ID="ID_1831039242" CREATED="1439151147844" MODIFIED="1439151155502">
<node TEXT="delNode :: Graph gr =&gt; Node -&gt; gr a b -&gt; gr a b" ID="ID_297361601" CREATED="1439151151612" MODIFIED="1439151152779"/>
<node TEXT="there&apos;s a fast way for plurals, too" ID="ID_930294772" CREATED="1439151363556" MODIFIED="1439151368171"/>
</node>
<node TEXT="add edge to graph" ID="ID_1109056168" CREATED="1439150351603" MODIFIED="1439150354657">
<node TEXT="insEdge :: DynGraph gr =&gt; LEdge b -&gt; gr a b -&gt; gr a b" ID="ID_1048969566" CREATED="1439151115412" MODIFIED="1439151116617"/>
<node TEXT="insEdges :: DynGraph gr =&gt; [LEdge b] -&gt; gr a b -&gt; gr a b" ID="ID_1819629719" CREATED="1439151272572" MODIFIED="1439151273563"/>
</node>
<node TEXT="change label of edge in graph" ID="ID_320716679" CREATED="1439152256762" MODIFIED="1439152260504">
<node TEXT="could just delete and add again" ID="ID_259285915" CREATED="1439152268148" MODIFIED="1439152274076"/>
</node>
<node TEXT="delete edge from graph" ID="ID_350376603" CREATED="1439151162260" MODIFIED="1439151177366">
<node TEXT="delNode :: Graph gr =&gt; Node -&gt; gr a b -&gt; gr a b" ID="ID_312691621" CREATED="1439151165252" MODIFIED="1439151171591"/>
<node TEXT="there&apos;s a fast way for plurals, too" ID="ID_1714795124" CREATED="1439151363556" MODIFIED="1439151368171"/>
</node>
<node TEXT="get label at node, edge" ID="ID_1066526873" CREATED="1439150494851" MODIFIED="1439150499162">
<node TEXT="edgeLabel :: LEdge b -&gt; b" ID="ID_686669911" CREATED="1439151020556" MODIFIED="1439151021347"/>
<node TEXT="lab :: Graph gr =&gt; gr a b -&gt; Node -&gt; Maybe a" ID="ID_1260828140" CREATED="1439152483127" MODIFIED="1439152485628"/>
</node>
<node TEXT="lookup = lab" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1038191014" CREATED="1438909762268" MODIFIED="1442791735583">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1066526873" STARTINCLINATION="144;0;" ENDINCLINATION="144;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="get neighbors" ID="ID_413583720" CREATED="1439151525477" MODIFIED="1439151527601">
<node TEXT="lsuc :: Graph gr =&gt; gr a b -&gt; Node -&gt; [(Node, b)]&#xa;lpre :: same" ID="ID_1975678770" CREATED="1439151529381" MODIFIED="1439151598291"/>
<node TEXT="out :: Graph gr =&gt; gr a b -&gt; Node -&gt; [LEdge b]&#xa;inn :: same" ID="ID_1419749433" CREATED="1439151584461" MODIFIED="1439151594291"/>
</node>
<node TEXT="assignment|change label: seq( match, mod, &amp; )" LOCALIZED_STYLE_REF="default" ID="ID_1635343362" CREATED="1438909769780" MODIFIED="1442789242281">
<node ID="ID_1790837165" CREATED="1438909797694" MODIFIED="1438909797694"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      match the node, then add it back to the rest of the graph (which is the other return value from the match) using &amp;
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="&quot; The easiest way of changing the label of one node is to obtain its&#xa;Context using `match`, and update the label in the Context and then&#xa;put it back in the graph with (&amp;).&quot;" ID="ID_1450565154" CREATED="1442789191476" MODIFIED="1442789200295">
<node ID="ID_1210609288" CREATED="1442789209681" MODIFIED="1442789214111"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <pre content="text/html; charset=utf-8" http-equiv="content-type" style="font-style: normal; text-indent: 0px; text-align: start; word-spacing: 0px; color: rgb(0, 0, 0); font-variant: normal; line-height: normal; text-transform: none; white-space: pre-wrap; letter-spacing: normal; font-weight: normal"><i>Ivan Lazar Miljenovic, Haskell-Cafe</i></pre>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="pattern matching" ID="ID_1010566090" CREATED="1442789328327" MODIFIED="1442789330688">
<node TEXT="fgl: cannot pattern match on &amp;; rather, use isEmpty and matchAny" ID="ID_735579650" CREATED="1439232163480" MODIFIED="1439232190487"/>
</node>
</node>
</node>
<node TEXT="emul" ID="ID_1850338687" CREATED="1442788818387" MODIFIED="1442788819282">
<node TEXT="can find FGL&apos;s reverse dependencies" LOCALIZED_STYLE_REF="styles.subtopic" ID="ID_1862442968" CREATED="1439753605857" MODIFIED="1442789347854">
<node TEXT="http://packdeps.haskellers.com/reverse/fgl" ID="ID_172286898" CREATED="1439753618869" MODIFIED="1439753618869" LINK="http://packdeps.haskellers.com/reverse/fgl"/>
</node>
<node TEXT="partial graph traversal" ID="ID_1579042159" CREATED="1439522086151" MODIFIED="1439522090529">
<node TEXT="https://github.com/haskell/fgl/blob/master/fgl-arbitrary/test/TestSuite.hs#L50" ID="ID_184501666" CREATED="1439522088650" MODIFIED="1439522088650" LINK="https://github.com/haskell/fgl/blob/master/fgl-arbitrary/test/TestSuite.hs#L50"/>
</node>
</node>
<node TEXT="implem" ID="ID_1617220420" CREATED="1442790423175" MODIFIED="1442790425266">
<node TEXT="get selected edges" ID="ID_675253375" CREATED="1442789031555" MODIFIED="1442789033872">
<node TEXT="I need to write this myself" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1185811357" CREATED="1442789117394" MODIFIED="1442790394045"/>
<node TEXT="edgesOfKind :: String -&gt; Node -&gt; [LEdge]&#xa;edgesOfKind s n = edges with label s from n" ID="ID_1932764511" CREATED="1439150500235" MODIFIED="1439150575755"/>
</node>
</node>
<node TEXT="dub (inc questions)" LOCALIZED_STYLE_REF="styles.topic" ID="ID_497300679" CREATED="1442788733122" MODIFIED="1442788951925">
<node TEXT="I think I know" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1765561445" CREATED="1442788763385" MODIFIED="1442788767536">
<node TEXT="in a chain of contexts, does each have to refer only to nodes in the graph it is wrapped around?" LOCALIZED_STYLE_REF="styles.subsubtopic" ID="ID_352375346" CREATED="1421651191394" MODIFIED="1421651262172">
<node TEXT="or can it point in the other direction?" ID="ID_1891020395" CREATED="1421651229963" MODIFIED="1421651234280"/>
<node TEXT="this is testable on my own" LOCALIZED_STYLE_REF="styles.subsubtopic" ID="ID_1224919709" CREATED="1421651252315" MODIFIED="1421651264580"/>
</node>
<node TEXT="how can FGL lookup be faster than O(n)?" ID="ID_82482630" CREATED="1439037090968" MODIFIED="1439037098159">
<node TEXT="read paper" ID="ID_1100522704" CREATED="1439037099079" MODIFIED="1439037100334"/>
<node TEXT="so said Tikhon Jelvis maybe; whoever answered my last email" ID="ID_684004316" CREATED="1439037101080" MODIFIED="1439037110816"/>
<node TEXT="2015 08 07" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1418288138" CREATED="1439037111096" MODIFIED="1439037121529"/>
</node>
<node TEXT="in Graph a b, a is node label type, b edge label type" ID="ID_186641366" CREATED="1439150436379" MODIFIED="1439150451386"/>
</node>
<node TEXT="I doubt it matters" LOCALIZED_STYLE_REF="styles.topic" ID="ID_525250003" CREATED="1442788769227" MODIFIED="1442788774223">
<node TEXT="&quot;context :: Graph gr =&gt; gr a b -&gt; Node -&gt; Context a b&quot;" ID="ID_343534977" CREATED="1421651308811" MODIFIED="1421651319811">
<node TEXT="https://hackage.haskell.org/package/fgl-5.5.0.1/docs/src/Data-Graph-Inductive-Graph.html#context" ID="ID_1498853160" CREATED="1421651374812" MODIFIED="1421651374812" LINK="https://hackage.haskell.org/package/fgl-5.5.0.1/docs/src/Data-Graph-Inductive-Graph.html#context"/>
<node TEXT="why not just write this?" ID="ID_1599993949" CREATED="1421651337955" MODIFIED="1421651346473"/>
<node TEXT="&quot;context :: Graph a b -&gt; Node -&gt; Context a b&quot;" ID="ID_637984596" CREATED="1421651346851" MODIFIED="1421651354744"/>
</node>
</node>
<node TEXT="I doubt it" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1860648762" CREATED="1442788775263" MODIFIED="1442788779477">
<node TEXT="non-tree graphs not implemented?" ID="ID_304049351" CREATED="1421652050252" MODIFIED="1421714895179">
<node TEXT="konsole transcript" ID="ID_1246261467" CREATED="1421652838029" MODIFIED="1421652841458">
<node TEXT="Next? pwd" ID="ID_901811658" CREATED="1421652062049" MODIFIED="1421652062049"/>
<node TEXT="/home/jeff/.cabal/packages/hackage.haskell.org/fgl/5.5.0.1/fgl-5.5.0.1, 2015 01 18/Data/Graph" ID="ID_199149340" CREATED="1421652062049" MODIFIED="1421652062049"/>
<node TEXT="Next? egrep &quot;match.*=&quot; *.hs */*.hs */*/*.hs" ID="ID_518869663" CREATED="1421652062050" MODIFIED="1421652062050"/>
<node TEXT="Inductive/Graph.hs:match      ::    Graph gr =&gt; Node -&gt; gr a b -&gt; Decomp gr a b" ID="ID_715245451" CREATED="1421652062054" MODIFIED="1421652062054"/>
<node TEXT="Inductive/Graph.hs:matchAny   :: Graph gr =&gt; gr a b -&gt; GDecomp g a b" ID="ID_441183433" CREATED="1421652062055" MODIFIED="1421652062055"/>
<node TEXT="Inductive/Graph.hs:  matchAny g = case labNodes g of" ID="ID_1491178921" CREATED="1421652062058" MODIFIED="1421652062058"/>
<node TEXT="Inductive/Graph.hs:lab g v = fst (match v g) &gt;&gt;= return.lab&apos;" ID="ID_1318102679" CREATED="1421652062061" MODIFIED="1421652062061"/>
<node TEXT="Inductive/Monad.hs:  matchAnyM g = do vs &lt;- labNodesM g" ID="ID_187377968" CREATED="1421652062062" MODIFIED="1421652062062"/>
<node TEXT="Inductive/PatriciaTree.hs:    match           = matchGr" ID="ID_575045865" CREATED="1421652062063" MODIFIED="1421652062063"/>
<node TEXT="Inductive/Tree.hs:  match           = matchGr" ID="ID_456999215" CREATED="1421652062064" MODIFIED="1421652062064"/>
<node TEXT="Inductive/Tree.hs:  matchAny (Gr Empty)                = error &quot;Match Exception, Empty Graph&quot;" ID="ID_424438338" CREATED="1421652062064" MODIFIED="1421652062064"/>
<node TEXT="Inductive/Tree.hs:  matchAny g@(Gr (Node _ _ (v,_) _)) = (c,g&apos;) where (Just c,g&apos;) = matchGr v g" ID="ID_606844469" CREATED="1421652062065" MODIFIED="1421652062065"/>
<node TEXT="Inductive/Tree.hs:matchGr v (Gr g) =" ID="ID_1411359281" CREATED="1421652062068" MODIFIED="1421652062068"/>
<node TEXT="Inductive/Monad/IOArray.hs:  matchM v g = do g&apos;@(SGr (n,a,m)) &lt;- g" ID="ID_1612577082" CREATED="1421652062072" MODIFIED="1421652062072"/>
<node TEXT="Next?" ID="ID_346400831" CREATED="1421652062073" MODIFIED="1421652062073"/>
</node>
</node>
<node TEXT="would it be good to use unlabeled graphs in FGL plus some dictionaries?" ID="ID_391222691" CREATED="1438850002828" MODIFIED="1442788916716"/>
</node>
</node>
</node>
</node>
<node TEXT="&lt; freq" LOCALIZED_STYLE_REF="default" ID="ID_126319615" CREATED="1418933126163" MODIFIED="1427780392130">
<font BOLD="true"/>
<node TEXT="buffer" ID="ID_780534480" CREATED="1413070320300" MODIFIED="1418932960627">
<node TEXT="-&gt; see &quot;(imperative) I/O&quot;" ID="ID_622059991" CREATED="1413070322016" MODIFIED="1418932980144"/>
<node TEXT="flush" ID="ID_484023223" CREATED="1413153572194" MODIFIED="1418932962841">
<node TEXT="-&gt; see &quot;imperative IO/files/flushing&quot;" ID="ID_1378248464" CREATED="1413153541525" MODIFIED="1418932983009">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_649289509" STARTINCLINATION="184;0;" ENDINCLINATION="184;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
</node>
<node TEXT="fractions" ID="ID_625652825" CREATED="1413875256189" MODIFIED="1413875257272">
<node TEXT="Data.Ratio has a % operator that allows for floats that don&apos;t lose precision" ID="ID_1966931072" CREATED="1413706014289" MODIFIED="1413706037018">
<node TEXT="3%2 is the ration 3 over 2" ID="ID_388707627" CREATED="1413706037735" MODIFIED="1413706043641"/>
<node TEXT="ghci&gt; 1%3 + 5%4 &#xa;19 % 12" ID="ID_552758237" CREATED="1413706055325" MODIFIED="1413706055888"/>
</node>
</node>
<node TEXT="OSC (inc. questions)" ID="ID_228373628" CREATED="1414024306390" MODIFIED="1418870925303">
<node TEXT="must lift to avoid repeated connection?" ID="ID_1394779685" CREATED="1414024312814" MODIFIED="1414030578721">
<node TEXT="link in from &quot;choice&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1259558178" CREATED="1414024463873" MODIFIED="1414024495136"/>
<node TEXT="via Rohan, 2014 10 22" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_696502487" CREATED="1414024327917" MODIFIED="1414024332859"/>
<node TEXT="main = withMax $ mapM_ note (cycle [1,1,2])" ID="ID_1740845566" CREATED="1414024307475" MODIFIED="1414024307475"/>
<node TEXT="withMax = withTransport (openUDP &quot;127.0.0.1&quot; 9000)" ID="ID_374194781" CREATED="1414024307475" MODIFIED="1414024307475"/>
<node TEXT="sin0 param val = sendMessage (Message &quot;/sin0&quot; [string param,float val])" ID="ID_1867194116" CREATED="1414024307475" MODIFIED="1414024307475"/>
<node TEXT="pause = liftIO . pauseThread . (* 0.6)" ID="ID_342334997" CREATED="1414024307476" MODIFIED="1414024307476"/>
<node TEXT="note n = do" ID="ID_671142253" CREATED="1414024307476" MODIFIED="1414024307476">
<node TEXT="sin0 &quot;frq&quot; 100" ID="ID_1500102250" CREATED="1414024307477" MODIFIED="1414024307477"/>
<node TEXT="sin0 &quot;amp&quot; 1" ID="ID_1716317928" CREATED="1414024307477" MODIFIED="1414024307477"/>
<node TEXT="pause n" ID="ID_1766052504" CREATED="1414024307477" MODIFIED="1414024307477"/>
<node TEXT="sin0 &quot;amp&quot; 0" ID="ID_1608844993" CREATED="1414024307477" MODIFIED="1414024307477"/>
<node TEXT="pause n" ID="ID_1070021244" CREATED="1414024307477" MODIFIED="1414024307477"/>
</node>
</node>
<node TEXT="does it matter that I can send OSC-formatted strings and floats but not ints?" ID="ID_1457133750" CREATED="1415509328414" MODIFIED="1415509339242">
<node TEXT="this works" ID="ID_1524938539" CREATED="1415509345599" MODIFIED="1415509346786">
<node TEXT="test n = do" ID="ID_1297864668" CREATED="1415509347073" MODIFIED="1415509347073">
<node TEXT="withMax (sendMessage (Message &quot;word&quot; [string &quot;norp&quot;, float 3] ) )" ID="ID_162285409" CREATED="1415509347073" MODIFIED="1415509347073"/>
</node>
</node>
<node TEXT="if I add &quot;, int 4&quot; or variations thereof, it fails" ID="ID_1507236505" CREATED="1415509347639" MODIFIED="1415509358818">
<node TEXT="without the quotation marks" ID="ID_350843044" CREATED="1415509362158" MODIFIED="1415509365890"/>
</node>
</node>
</node>
<node TEXT="profiling" ID="ID_101668515" CREATED="1413874803933" MODIFIED="1413874805777">
<node TEXT="ThreadScope" ID="ID_626413956" CREATED="1413703045140" MODIFIED="1413703050039">
<node TEXT="generates graphs (for performance eval) from logs" ID="ID_1711412956" CREATED="1413703055195" MODIFIED="1413703064917"/>
<node TEXT="http://chimera.labs.oreilly.com/books/1230000000929/ch15.html#sec_conc_eventlogging" ID="ID_365385982" CREATED="1413703071076" MODIFIED="1413703071076" LINK="http://chimera.labs.oreilly.com/books/1230000000929/ch15.html#sec_conc_eventlogging"/>
</node>
</node>
<node TEXT="reflect" LOCALIZED_STYLE_REF="default" ID="ID_542628539" CREATED="1413875929633" MODIFIED="1418933025581">
<node TEXT="can test whether a function is defined with :t, and whether a class is defined with ::info" ID="ID_1067066153" CREATED="1413409271766" MODIFIED="1413875917925"/>
</node>
<node TEXT="timing" ID="ID_1172712375" CREATED="1413742834750" MODIFIED="1413752670501">
<node TEXT="-&gt; see also Unix/timing" ID="ID_689476851" CREATED="1418933068060" MODIFIED="1418933073263"/>
<node TEXT="reatltime sched package" ID="ID_1450479825" CREATED="1413745425327" MODIFIED="1413745438375">
<node TEXT="https://hackage.haskell.org/package/posix-realtime" ID="ID_1167620501" CREATED="1413745423810" MODIFIED="1413745423810" LINK="https://hackage.haskell.org/package/posix-realtime"/>
</node>
<node TEXT="to disable buffering: code" ID="ID_1307894948" CREATED="1413742890834" MODIFIED="1413742918458">
<node TEXT="import System.IO" ID="ID_166384871" CREATED="1413742906768" MODIFIED="1413742907220"/>
<node TEXT="main = do" ID="ID_656671630" CREATED="1413742907775" MODIFIED="1413742911642">
<node TEXT="hSetBuffering stdout NoBuffering" ID="ID_1145718208" CREATED="1413742898050" MODIFIED="1413742898050"/>
<node TEXT="..." ID="ID_1929797657" CREATED="1413742912759" MODIFIED="1413742913418"/>
</node>
</node>
<node TEXT="import Data.Time" LOCALIZED_STYLE_REF="default" ID="ID_110955401" CREATED="1413615473795" MODIFIED="1413874465740">
<node TEXT="getCurrentTime" ID="ID_1692447132" CREATED="1413615473795" MODIFIED="1413615473795"/>
</node>
</node>
<node TEXT="UDP" ID="ID_1788005912" CREATED="1413684285234" MODIFIED="1413875526936">
<node TEXT="Real World Haskell on networking" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1070267129" CREATED="1413843831269" MODIFIED="1413843843045">
<node TEXT="http://book.realworldhaskell.org/read/sockets-and-syslog.html" ID="ID_1191728006" CREATED="1413843841312" MODIFIED="1413843841312" LINK="http://book.realworldhaskell.org/read/sockets-and-syslog.html"/>
</node>
<node TEXT="UDP tool, RWH, ch 27" ID="ID_841247125" CREATED="1413845277435" MODIFIED="1413845286102">
<node TEXT="in Python this works" ID="ID_362892685" CREATED="1413845288747" MODIFIED="1413845291093">
<node TEXT="aiosc.send((&apos;127.0.0.1&apos;, 9000), message) )" ID="ID_653224216" CREATED="1413845286427" MODIFIED="1413845286427"/>
</node>
</node>
<node TEXT="to google under mailing lists" ID="ID_282685156" CREATED="1413684383010" MODIFIED="1413766115993">
<node TEXT="Google this" ID="ID_942049475" CREATED="1413766099932" MODIFIED="1413766101391"/>
<node TEXT="udp site:http://www.haskell.org/pipermail/" ID="ID_928110277" CREATED="1413684388574" MODIFIED="1413766149618"/>
</node>
<node TEXT="a UDP library" ID="ID_1962744508" CREATED="1413684395522" MODIFIED="1413684398094">
<node TEXT="http://hackage.haskell.org/package/network-conduit-0.6.1.1/docs/Data-Conduit-Network-UDP.html" ID="ID_1444785267" CREATED="1413684289996" MODIFIED="1413684289996" LINK="http://hackage.haskell.org/package/network-conduit-0.6.1.1/docs/Data-Conduit-Network-UDP.html"/>
</node>
<node TEXT="vocab" ID="ID_1333513215" CREATED="1413843371494" MODIFIED="1413843372842">
<node TEXT="socket" ID="ID_1139541711" CREATED="1413843373062" MODIFIED="1413843373866">
<node TEXT="in CS networking generally, is one endpoint of a communication line" ID="ID_118140381" CREATED="1413843374038" MODIFIED="1413843388729"/>
</node>
</node>
</node>
<node TEXT="Unix" ID="ID_1069848802" CREATED="1413875044312" MODIFIED="1418933015955">
<font BOLD="false"/>
<node TEXT="get process ID: &quot;ps&quot;" LOCALIZED_STYLE_REF="default" ID="ID_960314357" CREATED="1413746518291" MODIFIED="1413875042145">
<node TEXT="then look in the &quot;CMD&quot; column to find, e.g., &quot;./fast&quot;" ID="ID_1034215415" CREATED="1413746533522" MODIFIED="1413746556611">
<node TEXT="for the code compiled from fast.hs" ID="ID_1162420266" CREATED="1413746568230" MODIFIED="1413746580281"/>
</node>
</node>
<node TEXT="timing" ID="ID_1971952987" CREATED="1418933057452" MODIFIED="1418933058280">
<node TEXT="&quot;chrt&quot;" ID="ID_244471795" CREATED="1413746962930" MODIFIED="1413746974645"/>
<node TEXT="http://ccrma.stanford.edu/planetccrma/man/man2/sched_setscheduler.2.html" ID="ID_760423356" CREATED="1413745910030" MODIFIED="1413745910030" LINK="http://ccrma.stanford.edu/planetccrma/man/man2/sched_setscheduler.2.html"/>
<node TEXT="my system doesn&apos;t have it" ID="ID_1428570182" CREATED="1413746975218" MODIFIED="1413746979429"/>
<node TEXT="Brandon on Haskell-Cafe rec&apos;s" ID="ID_800616162" CREATED="1413746979682" MODIFIED="1413746987164"/>
</node>
</node>
</node>
</node>
<node TEXT="GHC: compile, run" LOCALIZED_STYLE_REF="default" ID="ID_1915591689" CREATED="1412991179837" MODIFIED="1422665853178">
<node TEXT="helloworld.hs must exist" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1086031515" CREATED="1412991232037" MODIFIED="1420587909932"/>
<node TEXT="alt&apos;vs" ID="ID_1648862223" CREATED="1413068964538" MODIFIED="1418933510146">
<node TEXT="not entirely equivalent" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_500603759" CREATED="1413071493158" MODIFIED="1413071499062">
<node TEXT="if I compile &quot;sequence.hs&quot;, it won&apos;t print the data structure at the end" ID="ID_1316943503" CREATED="1413071502453" MODIFIED="1413071517791"/>
<node TEXT="but if I &quot;runhaskell&quot; it, yes" ID="ID_1674178146" CREATED="1413071533922" MODIFIED="1413071538165">
<node TEXT="jbbs-mbp:io dopethatwantscash$ runhaskell sequence.hs&#xa;1&#xa;2&#xa;3&#xa;4&#xa;5&#xa;[(),(),(),(),()]" ID="ID_1276619670" CREATED="1413071525995" MODIFIED="1413071526991"/>
</node>
<node TEXT="the code" ID="ID_1654618472" CREATED="1413071567368" MODIFIED="1413071568371">
<node TEXT="main = do&#xa;     sequence (map print [1,2,3,4,5])" ID="ID_391187769" CREATED="1413071568671" MODIFIED="1413071569323"/>
</node>
</node>
<node TEXT="compiled" ID="ID_1783841084" CREATED="1413068970386" MODIFIED="1413069010081">
<node TEXT="ghc --make helloworld" ID="ID_577792810" CREATED="1412991183654" MODIFIED="1412991184435"/>
<node TEXT="./helloworld" ID="ID_1705678892" CREATED="1412991227694" MODIFIED="1412991230280"/>
</node>
<node TEXT="exec &quot;on the fly&quot;" ID="ID_1075339066" CREATED="1413068972489" MODIFIED="1413069016052">
<node TEXT="runhaskell helloworld.hs" ID="ID_476589010" CREATED="1413068979017" MODIFIED="1413068987531"/>
</node>
</node>
</node>
<node TEXT="GHCI" LOCALIZED_STYLE_REF="default" ID="ID_548849308" CREATED="1413874216323" MODIFIED="1418936881454">
<font BOLD="false"/>
<node TEXT="commands" LOCALIZED_STYLE_REF="default" ID="ID_1186312640" CREATED="1413700829451" MODIFIED="1413876242972">
<font BOLD="true"/>
<node TEXT="exhaustive of :?" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_41750382" CREATED="1413876263466" MODIFIED="1413876303722">
<node TEXT="I built this list from reading &quot;:?&quot;." ID="ID_1304005433" CREATED="1413876284628" MODIFIED="1413876294187"/>
</node>
<node TEXT="details (untransferred) here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_193277291" CREATED="1413702593959" MODIFIED="1413876312745">
<node TEXT="http://www.haskell.org/ghc/docs/latest/html/users_guide/ghci-commands.html#id2902944" ID="ID_450021645" CREATED="1413702591641" MODIFIED="1413702591641" LINK="http://www.haskell.org/ghc/docs/latest/html/users_guide/ghci-commands.html#id2902944"/>
</node>
<node TEXT=":browse [module name]" LOCALIZED_STYLE_REF="default" ID="ID_1037864657" CREATED="1413700880231" MODIFIED="1413701450347"/>
<node TEXT=":set and :unset options" ID="ID_1880135521" CREATED="1413702860844" MODIFIED="1418936920408"/>
<node TEXT="definition" ID="ID_1782812988" CREATED="1413701889380" MODIFIED="1413701891036">
<font BOLD="true"/>
<node TEXT=":def" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_629682384" CREATED="1413701523029" MODIFIED="1413701524743">
<node TEXT="see help at :?" ID="ID_365592679" CREATED="1413701544283" MODIFIED="1413701546462"/>
</node>
<node TEXT=":undef" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_169475758" CREATED="1413701892356" MODIFIED="1413701895879"/>
</node>
<node TEXT="execution" ID="ID_1858807538" CREATED="1413701594126" MODIFIED="1413701600281">
<font BOLD="true"/>
<node TEXT=":![shell command]" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1923715343" CREATED="1413700936089" MODIFIED="1413701842134">
<node TEXT="the effects of cd do not persist outside of the GHC session" ID="ID_1109732575" CREATED="1413701008275" MODIFIED="1413701024397"/>
<node TEXT="Prelude&gt; :! python3 test.py&#xa;3&#xa;Prelude&gt;" ID="ID_1126695037" CREATED="1413701839976" MODIFIED="1413701840572">
<node TEXT="where &quot;test.py&quot; contains the single line &quot;print (3)&quot;" ID="ID_1569711551" CREATED="1413701846968" MODIFIED="1413701855772"/>
</node>
</node>
<node TEXT=":{&#xa;[lines]&#xa;:}" ID="ID_950795398" CREATED="1413700830426" MODIFIED="1421614601631">
<node TEXT="multi-line commands" ID="ID_744141927" CREATED="1413700848034" MODIFIED="1413700853788"/>
</node>
<node TEXT=":run" ID="ID_314799461" CREATED="1413701591663" MODIFIED="1413701592826"/>
<node TEXT=":main" LOCALIZED_STYLE_REF="default" ID="ID_1057617717" CREATED="1413701446188" MODIFIED="1413701449588"/>
<node TEXT=":cmd [expression]" ID="ID_1067502990" CREATED="1413701125000" MODIFIED="1413701131051">
<node TEXT="what I thought &quot;eval&quot; woudl do" ID="ID_1269663186" CREATED="1413701132208" MODIFIED="1413701143922"/>
<node TEXT="executes Haskell code encoded as an IO String" ID="ID_610898917" CREATED="1413701146318" MODIFIED="1413701161480"/>
<node TEXT="ex&apos;l" ID="ID_915062448" CREATED="1413701173397" MODIFIED="1413701174864">
<node TEXT="Prelude&gt; :cmd return &quot;print 3&quot;" ID="ID_505253055" CREATED="1413701175342" MODIFIED="1413701175342"/>
<node TEXT="3" ID="ID_1214196706" CREATED="1413701175342" MODIFIED="1413701175342"/>
</node>
</node>
<node TEXT=":script" ID="ID_1211564142" CREATED="1413701738002" MODIFIED="1413701739324">
<node TEXT="why not just use &quot;:!&quot;?" ID="ID_1098583858" CREATED="1413701739634" MODIFIED="1413701813454"/>
</node>
</node>
<node TEXT="modules" ID="ID_736048618" CREATED="1413701472409" MODIFIED="1413701503969">
<font BOLD="true"/>
<node TEXT=":issafe" ID="ID_1448980812" CREATED="1413701500447" MODIFIED="1413701502394"/>
<node TEXT=":load" ID="ID_1767084024" CREATED="1413701478761" MODIFIED="1413701479860">
<node TEXT="propogates along dependence" ID="ID_1686342466" CREATED="1413701480105" MODIFIED="1413701490501"/>
</node>
<node TEXT=":reload" ID="ID_1629084706" CREATED="1413701470082" MODIFIED="1413701471364"/>
</node>
<node TEXT="inspectors" ID="ID_1413539394" CREATED="1413701404799" MODIFIED="1413701408455">
<font BOLD="true"/>
<node TEXT=":info" LOCALIZED_STYLE_REF="default" ID="ID_123601830" CREATED="1413701332390" MODIFIED="1413701427589">
<node TEXT="Prelude&gt; :info &gt;&#xa;class Eq a =&gt; Ord a where&#xa;  ...&#xa;  (&gt;) :: a -&gt; a -&gt; Bool&#xa;  ...&#xa;   -- Defined in &#x2018;GHC.Classes&#x2019;&#xa;infix 4 &gt;" ID="ID_917244858" CREATED="1413701342277" MODIFIED="1413701342872"/>
</node>
<node TEXT=":kind" LOCALIZED_STYLE_REF="default" ID="ID_1306014072" CREATED="1413701400720" MODIFIED="1413701427398"/>
<node TEXT=":t" ID="ID_181594653" CREATED="1413701424382" MODIFIED="1413701425633"/>
<node TEXT=":show paths" ID="ID_1908524028" CREATED="1413702384551" MODIFIED="1413702391938">
<node TEXT="&quot;search paths&quot;" ID="ID_487778128" CREATED="1413702394694" MODIFIED="1413702418495"/>
<node TEXT="includes &quot;working directory&quot;" ID="ID_1338480256" CREATED="1413702413629" MODIFIED="1413702423231"/>
</node>
<node TEXT="imports, modules" ID="ID_419321195" CREATED="1413702232981" MODIFIED="1413702241708">
<font BOLD="true"/>
<node TEXT="links in" ID="ID_784602736" CREATED="1413702361323" MODIFIED="1413702363748"/>
<node TEXT="compared" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_85051247" CREATED="1413702242852" MODIFIED="1413702314634">
<node TEXT="jbbs-mbp:works_03_terse dopethatwantscash$ ls&#xa;fast        fast.hs        rhythm        rhythm.hs&#xa;fast.hi     fast.o         rhythm.hi     rhythm.o&#xa;&#xa;jbbs-mbp:works_03_terse dopethatwantscash$ ghci&#xa;GHCi, version 7.8.3: http://www.haskell.org/ghc/  :? for help&#xa;Loading package ghc-prim ... linking ... done.&#xa;Loading package integer-gmp ... linking ... done.&#xa;Loading package base ... linking ... done.&#xa;&#xa;Prelude&gt; :l fast&#xa;[1 of 1] Compiling Main             ( fast.hs, interpreted )&#xa;Ok, modules loaded: Main.&#xa;*Main&gt; :show modules&#xa;Main             ( fast.hs, interpreted )&#xa;*Main&gt; import Data.List&#xa;*Main Data.List&gt; :show imports&#xa;import Data.List&#xa;:module +*Main -- added automatically" ID="ID_1292591176" CREATED="1413702286881" MODIFIED="1413702306944"/>
</node>
<node TEXT=":show imports" ID="ID_876580284" CREATED="1413702076275" MODIFIED="1413702078974">
<node TEXT="&quot;imports&quot; a string literal" ID="ID_969949965" CREATED="1413702083594" MODIFIED="1413702116422"/>
</node>
<node TEXT=":show modules" ID="ID_1957733656" CREATED="1413702156236" MODIFIED="1413702158839">
<node TEXT="different from imports" ID="ID_1435513805" CREATED="1413702159125" MODIFIED="1413702162294"/>
</node>
<node TEXT=":show packages" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_514660772" CREATED="1413702330228" MODIFIED="1413702334077">
<node TEXT="??" ID="ID_537455377" CREATED="1413702332476" MODIFIED="1413702333183"/>
</node>
</node>
</node>
</node>
<node TEXT="tab completion" ID="ID_1026806925" CREATED="1413230128590" MODIFIED="1413876321296">
<node TEXT="ghci has it" ID="ID_1161412103" CREATED="1413876321959" MODIFIED="1413876323609"/>
<node TEXT="including from &quot;:&quot;" ID="ID_149808720" CREATED="1413230132525" MODIFIED="1413230138576"/>
</node>
</node>
<node TEXT="ghc, cabal, stack(age), graph-db" LOCALIZED_STYLE_REF="default" ID="ID_1539939586" CREATED="1432690583044" MODIFIED="1445313043589">
<font BOLD="true"/>
<node TEXT="2015 05 25, via Elliot" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_50092190" CREATED="1432690600476" MODIFIED="1432692294203">
<node TEXT="via Elliot circa 2015 05 15" LOCALIZED_STYLE_REF="default" ID="ID_1815726634" CREATED="1432692286956" MODIFIED="1432692312064"/>
</node>
<node TEXT="ghc" ID="ID_59311671" CREATED="1432539570651" MODIFIED="1432539571496">
<node TEXT="Installing GHC from source (https://www.haskell.org/ghc/download_ghc_7_8_4#x86_64linux    INSTALL file tells you what to do, might need to sudo apt-get install libgmp-devel or something)" ID="ID_652238953" CREATED="1431737442590" MODIFIED="1431737442590" LINK="https://www.haskell.org/ghc/download_ghc_7_8_4#x86_64linux">
<node TEXT="--elliot" ID="ID_1954107562" CREATED="1432576915052" MODIFIED="1432576917184"/>
</node>
<node TEXT="https://gist.github.com/wting/8498731" ID="ID_84614192" CREATED="1432576882231" MODIFIED="1432576882231" LINK="https://gist.github.com/wting/8498731">
<node TEXT="--google" ID="ID_1445584177" CREATED="1432576918467" MODIFIED="1432576920095"/>
</node>
<node TEXT="dub" LOCALIZED_STYLE_REF="styles.topic" ID="ID_986139868" CREATED="1432541198756" MODIFIED="1432541201910">
<node TEXT="sudo aptitude install -y libgmp3-dev" ID="ID_860513293" CREATED="1432541184108" MODIFIED="1432541245954"/>
</node>
</node>
<node TEXT="cabal" ID="ID_409690704" CREATED="1431737442585" MODIFIED="1432539580232">
<node TEXT="(=?) sandboxes" ID="ID_786374738" CREATED="1432539580585" MODIFIED="1432539602769"/>
<node TEXT="install" ID="ID_539658657" CREATED="1432539592643" MODIFIED="1432539593783">
<node TEXT="Installing Cabal from source (https://www.haskell.org/cabal/release/cabal-install-1.22.4.0/cabal-install-1.22.4.0.tar.gz    then run ./bootstrap.sh)" ID="ID_64183181" CREATED="1431737442591" MODIFIED="1431737442591" LINK="https://www.haskell.org/cabal/release/cabal-install-1.22.4.0/cabal-install-1.22.4.0.tar.gz"/>
</node>
<node TEXT="using" ID="ID_83811311" CREATED="1432539611731" MODIFIED="1432539613624">
<node TEXT="cabal init -- for YOUR projects" ID="ID_1772394915" CREATED="1431737442593" MODIFIED="1431737442593"/>
<node TEXT="cabal sandbox init" ID="ID_1168309173" CREATED="1431737442595" MODIFIED="1431737442595"/>
<node TEXT="cabal install --only-dependencies" ID="ID_72462561" CREATED="1431737442596" MODIFIED="1431737442596"/>
<node TEXT="cabal repl" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1042115446" CREATED="1431737442598" MODIFIED="1433465579163">
<node TEXT="straight from command line to ghci with needed libs loaded" ID="ID_1458689433" CREATED="1432701440933" MODIFIED="1432701459363"/>
</node>
<node TEXT="cabal build" ID="ID_117755337" CREATED="1432701671197" MODIFIED="1432701672748"/>
<node TEXT="cabal run [program]" ID="ID_1265428580" CREATED="1431737442599" MODIFIED="1432846253287"/>
<node TEXT="cabal run" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_579710389" CREATED="1432701601021" MODIFIED="1432701603234">
<node TEXT="if the executable is named in the (root (always?)) .cabal file, can run from top level, as # cabal run filename" ID="ID_5906169" CREATED="1432701603931" MODIFIED="1432701646076"/>
</node>
</node>
</node>
<node TEXT="graph-db" ID="ID_630092114" CREATED="1432694469839" MODIFIED="1432694471341">
<node TEXT="using it with cabal" ID="ID_1798999236" CREATED="1432769233971" MODIFIED="1432852277504">
<node TEXT="from Elliot" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_677099853" CREATED="1432852278638" MODIFIED="1432852281170"/>
<node TEXT="commands that execute without complaint" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_636174221" CREATED="1432701344909" MODIFIED="1432852327592"/>
<node TEXT="only run once" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1231249592" CREATED="1432852311103" MODIFIED="1432852321069">
<node TEXT="cabal sandbox init" ID="ID_3467846" CREATED="1431737442595" MODIFIED="1431737442595"/>
<node TEXT="cabal install --only-dependencies" ID="ID_169078701" CREATED="1431737442596" MODIFIED="1431737442596"/>
</node>
<node TEXT="cabal build" ID="ID_447886534" CREATED="1431737442598" MODIFIED="1432701342301"/>
<node TEXT="cabal repl" ID="ID_1151432221" CREATED="1432701386157" MODIFIED="1432852306932"/>
<node TEXT="cabal run graph-db-demo" ID="ID_994668504" CREATED="1432846255988" MODIFIED="1432846257778"/>
</node>
<node TEXT="known" ID="ID_1628434014" CREATED="1432769241579" MODIFIED="1432852345890">
<node TEXT="not all nodes connectible" ID="ID_1680088996" CREATED="1432769247763" MODIFIED="1432769251905">
<node TEXT="class Edge v v&apos; where" ID="ID_389268121" CREATED="1432769245721" MODIFIED="1432769245721"/>
<node TEXT="if an edge class is not defined from v to v&apos;, then nodes of type v cannot be connected to nodes of type v&apos;" ID="ID_1152234524" CREATED="1432769255699" MODIFIED="1432769277937"/>
</node>
</node>
<node TEXT="unknown" ID="ID_1873814813" CREATED="1432852346495" MODIFIED="1432852348972">
<node TEXT="how to" ID="ID_963715355" CREATED="1432852672815" MODIFIED="1432852674061">
<node TEXT="label an edge" ID="ID_489389069" CREATED="1432852361439" MODIFIED="1432852363644"/>
<node TEXT="edge an edge" ID="ID_256814330" CREATED="1432852366535" MODIFIED="1432852369725"/>
</node>
<node TEXT="what is" ID="ID_581170525" CREATED="1432852675127" MODIFIED="1432852677021">
<node TEXT="Index" ID="ID_1903779015" CREATED="1432852683927" MODIFIED="1432852685285">
<node TEXT="two separate types, I think" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1502929209" CREATED="1432852692639" MODIFIED="1432852708321"/>
<node TEXT="defined in Graph.hs, under class Setup s" ID="ID_1731981000" CREATED="1432852689247" MODIFIED="1432852786381">
<node TEXT="complex" ID="ID_290300300" CREATED="1432852791633" MODIFIED="1432852796522"/>
</node>
<node TEXT="defined in Model.hs, under class Edge v v&apos;" ID="ID_1336914235" CREATED="1432852710111" MODIFIED="1432852784786"/>
</node>
</node>
</node>
<node TEXT="graph-db" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_110234256" CREATED="1432805064157" MODIFIED="1432852255997">
<node TEXT="mmedge = node" ID="ID_1688808463" CREATED="1432805279205" MODIFIED="1432805282801">
<node TEXT="to label a mmedge (mindmap edge), it must be a node" ID="ID_335403141" CREATED="1432805248317" MODIFIED="1432805275022"/>
<node TEXT="that node can carry a text label" ID="ID_68416356" CREATED="1432805483453" MODIFIED="1432805487171"/>
</node>
<node TEXT="Demo.hs" ID="ID_505081001" CREATED="1432802558594" MODIFIED="1432802561528">
<node TEXT="addTarget" ID="ID_606806971" CREATED="1432802568250" MODIFIED="1432802569952">
<node TEXT="\ library/GraphDB/Graph.hs" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1549175843" CREATED="1432802702945" MODIFIED="1432802738180"/>
<node TEXT="addTarget :: (Setup s) =&gt; Node s -&gt; Node s -&gt; IO ()" ID="ID_1866991787" CREATED="1432802675876" MODIFIED="1432802675876"/>
<node TEXT="adds an edge to the graph, I think" ID="ID_967013640" CREATED="1432802649435" MODIFIED="1432802684072"/>
</node>
<node TEXT="goals" ID="ID_1374249770" CREATED="1432804137780" MODIFIED="1432804139456">
<node TEXT="make, change a text graph" ID="ID_1888333945" CREATED="1432804170212" MODIFIED="1432804180813"/>
<node TEXT="label an edge" ID="ID_830847727" CREATED="1432804159692" MODIFIED="1432804161665"/>
<node TEXT="traverse|search the graph" ID="ID_574062629" CREATED="1432804246844" MODIFIED="1432804255308"/>
</node>
<node TEXT="to write a Write" ID="ID_1578839899" CREATED="1432803569203" MODIFIED="1432803571617">
<node TEXT="this is how Demo.hs does it" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_576717472" CREATED="1432803596779" MODIFIED="1432803619459"/>
<node TEXT="execute this in a do loop" ID="ID_1883795642" CREATED="1432803580531" MODIFIED="1432803583729">
<node TEXT="G.write $ populate" ID="ID_1049975274" CREATED="1432803571994" MODIFIED="1432803571994"/>
</node>
<node TEXT="where" ID="ID_1067690014" CREATED="1432803585043" MODIFIED="1432803585897">
<node TEXT="populate :: G.Write s Catalogue t ()" ID="ID_58782324" CREATED="1432803586259" MODIFIED="1432803586259"/>
</node>
</node>
<node TEXT="mysteries" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1071623712" CREATED="1432802771355" MODIFIED="1432804133922">
<node TEXT="first see goals" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_152565647" CREATED="1432804144228" MODIFIED="1432804147390"/>
<node TEXT="s u t r" ID="ID_240789562" CREATED="1432802773218" MODIFIED="1432802776008"/>
</node>
</node>
</node>
</node>
<node TEXT="stack" ID="ID_1585465269" CREATED="1441386916441" MODIFIED="1441386917735">
<node TEXT="good instructions \ Github" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_605152260" CREATED="1445313659446" MODIFIED="1445313666917">
<node TEXT="https://github.com/commercialhaskell/stack" ID="ID_579495824" CREATED="1445313662421" MODIFIED="1445313662421" LINK="https://github.com/commercialhaskell/stack"/>
</node>
<node TEXT="change resolver to &quot;nightly-[date]&quot; to use a more recent, then run &quot;stack build&quot;" ID="ID_585126758" CREATED="1438719681785" MODIFIED="1438719919118">
<node TEXT="http://www.stackage.org/nightly-2015-08-04" ID="ID_349176245" CREATED="1438719698584" MODIFIED="1438719698584" LINK="http://www.stackage.org/nightly-2015-08-04"/>
</node>
<node TEXT="if stack complains I don&apos;t have 7.10 setup, then I can run &quot;stack setup&quot; to install 7.10" ID="ID_753593946" CREATED="1438719710017" MODIFIED="1438719747072"/>
<node TEXT="stack ghci &lt;- cabal repl" ID="ID_1935584072" CREATED="1438719796026" MODIFIED="1438719802703">
<node TEXT="loads my library" ID="ID_1684608036" CREATED="1438719803529" MODIFIED="1438719806089"/>
</node>
<node TEXT="stack snapshots are immutable" ID="ID_34618554" CREATED="1438719137311" MODIFIED="1441386813630"/>
</node>
<node TEXT="stackage" ID="ID_791274206" CREATED="1431737442585" MODIFIED="1432539554924">
<node ID="ID_1283760042" CREATED="1432539555319" MODIFIED="1432539555319"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      (look at installing the stackage-cli suite of tools for heling with this)
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="project structure" ID="ID_572237522" CREATED="1432761579976" MODIFIED="1432761582182">
<node TEXT="https://wiki.haskell.org/Structure_of_a_Haskell_project" ID="ID_1471178616" CREATED="1432761582859" MODIFIED="1432761582859" LINK="https://wiki.haskell.org/Structure_of_a_Haskell_project"/>
</node>
<node TEXT="vague" LOCALIZED_STYLE_REF="styles.topic" ID="ID_752119837" CREATED="1445313271542" MODIFIED="1445313278420">
<node TEXT="stackage &amp; hackage" ID="ID_1843863543" CREATED="1445313255679" MODIFIED="1445313259613">
<node TEXT="they are &quot;two [distinct] levels&quot;" ID="ID_21665364" CREATED="1418765135097" MODIFIED="1445313264708">
<node TEXT="writes Dan Burton, &quot;[Haskell-cafe] Haskell Polishing [was: Missing `$` like operators in Haskell]&quot;" ID="ID_1540256092" CREATED="1418765175784" MODIFIED="1418765183235"/>
</node>
</node>
</node>
</node>
<node TEXT="above: main &quot;how by part&quot; br&apos;s" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1582419897" CREATED="1420962445597" MODIFIED="1420962465360"/>
<node TEXT="pitfalls" ID="ID_1845441084" CREATED="1418936622051" MODIFIED="1418936623159">
<node TEXT="-&gt; see also &quot;eval/pitfalls&quot;" ID="ID_1135252344" CREATED="1418936623364" MODIFIED="1418936629462"/>
<node TEXT="* confusing lang" ID="ID_801586013" CREATED="1414654250050" MODIFIED="1418937588335">
<node TEXT=".= unintuitive correspondences" ID="ID_515123506" CREATED="1414655166999" MODIFIED="1418937529792"/>
<node TEXT="haskell data ~ C struct" ID="ID_600467040" CREATED="1414654261785" MODIFIED="1414654275500"/>
<node TEXT="haskell class (pronounced typeclass) ~ C class interface" ID="ID_881878084" CREATED="1414654277552" MODIFIED="1414655123616">
<node TEXT="class Eq a where &#xa;    (==) :: a -&gt; a -&gt; Bool &#xa;    (/=) :: a -&gt; a -&gt; Bool &#xa;    x == y = not (x /= y) &#xa;    x /= y = not (x == y)" LOCALIZED_STYLE_REF="default" ID="ID_667755502" CREATED="1412984311827" MODIFIED="1412984638695"/>
</node>
<node TEXT="haskell instance ~ C class func defs" ID="ID_1019193481" CREATED="1414654925046" MODIFIED="1414655402585">
<node TEXT=". these are sim, redun" ID="ID_1884011108" CREATED="1418939404043" MODIFIED="1418939407814"/>
<node TEXT="1" ID="ID_240201902" CREATED="1418939401228" MODIFIED="1418939401575">
<node TEXT="in haskell an &quot;instance&quot; defines how a type implements a class" ID="ID_169981919" CREATED="1413851258538" MODIFIED="1414654995760"/>
<node TEXT="therefore it spans multiple functions, if the class does" ID="ID_78293953" CREATED="1414654983396" MODIFIED="1414655001328"/>
</node>
<node TEXT="2" ID="ID_314532768" CREATED="1414996575241" MODIFIED="1418939403406">
<node TEXT="&quot;an instance&quot; in haskell is a body of code stating that a type is a member of a class, and describing how it meets the class&apos;s req&apos;s" ID="ID_27959062" CREATED="1414996458147" MODIFIED="1414996571357"/>
<node TEXT="example" ID="ID_998641473" CREATED="1414996507147" MODIFIED="1414996509613">
<node TEXT="quoting Prelude/Foldable.hs" ID="ID_535935618" CREATED="1414996512586" MODIFIED="1414996520309"/>
<node TEXT="-- For example, given a data type&#xa;--&#xa;-- &gt; data Tree a = Empty | Leaf a | Node (Tree a) a (Tree a)&#xa;--&#xa;-- a suitable instance would be&#xa;--&#xa;-- &gt; instance Foldable Tree where&#xa;-- &gt;    foldMap f Empty = mempty&#xa;-- &gt;    foldMap f (Leaf x) = f x&#xa;-- &gt;    foldMap f (Node l k r) = foldMap f l `mappend` f k `mappend` foldMap f r" ID="ID_1083107314" CREATED="1414996509857" MODIFIED="1414996510758"/>
</node>
</node>
</node>
<node TEXT="haskell type = synonym" ID="ID_1288703772" CREATED="1414654372911" MODIFIED="1414655141232"/>
<node TEXT="haskell [data|type|newtype], &quot;definition&quot;&#xa;~ C class data (defs? decls?)" ID="ID_456443345" CREATED="1414655038940" MODIFIED="1414655530897">
<node TEXT="in haskell, a type&apos;s &quot;definition&quot; is not all of the information about that type; it just declares its data types." ID="ID_1191281733" CREATED="1413851226940" MODIFIED="1414655081314"/>
<node TEXT="&quot;data&quot;, &quot;type&quot; and &quot;newtype&quot; can all create definitions." ID="ID_662451276" CREATED="1414655082243" MODIFIED="1414655096090"/>
</node>
<node TEXT="&quot;over&quot; and &quot;lift&quot;" ID="ID_469885329" CREATED="1413159729381" MODIFIED="1414907729469">
<node TEXT="a functor &quot;over&quot; &lt;type&gt;" ID="ID_1203949321" CREATED="1413159543390" MODIFIED="1413159575903">
<node TEXT="= a functor that &quot;has&quot; &lt;type&gt; in it" ID="ID_628414749" CREATED="1413159545046" MODIFIED="1413159571253"/>
</node>
<node TEXT="lifting" ID="ID_333065510" CREATED="1413159741453" MODIFIED="1413159743551">
<node TEXT="&quot;You can think of fmap as either a function that takes a function and a functor and then maps that function over the functor, or you can think of it as a function that takes a function and lifts that function so that it operates on functors.&quot;" ID="ID_482562910" CREATED="1413159733853" MODIFIED="1413159737816"/>
</node>
</node>
</node>
<node TEXT="parens can solve mysterious parse errors" ID="ID_93694418" CREATED="1412903373100" MODIFIED="1412903378151">
<node TEXT="around operator" ID="ID_494928791" CREATED="1418937946399" MODIFIED="1418937959594">
<node TEXT="*Main&gt; + 5 7&#xa;&#xa;&lt;interactive&gt;:57:1: parse error on input &#x2018;+&#x2019;&#xa;*Main&gt; (+) 5 7&#xa;12" ID="ID_729912325" CREATED="1412903378355" MODIFIED="1412903378949"/>
</node>
<node TEXT="around negative num" ID="ID_706310394" CREATED="1412743002172" MODIFIED="1418937962802">
<node TEXT="Prelude&gt; -1 * -3&#xa;&#xa;&lt;interactive&gt;:25:1:&#xa;    Precedence parsing error&#xa;        cannot mix &#x2018;*&#x2019; [infixl 7] and prefix `-&apos; [infixl 6] in the same infix expression&#xa;Prelude&gt; -1 * (-3)&#xa;3" ID="ID_448874402" CREATED="1418937926296" MODIFIED="1418937926979"/>
</node>
</node>
<node TEXT="in a &quot;do&quot; loop, &quot;let&quot; needs no &quot;in&quot; statement" ID="ID_1839080995" CREATED="1414018748954" MODIFIED="1414018764500"/>
<node TEXT="= and { precedence for data" ID="ID_895208825" CREATED="1418940635450" MODIFIED="1418940636666">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_93779968" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="HUnit" ID="ID_1472019825" CREATED="1422058771964" MODIFIED="1422058773089">
<node TEXT="test cases abort at the first failed assert" ID="ID_1119807426" CREATED="1422058773300" MODIFIED="1422058782297"/>
</node>
<node TEXT="indentation: one level per line?" ID="ID_683958505" CREATED="1422058787597" MODIFIED="1422059038415">
<node TEXT="I believe even the stronger." LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_862780776" CREATED="1422058908061" MODIFIED="1422058912816"/>
<node TEXT="stronger" ID="ID_1111345731" CREATED="1422058899140" MODIFIED="1422058907802">
<node TEXT="if a brace appears late (after text) in one line, I cannot indent its contents on the next lines and then indent its closing brace farther rightward on a later one" ID="ID_50281464" CREATED="1422058915861" MODIFIED="1422058950715"/>
</node>
<node TEXT="weak statement" ID="ID_438336796" CREATED="1422058894556" MODIFIED="1422058898218">
<node TEXT="if I have a couple open brackets in a line, I can&apos;t use indentation to match on a different line one closing bracket, and then on another line at a different indent level the other closing bracket" ID="ID_664779604" CREATED="1422058794372" MODIFIED="1422058844034"/>
</node>
<node TEXT="but" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1186492081" CREATED="1422059039614" MODIFIED="1422059044615">
<node TEXT="as long as each brace in a series of closing braces is on the same line, it seems to work?" ID="ID_1772445868" CREATED="1422059045116" MODIFIED="1422059061099"/>
</node>
</node>
</node>
<node TEXT="use, des" ID="ID_1659461245" CREATED="1413872104264" MODIFIED="1418935921225">
<font BOLD="true"/>
<node TEXT=".= how to design with and use it" LOCALIZED_STYLE_REF="default" ID="ID_1578877064" CREATED="1413872507676" MODIFIED="1418935940319"/>
<node TEXT="eff&apos;y" ID="ID_745297498" CREATED="1418935981426" MODIFIED="1418938000174">
<font BOLD="true"/>
<node TEXT=".= speed, memory" ID="ID_1931758167" CREATED="1418935990202" MODIFIED="1418935994053"/>
<node TEXT="lists" ID="ID_1724227807" CREATED="1412745532784" MODIFIED="1418936033265">
<font BOLD="true"/>
<node TEXT="= somewhat lang-int" ID="ID_391083944" CREATED="1413875801643" MODIFIED="1413875808710"/>
<node TEXT="list concatenation is O(N)" ID="ID_145397149" CREATED="1412745517353" MODIFIED="1412745523325"/>
<node TEXT="build lists left to right" ID="ID_1607070523" CREATED="1413601044199" MODIFIED="1413601047330">
<node TEXT="links in" ID="ID_1932954612" CREATED="1413601427596" MODIFIED="1413601428824"/>
<node TEXT="the idea (easy)" ID="ID_561221575" CREATED="1413601244740" MODIFIED="1413601252658">
<node TEXT="this is good" ID="ID_1993198496" CREATED="1413601054126" MODIFIED="1413601055442">
<node TEXT="a ++ (b ++ (c ++ (d ++ (e ++ f))))" ID="ID_1039902577" CREATED="1413601048230" MODIFIED="1413601053897"/>
</node>
<node TEXT="this is bad" ID="ID_478002052" CREATED="1413601065636" MODIFIED="1413601067368">
<node TEXT="((((a ++ b) ++ c) ++ d) ++ e) ++ f" ID="ID_1277203571" CREATED="1413601067661" MODIFIED="1413601068128"/>
</node>
</node>
<node TEXT="an example (hard)" ID="ID_1454582185" CREATED="1413601248733" MODIFIED="1413601250992">
<node TEXT="good" ID="ID_943900988" CREATED="1413601264555" MODIFIED="1413601276976">
<node TEXT="-- Learn You a Haskell, second Monad chapter" ID="ID_680423626" CREATED="1413601280515" MODIFIED="1413601280515"/>
<node TEXT="import Control.Monad.Writer" ID="ID_764190455" CREATED="1413601280515" MODIFIED="1413601280515"/>
<node TEXT="gcd&apos; :: Int -&gt; Int -&gt; Writer [String] Int" ID="ID_1656931332" CREATED="1413601280516" MODIFIED="1413601280516"/>
<node TEXT="gcd&apos; a b" ID="ID_791787766" CREATED="1413601280516" MODIFIED="1413601280516">
<node TEXT="| b == 0 = do" ID="ID_1536407837" CREATED="1413601280516" MODIFIED="1413601280516">
<node TEXT="tell [&quot;Finished with &quot; ++ show a]" ID="ID_804283126" CREATED="1413601280516" MODIFIED="1413601280516"/>
<node TEXT="return a" ID="ID_1282982155" CREATED="1413601280516" MODIFIED="1413601280516"/>
</node>
<node TEXT="| otherwise = do" ID="ID_1564152879" CREATED="1413601280516" MODIFIED="1413601280516">
<node TEXT="tell [show a ++ &quot; mod &quot; ++ show b ++ &quot; = &quot; ++ show (a `mod` b)]" ID="ID_163095007" CREATED="1413601280516" MODIFIED="1413601280516"/>
<node TEXT="gcd&apos; b (a `mod` b)" ID="ID_1137994602" CREATED="1413601280516" MODIFIED="1413601280516"/>
</node>
</node>
</node>
<node TEXT="bad" ID="ID_674509812" CREATED="1413601283528" MODIFIED="1413601283980">
<node TEXT="import Control.Monad.Writer" ID="ID_1488732953" CREATED="1413601331726" MODIFIED="1413601331726"/>
<node TEXT="gcdReverse :: Int -&gt; Int -&gt; Writer [String] Int" ID="ID_734702738" CREATED="1413601331726" MODIFIED="1413601331726"/>
<node TEXT="gcdReverse a b" ID="ID_1864743008" CREATED="1413601331727" MODIFIED="1413601331727">
<node TEXT="| b == 0 = do" ID="ID_314670907" CREATED="1413601331727" MODIFIED="1413601331727">
<node TEXT="tell [&quot;Finished with &quot; ++ show a]" ID="ID_994735949" CREATED="1413601331727" MODIFIED="1413601331727"/>
<node TEXT="return a" ID="ID_1799549636" CREATED="1413601331727" MODIFIED="1413601331727"/>
</node>
<node TEXT="| otherwise = do" ID="ID_869320437" CREATED="1413601331727" MODIFIED="1413601331727">
<node TEXT="result &lt;- gcdReverse b (a `mod` b)" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_385130207" CREATED="1413601331727" MODIFIED="1413601388449">
<node TEXT="this is bad" ID="ID_686965404" CREATED="1413601377379" MODIFIED="1413601390294"/>
</node>
<node TEXT="tell [show a ++ &quot; mod &quot; ++ show b ++ &quot; = &quot; ++ show (a `mod` b)]" ID="ID_1152490810" CREATED="1413601331727" MODIFIED="1413601331727"/>
<node TEXT="return result" ID="ID_364160745" CREATED="1413601331727" MODIFIED="1413601331727"/>
</node>
</node>
</node>
</node>
<node TEXT="the upshot: make recursion tail-recursive" ID="ID_1414260832" CREATED="1413601338964" MODIFIED="1413601347728">
<node TEXT="this is bad" ID="ID_1595080586" CREATED="1413601362643" MODIFIED="1413601379866">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_686965404" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="because the recursive call comes before the end of the branch" ID="ID_1394109963" CREATED="1413601350459" MODIFIED="1413601373710"/>
</node>
</node>
<node TEXT="difference lists instead of lists" ID="ID_581117388" CREATED="1413602047223" MODIFIED="1413873879636">
<node TEXT="see Learn You, the second Monad chapter" ID="ID_541224532" CREATED="1413602054030" MODIFIED="1413602061120"/>
</node>
<node TEXT="cons (head only) is O(1)" ID="ID_277405856" CREATED="1412745523577" MODIFIED="1412745530740"/>
</node>
<node TEXT="tail recursion" ID="ID_871891417" CREATED="1412795894019" MODIFIED="1413873670543">
<node ID="ID_405917783" CREATED="1413873670968" MODIFIED="1413873670968"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      can reduce the needed stack depth
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="anticipate partial application" ID="ID_331305347" CREATED="1413180431406" MODIFIED="1413180454961">
<node TEXT="if writing the function f x y, consider whether a user might want to partially apply f to x or y; if to y more likely than to x, reverse their order" ID="ID_25552851" CREATED="1413180456195" MODIFIED="1413180500628"/>
</node>
<node TEXT="idioms I might forget" ID="ID_454426996" CREATED="1418937085986" MODIFIED="1418937090014">
<node TEXT="&quot;return $ ...&quot;" ID="ID_1906189007" CREATED="1413227421174" MODIFIED="1418937096894">
<node TEXT="Functors, Applicative Functors and Monoids.html" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1971623641" CREATED="1413227487046" MODIFIED="1413227496435" LINK="haskell/learn_you_book/Functors,%20Applicative%20Functors%20and%20Monoids.html"/>
<node TEXT="or online" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1191723844" CREATED="1413227492567" MODIFIED="1413227496429">
<node TEXT="http://learnyouahaskell.com/functors-applicative-functors-and-monoids" ID="ID_1181631755" CREATED="1413227479572" MODIFIED="1413227479572" LINK="http://learnyouahaskell.com/functors-applicative-functors-and-monoids"/>
</node>
<node TEXT="myAction :: IO String &#xa;myAction = do &#xa;    a &lt;- getLine &#xa;    b &lt;- getLine &#xa;    return $ a ++ b" ID="ID_1763527504" CREATED="1413227434718" MODIFIED="1413227435529"/>
</node>
</node>
</node>
<node TEXT="sandbox" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1246054174" CREATED="1417494379026" MODIFIED="1420530292370">
<font BOLD="false"/>
<node ID="ID_1905442569" CREATED="1417501336577" MODIFIED="1417501336577"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      for a more recent version of whatever's not working
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="cario?" ID="ID_154286567" CREATED="1417494393640" MODIFIED="1417494394980"/>
<node TEXT="[is at 0.14 when it should be at 0.4]~ish" ID="ID_342837062" CREATED="1417494395191" MODIFIED="1417494407699"/>
</node>
<node TEXT="cabal" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1853934720" CREATED="1417463276410" MODIFIED="1420530282152">
<font BOLD="false"/>
<node TEXT="feels badly placed" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_379435672" CREATED="1420530269130" MODIFIED="1420530276490">
<font BOLD="false"/>
</node>
<node TEXT="* instructions?" ID="ID_272142455" CREATED="1417403043803" MODIFIED="1417403048790">
<node TEXT="https://www.haskell.org/pipermail/haskell-cafe/2010-February/073526.html" ID="ID_1831256747" CREATED="1417403046052" MODIFIED="1417403046052" LINK="https://www.haskell.org/pipermail/haskell-cafe/2010-February/073526.html"/>
</node>
<node TEXT="* my thread" ID="ID_1725236846" CREATED="1417403049890" MODIFIED="1417403051278">
<node TEXT="[Haskell-cafe] How to update Cabal manually?" ID="ID_1803962746" CREATED="1417403061538" MODIFIED="1417403076200"/>
</node>
<node TEXT="how to use it" ID="ID_489071327" CREATED="1417376331100" MODIFIED="1417376333625">
<node TEXT="use few &quot;cabal install&quot; commands, with multiple packages per use" ID="ID_588549109" CREATED="1417376382259" MODIFIED="1417376407342"/>
<node TEXT="if cabal complains installing A will break B" ID="ID_514712075" CREATED="1417376444146" MODIFIED="1417376543997">
<node TEXT=".= ranked alternatives" ID="ID_975663543" CREATED="1417376550889" MODIFIED="1417376556604"/>
<node TEXT="rn" ID="ID_679800951" CREATED="1417376557160" MODIFIED="1417376558460">
<node ID="ID_229954124" CREATED="1417376544706" MODIFIED="1417376544706"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      run &quot;cabal install A B&quot;
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="unregister packages that will be broken" ID="ID_1193088097" CREATED="1417376525825" MODIFIED="1417376531140">
<node TEXT="https://www.haskell.org/haskellwiki/Cabal/Survival" ID="ID_1704138115" CREATED="1417376368615" MODIFIED="1417376368615" LINK="https://www.haskell.org/haskellwiki/Cabal/Survival"/>
<node TEXT="&quot;Doing &apos;--force-reinstalls&apos; *will* break something and this will cause problems in the long run.&#xa;&#xa;Instead what should be done is to use the command &apos;ghc-pkg unregister&apos; (or the &apos;cabal-uninstall&apos; program) to remove the packages that would get broken. This is sometimes a large manual chore, but it saves trouble.&quot;" ID="ID_93168757" CREATED="1417376536969" MODIFIED="1417376584045"/>
</node>
</node>
</node>
</node>
<node TEXT="mac problem" ID="ID_1695788392" CREATED="1417376335236" MODIFIED="1417401071138">
<node TEXT="on a mac, sometimes &quot;cabal install cabal-install&quot; does not work" ID="ID_442079420" CREATED="1417376338596" MODIFIED="1417376349719">
<node TEXT="https://www.haskell.org/haskellwiki/Cabal/Survival" ID="ID_1364276239" CREATED="1417376368615" MODIFIED="1417376368615" LINK="https://www.haskell.org/haskellwiki/Cabal/Survival"/>
<node TEXT="&quot;Notice, that in some cases (OS X, especially) the new cabal-install might not be installed on top of the previous one, and the old cabal-install must be replaced manually&quot;" ID="ID_1932234142" CREATED="1417376363644" MODIFIED="1417376365319"/>
</node>
</node>
<node TEXT="options that looked useful" ID="ID_1848379459" CREATED="1417376287645" MODIFIED="1417376292792">
<node TEXT="--reinstall" ID="ID_133625887" CREATED="1417376281527" MODIFIED="1417376281527">
<node TEXT="Install even if it means installing the same version again." ID="ID_1709553144" CREATED="1417376281527" MODIFIED="1417376281527"/>
</node>
<node TEXT="--avoid-reinstalls" ID="ID_1259503236" CREATED="1417376281527" MODIFIED="1417376281527">
<node TEXT="Do not select versions that would destructively overwrite installed packages." ID="ID_356266577" CREATED="1417376281528" MODIFIED="1417376281528"/>
</node>
<node TEXT="--force-reinstalls" ID="ID_59719644" CREATED="1417376281528" MODIFIED="1417376281528">
<node TEXT="Reinstall packages even if they will most likely break other installed packages." ID="ID_1432355371" CREATED="1417376281528" MODIFIED="1417376281528"/>
</node>
<node TEXT="--upgrade-dependencies" ID="ID_1236782590" CREATED="1417376281528" MODIFIED="1417376281528">
<node TEXT="Pick the latest version for all dependencies, rather than trying to pick an installed version." ID="ID_161199325" CREATED="1417376281528" MODIFIED="1417376281528"/>
</node>
</node>
<node TEXT="to use the latest one" ID="ID_1717496382" CREATED="1417501343788" MODIFIED="1417501348087">
<node TEXT="prepend ~/Library/Haskell/bin to path" ID="ID_833660835" CREATED="1417463633635" MODIFIED="1417463655697"/>
</node>
</node>
<node TEXT="&lt; press" ID="ID_1869044767" CREATED="1418938482680" MODIFIED="1418938484091">
<node TEXT="vocab" ID="ID_660952340" CREATED="1412898003950" MODIFIED="1412898004624">
<node TEXT="predicate: any function (Bool a) =&gt; _ -&gt; a" ID="ID_1702827060" CREATED="1412898004837" MODIFIED="1412898036710"/>
</node>
<node TEXT="idios vocab used here" ID="ID_1648499565" CREATED="1418937406047" MODIFIED="1420962487427">
<node TEXT="on the use of &quot;simple&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_338026817" CREATED="1413872192976" MODIFIED="1413872203824">
<node TEXT="&quot;core&quot; and &quot;simple illustration&quot; might work better than &quot;simple&quot; here" LOCALIZED_STYLE_REF="default" ID="ID_1390124124" CREATED="1413177818298" MODIFIED="1413872202887"/>
</node>
</node>
</node>
</node>
<node TEXT="s 2015 05" ID="ID_521311508" CREATED="1430969032807" MODIFIED="1430969037084">
<node TEXT="?" ID="ID_818424386" CREATED="1421827350456" MODIFIED="1430969040705">
<font BOLD="true"/>
<node TEXT="functions are functors, where fmap is function attachment" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_276353635" CREATED="1413409999939" MODIFIED="1421784313402">
<node TEXT="this is a copy; main at comp use.mm" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_9578622" CREATED="1421784569653" MODIFIED="1421784579367"/>
<node TEXT="Huh? 2015 01 20" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_876602458" CREATED="1421784316453" MODIFIED="1421784333396"/>
<node TEXT=". demo" ID="ID_1669830057" CREATED="1413410043927" MODIFIED="1414907277109"/>
<node TEXT="Prelude&gt; (fmap (+3) (*3)) 10&#xa;33" ID="ID_720712872" CREATED="1413408766513" MODIFIED="1413408766925"/>
<node TEXT="Prelude&gt; :t fmap&#xa;fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b" ID="ID_318792597" CREATED="1413410067157" MODIFIED="1413410067496"/>
</node>
<node TEXT="How are numbers functors?" ID="ID_1628943822" CREATED="1421784809550" MODIFIED="1421784818116">
<node TEXT="1" ID="ID_1652320922" CREATED="1421786155056" MODIFIED="1421786155623">
<node TEXT="this puzzles me" ID="ID_423429323" CREATED="1421784824142" MODIFIED="1421784826250">
<node TEXT="*Main Control.Applicative&gt; :t fmap (*) 3" ID="ID_195065880" CREATED="1421784779078" MODIFIED="1421784779078"/>
<node TEXT="fmap (*) 3 :: (Functor f, Num a, Num (f a)) =&gt; f (a -&gt; a)" ID="ID_1020883771" CREATED="1421784779078" MODIFIED="1421784779078"/>
</node>
<node TEXT="because fmap&apos;s second argument is supposed to be a functor" ID="ID_747202868" CREATED="1421784827382" MODIFIED="1421784835748">
<node TEXT="*Main Control.Applicative&gt; :t fmap" ID="ID_185060147" CREATED="1421784801409" MODIFIED="1421784801409"/>
<node TEXT="fmap :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b" ID="ID_1799939469" CREATED="1421784801409" MODIFIED="1421784801409"/>
</node>
</node>
<node TEXT="2" ID="ID_984061179" CREATED="1414273676567" MODIFIED="1421786157638">
<node TEXT="Huh?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1035378071" CREATED="1421785427279" MODIFIED="1421785429432"/>
<node TEXT="Prelude Control.Monad Control.Applicative&gt; :t [1,2]&lt;*&gt;[3,4]&#xa;[1,2]&lt;*&gt;[3,4] :: (Num (a -&gt; b), Num a) =&gt; [b]" ID="ID_212303525" CREATED="1414273679376" MODIFIED="1414273679868"/>
</node>
</node>
<node TEXT="The Applicative instance for IO." ID="ID_1587681388" CREATED="1421786102385" MODIFIED="1421786118085">
<node TEXT="class (Functor f) =&gt; Applicative f where &#xa;    pure :: a -&gt; f a &#xa;    (&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b" ID="ID_1838067803" CREATED="1413222499612" MODIFIED="1413222500320"/>
<node TEXT="instance Applicative IO where &#xa;    pure = return &#xa;    a &lt;*&gt; b = do &#xa;        f &lt;- a &#xa;        x &lt;- b &#xa;        return (f x)" ID="ID_680527005" CREATED="1413226436709" MODIFIED="1413226437408"/>
</node>
<node TEXT="The Monad instance for State." LOCALIZED_STYLE_REF="default" ID="ID_85914665" CREATED="1413851186976" MODIFIED="1421790271721">
<node TEXT="huh?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1774104340" CREATED="1421789895038" MODIFIED="1421789897145"/>
<node TEXT="instance Monad (State s) where &#xa;    return x = State $ \s -&gt; (x,s) &#xa;    (State h) &gt;&gt;= f = State $ \s -&gt; let (a, newState) = h s &#xa;                                        (State g) = f a &#xa;                                    in  g newState" ID="ID_840662774" CREATED="1413851198096" MODIFIED="1413851198675"/>
</node>
<node TEXT="kinds: ?need to understand" ID="ID_411626948" CREATED="1430981121698" MODIFIED="1430981132063">
<node TEXT="understanding kinds makes things easier, says this guy" ID="ID_1750667406" CREATED="1423179445767" MODIFIED="1430981145454"/>
<node TEXT="http://softwaresimply.blogspot.com/2012/04/four-tips-for-new-haskell-programmers.html" ID="ID_712779845" CREATED="1423179469829" MODIFIED="1423179469829" LINK="http://softwaresimply.blogspot.com/2012/04/four-tips-for-new-haskell-programmers.html"/>
</node>
<node TEXT="dub" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1377515476" CREATED="1430969365955" MODIFIED="1430969386990">
<node TEXT="fmap equiv for monads" LOCALIZED_STYLE_REF="default" ID="ID_1162950472" CREATED="1427788838468" MODIFIED="1427913165915">
<node TEXT="http://en.wikipedia.org/wiki/Monad_%28functional_programming%29#fmap_and_join" ID="ID_176952479" CREATED="1427789437890" MODIFIED="1427789437890" LINK="http://en.wikipedia.org/wiki/Monad_%28functional_programming%29#fmap_and_join"/>
<node TEXT="I bet that&apos;s what I need to use for generalizing the xinput yinput example from jodonoghue&apos;s code" ID="ID_892689732" CREATED="1427788846487" MODIFIED="1427788865934"/>
</node>
</node>
<node TEXT="less pressing" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1825700558" CREATED="1430969193700" MODIFIED="1430969390766">
<node TEXT="riddle, recursion &amp; folding" LOCALIZED_STYLE_REF="default" ID="ID_1751845290" CREATED="1430961682730" MODIFIED="1430969189479">
<node TEXT="this works. how?" ID="ID_1869916610" CREATED="1430961692099" MODIFIED="1430961694494"/>
<node TEXT="fibs = 0 : scanl (+) 1 fibs" ID="ID_45873875" CREATED="1430961687086" MODIFIED="1430961687086"/>
</node>
<node TEXT="lhs, rhs treated sim? is problem?" ID="ID_498884920" CREATED="1430970765535" MODIFIED="1430970778942">
<node TEXT="= a complaint about haskell I would like to understand" ID="ID_1531023402" CREATED="1426231568061" MODIFIED="1430970784491"/>
<node TEXT="http://www.reddit.com/r/haskell/comments/2yqnst/what_imperative_languages_do_haskellers_like/cpcq57x" ID="ID_1122455722" CREATED="1426231610929" MODIFIED="1426231610929" LINK="http://www.reddit.com/r/haskell/comments/2yqnst/what_imperative_languages_do_haskellers_like/cpcq57x"/>
</node>
</node>
</node>
<node TEXT="test loop" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1611640842" CREATED="1430971535474" MODIFIED="1430971581701">
<node TEXT="when stumped, for more error/warning reports" ID="ID_600490766" CREATED="1425848414896" MODIFIED="1425848423391">
<node TEXT="&quot;when stumped on a compile error, turn on -Werror to see if you aren&apos;t missing something obvious.&quot;" ID="ID_1028888643" CREATED="1425848423902" MODIFIED="1425848428760"/>
</node>
</node>
<node TEXT="style | workflow" ID="ID_1262860641" CREATED="1430980374634" MODIFIED="1430980627457">
<node TEXT="error &gt; undefined" ID="ID_1762848181" CREATED="1423599456429" MODIFIED="1423599460497">
<node TEXT="sumDigits (n:ns)&#xa;  | n &lt; 10       = n + sumDigits ns&#xa;  | n &gt;= 10      = r + sumDigits (q : ns)&#xa;  | otherwise    = error &quot;will never fire, only to suppress spurious warning&quot;" ID="ID_1035068128" CREATED="1423599461228" MODIFIED="1423599538763"/>
</node>
<node TEXT="why to read instances" LOCALIZED_STYLE_REF="default" ID="ID_1578639227" CREATED="1423179346670" MODIFIED="1430981243914">
<node TEXT="says this guy" ID="ID_23919371" CREATED="1423179461823" MODIFIED="1423179467949">
<node TEXT="http://softwaresimply.blogspot.com/2012/04/four-tips-for-new-haskell-programmers.html" ID="ID_405680279" CREATED="1423179469829" MODIFIED="1423179469829" LINK="http://softwaresimply.blogspot.com/2012/04/four-tips-for-new-haskell-programmers.html"/>
</node>
<node TEXT="The Snap monad implements a MonadIO instance. That means IO can be run from within it." ID="ID_1084179386" CREATED="1423179351110" MODIFIED="1423179369691"/>
</node>
<node TEXT="why to search for type sigs in Hoogle" LOCALIZED_STYLE_REF="default" ID="ID_1181611584" CREATED="1423190040659" MODIFIED="1430981244753">
<node TEXT="e.g. &quot;Eq a =&gt; a -&gt; [a] -&gt; Int&quot;, to look for something that counts instances of a in [a]" ID="ID_479365094" CREATED="1423190047451" MODIFIED="1423190061484"/>
</node>
</node>
<node TEXT="types" ID="ID_1394339364" CREATED="1430973196382" MODIFIED="1430973197065">
<node TEXT="predicate (variety: type sig, not filter)" ID="ID_630420084" CREATED="1423687998072" MODIFIED="1423688027712">
<node TEXT=".one statement" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_208273498" CREATED="1423687276310" MODIFIED="1423687279893"/>
<node TEXT="in this" ID="ID_1063123693" CREATED="1423687270189" MODIFIED="1423687271076">
<node TEXT="(==) :: Eq a &#x21d2; a &#x2192; a &#x2192; Bool" ID="ID_1333236031" CREATED="1423687257662" MODIFIED="1423687258874"/>
</node>
<node TEXT="the Eq a =&gt; portion is a predicate" ID="ID_708239362" CREATED="1423687260278" MODIFIED="1423687269676"/>
</node>
<node TEXT="qualified type" ID="ID_406781792" CREATED="1423688001278" MODIFIED="1423688003604">
<node TEXT="is one qualified by a predicate in a type signature" ID="ID_385213535" CREATED="1423688030462" MODIFIED="1423688042236"/>
</node>
<node TEXT="type and class instances" ID="ID_127371377" CREATED="1423186803329" MODIFIED="1430981208642">
<node TEXT="under a class, are types belonging to it" ID="ID_1794567483" CREATED="1423186867009" MODIFIED="1423186876646"/>
<node TEXT="under a type, are classes it belongs to" ID="ID_160063396" CREATED="1423186877049" MODIFIED="1423186884191"/>
<node TEXT="in both cases, are ordered Category then Member" ID="ID_350068831" CREATED="1423186866378" MODIFIED="1423186891905">
<node TEXT="e.g. Functor X says X belongs to Functor/, not the reverse" ID="ID_213721365" CREATED="1423186892641" MODIFIED="1430981184424"/>
</node>
</node>
</node>
<node TEXT="monad" ID="ID_978246534" CREATED="1430981057450" MODIFIED="1430981513085">
<font BOLD="true"/>
<node TEXT="IO" ID="ID_1193326969" CREATED="1430981029434" MODIFIED="1430981030127">
<node TEXT="from IO a, can call IO () functions" ID="ID_1656149971" CREATED="1430980998210" MODIFIED="1430981006091">
<node TEXT="elab defn" LOCALIZED_STYLE_REF="styles.topic" ID="ID_927891886" CREATED="1430981010179" MODIFIED="1430981014642">
<node TEXT="A function of type IO a can be called from a do block within type IO ()." ID="ID_1744735505" CREATED="1423187541476" MODIFIED="1423187541476"/>
</node>
<node TEXT="example" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_182840643" CREATED="1430981019698" MODIFIED="1430981021158"/>
<node TEXT="source" ID="ID_1550158305" CREATED="1423187541476" MODIFIED="1423187541476">
<node TEXT="http://en.wikibooks.org/wiki/Haskell/Monad_transformers" ID="ID_1187669701" CREATED="1423187541476" MODIFIED="1423187541476" LINK="http://en.wikibooks.org/wiki/Haskell/Monad_transformers"/>
</node>
<node TEXT="code" ID="ID_1056804377" CREATED="1423187541476" MODIFIED="1423187541476">
<node TEXT="    getValidPassphrase :: MaybeT IO String&#xa;    getValidPassphrase = do s &lt;- lift getLine&#xa;                          guard (isValid s) -- MonadPlus provides guard.&#xa;                          return s&#xa;    &#xa;    askPassphrase :: MaybeT IO ()&#xa;    askPassphrase = do lift $ putStrLn &quot;Insert your new passphrase:&quot;&#xa;                     value &lt;- getValidPassphrase&#xa;                     lift $ putStrLn &quot;Storing in database...&quot;" ID="ID_440872621" CREATED="1423187560305" MODIFIED="1423187561776"/>
</node>
</node>
</node>
<node TEXT="lift" ID="ID_471222913" CREATED="1430970682661" MODIFIED="1430980978986">
<node TEXT="liftIO lifts from the base IO monad to any level" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1741209889" CREATED="1423188868378" MODIFIED="1430980713612">
<node TEXT="? magic" ID="ID_807456710" CREATED="1423188881322" MODIFIED="1423188886075"/>
<node TEXT="class (Monad m) =&gt; MonadIO m where&#xa;   liftIO :: IO a -&gt; m a" ID="ID_1452567456" CREATED="1423188900098" MODIFIED="1423188901465"/>
<node TEXT="but only if the stack from base IO to the desired level consists entirely of MonadIO instances, I believe" ID="ID_929574420" CREATED="1423188902225" MODIFIED="1423188922143"/>
</node>
<node TEXT="liftM2 to shorten, avoid using variables" LOCALIZED_STYLE_REF="default" ID="ID_757434279" CREATED="1426275036148" MODIFIED="1430980709872">
<node TEXT="http://book.realworldhaskell.org/read/using-parsec.html" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1045142104" CREATED="1426275087033" MODIFIED="1426275091611" LINK="http://book.realworldhaskell.org/read/using-parsec.html"/>
<node TEXT="the (,) operator creates a tuple" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1056237801" CREATED="1426275145005" MODIFIED="1426275178967"/>
<node TEXT="these are equivalent" LOCALIZED_STYLE_REF="default" ID="ID_909031292" CREATED="1426275056757" MODIFIED="1426275143777">
<node TEXT="-- file: ch16/FormParse.hs&#xa;p_pair :: CharParser () (String, Maybe String)&#xa;p_pair = do&#xa;  name &lt;- many1 p_char&#xa;  value &lt;- optionMaybe (char &apos;=&apos; &gt;&gt; many p_char)&#xa;  return (name, value)" ID="ID_1993791693" CREATED="1426275053046" MODIFIED="1426275054250"/>
<node TEXT="-- file: ch16/FormParse.hs&#xa;p_pair_app1 =&#xa;    liftM2 (,) (many1 p_char) (optionMaybe (char &apos;=&apos; &gt;&gt; many p_char))" ID="ID_253722378" CREATED="1426275079948" MODIFIED="1426275080836"/>
</node>
</node>
<node TEXT="lift v. liftM" ID="ID_206260119" CREATED="1423188655914" MODIFIED="1423188659368">
<node TEXT="liftM promotes a non-monad function a -&gt; b to a monad function m a -&gt; m b" ID="ID_1610454656" CREATED="1423188660114" MODIFIED="1423188674136">
<node TEXT="liftM :: Monad m =&gt; (a1 -&gt; r) -&gt; m a1 -&gt; m r" ID="ID_485979186" CREATED="1430980829003" MODIFIED="1430980833216"/>
</node>
<node TEXT="lift promotes a computation from an inner monad to the transformed monad (i.e. the stack of two monads)" ID="ID_1820250766" CREATED="1423188691018" MODIFIED="1423188737071">
<node TEXT="lift :: m a -&gt; t m a" ID="ID_1137036602" CREATED="1423188783906" MODIFIED="1423188793675"/>
</node>
</node>
<node TEXT="as an infix, `liftM` is like $" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1226526630" CREATED="1423188546522" MODIFIED="1430980973002"/>
<node TEXT="for a functor, one can define lift = fmap" ID="ID_641692674" CREATED="1423167605135" MODIFIED="1423167627181"/>
<node TEXT="&quot; Because of the purity of Haskell, we can only lift &quot;up&quot;. &quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_888777876" CREATED="1423168215921" MODIFIED="1423168220010"/>
</node>
</node>
<node TEXT="patterns" ID="ID_193487323" CREATED="1430970292693" MODIFIED="1430970300413">
<node TEXT="label an unused &quot;_&quot; variable" ID="ID_1781814276" CREATED="1430970260105" MODIFIED="1430970266863">
<node TEXT="_string works identically to _" ID="ID_245489137" CREATED="1426707571288" MODIFIED="1430970284177"/>
<node TEXT="http://www.reddit.com/r/haskelltil/comments/2tmopn/unused_variables_dont_have_to_be_they_can_be/" ID="ID_1247027426" CREATED="1426707590896" MODIFIED="1426707590896" LINK="http://www.reddit.com/r/haskelltil/comments/2tmopn/unused_variables_dont_have_to_be_they_can_be/"/>
</node>
</node>
<node TEXT="eval" ID="ID_80696165" CREATED="1430972406650" MODIFIED="1430972407401">
<node TEXT="data fields cannot be keywords. in is a keyword." LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_980182311" CREATED="1425618308739" MODIFIED="1425618328841"/>
<node TEXT="collapsing indentation to one line" ID="ID_268942603" CREATED="1425616439994" MODIFIED="1430972507103">
<node TEXT="quoting the wikibook portion on indentation rules" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1910200349" CREATED="1425616450634" MODIFIED="1430972482710"/>
<node TEXT="If you see one of the layout keywords, (let, where, of, do), insert an open curly brace (right before the stuff that follows it)" ID="ID_1999638552" CREATED="1425616436456" MODIFIED="1425616436456"/>
<node TEXT="If you see something indented to the SAME level, insert a semicolon" ID="ID_505932216" CREATED="1425616436456" MODIFIED="1425616436456"/>
<node TEXT="If you see something indented LESS, insert a closing curly brace" ID="ID_745449943" CREATED="1425616436460" MODIFIED="1425616436460"/>
<node TEXT="If you see something unexpected in a list, like where, insert a closing brace before instead of a semicolon." ID="ID_212243771" CREATED="1425616436463" MODIFIED="1425616436463"/>
</node>
<node TEXT="specify type sig in GHCI" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_55802810" CREATED="1423691153805" MODIFIED="1430972640976">
<node TEXT="use a single &quot;let&quot; statement" ID="ID_1550315711" CREATED="1423691272316" MODIFIED="1423691277020"/>
<node TEXT="inline it" ID="ID_1840136576" CREATED="1423691165965" MODIFIED="1423691167252">
<node TEXT="let intLength :: [Int] -&gt; Int; intLength = length" ID="ID_679500703" CREATED="1423691163253" MODIFIED="1423691164714"/>
</node>
<node TEXT="or don&apos;t ...!" ID="ID_362063221" CREATED="1423691262965" MODIFIED="1423691368141">
<node TEXT="! but in that case the indentation matters" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_122741786" CREATED="1423691282348" MODIFIED="1423691360294">
<node TEXT="a single space deviation in either direction ruins it" ID="ID_430388031" CREATED="1423691347013" MODIFIED="1423691356476"/>
</node>
<node TEXT="Prelude&gt; :{&#xa;Prelude| let x :: [Int] -&gt; Int&#xa;Prelude|     x = length&#xa;Prelude| :}" ID="ID_288534608" CREATED="1423691278309" MODIFIED="1423691280007"/>
</node>
</node>
<node TEXT="indentation works!" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1742350812" CREATED="1423272877328" MODIFIED="1423272887930">
<node TEXT="you just have to close brackets etc. indented relative to the line in which they appear" ID="ID_1294692822" CREATED="1423272890324" MODIFIED="1423272907668"/>
<node TEXT="example" ID="ID_760183286" CREATED="1423272928415" MODIFIED="1423272929286">
<node TEXT="module Main where&#xa;import Graphics.UI.WX&#xa;&#xa;main :: IO ()&#xa;main&#xa;  = start hello&#xa;&#xa;hello :: IO ()&#xa;hello&#xa;  = do f    &lt;- frame    [text := &quot;Hello!&quot;]&#xa;       quit &lt;- button f [text := &quot;Quit&quot;, on command := close f]&#xa;       set f [layout := margin 10 -- this bracket ...&#xa;           (column 20 [floatCentre&#xa;             (label &quot;Hello&quot;)         &#xa;             ,floatCentre (widget quit)&#xa;           ] )                 &#xa;         ] -- ... can be closed here&#xa;&#xa;-- EOF" ID="ID_481400119" CREATED="1423272931992" MODIFIED="1430980479537"/>
</node>
</node>
<node TEXT="forall: often implicit" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1941657127" CREATED="1421017686165" MODIFIED="1430982479963">
<node TEXT="example: these are equiv" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_6935246" CREATED="1421017696310" MODIFIED="1430982459946"/>
<node TEXT="id :: a -&gt; a" ID="ID_1589754437" CREATED="1421017685231" MODIFIED="1421017685231"/>
<node TEXT="id :: forall a . a -&gt; a" ID="ID_544945389" CREATED="1421017685231" MODIFIED="1421017685231"/>
</node>
</node>
<node TEXT="functions" ID="ID_1943528472" CREATED="1430969258113" MODIFIED="1430969259270">
<node TEXT="using lambdas" ID="ID_1855150526" CREATED="1430969135974" MODIFIED="1430969170756">
<node TEXT="recursive lambdas" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_419703202" CREATED="1430962249026" MODIFIED="1430962485224">
<node TEXT="links in from fix" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_717549827" CREATED="1430962500682" MODIFIED="1430962512132"/>
<node TEXT="Prelude&gt; (let factorial = \n -&gt; if n==0 then 1 else n * factorial(n-1) in factorial) 4" ID="ID_1568570279" CREATED="1430962258369" MODIFIED="1430962258369"/>
<node TEXT="24" ID="ID_814744248" CREATED="1430962258369" MODIFIED="1430962258369"/>
<node TEXT="Prelude&gt; factorial" ID="ID_679927760" CREATED="1430962258372" MODIFIED="1430962258372"/>
<node TEXT="&lt;interactive&gt;:6:1: Not in scope: `factorial&apos;" ID="ID_1396577860" CREATED="1430962258373" MODIFIED="1430962258373"/>
</node>
<node TEXT="fix (the function)" ID="ID_1219664984" CREATED="1430962485603" MODIFIED="1430969152409">
<node ID="ID_164916950" CREATED="1430962494170" MODIFIED="1430962506722"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      recursive lambdas
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="fix f = let x = f x in x" ID="ID_1756517629" CREATED="1430962535600" MODIFIED="1430962535600"/>
<node TEXT="example of use" ID="ID_631303823" CREATED="1430962542130" MODIFIED="1430962543671">
<node TEXT="fix (\v -&gt; 0 : v)" ID="ID_1989928134" CREATED="1430962541676" MODIFIED="1430962541676"/>
</node>
</node>
<node TEXT="&quot;let&quot; does not consume namespace" ID="ID_263826933" CREATED="1430962111490" MODIFIED="1430962117264">
<node TEXT="Prelude&gt; let fibs      = 0 : scanl (+) 1 fibs in fibs&#xa;[infinite print results until canceled; then]&#xa;Prelude&gt; fibs&#xa;&#xa;&lt;interactive&gt;:3:1: Not in scope: `fibs&apos;" ID="ID_241327847" CREATED="1430962118010" MODIFIED="1430962166207"/>
</node>
</node>
<node TEXT="collect across patterns into one function" ID="ID_1192485406" CREATED="1430961341529" MODIFIED="1430969254907">
<node TEXT="code" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_909027970" CREATED="1430961412129" MODIFIED="1430969266698"/>
<node TEXT="-- Requires LambdaCase extension. The old way is:" ID="ID_1472572907" CREATED="1430961772814" MODIFIED="1430961772814"/>
<node TEXT="--        \tmp -&gt; case tmp of { n:ns -&gt; even n : mapeven ns ; [] -&gt; [] }" ID="ID_90185581" CREATED="1430961772814" MODIFIED="1430961772814"/>
<node TEXT="mapeven = \case { n:ns -&gt; even n : mapeven ns ; [] -&gt; [] }" ID="ID_1666108587" CREATED="1430961335751" MODIFIED="1430961335751"/>
<node TEXT="-- is equiv to" ID="ID_1376147816" CREATED="1430961402401" MODIFIED="1430961798386"/>
<node TEXT="mapeven (n:ns) = even n : mapeven ns&#xa;mapeven [] = []" ID="ID_586630879" CREATED="1430961403313" MODIFIED="1430961403831"/>
</node>
<node TEXT="to chain comparisons" ID="ID_1661106797" CREATED="1426708213005" MODIFIED="1426708215968">
<node TEXT="http://www.reddit.com/r/haskelltil/comments/2tisqb/and_comparing_can_be_used_to_build_ordering_rules/" ID="ID_122595801" CREATED="1426708216616" MODIFIED="1426708216616" LINK="http://www.reddit.com/r/haskelltil/comments/2tisqb/and_comparing_can_be_used_to_build_ordering_rules/"/>
</node>
</node>
<node TEXT="weird or handy" ID="ID_742313156" CREATED="1430969293840" MODIFIED="1430969320149">
<node TEXT="infinite, recursive list def" ID="ID_1233874276" CREATED="1430897313844" MODIFIED="1430969284491">
<node TEXT="zeroes    = 0 : zeroes" ID="ID_1931757669" CREATED="1430897312521" MODIFIED="1430897312521"/>
<node TEXT="fibs      = 0 : scanl (+) 1 fibs" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_580961630" CREATED="1430897359840" MODIFIED="1430897360811"/>
</node>
<node TEXT="runghc: skip compilation" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1684225803" CREATED="1430468144491" MODIFIED="1430468150974"/>
<node TEXT="&quot;zipWith ($)&quot;: zip func list to arg list" ID="ID_527172200" CREATED="1423255370337" MODIFIED="1430980534484">
<node TEXT="via Alex Hammel, Haskell-beginners (expert)" ID="ID_1493754947" CREATED="1423255382369" MODIFIED="1423255391016"/>
<node TEXT="quote" ID="ID_14070643" CREATED="1423255375889" MODIFIED="1423255376582">
<node TEXT="You can think of zipWith as a function that combines the values of two lists. If you want to add the numbers in two lists you can do this:&#xa;&#xa;zipWith (+) [1, 2, 3] [4, 5, 6]&#xa;&#xa;which is the same thing as:&#xa;&#xa;[1+4, 2+5, 3+6]&#xa;&#xa;which results in [5, 7, 9]&#xa;&#xa;When you call zipWith ($) you&apos;re just applying the functions in one list to the values in another. E.g.:&#xa;&#xa;zipWith ($) [(+1), (+2), (+3)] [1, 2, 3]&#xa;&#xa;is the same thing as&#xa;&#xa;[($) (+1) 1, ($) (+2) 2, ($) (+3) 3]" ID="ID_1761252874" CREATED="1423255373586" MODIFIED="1423255374707"/>
</node>
</node>
</node>
<node TEXT="lens &amp; alternatives" ID="ID_969994342" CREATED="1430969587935" MODIFIED="1430969590568">
<node TEXT="Data.Accessor: perhaps easier than Lens" ID="ID_223818982" CREATED="1426719474015" MODIFIED="1426719482041"/>
</node>
<node TEXT="multiline strings" ID="ID_169692757" CREATED="1426708580318" MODIFIED="1430969658854">
<node TEXT="Haskell supports multiline strings:&#xa;&#xa;let x = &quot;abc\&#xa;        \xyz&quot;&#xa;&#xa;would assign &quot;abcxyz&quot; to x" ID="ID_1098960364" CREATED="1426708583676" MODIFIED="1426708586243"/>
</node>
<node TEXT="imports" ID="ID_694653597" CREATED="1430969675287" MODIFIED="1430969676277">
<node TEXT="qualified imports can map to the same namespace" ID="ID_1297039040" CREATED="1426708457031" MODIFIED="1426708466696">
<node TEXT="http://www.reddit.com/r/haskelltil/comments/2tiglf/qualified_imports_can_be_used_to_combine_modules/" ID="ID_386813141" CREATED="1426708531826" MODIFIED="1426708531826" LINK="http://www.reddit.com/r/haskelltil/comments/2tiglf/qualified_imports_can_be_used_to_combine_modules/"/>
<node TEXT="e.g. this is valid" LOCALIZED_STYLE_REF="default" ID="ID_1763183005" CREATED="1426708469303" MODIFIED="1426708525461">
<font BOLD="true"/>
<node TEXT="import Data.Text          as Text" ID="ID_1470160515" CREATED="1426708467546" MODIFIED="1426708467546"/>
<node TEXT="import Data.Text.IO       as Text" ID="ID_1766355459" CREATED="1426708467546" MODIFIED="1426708467546"/>
<node TEXT="import Data.Text.Encoding as Text" ID="ID_650798786" CREATED="1426708467547" MODIFIED="1426708467547"/>
</node>
<node TEXT="&quot;You can also use this to re-export only some of the functions from another module:&#xa;&#xa;module A where&#xa;import B as A (foo, bar)&quot;" ID="ID_717685067" CREATED="1426708514757" MODIFIED="1426708519769"/>
</node>
</node>
<node TEXT="fancy" LOCALIZED_STYLE_REF="styles.topic" ID="ID_952983403" CREATED="1430970593166" MODIFIED="1430970594757">
<node TEXT="Data.Lub" ID="ID_1260425853" CREATED="1426706551610" MODIFIED="1426706553928">
<node TEXT="can create a || that recognizes as True both True || undefined and undefined || True" ID="ID_1681328387" CREATED="1426706342648" MODIFIED="1426706570119">
<node TEXT="http://www.reddit.com/r/haskelltil/comments/2tzjjo/lub_package_can_do_pretty_weird_and_awesome/" ID="ID_457194854" CREATED="1426706391998" MODIFIED="1426706391998" LINK="http://www.reddit.com/r/haskelltil/comments/2tzjjo/lub_package_can_do_pretty_weird_and_awesome/"/>
</node>
<node TEXT="can create a &quot;truly lazy if&quot;" ID="ID_1569095268" CREATED="1426706555080" MODIFIED="1426706560978">
<node TEXT="&gt; import Data.Laxer&#xa;&#xa;&gt; condL (1, 2) (1, 3) True&#xa;(1, 2)&#xa;&#xa;&gt; condL (1, 2) (1, 3) False&#xa;(1, 3)&#xa;&#xa;&gt; condL (1, 2) (1, 3) undefined&#xa;(1, *** Exception: BothBottom&#xa;&#xa;&gt; fst $ condL (1, 2) (1, 3) undefined&#xa;1" ID="ID_491611122" CREATED="1426706561472" MODIFIED="1426706563619"/>
</node>
</node>
<node TEXT="specify an op for an infinite fam of types" ID="ID_398965605" CREATED="1423688491429" MODIFIED="1423688500916">
<node TEXT="the idea" ID="ID_1455984492" CREATED="1423688528285" MODIFIED="1423688530612">
<node TEXT="this" ID="ID_1378295136" CREATED="1423688515325" MODIFIED="1423688516724">
<node TEXT="instance Eq Bool where&#xa;x == y = if x then y else not y&#xa;instance (Eq a, Eq b) &#x21d2; Eq (a, b) where&#xa;(x , y) == (u, v ) = (x == u &amp;&amp; y == v )" ID="ID_1189580326" CREATED="1423688501998" MODIFIED="1423688503230"/>
</node>
<node TEXT="accomplishes this" ID="ID_734551812" CREATED="1423688517661" MODIFIED="1423688519988">
<node TEXT="quot" ID="ID_785752727" CREATED="1423688524038" MODIFIED="1423688525234"/>
<node TEXT="Even with just&#xa;these two declarations, we have already specified an equality operation on the&#xa;infinite family of types that can be constructed from Bool by repeated usespairing." ID="ID_291647578" CREATED="1423688520638" MODIFIED="1423688523428"/>
</node>
</node>
<node TEXT="source" ID="ID_1895936095" CREATED="1423688532549" MODIFIED="1423688533812">
<node TEXT="Type Classes with Functional Dependencies, Mark P. Jones" ID="ID_1918997914" CREATED="1423688566789" MODIFIED="1423688576202"/>
<node TEXT="saved as &quot;fundeps-esop2000.pdf&quot;" ID="ID_1547936220" CREATED="1423688588749" MODIFIED="1423688591652"/>
</node>
</node>
<node TEXT="flexible instances" LOCALIZED_STYLE_REF="default" ID="ID_304424565" CREATED="1423685772694" MODIFIED="1430973527079">
<node TEXT="{-# LANGUAGE FlexibleInstances #-}" ID="ID_1637796640" CREATED="1423690378421" MODIFIED="1423690378421"/>
<node TEXT="easy explanation" ID="ID_313417653" CREATED="1423685789181" MODIFIED="1423685791533">
<node TEXT="http://connectionrequired.com/blog/2009/07/my-first-introduction-to-haskell-extensions-flexibleinstances/" ID="ID_1139690322" CREATED="1423685776220" MODIFIED="1423685776220" LINK="http://connectionrequired.com/blog/2009/07/my-first-introduction-to-haskell-extensions-flexibleinstances/"/>
</node>
<node TEXT="in brief" ID="ID_1062555344" CREATED="1423685810230" MODIFIED="1423685811636">
<node TEXT="rather than create one instance for T a, where T is specified and a is free, if you&apos;d like to create separate instances T a1 and T a2, where a1 and a2 are as specified as T is" ID="ID_995574588" CREATED="1423685811853" MODIFIED="1423685876588"/>
</node>
</node>
<node TEXT="multi-parameter type class" LOCALIZED_STYLE_REF="default" ID="ID_154990456" CREATED="1423685266341" MODIFIED="1430980236099">
<node TEXT="https://wiki.haskell.org/Multi-parameter_type_class" ID="ID_999176740" CREATED="1423685282196" MODIFIED="1423685282196" LINK="https://wiki.haskell.org/Multi-parameter_type_class"/>
<node TEXT="example" ID="ID_715003470" CREATED="1423685282814" MODIFIED="1423685283845">
<node TEXT="class Monad m =&gt; VarMonad m v where&#xa;  new :: a -&gt; m (v a)&#xa;  get :: v a -&gt; m a&#xa;  put :: v a -&gt; a -&gt; m ()&#xa; &#xa;instance VarMonad IO IORef where ...&#xa;instance VarMonad (ST s) (STRef s) where ..." ID="ID_467945470" CREATED="1423685298406" MODIFIED="1423685300168"/>
</node>
<node TEXT="{-# LANGUAGE MultiParamTypeClasses #-}" ID="ID_522551028" CREATED="1423685309158" MODIFIED="1423685309876"/>
<node TEXT="? I thought this was standard." ID="ID_532606489" CREATED="1423685316870" MODIFIED="1423685323149"/>
</node>
<node TEXT="functional dependencies" ID="ID_1257586086" CREATED="1423685163453" MODIFIED="1423685166853">
<node TEXT="part of standard Haskell 2010, I think" ID="ID_696201470" CREATED="1423685250854" MODIFIED="1423685258050"/>
<node TEXT="quote" ID="ID_442135740" CREATED="1423685261173" MODIFIED="1423685261861">
<node TEXT="class Mult a b c | a b -&gt; c where&#xa;  (*) :: a -&gt; b -&gt; c&#xa;&#xa;This tells Haskell that&#xa;c&#xa;is uniquely determined from&#xa;a&#xa;and&#xa;b&#xa;." ID="ID_712248540" CREATED="1423685167350" MODIFIED="1423685168250"/>
</node>
<node TEXT="fundeps help multi-param classes" ID="ID_1292266647" CREATED="1423685344134" MODIFIED="1423685420173">
<node TEXT="paper about that found here" ID="ID_1695204649" CREATED="1423685443694" MODIFIED="1423685449988">
<node TEXT="web.cecs.pdx.edu/~mpj/pubs/fundeps.htmla" ID="ID_891969160" CREATED="1423685346421" MODIFIED="1423685346421"/>
</node>
</node>
<node TEXT="something a fundep prohibits" ID="ID_433947566" CREATED="1423689756261" MODIFIED="1423689762092">
<node TEXT="what" ID="ID_56243906" CREATED="1423689828405" MODIFIED="1423689829500">
<node TEXT=".one statment" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_904403062" CREATED="1423689802181" MODIFIED="1423689805074"/>
<node TEXT="this fundep" ID="ID_1686819801" CREATED="1423689763100" MODIFIED="1423689764692">
<node TEXT="class D a b | a -&gt; b where . . ." ID="ID_1445353993" CREATED="1423689765100" MODIFIED="1423689774490"/>
</node>
<node TEXT="prohibits this pair" ID="ID_1514145357" CREATED="1423689776189" MODIFIED="1423689784492">
<node TEXT="instance D Bool Int where . . .&#xa;instance D Bool Char where . . ." ID="ID_740883919" CREATED="1423689819101" MODIFIED="1423689820493"/>
</node>
<node TEXT="although either of the pair by itself would be fine" LOCALIZED_STYLE_REF="default" ID="ID_1909945082" CREATED="1423689784693" MODIFIED="1423689799580"/>
</node>
<node TEXT="why" ID="ID_286933679" CREATED="1423689830733" MODIFIED="1423689831380">
<node TEXT="if a implies b, then the same a cannot appear with two different bs" ID="ID_1259461694" CREATED="1423689831701" MODIFIED="1423689843796"/>
</node>
</node>
<node TEXT="another prohibition" ID="ID_1755578595" CREATED="1423689897933" MODIFIED="1423689900674">
<node TEXT="can&apos;t do this" ID="ID_859163586" CREATED="1423689906045" MODIFIED="1423689907772">
<node TEXT="class D a b | a -&gt; b where . . ." ID="ID_1009518616" CREATED="1423689765100" MODIFIED="1423689774490"/>
<node ID="ID_995667521" CREATED="1423689908194" MODIFIED="1423689908194"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      instance D [a] b where . . .
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="why" ID="ID_1856701514" CREATED="1423689917669" MODIFIED="1423689918348">
<node TEXT="The problem here is that this instance would allow one particular choice of [a]&#xa;to be associated with more than one choice for b," ID="ID_1188938336" CREATED="1423689900965" MODIFIED="1423689905741"/>
</node>
</node>
</node>
</node>
<node TEXT="cool, not crit" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1968865208" CREATED="1430970161461" MODIFIED="1430970395224">
<node TEXT="View Patterns: good for concise preprocessing" ID="ID_764457133" CREATED="1426707893405" MODIFIED="1426707903235">
<node TEXT="http://www.reddit.com/r/haskelltil/comments/2tn5qt/a_simple_common_usecase_for_view_patterns/" ID="ID_1753738678" CREATED="1426707899275" MODIFIED="1426707899275" LINK="http://www.reddit.com/r/haskelltil/comments/2tn5qt/a_simple_common_usecase_for_view_patterns/"/>
<node TEXT="e.g. this" ID="ID_1692816105" CREATED="1426707923579" MODIFIED="1426707924835">
<node TEXT="func :: String -&gt; Int&#xa;func s = ...&#xa;  ...&#xa;  ...&#xa;  where&#xa;    t = T.pack s" ID="ID_250681165" CREATED="1426707925215" MODIFIED="1426707926855"/>
</node>
<node TEXT="becomes this" ID="ID_1484400426" CREATED="1426707928130" MODIFIED="1426707929467">
<node TEXT="{-# LANGUAGE ViewPatterns #-}&#xa;&#xa;func :: String -&gt; Int&#xa;func (T.pack -&gt; s) = ...&#xa;  ...&#xa;  ..." ID="ID_143589938" CREATED="1426707937453" MODIFIED="1426707939754"/>
</node>
</node>
<node TEXT="zipWith for function application" ID="ID_1000154172" CREATED="1426707190396" MODIFIED="1426707195335">
<node TEXT="source" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1184738804" CREATED="1426707227832" MODIFIED="1426707231521">
<node TEXT="http://www.reddit.com/r/haskelltil/comments/2tpqip/apply_a_function_to_every_2nd3rdetc_element_of/" ID="ID_1553571760" CREATED="1426707225566" MODIFIED="1426707225566" LINK="http://www.reddit.com/r/haskelltil/comments/2tpqip/apply_a_function_to_every_2nd3rdetc_element_of/"/>
</node>
<node TEXT="example: this applies f to every nth element of a list, starting with the first, by creating a list that has a few fs and mostly ids" ID="ID_618892479" CREATED="1426707200708" MODIFIED="1430970374701"/>
<node TEXT="applyEvery f n = zipWith ($) (cycle (f : replicate (n-1) id))" ID="ID_121610642" CREATED="1426707196266" MODIFIED="1426707196266"/>
</node>
</node>
<node TEXT="yes" LOCALIZED_STYLE_REF="styles.topic" ID="ID_859345567" CREATED="1426295154686" MODIFIED="1430969613128">
<node TEXT="In Haskell the right way is easier." ID="ID_1758965517" CREATED="1423894827283" MODIFIED="1423894845497"/>
</node>
</node>
<node TEXT="lang/haskell/dates" ID="ID_1847574052" CREATED="1414956095336" MODIFIED="1430969104127">
<font BOLD="true"/>
<node TEXT="u, 2014 11 03" ID="ID_478487725" CREATED="1415041920346" MODIFIED="1421805553340">
<node TEXT="a strength of laziness: generator and consumer written disjointly, executed jointly" ID="ID_521895881" CREATED="1415129590195" MODIFIED="1415153469828">
<font BOLD="false"/>
<node TEXT="e.g. the generator creating a search space, the consumer exploring it" ID="ID_1134704619" CREATED="1415129609530" MODIFIED="1415129617872"/>
<node TEXT="in a strict language, either the whole search space would have to be created initially (memory exhaustive), or the two ops would have to be explicitly threaded together" ID="ID_1426803507" CREATED="1415129618147" MODIFIED="1415129645118"/>
</node>
<node TEXT="QuickCheck: an EDSL for testing that laws apply" ID="ID_1460546599" CREATED="1415130904926" MODIFIED="1415130915456">
<node TEXT="I think" ID="ID_1298980194" CREATED="1415130919446" MODIFIED="1415130922386"/>
<node TEXT="e.g. associativity" ID="ID_166223368" CREATED="1415130915717" MODIFIED="1415130918194"/>
</node>
<node TEXT="capitalization matters: in &quot;Import x&quot;, Import will be interpreted as a constructor" ID="ID_625325952" CREATED="1415140738265" MODIFIED="1415140769700"/>
<node TEXT="&quot;:i Bool&quot; lists data definition and all classes Bool is an instance of" ID="ID_1326934050" CREATED="1415140989835" MODIFIED="1415141018921"/>
<node TEXT="invisibile &quot;fromInteger&quot; calls" ID="ID_1707099778" CREATED="1415153504716" MODIFIED="1415153510088">
<node TEXT="True &amp;&amp; 1 and True &amp;&amp; fromInteger 1 are equivalent. Neither evaluates, b/c Bool is not an instance of Num." ID="ID_170700724" CREATED="1415151667091" MODIFIED="1415151744567"/>
</node>
<node TEXT="multiple (class constraints?) in a func def: syntax" ID="ID_1458906570" CREATED="1415151935638" MODIFIED="1415151958568">
<node TEXT="f :: (Eq a, Ord b) =&gt; ..." ID="ID_647728529" CREATED="1415151961765" MODIFIED="1415151981906"/>
</node>
<node TEXT="(: []) = \x -&gt; [x]" ID="ID_742876442" CREATED="1415152469166" MODIFIED="1415152494143"/>
<node TEXT="&quot;ghci -Wall&quot; enables all warnings" ID="ID_1934623778" CREATED="1415153232016" MODIFIED="1415153250025">
<node TEXT="most are withheld by default" ID="ID_1507411072" CREATED="1415153239498" MODIFIED="1415153244322"/>
</node>
<node TEXT="error messages" ID="ID_988698012" CREATED="1415152036956" MODIFIED="1415152041951">
<font BOLD="true"/>
<node TEXT="&quot;could not deduce (a ~ b)&quot; means &quot;the code you wrote assumes a and b are the same type&quot;" ID="ID_1743600282" CREATED="1415152005189" MODIFIED="1415152034407"/>
<node TEXT="testing which expr generates an error" ID="ID_1283265369" CREATED="1415153058154" MODIFIED="1415153073381">
<node TEXT="stolarek_understanding_basic_haskell_error_messages.pdf" ID="ID_1488231817" CREATED="1415152995483" MODIFIED="1415153004350"/>
<node TEXT="&quot; From the type signature of (-), we can see that its parame- ters should belong to Num type class. The question is this: how can we be certain that this error is raised by the constraint in the fromIntegral function and not by the constraint in the (-) function itself? There&#x2019;s an easy way to verify this. Let&#x2019;s replace the second argument of (-) with a value of type String. We use String, because string literals don&#x2019;t implicitly call any function that would impose addi- tional type constraints. &quot;" ID="ID_1673754410" CREATED="1415152986659" MODIFIED="1415152988087"/>
</node>
<node TEXT="&quot;Runtime exceptions don&#x2019;t give you any stack trace, as this is not easily implemented in a language with lazy evaluation.&quot;" ID="ID_709282768" CREATED="1415153131260" MODIFIED="1415153137691"/>
</node>
<node TEXT="&quot;.&quot; op&apos;r can swap eval order" ID="ID_844104546" CREATED="1415063787516" MODIFIED="1415063796806">
<node TEXT="pretty sure" ID="ID_1768514970" CREATED="1415064034479" MODIFIED="1415064035810"/>
<node TEXT="f . g $ x = f (g x)" ID="ID_1491572256" CREATED="1415063803579" MODIFIED="1415063850013"/>
<node TEXT="f g x = (f g) x" ID="ID_342395734" CREATED="1415063850457" MODIFIED="1415063904524"/>
</node>
<node TEXT=".= u, 2014 11 03" ID="ID_239278628" CREATED="1418940561008" MODIFIED="1418940564335"/>
</node>
<node TEXT="u, 2014 11 05" ID="ID_742942553" CREATED="1414968723877" MODIFIED="1415402601981">
<font BOLD="false"/>
<node TEXT=". = transferred from to do.mm" ID="ID_575864346" CREATED="1415382076747" MODIFIED="1415382082711"/>
<node TEXT="prog" ID="ID_1772813553" CREATED="1414966813040" MODIFIED="1414968726473">
<node TEXT="I don&apos;t know that lenses introduced a new concept to me. The promise they hold that I am most aware of seems to be syntactic simplification." ID="ID_710087881" CREATED="1414966815616" MODIFIED="1414966856756"/>
<node TEXT="Haskell has gotten easier to read, but there is still fundamental type syntax I don&apos;t understand." ID="ID_603413327" CREATED="1414966866047" MODIFIED="1414966886505"/>
<node TEXT="Am I yet aware of anything that Haskell allows and other languages don&apos;t?" ID="ID_1234156269" CREATED="1414966914382" MODIFIED="1414966925426"/>
</node>
<node TEXT="sources" ID="ID_565043392" CREATED="1414968989632" MODIFIED="1414969119522">
<node TEXT="All About Monads" ID="ID_1647117395" CREATED="1414968991488" MODIFIED="1414968995252">
<node TEXT="https://www.haskell.org/haskellwiki/All_About_Monads#Why_should_I_make_the_effort_to_understand_monads.3F" ID="ID_207287342" CREATED="1414968990989" MODIFIED="1414968990989" LINK="https://www.haskell.org/haskellwiki/All_About_Monads#Why_should_I_make_the_effort_to_understand_monads.3F"/>
</node>
<node TEXT="why is haskell special" ID="ID_284263384" CREATED="1414969111814" MODIFIED="1414969115818">
<node TEXT="http://stackoverflow.com/questions/775726/whats-the-fuss-about-haskell" ID="ID_807656701" CREATED="1414969117402" MODIFIED="1414969117402" LINK="http://stackoverflow.com/questions/775726/whats-the-fuss-about-haskell"/>
<node TEXT="resume here" ID="ID_1364043003" CREATED="1414969133583" MODIFIED="1414969134969">
<node TEXT="For example, if you want to calculate all primes, you could use" ID="ID_845413332" CREATED="1414969135166" MODIFIED="1414969135714"/>
</node>
</node>
</node>
<node TEXT="concurrency links" ID="ID_1096814548" CREATED="1414968727734" MODIFIED="1414968730113">
<node TEXT="http://hackage.haskell.org/package/base-4.0.0.0/docs/Control-Concurrent.html" ID="ID_572037218" CREATED="1414968730703" MODIFIED="1414968730703" LINK="http://hackage.haskell.org/package/base-4.0.0.0/docs/Control-Concurrent.html"/>
<node TEXT="https://www.haskell.org/haskellwiki/GHC/Data_Parallel_Haskell" ID="ID_1626328470" CREATED="1414968730703" MODIFIED="1414968730703" LINK="https://www.haskell.org/haskellwiki/GHC/Data_Parallel_Haskell"/>
<node TEXT="http://hackage.haskell.org/package/actor" ID="ID_261858660" CREATED="1414968730704" MODIFIED="1414968730704" LINK="http://hackage.haskell.org/package/actor"/>
<node TEXT="https://www.haskell.org/haskellwiki/Software_transactional_memory" ID="ID_405989978" CREATED="1414968730705" MODIFIED="1414968730705" LINK="https://www.haskell.org/haskellwiki/Software_transactional_memory"/>
<node TEXT="http://research.microsoft.com/en-us/um/people/simonpj/papers/parallel/" ID="ID_559541477" CREATED="1414968730706" MODIFIED="1414968730706" LINK="http://research.microsoft.com/en-us/um/people/simonpj/papers/parallel/"/>
</node>
<node TEXT="can someone offer examples where the type system makes coding easier?" ID="ID_929065468" CREATED="1414969057336" MODIFIED="1414969067515">
<node TEXT="http://stackoverflow.com/questions/775726/whats-the-fuss-about-haskell" ID="ID_1736953244" CREATED="1414969067827" MODIFIED="1414969067827" LINK="http://stackoverflow.com/questions/775726/whats-the-fuss-about-haskell"/>
<node TEXT="inc. automatic checks, inheritance" ID="ID_1453740140" CREATED="1414969069088" MODIFIED="1414969085794"/>
</node>
<node TEXT="runApp, encapsulation" ID="ID_949518823" CREATED="1415335464282" MODIFIED="1415335475341">
<node TEXT="Does writing a RunApp function allow one to swap mechanism easily without confusing an intermediate programmer using your code?" ID="ID_1552686779" CREATED="1415072626663" MODIFIED="1415072653552">
<node TEXT="perhaps oneslef future" ID="ID_1565686946" CREATED="1415072656151" MODIFIED="1415072660106"/>
</node>
</node>
</node>
<node TEXT="2014 11 07" ID="ID_1156229632" CREATED="1415424304658" MODIFIED="1415424308374">
<node TEXT="in buffer menu, commands are different" ID="ID_741074982" CREATED="1415424311682" MODIFIED="1415424325505">
<node TEXT="which are already defined? open file at line seems likely." ID="ID_61074406" CREATED="1415424329402" MODIFIED="1415424344437"/>
<node TEXT="http://www.emacswiki.org/BufferMenu" ID="ID_1223572335" CREATED="1415424305148" MODIFIED="1415424305148" LINK="http://www.emacswiki.org/BufferMenu"/>
</node>
<node TEXT="haskell 98 report" ID="ID_746134084" CREATED="1415430059639" MODIFIED="1415430062946">
<node TEXT=".= includes vocab I need" ID="ID_1022347267" CREATED="1415428656992" MODIFIED="1415430243611"/>
<node TEXT="class declaration" ID="ID_1568202440" CREATED="1415428658839" MODIFIED="1415428662122">
<node TEXT="introduces a class and its methods" ID="ID_681644352" CREATED="1415429832283" MODIFIED="1415429837038"/>
</node>
<node TEXT="class method" ID="ID_1761694189" CREATED="1415429800467" MODIFIED="1415429804759">
<node TEXT="is introduced (type sig&apos;s only) in a class declaration" ID="ID_67258524" CREATED="1415429838331" MODIFIED="1415430259585"/>
</node>
</node>
<node TEXT="how to read a class declaration" ID="ID_1633766511" CREATED="1415478020845" MODIFIED="1415478033216">
<node TEXT="&quot;class cx =&gt; C u where decls&#xa;&#xa;This introduces a new class name C; the type variable u is scoped only over the class method signatures in the class body&quot;" ID="ID_960310981" CREATED="1415477989718" MODIFIED="1415478010210">
<node TEXT="https://www.haskell.org/onlinereport/decls.html#overloading" ID="ID_1974582782" CREATED="1415478039042" MODIFIED="1415478039042" LINK="https://www.haskell.org/onlinereport/decls.html#overloading"/>
</node>
<node TEXT="This syntax is used in Hackage documentation; method declarations will often refer to, for instance, a monad &quot;m&quot; without specifying its type, because it is already specified in the top of the class declaration (the method decl being part of the class decl)" ID="ID_1634987203" CREATED="1415478053549" MODIFIED="1415478137959">
<node TEXT="method decl might not be the right term" ID="ID_1144725775" CREATED="1415478138131" MODIFIED="1415478145662"/>
<node TEXT="but class decl is" ID="ID_1443354529" CREATED="1415478145866" MODIFIED="1415478157190"/>
</node>
</node>
</node>
<node TEXT="2014 11 09" ID="ID_466199675" CREATED="1415428057834" MODIFIED="1415688059228">
<node TEXT="eta conversion" ID="ID_408091712" CREATED="1415506007872" MODIFIED="1415506010284">
<node TEXT="These are equivalent" ID="ID_848436411" CREATED="1415506046706" MODIFIED="1415506058731">
<node TEXT=". = ... under &#x3b7;-conversion:" ID="ID_1879386598" CREATED="1415506046706" MODIFIED="1415506070469"/>
<node TEXT="\x -&gt; abs x" ID="ID_461221062" CREATED="1415506046707" MODIFIED="1415506046707"/>
<node TEXT="abs" ID="ID_1183154951" CREATED="1415506046707" MODIFIED="1415506046707"/>
</node>
<node TEXT="eta &quot;abstraction&quot; and &quot;reduction&quot;" ID="ID_1056903127" CREATED="1415506091119" MODIFIED="1415506115732">
<node TEXT="expansion = abstraction" ID="ID_854934228" CREATED="1415506101399" MODIFIED="1415506106122"/>
<node TEXT="&quot;Converting from the first to the second would constitute an eta reduction, and moving from the second to the first would be an eta abstraction.&quot;" ID="ID_19867286" CREATED="1415506046707" MODIFIED="1415506128853">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_848436411" STARTINCLINATION="408;0;" ENDINCLINATION="408;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
</node>
<node TEXT="circular programming" ID="ID_803835565" CREATED="1415652988314" MODIFIED="1415652991436">
<node TEXT="motiv examp: to compute average without two traversals" ID="ID_1009808975" CREATED="1415648485760" MODIFIED="1415652996725">
<node TEXT="s stands for sum, l stands for length" ID="ID_397352424" CREATED="1415648501568" MODIFIED="1415648507531"/>
<node TEXT="note that l &#x2260; 1" ID="ID_847923165" CREATED="1415648513248" MODIFIED="1415648517299"/>
<node TEXT="average :: [Float] -&gt; Float&#xa;average xs = let&#xa; nil = (0.0, 0.0)&#xa; cons x (s,l) = (x + s, 1.0 + l)&#xa; (sum,length) = foldr cons nil xs&#xa; in sum / length" ID="ID_1882089760" CREATED="1415648482984" MODIFIED="1415648483556"/>
</node>
</node>
<node TEXT="attribute grammars" ID="ID_372733417" CREATED="1415649290881" MODIFIED="1415649293645">
<node TEXT="motiv&apos;n" ID="ID_1172194175" CREATED="1415649397991" MODIFIED="1415649399444">
<node TEXT="speed without sac clarity" ID="ID_63604907" CREATED="1415649408264" MODIFIED="1415649414067"/>
<node TEXT="without them, the natural way to write a fun prog is often inefficient, req&apos;g mult trav&apos;s" ID="ID_211350090" CREATED="1415649420624" MODIFIED="1415649453300"/>
</node>
<node TEXT="source" ID="ID_1656062990" CREATED="1415649309209" MODIFIED="1415649310053">
<node TEXT="https://www.haskell.org/haskellwiki/The_Monad.Reader/Issue4/Why_Attribute_Grammars_Matter" ID="ID_567860664" CREATED="1415649306430" MODIFIED="1415649306430" LINK="https://www.haskell.org/haskellwiki/The_Monad.Reader/Issue4/Why_Attribute_Grammars_Matter"/>
<node TEXT="where I left off" ID="ID_1489329500" CREATED="1415649298810" MODIFIED="1415649301205">
<node TEXT="Our final listing now becomes:&#xa;&#xa;--- Listing Two ---" ID="ID_916894259" CREATED="1415649294888" MODIFIED="1415649297839"/>
</node>
</node>
<node TEXT="prob that stopped me reading" ID="ID_310275379" CREATED="1415649312674" MODIFIED="1415649320716">
<node TEXT="this passage" ID="ID_623954373" CREATED="1415649349153" MODIFIED="1415649350556">
<node TEXT="&quot;(sum,length,ds) = foldr cons nil xs (sum / length)&quot;" ID="ID_130777092" CREATED="1415649321371" MODIFIED="1415649340780"/>
</node>
<node TEXT="appears to contradict this" ID="ID_316425696" CREATED="1415649359401" MODIFIED="1415649362412">
<node TEXT="Prelude&gt; :t foldr&#xa;foldr :: (a -&gt; b -&gt; b) -&gt; b -&gt; [a] -&gt; b&#xa;Prelude&gt;" ID="ID_1967951049" CREATED="1415649363633" MODIFIED="1415649364173"/>
</node>
</node>
</node>
<node TEXT="an IO Handle is a reflective monadic value. I am not used to it but there is no reason that, among the other data it processes, a monad should not be able to process its own data." ID="ID_377518868" CREATED="1415681470434" MODIFIED="1415681520005"/>
</node>
<node TEXT="* control.hs" ID="ID_1823998133" CREATED="1415483556853" MODIFIED="1415494675290">
<node TEXT=".= r524, rohan" ID="ID_728251884" CREATED="1415483574517" MODIFIED="1415483850791"/>
<node TEXT="types" ID="ID_258586888" CREATED="1415486130520" MODIFIED="1415486131916">
<node TEXT="of functions" ID="ID_1432006327" CREATED="1415671069105" MODIFIED="1415671070595">
<node TEXT="openUDP :: String -&gt; Int -&gt; IO UDP" ID="ID_26069679" CREATED="1415483851153" MODIFIED="1415483888923">
<node TEXT="String = address, Int = port number" ID="ID_1901776642" CREATED="1415483891071" MODIFIED="1415483910371"/>
<node TEXT="should I think of it as returning a handle to a stream, which withTransport can use? I thought &quot;IO a&quot; meant &quot;data a wrapped in an IO context&quot;; I am used to the wrapped content being data to pipe, not a handle representing the pipe." ID="ID_1908698286" CREATED="1415671167351" MODIFIED="1415671648761"/>
<node TEXT="http://hackage.haskell.org/package/hosc-0.8/docs/Sound-OpenSoundControl-Transport-UDP.html" ID="ID_1194018210" CREATED="1415671159095" MODIFIED="1415671159095" LINK="http://hackage.haskell.org/package/hosc-0.8/docs/Sound-OpenSoundControl-Transport-UDP.html"/>
</node>
<node TEXT="withTransport :: Transport t =&gt; IO t -&gt; Connection t a -&gt; IO a" ID="ID_795735158" CREATED="1415484076885" MODIFIED="1415484077840"/>
<node TEXT="sendMessage :: SendOSC m =&gt; Message -&gt; m ()" ID="ID_1569156591" CREATED="1415486126065" MODIFIED="1415486126348"/>
<node TEXT="pauseThread :: (MonadIO m, RealFrac n) =&gt; n -&gt; m ()" ID="ID_208073750" CREATED="1415486158553" MODIFIED="1415486159044"/>
<node TEXT="note :: Double -&gt;&#xa;  transformers-0.3.0.0:Control.Monad.Trans.Reader.ReaderT&#xa;    UDP IO ()" ID="ID_1398578875" CREATED="1415486222455" MODIFIED="1415486255619"/>
<node TEXT="sin0 :: (SendOSC m, Real n) =&gt; String -&gt; n -&gt; m ()" ID="ID_1958209073" CREATED="1415673429207" MODIFIED="1415673429207"/>
</node>
<node TEXT="of data" ID="ID_587083745" CREATED="1415671072880" MODIFIED="1415671079772">
<node TEXT="UDP: implem&apos;s Transport" ID="ID_1509982420" CREATED="1415671035993" MODIFIED="1415671095588">
<node TEXT="(and Show, Eq)" ID="ID_1507093012" CREATED="1415671095792" MODIFIED="1415671098955"/>
</node>
</node>
</node>
<node TEXT="mostly asked" ID="ID_339512255" CREATED="1415677041192" MODIFIED="1415677042580">
<node TEXT="logic" ID="ID_985872166" CREATED="1415486182448" MODIFIED="1415486183363">
<node TEXT="note and pause" ID="ID_1144373244" CREATED="1415487749133" MODIFIED="1415487755800">
<node TEXT="note calls sendMessage, so note&apos;s output type must be SendOsc m =&gt; m ()" ID="ID_845329203" CREATED="1415486196160" MODIFIED="1415487025936"/>
<node TEXT="note calls pause, which must therefore also output a SendOsc monad. pauseThread outputs a MonadIO. pause applies liftIO to pauseThread. Therefore the MOnadIO that pauseThread returns is the ordinary, lowest-level IO monad." ID="ID_762749725" CREATED="1415487306196" MODIFIED="1415487466613"/>
<node TEXT="The type of note must therefore be some kind of SendOSC monad transformer around the IO monad?" ID="ID_1763699754" CREATED="1415487469489" MODIFIED="1415487569507"/>
</node>
<node TEXT="lifts" ID="ID_1689334132" CREATED="1415493753581" MODIFIED="1415493756104">
<node TEXT="the liftIO applied to pauseThread seems like it ought to be defined in SendOSC, or maybe Transport, but I see no such instance definition." ID="ID_482297065" CREATED="1415493787468" MODIFIED="1415493998318"/>
<node TEXT="the second arg to withTransport, and the first to withMax, is of abstract type Connection t a. note returns something of type [long prefix].ReaderT UDP IO (). That output is applied to mapM_. I can&apos;t figure out the concrete type that mapM_ is handing to withMax: it must be a Connection t a, but what are t and a?" ID="ID_799119283" CREATED="1415494202294" MODIFIED="1415494583990"/>
</node>
</node>
<node TEXT="?s" ID="ID_1440435613" CREATED="1415486282815" MODIFIED="1415486284233">
<node TEXT="why the weird type sig for &quot;note&quot;?" ID="ID_1648935313" CREATED="1415486284438" MODIFIED="1415486290233"/>
</node>
<node TEXT="title" ID="ID_1122417029" CREATED="1415674734761" MODIFIED="1415674735892">
<node TEXT="IO monads, stream handles, and type signatures" ID="ID_1782120271" CREATED="1415674736136" MODIFIED="1415675353162"/>
</node>
</node>
</node>
<node TEXT="could also ask mailing list" ID="ID_1485726845" CREATED="1415673729617" MODIFIED="1415673732971">
<node TEXT="(On my own I looked into a way to inspect the type of the expression at point in Emacs, and concluded it was not possible, but perhaps I&apos;m wrong?)" ID="ID_1764753232" CREATED="1415673733249" MODIFIED="1415673733249"/>
</node>
<node TEXT="2014 11 17" ID="ID_446505826" CREATED="1416268893986" MODIFIED="1416270871330">
<node TEXT="*The Monad.Reader" ID="ID_1390515774" CREATED="1416268901674" MODIFIED="1416268908054">
<node TEXT="http://themonadreader.wordpress.com/" ID="ID_1243258484" CREATED="1416268665044" MODIFIED="1416268665044" LINK="http://themonadreader.wordpress.com/"/>
</node>
<node TEXT="Chris Allen on a typeclass study program" ID="ID_36354470" CREATED="1416268909129" MODIFIED="1416268914190">
<node TEXT="ref" ID="ID_1433756836" CREATED="1416268951248" MODIFIED="1416268952804">
<node TEXT="see the 2nd message in this thread" ID="ID_728198146" CREATED="1416268924418" MODIFIED="1416268938909"/>
<node ID="ID_226235111" CREATED="1416268931919" MODIFIED="1416268931919"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <span charset="utf-8" style="letter-spacing: normal; word-spacing: 0px; float: none; line-height: normal; font-weight: normal; font-variant: normal; font-size: 17.7142848968506px; color: rgb(34, 34, 34); text-indent: 0px; font-family: arial, sans-serif; white-space: normal; font-style: normal; display: inline !important; background-color: rgb(255, 255, 255); text-transform: none; text-align: start"><font face="arial, sans-serif" size="17.7142848968506px" color="rgb(34, 34, 34)">[Haskell-c</font></span><font face="arial, sans-serif" size="17.7142848968506px" color="rgb(34, 34, 34)"><wbr style="letter-spacing: normal; word-spacing: 0px; line-height: normal; font-variant: normal; text-indent: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-transform: none" align="start"/><span style="letter-spacing: normal; word-spacing: 0px; float: none; line-height: normal; font-weight: normal; font-variant: normal; font-size: 17.7142848968506px; font-family: arial, sans-serif; text-indent: 0px; color: rgb(34, 34, 34); white-space: normal; font-style: normal; display: inline !important; background-color: rgb(255, 255, 255); text-transform: none; text-align: start">afe] The next 7000... abstractio</span><wbr style="letter-spacing: normal; word-spacing: 0px; line-height: normal; font-variant: normal; text-indent: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-transform: none" align="start"/><span style="letter-spacing: normal; word-spacing: 0px; float: none; line-height: normal; font-weight: normal; font-variant: normal; font-size: 17.7142848968506px; font-family: arial, sans-serif; text-indent: 0px; color: rgb(34, 34, 34); white-space: normal; font-style: normal; display: inline !important; background-color: rgb(255, 255, 255); text-transform: none; text-align: start">ns to learn!</span></font>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="inc. a study order on typeclasses (Functor, Applicative, Monad, ...), and references" ID="ID_1232035306" CREATED="1416268955513" MODIFIED="1416268992891"/>
</node>
<node ID="ID_56139912" CREATED="1416269089359" MODIFIED="1416269089359"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <span charset="utf-8" style="letter-spacing: normal; word-spacing: 0px; float: none; line-height: normal; font-weight: normal; font-variant: normal; font-size: 17.7142848968506px; color: rgb(34, 34, 34); text-indent: 0px; font-family: arial, sans-serif; white-space: normal; font-style: normal; display: inline !important; background-color: rgb(255, 255, 255); text-transform: none; text-align: start"><font face="arial, sans-serif" size="17.7142848968506px" color="rgb(34, 34, 34)">[Haskell-c</font></span><font face="arial, sans-serif" size="17.7142848968506px" color="rgb(34, 34, 34)"><wbr style="letter-spacing: normal; word-spacing: 0px; line-height: normal; font-variant: normal; text-indent: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-transform: none" align="start"/><span style="letter-spacing: normal; word-spacing: 0px; float: none; line-height: normal; font-weight: normal; font-variant: normal; font-size: 17.7142848968506px; font-family: arial, sans-serif; text-indent: 0px; color: rgb(34, 34, 34); white-space: normal; font-style: normal; display: inline !important; background-color: rgb(255, 255, 255); text-transform: none; text-align: start">afe] [ANN] elevator: getting to a top of a monad transforme</span><wbr style="letter-spacing: normal; word-spacing: 0px; line-height: normal; font-variant: normal; text-indent: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-transform: none" align="start"/><span style="letter-spacing: normal; word-spacing: 0px; float: none; line-height: normal; font-weight: normal; font-variant: normal; font-size: 17.7142848968506px; font-family: arial, sans-serif; text-indent: 0px; color: rgb(34, 34, 34); white-space: normal; font-style: normal; display: inline !important; background-color: rgb(255, 255, 255); text-transform: none; text-align: start">r stack</span></font>
  </body>
</html>
</richcontent>
</node>
<node TEXT="advanced &quot;mini-tutorials&quot;" ID="ID_323685619" CREATED="1416270046596" MODIFIED="1416270051881">
<node TEXT="http://okmij.org/ftp/Haskell/" ID="ID_431753582" CREATED="1416270045590" MODIFIED="1416270045590" LINK="http://okmij.org/ftp/Haskell/"/>
</node>
</node>
<node TEXT="2014 12 01" ID="ID_1909784510" CREATED="1417119208944" MODIFIED="1417501844854">
<node TEXT="prob, lib" ID="ID_1900762661" CREATED="1417501378731" MODIFIED="1417501382366">
<node TEXT="music: haskore" ID="ID_923205923" CREATED="1416627717767" MODIFIED="1417121761954">
<node TEXT="The (=:=) means parallel composition and (+:+) means serial composition of musical objects." ID="ID_70365737" CREATED="1416627716573" MODIFIED="1416627717298"/>
<node TEXT="part of SC-Haskell&apos;s req&apos;s" ID="ID_337384734" CREATED="1416627723718" MODIFIED="1416627734495"/>
</node>
<node TEXT="testing IO" ID="ID_160729699" CREATED="1417031663169" MODIFIED="1417501394054">
<node TEXT="http://stackoverflow.com/questions/7370073/testing-functions-in-haskell-that-do-io" ID="ID_855477042" CREATED="1417031665937" MODIFIED="1417031665937" LINK="http://stackoverflow.com/questions/7370073/testing-functions-in-haskell-that-do-io"/>
<node TEXT="[Haskell-cafe] Replacing IO with pure values" ID="ID_596928691" CREATED="1417031742382" MODIFIED="1417031743626"/>
</node>
<node TEXT="graphics, pdf, highly rec&apos;d" ID="ID_1051681376" CREATED="1415989010154" MODIFIED="1417501401718">
<node TEXT="http://www.renci.org/wp-content/pub/tutorials/BeautifulCode.pdf" ID="ID_1362260572" CREATED="1415989019207" MODIFIED="1415989019207" LINK="http://www.renci.org/wp-content/pub/tutorials/BeautifulCode.pdf"/>
<node TEXT="rec&apos;d by Ivan Perez on Haskell-cafe, thread &quot;Programming videogames in haskell&quot;" ID="ID_466754061" CREATED="1415989029506" MODIFIED="1415989046213"/>
</node>
</node>
</node>
<node TEXT="2014 12 02" ID="ID_1982007529" CREATED="1417581301735" MODIFIED="1417581304499">
<node TEXT="hierarchical modules" ID="ID_38646429" CREATED="1417581310207" MODIFIED="1417581313602">
<node TEXT="how" ID="ID_1659037535" CREATED="1417581368662" MODIFIED="1417581370129">
<node TEXT="language extension" ID="ID_75071347" CREATED="1417581314174" MODIFIED="1417581316658"/>
<node TEXT="module.subname.subname" ID="ID_378618430" CREATED="1417581317710" MODIFIED="1417581325930"/>
</node>
<node TEXT="* why" ID="ID_1206697827" CREATED="1417581371303" MODIFIED="1417581373321">
<node TEXT="to abbreviate a left sub-path" ID="ID_378218630" CREATED="1417581385742" MODIFIED="1417581393561"/>
<node TEXT="det" ID="ID_1539972769" CREATED="1417581377654" MODIFIED="1417581383673">
<node TEXT="module A.B.C&#xa;It is a common strategy to use the as keyword to save some typing when using qualified names with hierarchical modules. For example:&#xa;&#xa;import qualified Control.Monad.ST.Strict as ST" ID="ID_1234889816" CREATED="1417581374446" MODIFIED="1417581374945"/>
</node>
</node>
</node>
</node>
<node TEXT="2014 12 05" ID="ID_911544997" CREATED="1415826376996" MODIFIED="1417914306647">
<node TEXT="would it be worth learning scheme to understand monads?" ID="ID_1549836113" CREATED="1415684278189" MODIFIED="1415684287184"/>
<node TEXT="read stackoverflow haskell monad" ID="ID_1265856337" CREATED="1415684144648" MODIFIED="1415684148595"/>
<node TEXT="ponder the category theoretic interpretation of haskell monads" ID="ID_122570299" CREATED="1415738465651" MODIFIED="1415738478109">
<node TEXT="do I see why a monad is a functor?" ID="ID_1207378510" CREATED="1415738498075" MODIFIED="1415738504966"/>
</node>
<node TEXT="my lang about haskell" ID="ID_402834638" CREATED="1415686546572" MODIFIED="1415686553479">
<node TEXT="&quot;passage (term?) passage&quot; for language I&apos;m missing; word is my own characterization" ID="ID_989041436" CREATED="1415686510461" MODIFIED="1415686533728"/>
</node>
<node TEXT="categ th" ID="ID_1604945424" CREATED="1415686077995" MODIFIED="1415756630144">
<font BOLD="true"/>
<node TEXT="** resume here" ID="ID_1864825803" CREATED="1415745319411" MODIFIED="1415745324014">
<node TEXT="http://en.wikibooks.org/w/index.php?title=Haskell/Category_theory&amp;stable=0#The_second_law" ID="ID_698465305" CREATED="1415745315444" MODIFIED="1415745315444" LINK="http://en.wikibooks.org/w/index.php?title=Haskell/Category_theory&amp;stable=0#The_second_law"/>
</node>
<node TEXT=".* local syntax" ID="ID_517611321" CREATED="1415687279847" MODIFIED="1415740067299">
<node TEXT="&quot;\to&quot; = &quot;-&gt;&quot;" ID="ID_1236354859" CREATED="1415687273543" MODIFIED="1415687296281">
<node TEXT="copying the RHS from wikipedia leaves the LHS here" ID="ID_1179972035" CREATED="1415687296583" MODIFIED="1415687312458"/>
</node>
<node TEXT="&quot;\circ&quot; = a circle (not a disc), the composition operator, centered in the aascii line" ID="ID_1888752746" CREATED="1415687524778" MODIFIED="1415687561293"/>
</node>
<node TEXT="pure categ" ID="ID_1808203636" CREATED="1415687109623" MODIFIED="1415738440448">
<node TEXT="category" ID="ID_898611696" CREATED="1415686110314" MODIFIED="1415738652420">
<node TEXT="elts" ID="ID_1405541620" CREATED="1415686310486" MODIFIED="1415686326404">
<node TEXT="object" ID="ID_1043963404" CREATED="1415686131405" MODIFIED="1415686133461"/>
<node TEXT="morphism" ID="ID_1105936395" CREATED="1415686133915" MODIFIED="1415686136645">
<node TEXT="&quot;ties the objects together&quot;" ID="ID_36559248" CREATED="1415686158992" MODIFIED="1415686163020"/>
<node TEXT="instances" ID="ID_574099114" CREATED="1415686163257" MODIFIED="1415686177788">
<node TEXT="functions" ID="ID_1967046700" CREATED="1415686177945" MODIFIED="1415686180908"/>
<node TEXT="comparison operators" ID="ID_597941460" CREATED="1415686181129" MODIFIED="1415686187908">
<node TEXT="tying the lower to the higher" ID="ID_990442384" CREATED="1415686200929" MODIFIED="1415686204891"/>
</node>
</node>
</node>
<node TEXT="composition" ID="ID_1914209811" CREATED="1415686137091" MODIFIED="1415686139277"/>
</node>
<node TEXT="laws" ID="ID_1760721587" CREATED="1415686211192" MODIFIED="1415686211859">
<node TEXT="associative" ID="ID_1624280471" CREATED="1415686212168" MODIFIED="1415686217355"/>
<node TEXT="closed" ID="ID_9797748" CREATED="1415686217616" MODIFIED="1415686219435"/>
<node TEXT="morphisms include an id for every obj" ID="ID_297802491" CREATED="1415686223720" MODIFIED="1415738676091"/>
</node>
</node>
<node TEXT="functor" ID="ID_1053055915" CREATED="1415687101841" MODIFIED="1415687104260">
<node TEXT="def&apos;n" ID="ID_532084774" CREATED="1415739633575" MODIFIED="1415739635186">
<node TEXT="maps from one category to another" ID="ID_1660901405" CREATED="1415687129960" MODIFIED="1415687138147"/>
<node TEXT="is a correspondence for their both objects and morphisms" ID="ID_1106022625" CREATED="1415687138345" MODIFIED="1415687178445"/>
<node TEXT="preserves the morphisms" ID="ID_1426329523" CREATED="1415687236263" MODIFIED="1415687245369">
<node TEXT="A functor F from C to D maps morphisms f : A \to B in C to F(f) : F(A) \to F(B) in D." ID="ID_1069606281" CREATED="1415687246968" MODIFIED="1415731870771"/>
</node>
</node>
<node TEXT="constraint? implication?" ID="ID_1890886084" CREATED="1415687482898" MODIFIED="1415687487079">
<node TEXT="F(id_A) = id_{F(A)}" ID="ID_71915165" CREATED="1415687488579" MODIFIED="1415687489445"/>
<node TEXT="F(f \circ g) = F(f) \circ F(g)" ID="ID_933223950" CREATED="1415687496994" MODIFIED="1415687497998"/>
</node>
<node TEXT="ex&apos;l: power set functor" ID="ID_1158840546" CREATED="1415739623840" MODIFIED="1415739660146">
<node TEXT="from what to what?" ID="ID_1856662606" CREATED="1415739664366" MODIFIED="1415739705870"/>
</node>
</node>
<node TEXT="monad" ID="ID_830510703" CREATED="1415732003338" MODIFIED="1415732004189">
<node TEXT="a monad M is a functor from C to itself,&#xa;plus two morphisms defined for every obj X in C" ID="ID_1040162335" CREATED="1415732013075" MODIFIED="1415732100835"/>
<node TEXT="\mathit{unit}^M_X : X \to M(X)&#xa;\mathit{join}^M_X : M(M(X)) \to M(X)" ID="ID_1760327994" CREATED="1415732005234" MODIFIED="1415732006262"/>
</node>
<node TEXT="see also &quot;power set&quot;, under &quot;haskell categ&quot;" ID="ID_1986286718" CREATED="1415741034695" MODIFIED="1415741040890"/>
</node>
<node TEXT="haskell categ" ID="ID_21187170" CREATED="1415686307335" MODIFIED="1415738441879">
<node TEXT="helpful organizing concepts" ID="ID_1736870721" CREATED="1415689898546" MODIFIED="1415689915164">
<node TEXT="are type constructors, Things that take a type and return another type." ID="ID_364282646" CREATED="1415689919187" MODIFIED="1415689932943"/>
<node TEXT="are higher-order functions, Things that take a function and return another function." ID="ID_159317758" CREATED="1415689919187" MODIFIED="1415689938206"/>
<node TEXT="Typeclasses, along with the polymorphism they provide, make a nice way of capturing the fact that in category theory things are often defined over a number of objects at once." ID="ID_1659620861" CREATED="1415689919189" MODIFIED="1415689919189"/>
</node>
<node TEXT="&quot;hask&quot; = the haskell category" ID="ID_1503331118" CREATED="1415689740212" MODIFIED="1415689750991">
<node TEXT=". = elts" ID="ID_1966230777" CREATED="1415686340238" MODIFIED="1415689769056"/>
<node TEXT="its objects = all types" ID="ID_943874543" CREATED="1415689785708" MODIFIED="1415689796283"/>
<node TEXT="its morphisms = all monomorphic functions" ID="ID_460399782" CREATED="1415686457396" MODIFIED="1415689797647">
<node TEXT="e.g. not &quot;id&quot;, which is polymorphic, but its monomorphic (alas the word is not instances?)" ID="ID_1048453281" CREATED="1415686440956" MODIFIED="1415686611960"/>
</node>
<node TEXT="its composition op = &quot;.&quot;" ID="ID_1321806814" CREATED="1415686341054" MODIFIED="1415689805255"/>
</node>
<node TEXT="functors" ID="ID_1073822560" CREATED="1415688447452" MODIFIED="1415688448486">
<node TEXT="in haskell the Functor constructor has type a -&gt; F a" ID="ID_1804272417" CREATED="1415689210006" MODIFIED="1415735358153">
<node TEXT="examples of valid values for the type constructor F include Maybe, List, ..." ID="ID_1324797236" CREATED="1415689222134" MODIFIED="1415689279993"/>
</node>
<node TEXT="in haskell fmap has type (a -&gt; b) -&gt; (F a -&gt; F b)" ID="ID_1616661060" CREATED="1415688653305" MODIFIED="1415689307792">
<node TEXT="after uncurrying a little" ID="ID_74402872" CREATED="1415689195228" MODIFIED="1415689196507"/>
</node>
<node TEXT="in categ theory, those two maps are all a functor is" ID="ID_817513763" CREATED="1415689308365" MODIFIED="1415735370948"/>
<node TEXT="more" ID="ID_77010475" CREATED="1415689181214" MODIFIED="1415689182546">
<node TEXT="are from hask&apos;s objects (all monomorphic func&apos;s x -&gt; y) to a subset that are functions with functor domain and range, F x -&gt; F y" ID="ID_1863437952" CREATED="1415688448699" MODIFIED="1415688585822"/>
</node>
</node>
<node TEXT="monad: haskell, categ corresp" ID="ID_1832974861" CREATED="1415743130835" MODIFIED="1415756313106">
<node TEXT="categ theory unit ~ haskell return" ID="ID_109137670" CREATED="1415732636032" MODIFIED="1415732645419">
<node TEXT="they differ slightly, in that unix[sup M, sub X] is a different function for every X, while the return defined in a haskell monad is polymorphic, applicable to all of them" ID="ID_1075187263" CREATED="1415732769382" MODIFIED="1415732806336"/>
</node>
<node TEXT="categ theory join &#x2260; haskell &gt;&gt;= (&quot;bind&quot;)" ID="ID_1127295387" CREATED="1415732652527" MODIFIED="1415732822141">
<node TEXT="* there is only one kind of Monad, m, used herein" ID="ID_1818421875" CREATED="1415737185642" MODIFIED="1415737226304">
<node TEXT="in particular, m (m a) does not indicate two different kinds of monads, just two intances of the same kind" ID="ID_782810471" CREATED="1415737232625" MODIFIED="1415737255556"/>
<node TEXT="(where &quot;kind&quot; and &quot;instance&quot; are my own, not Haskell&apos;s, words)" ID="ID_1344500026" CREATED="1415737257335" MODIFIED="1415737267948"/>
</node>
<node TEXT="sig&apos;s" ID="ID_387826390" CREATED="1415733073680" MODIFIED="1415733077035">
<node TEXT="join  :: Monad m =&gt; m (m a) -&gt; m a" ID="ID_1326590908" CREATED="1415733054496" MODIFIED="1415737175314"/>
<node TEXT="(&gt;&gt;=) :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b" ID="ID_1381929318" CREATED="1415732674335" MODIFIED="1415733064324"/>
</node>
<node TEXT="equiv" ID="ID_591640911" CREATED="1415733078736" MODIFIED="1415733080755">
<node TEXT="&quot;join x = x &gt;&gt;= id&quot;" ID="ID_1752480269" CREATED="1415733085800" MODIFIED="1415735443241">
<node TEXT="repe: &quot;join x = x &gt;&gt;= id&quot;" ID="ID_1862540018" CREATED="1415736565290" MODIFIED="1415736567513"/>
<node TEXT="let m be a Monad" ID="ID_1957496187" CREATED="1415735808386" MODIFIED="1415736472265"/>
<node TEXT="sig&apos;s" ID="ID_770416359" CREATED="1415736495477" MODIFIED="1415737043948">
<node TEXT="join :: Monad m =&gt; m (m a) -&gt; m a" ID="ID_111204093" CREATED="1415733054496" MODIFIED="1415733055369"/>
<node TEXT="(&gt;&gt;=) generally :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b" ID="ID_1419197894" CREATED="1415736317257" MODIFIED="1415736888554"/>
<node TEXT="(&gt;&gt;=) here      :: Monad m =&gt; m (m a) -&gt; (m a -&gt; m b) -&gt; m b&#xa;(after substituting &quot;m a&quot; for &quot;a&quot;)&#xa;                :: Monad m =&gt; m (m a) -&gt; (m a -&gt; m a) -&gt; m a&#xa;(after substituting &quot;m a&quot; for &quot;m b&quot;)" ID="ID_819782992" CREATED="1415736317257" MODIFIED="1415737142928"/>
</node>
<node TEXT="impli&apos;s" ID="ID_1179550551" CREATED="1415736558892" MODIFIED="1415737076807">
<node TEXT="x :: m (m a)" ID="ID_969306295" CREATED="1415736647987" MODIFIED="1415736654446"/>
</node>
</node>
<node TEXT="&quot;x &gt;&gt;= f = join (fmap f x)&quot;" ID="ID_1267930947" CREATED="1415733092225" MODIFIED="1415735445603">
<node TEXT="let m be a Monad" ID="ID_237890998" CREATED="1415735808386" MODIFIED="1415736472265"/>
<node TEXT="type sig&apos;s" ID="ID_184756051" CREATED="1415736304112" MODIFIED="1415736305683">
<node TEXT="fmap ~:: Monad m =&gt; (a -&gt; b) -&gt; m a -&gt; m b" ID="ID_1502714910" CREATED="1415735615261" MODIFIED="1415735975914">
<node TEXT="actually, fmap :: Functor f =&gt; (a -&gt; b) -&gt; F a -&gt; F b" ID="ID_1384375498" CREATED="1415735615261" MODIFIED="1415735941193"/>
<node TEXT="but here we&apos;re talking about the Functor properties of the Monad m" ID="ID_984325104" CREATED="1415735941399" MODIFIED="1415735966200"/>
</node>
<node TEXT="(&gt;&gt;=) :: Monad m =&gt; m a -&gt; (a -&gt; m b) -&gt; m b" ID="ID_1897877988" CREATED="1415736317257" MODIFIED="1415736317700"/>
</node>
<node TEXT="implic&apos;s" ID="ID_1336539214" CREATED="1415735879792" MODIFIED="1415736303101">
<node TEXT="x :: m a" ID="ID_224553568" CREATED="1415735716194" MODIFIED="1415735805957">
<node TEXT="because it is used in &quot;x &gt;&gt;=&quot;" ID="ID_21542256" CREATED="1415736232554" MODIFIED="1415736250673"/>
</node>
<node TEXT="f :: a -&gt; m b" ID="ID_528096392" CREATED="1415735837505" MODIFIED="1415735841012">
<node TEXT="because it is used in &quot;x &gt;&gt;= f&quot;" ID="ID_1981214295" CREATED="1415736232554" MODIFIED="1415736274869"/>
</node>
<node TEXT="x &gt;&gt;= f :: m b" ID="ID_1580511558" CREATED="1415735849096" MODIFIED="1415735855948"/>
<node TEXT="fmap f x :: m (m b)" ID="ID_1264997551" CREATED="1415736364159" MODIFIED="1415736420346">
<node TEXT="x starts as &quot;m a&quot;" ID="ID_1681385563" CREATED="1415736422662" MODIFIED="1415736427762"/>
<node TEXT="fmap reaches inside, turns the a into an &quot;m b&quot;" ID="ID_1474353614" CREATED="1415736428935" MODIFIED="1415736441882"/>
</node>
</node>
</node>
</node>
<node TEXT="more" ID="ID_1056360910" CREATED="1415733046819" MODIFIED="1415733047420">
<node TEXT="categ join: X -&gt; M(X)" ID="ID_1998393732" CREATED="1415732666760" MODIFIED="1415733045905"/>
</node>
</node>
</node>
<node TEXT="monad laws" ID="ID_1723052215" CREATED="1415743253304" MODIFIED="1415756295173">
<node TEXT="let" ID="ID_423394462" CREATED="1415743255504" MODIFIED="1415743258932">
<node TEXT="m: C -&gt; C be a monad" ID="ID_1110809372" CREATED="1415743262201" MODIFIED="1415743723319"/>
<node TEXT="f: A -&gt; B for A, B in C be a morphism" ID="ID_1610925832" CREATED="1415743272193" MODIFIED="1415743291864"/>
</node>
<node TEXT="law 1" ID="ID_237076440" CREATED="1415743150483" MODIFIED="1415743155062">
<node TEXT="stmt" ID="ID_1591815305" CREATED="1415743690687" MODIFIED="1415743692394">
<node TEXT="categ:   join . M(join)   = join . join" ID="ID_1194619875" CREATED="1415743196057" MODIFIED="1415743228891"/>
<node TEXT="haskell: join . fmap join = join . join" ID="ID_1978227975" CREATED="1415743160883" MODIFIED="1415743168485"/>
</node>
<node TEXT="interp" ID="ID_1407214684" CREATED="1415743688463" MODIFIED="1415743689323">
<node TEXT="either expr has type m (m (m a)) -&gt; m a" ID="ID_408575548" CREATED="1415743684575" MODIFIED="1415743762323"/>
<node TEXT="rule: join inner layer first (fmap join) and then what results == join outer layer first (join) and then what results" ID="ID_1137844501" CREATED="1415743763982" MODIFIED="1415743860682"/>
<node TEXT="it&apos;s like assoc&apos;vy" ID="ID_1336235203" CREATED="1415743657921" MODIFIED="1415743697899"/>
</node>
<node TEXT="exercise: Maybe" ID="ID_1256490928" CREATED="1415744059747" MODIFIED="1415754671390">
<node TEXT="op&apos;s" ID="ID_1925183731" CREATED="1415744106873" MODIFIED="1415744109340">
<node TEXT="return = Just" ID="ID_1788599344" CREATED="1415744072398" MODIFIED="1415744077581"/>
<node TEXT="join Nothing         = Nothing   (1)&#xa;join (Just Nothing)  = Nothing   (2)&#xa;join (Just (Just x)) = Just x    (3)" ID="ID_38236938" CREATED="1415744078089" MODIFIED="1415744660518"/>
</node>
<node TEXT="join . fmap join" ID="ID_1348281622" CREATED="1415744604713" MODIFIED="1415744609236">
<node TEXT="join . fmap join $ Just( Just( Just 3 ) )&#xa;= join $ Just( Just 3 )&#xa;  (by rule (3); as if removing the *last* Just)&#xa;= Just 3" ID="ID_77641939" CREATED="1415744457276" MODIFIED="1415744810383"/>
<node TEXT="join . fmap join $ Just( Just( Nothing ) )&#xa;= join $ Just Nothing (by rule (2))&#xa;= Nothing" ID="ID_836688504" CREATED="1415744520418" MODIFIED="1415745131925"/>
<node TEXT="join . fmap join $ Just Nothing&#xa;= join $ Just Nothing&#xa;= Nothing" ID="ID_1715857480" CREATED="1415745138632" MODIFIED="1415745245787"/>
</node>
<node TEXT="join . join" ID="ID_1747254293" CREATED="1415744114417" MODIFIED="1415744120732">
<node TEXT="join . join $ Just( Just( Just 3 ) )&#xa;= join $ Just( Just 3 )&#xa;  (by rule (3); as if removing the middle Just)&#xa;= Just 3" ID="ID_99297333" CREATED="1415744457276" MODIFIED="1415744750536"/>
<node TEXT="join . join $ Just( Just( Nothing ) )&#xa;= join $ Just Nothing&#xa;  (by rule (3), as if removing the second Just)&#xa;= Nothing (by rule (2))" ID="ID_583974202" CREATED="1415744520418" MODIFIED="1415745104326"/>
<node TEXT="join . join ... join $ Nothing = Nothing" ID="ID_390957711" CREATED="1415744580081" MODIFIED="1415744599553"/>
</node>
</node>
</node>
<node TEXT="law 2" ID="ID_704094015" CREATED="1415753453174" MODIFIED="1415753454281">
<node TEXT="stmt" ID="ID_202727433" CREATED="1415753455342" MODIFIED="1415753456489">
<node TEXT="categ:   join . M (unit)    = join . unit   = id" ID="ID_1158503583" CREATED="1415753479285" MODIFIED="1415753644928"/>
<node TEXT="haskell: join . fmap return = join . return = id" ID="ID_850286970" CREATED="1415753462614" MODIFIED="1415753478681"/>
</node>
<node TEXT="sigs" ID="ID_513339621" CREATED="1415753967350" MODIFIED="1415753968073">
<node TEXT="return :: Monad m =&gt; a -&gt; m a" ID="ID_568729729" CREATED="1415753977831" MODIFIED="1415753978394"/>
<node TEXT="fmap ~:: Monad m =&gt; (a -&gt; b) -&gt; m a -&gt; m b" ID="ID_375851595" CREATED="1415735615261" MODIFIED="1415735975914">
<node TEXT="see elsewhere for how that deviates slightly from truth" ID="ID_561864652" CREATED="1415754029229" MODIFIED="1415754038513"/>
</node>
<node TEXT="join :: Monad m =&gt; m (m a) -&gt; m a" ID="ID_673093070" CREATED="1415754058516" MODIFIED="1415754058897"/>
<node TEXT="the rule :: m a -&gt; m a" ID="ID_1979173324" CREATED="1415754135362" MODIFIED="1415754314772">
<node TEXT="both sides of eq have that type" ID="ID_1089220207" CREATED="1415754292548" MODIFIED="1415754294933"/>
</node>
</node>
<node TEXT="interp" ID="ID_1933588884" CREATED="1415753862584" MODIFIED="1415753863538">
<node TEXT="join . fmap return" ID="ID_923428513" CREATED="1415754394672" MODIFIED="1415754423874">
<node TEXT="inputs an m a" ID="ID_1533830420" CREATED="1415754421639" MODIFIED="1415754429850"/>
<node TEXT="fmap reaches into the a, and applies return to it, wrapping it in an m; the result at this point is m( m a) )" ID="ID_1456678378" CREATED="1415754426894" MODIFIED="1415754468466"/>
<node TEXT="join then collapses the nested monad pair into a single-layered monad, of type m a" ID="ID_1326989319" CREATED="1415754468750" MODIFIED="1415754495072"/>
</node>
<node TEXT="join . return" ID="ID_1090708522" CREATED="1415754510205" MODIFIED="1415754512161">
<node TEXT="return inputs an m a, and wraps it into an m( m a )" ID="ID_939541913" CREATED="1415754512542" MODIFIED="1415754535016"/>
<node TEXT="join then collapses the m( m a ) into an m a" ID="ID_228686866" CREATED="1415754584692" MODIFIED="1415754599454"/>
</node>
<node TEXT="the difference" ID="ID_1788697285" CREATED="1415754540389" MODIFIED="1415754568129">
<node TEXT="fmap return adds an inner monad layer" ID="ID_1193832733" CREATED="1415754568415" MODIFIED="1415754575942"/>
<node TEXT="by contrast, return adds an outer one" ID="ID_1759527990" CREATED="1415754576480" MODIFIED="1415754579550"/>
</node>
</node>
<node TEXT="exercise: Maybe" ID="ID_1350604957" CREATED="1415754662666" MODIFIED="1415754673502">
<node TEXT="op&apos;s" ID="ID_1164075293" CREATED="1415744106873" MODIFIED="1415744109340">
<node TEXT="return = Just" ID="ID_120928435" CREATED="1415744072398" MODIFIED="1415744077581"/>
<node TEXT="join Nothing         = Nothing   (1)&#xa;join (Just Nothing)  = Nothing   (2)&#xa;join (Just (Just x)) = Just x    (3)" ID="ID_473068903" CREATED="1415744078089" MODIFIED="1415744660518"/>
</node>
<node TEXT="join . fmap" ID="ID_1642934729" CREATED="1415754717417" MODIFIED="1415754746829">
<node TEXT="join . fmap return $ Just 3&#xa;= join $ Just( Just 3 )&#xa;  (the inner Just layer being new)&#xa;= Just 3" ID="ID_582438578" CREATED="1415754747279" MODIFIED="1415754870450"/>
<node TEXT="join . fmap return $ Nothing&#xa;= join . Nothing (because fmap _ Nothing = Nothing)&#xa;= Nothing" ID="ID_757532294" CREATED="1415754883958" MODIFIED="1415755395713"/>
</node>
<node TEXT="join . return" ID="ID_766871016" CREATED="1415754821056" MODIFIED="1415754831683">
<node TEXT="join . return $ Just 3&#xa;= join $ Just( Just 3 )&#xa;  (the outer layer being new)&#xa;= Just 3" ID="ID_1440679500" CREATED="1415754831927" MODIFIED="1415754881020"/>
<node TEXT="join . return $ Nothing&#xa;= join $ Just Nothing&#xa;= Nothing" ID="ID_1305951540" CREATED="1415755111562" MODIFIED="1415755478194"/>
</node>
</node>
</node>
<node TEXT=". the next two are easier" ID="ID_945032203" CREATED="1415755747584" MODIFIED="1415755751115"/>
<node TEXT="law 3" ID="ID_1043103413" CREATED="1415753672946" MODIFIED="1415753674037">
<node TEXT="stmt" ID="ID_913686704" CREATED="1415753674242" MODIFIED="1415753676133">
<node TEXT="categ:   unit . f   = M( f ) . unit" ID="ID_1985067725" CREATED="1415753703146" MODIFIED="1415753750414"/>
<node TEXT="haskell: return . f = fmap f . return" ID="ID_463132052" CREATED="1415753720762" MODIFIED="1415753745132"/>
</node>
<node TEXT="interp" ID="ID_1768924735" CREATED="1415755577932" MODIFIED="1415755587390">
<node TEXT="to apply f and then wrap in a monad = to wrap in a monad and then fmap f into the monad" ID="ID_1254304044" CREATED="1415755587762" MODIFIED="1415755614533"/>
</node>
</node>
<node TEXT="law 4" ID="ID_696159525" CREATED="1415753762754" MODIFIED="1415753764372">
<node TEXT="stmt" ID="ID_827691836" CREATED="1415753764563" MODIFIED="1415753765325">
<node TEXT="categ:   join . M( M( f ) )   = M( f ) . join" ID="ID_1654725646" CREATED="1415753766609" MODIFIED="1415753820765"/>
<node TEXT="haskell: join . fmap (fmap f) = fmap f . join" ID="ID_617433198" CREATED="1415753768113" MODIFIED="1415753790604"/>
</node>
<node TEXT="interp" ID="ID_1593765034" CREATED="1415755618402" MODIFIED="1415755619459">
<node TEXT="to fmap (fmap f) into an m( m a ), that is to apply f to the a by chaining fmaps = to collapse the two layers of monad and then fmap f into the single layer" ID="ID_204789840" CREATED="1415755629330" MODIFIED="1415755735811"/>
</node>
</node>
</node>
<node TEXT="ex&apos;l: power set" ID="ID_906086954" CREATED="1415740021693" MODIFIED="1415741015042">
<node TEXT="power set functor" ID="ID_1766950154" CREATED="1415740075481" MODIFIED="1415740355819">
<node TEXT="map sets to their power sets" ID="ID_775061479" CREATED="1415740080751" MODIFIED="1415740086419"/>
<node TEXT="map functions (f: X-&gt;Y) -&gt; (g: P(X)-&gt;P(Y))" ID="ID_1326706295" CREATED="1415740086680" MODIFIED="1415740274000"/>
<node TEXT="* where" ID="ID_637605537" CREATED="1415740130142" MODIFIED="1415740286476">
<node ID="ID_285835488" CREATED="1415740214748" MODIFIED="1415740214748"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      P(S) = the powerset of S
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="g(S) = {f(x) for x in S}" ID="ID_923372787" CREATED="1415740215301" MODIFIED="1415740246664"/>
</node>
</node>
<node TEXT="power set monad" ID="ID_1541661460" CREATED="1415740386538" MODIFIED="1415740391629">
<node TEXT=". use the functor def&apos;n, plus these:" ID="ID_1017403094" CREATED="1415740444993" MODIFIED="1415740462104"/>
<node TEXT="unit(x) = {x}" ID="ID_1463736608" CREATED="1415740462552" MODIFIED="1415740471220">
<node TEXT="i.e., map each elt to the singleton containing it" ID="ID_252036000" CREATED="1415740471457" MODIFIED="1415740494573"/>
</node>
<node TEXT="join(S) = union over S" ID="ID_1224757810" CREATED="1415740524630" MODIFIED="1415740553747">
<node TEXT=".= example" ID="ID_1555536108" CREATED="1415739544665" MODIFIED="1415740563123"/>
<node TEXT="let:&#xa;S1 = {a,b}&#xa;S2 = The set of all subsets of S1&#xa;= {{},{a},{b},S1}&#xa;S3 = The set of all subsets of S2&#xa;= {{},{{}}, ...}&#xa;They are not the same.&#xa;However, the union op takes every set in S3 to one in S2." ID="ID_1132686930" CREATED="1415739471426" MODIFIED="1415740595897"/>
</node>
</node>
<node TEXT="is like the Haskell list monad" ID="ID_1826002391" CREATED="1415740988895" MODIFIED="1415741001187">
<node TEXT="http://en.wikibooks.org/w/index.php?title=Haskell/Category_theory&amp;stable=0#Example:_the_powerset_functor_is_also_a_monad" ID="ID_195046237" CREATED="1415740987732" MODIFIED="1415740987732" LINK="http://en.wikibooks.org/w/index.php?title=Haskell/Category_theory&amp;stable=0#Example:_the_powerset_functor_is_also_a_monad"/>
</node>
</node>
<node TEXT="ex&apos;l: list" ID="ID_1487355830" CREATED="1415743333623" MODIFIED="1415743357326">
<node TEXT="categ join = haskell concat" ID="ID_1569968147" CREATED="1415743337439" MODIFIED="1415743345602"/>
<node TEXT="categ map = haskell fmap" ID="ID_173505067" CREATED="1415743348151" MODIFIED="1415743352210"/>
</node>
</node>
</node>
<node TEXT="?s" ID="ID_403495570" CREATED="1415732498026" MODIFIED="1415732499013">
<node TEXT="for Maybe, is return == Just?" ID="ID_1662908815" CREATED="1415755199881" MODIFIED="1415755218644">
<node TEXT="its says so here" ID="ID_545774146" CREATED="1415755225513" MODIFIED="1415755229059">
<node TEXT="http://en.wikibooks.org/w/index.php?title=Haskell/Category_theory&amp;stable=0#The_monad_laws_and_their_importance" ID="ID_607599834" CREATED="1415755224838" MODIFIED="1415755224838" LINK="http://en.wikibooks.org/w/index.php?title=Haskell/Category_theory&amp;stable=0#The_monad_laws_and_their_importance"/>
<node TEXT="search for &quot;return x = Just x&quot;" ID="ID_621366082" CREATED="1415755264688" MODIFIED="1415755270402"/>
</node>
<node TEXT="but in GHCI,&#xa;Prelude Control.Monad Data.Maybe&gt; return Nothing&#xa;Nothing&#xa;Prelude Control.Monad Data.Maybe&gt;" ID="ID_141668168" CREATED="1415755446533" MODIFIED="1415755463352"/>
</node>
<node TEXT="in category theory (not specific to Haskell), why is a monad&apos;s unit function separate from the monad itself?" ID="ID_1205664580" CREATED="1415732500098" MODIFIED="1415732534997">
<node TEXT="they say unit[sup M, sub X] : X -&gt; M(X)" ID="ID_1380558215" CREATED="1415732542658" MODIFIED="1415732569436"/>
</node>
</node>
<node TEXT="&quot;fuse&quot; to speed functor processing" ID="ID_1902611630" CREATED="1415689581528" MODIFIED="1415689602193">
<node TEXT="fmap (f . g) = fmap f . fmap g" ID="ID_1215934569" CREATED="1415689602975" MODIFIED="1415689603481">
<node TEXT="is one of the functor laws" ID="ID_1092095818" CREATED="1415689606183" MODIFIED="1415689617841"/>
</node>
<node TEXT="the RHS req&apos;s two traversals, the LHS one" ID="ID_675025948" CREATED="1415689627023" MODIFIED="1415689643698"/>
<node TEXT="&quot;fusion&quot;" ID="ID_1924492865" CREATED="1415689651014" MODIFIED="1415689652530"/>
</node>
<node TEXT="need know kinds to know categ&apos;s?" ID="ID_943534136" CREATED="1415689024959" MODIFIED="1415689040907"/>
<node TEXT="vocab" ID="ID_1844028960" CREATED="1415686616819" MODIFIED="1415686617621">
<node TEXT="monomorphic = completely type-specified" ID="ID_18377670" CREATED="1415686614202" MODIFIED="1415686624087">
<node TEXT="describes at least functions, and perhaps types and other things" ID="ID_1816132421" CREATED="1415686627922" MODIFIED="1415686644254"/>
</node>
</node>
</node>
<node TEXT="2014 12 15" ID="ID_997004784" CREATED="1418671211986" MODIFIED="1418671216863">
<node TEXT="* ixset: set with multip indices" ID="ID_1662661199" CREATED="1418671218819" MODIFIED="1418671250491">
<node TEXT="http://hackage.haskell.org/package/ixset-1.0.6/docs/Data-IxSet.html" ID="ID_1359677178" CREATED="1418671217666" MODIFIED="1418671217666" LINK="http://hackage.haskell.org/package/ixset-1.0.6/docs/Data-IxSet.html"/>
</node>
<node TEXT="unfold: opposite of fold" ID="ID_719123296" CREATED="1418671236635" MODIFIED="1418671240615">
<node TEXT="build a list from a seed" ID="ID_1327212020" CREATED="1418671241309" MODIFIED="1418671245428"/>
</node>
<node TEXT="OO (an ambitious proj)" ID="ID_1455639710" CREATED="1418757998790" MODIFIED="1418758024335">
<node TEXT="https://gist.github.com/deech/6528a75e480378182052" ID="ID_285529577" CREATED="1418757997649" MODIFIED="1418757997649" LINK="https://gist.github.com/deech/6528a75e480378182052"/>
<node TEXT="[Haskell-cafe] Request For Feedback: Emulating OO-style dispatch for binding" ID="ID_38496582" CREATED="1418758015582" MODIFIED="1418758016378"/>
</node>
<node TEXT="array" ID="ID_680452792" CREATED="1418587221140" MODIFIED="1418587222056">
<node TEXT="https://www.haskell.org/tutorial/arrays.html" ID="ID_1145948037" CREATED="1418587222713" MODIFIED="1418587222713" LINK="https://www.haskell.org/tutorial/arrays.html"/>
<node TEXT="rn" ID="ID_431895499" CREATED="1418587230348" MODIFIED="1418587230832">
<node TEXT="https://www.haskell.org/haskellwiki/Arrays" ID="ID_1326397152" CREATED="1418587226120" MODIFIED="1418587226120" LINK="https://www.haskell.org/haskellwiki/Arrays"/>
</node>
</node>
<node TEXT="curry" ID="ID_583205261" CREATED="1416623916159" MODIFIED="1416624044531">
<node TEXT="why" ID="ID_1273949587" CREATED="1416624054412" MODIFIED="1416624054968">
<node TEXT="to store chord transformations" ID="ID_1129569890" CREATED="1416624048764" MODIFIED="1416624054216"/>
</node>
<node TEXT="haskell" ID="ID_1527637877" CREATED="1416624056150" MODIFIED="1416624058088">
<node TEXT="Prelude&gt; let g = tail . fmap (*3)" ID="ID_1339591914" CREATED="1416624044957" MODIFIED="1416624044957"/>
<node TEXT="Prelude&gt; g [1,2,3]" ID="ID_88273258" CREATED="1416624044957" MODIFIED="1416624044957"/>
<node TEXT="[6,9]" ID="ID_1295967205" CREATED="1416624044958" MODIFIED="1416624044958"/>
</node>
</node>
</node>
<node TEXT="rohan homework!" ID="ID_475965442" CREATED="1415428060065" MODIFIED="1415428067109">
<node TEXT="try to understand rohan&apos;s example, and ask him, keeping the concepts more general and widely appicable than the (lower?) problems like monad chaining that might distract or rebuff another reader" ID="ID_1391873574" CREATED="1415423443866" MODIFIED="1415423590774"/>
</node>
<node TEXT="2014 12 31" ID="ID_554158387" CREATED="1418496409644" MODIFIED="1420485523033">
<node TEXT="if can&apos;t read, try putting input through show first" ID="ID_652631818" CREATED="1418496410907" MODIFIED="1418496421358">
<node TEXT="[Haskell-beginners] Doubts regarding the &quot;read&quot; function." ID="ID_527185965" CREATED="1418496422619" MODIFIED="1418496423310"/>
</node>
<node TEXT="to force early eval" ID="ID_1706579415" CREATED="1418242430252" MODIFIED="1418242436217">
<node TEXT="email thread" ID="ID_1236041200" CREATED="1418242424333" MODIFIED="1418242426082">
<node TEXT="[Haskell-beginners] Buggy behavior of &quot;withFile&quot;" ID="ID_613541679" CREATED="1418242426805" MODIFIED="1418242427433"/>
</node>
<node TEXT="see third message" ID="ID_1151646294" CREATED="1418242444054" MODIFIED="1418242446263"/>
<node TEXT="quote" ID="ID_1867940863" CREATED="1418242415006" MODIFIED="1418242415922">
<node TEXT="If I&apos;m right, you need to force the evaluation of res before the return, with something like &quot;res seq return res&quot; instead of just &quot;return res&quot;.  Or use the BangPatterns extension and then write &quot;!res &lt;- hGetContents h&quot;" ID="ID_868770113" CREATED="1418242412533" MODIFIED="1418242413282"/>
</node>
</node>
<node TEXT="good code model: Kmett&apos;s lens lib" ID="ID_921789420" CREATED="1418326177758" MODIFIED="1418326190105">
<node TEXT="https://github.com/ekmett/lens" ID="ID_347418479" CREATED="1418326190912" MODIFIED="1418326190912" LINK="https://github.com/ekmett/lens"/>
</node>
<node TEXT="** project layout (file tree, cabal, haddoc doc&apos;n)" ID="ID_1977289447" CREATED="1418326242796" MODIFIED="1418326262296">
<node TEXT="http://howistart.org/posts/haskell/1" ID="ID_504330016" CREATED="1418326253251" MODIFIED="1418326253251" LINK="http://howistart.org/posts/haskell/1"/>
</node>
</node>
<node TEXT="twice skipped" ID="ID_1146569705" CREATED="1418940201376" MODIFIED="1430982364379">
<font BOLD="false"/>
<node TEXT="./ skipped on sort 2014 12 18 and again 2015 05 06" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1792430049" CREATED="1418940217096" MODIFIED="1430981981580"/>
<node TEXT="backquotes to use as infix" ID="ID_1833724524" CREATED="1412747898967" MODIFIED="1413184830343">
<node TEXT="removeNonUppercase st = [ c | c &lt;- st, c `elem` [&apos;A&apos;..&apos;Z&apos;]]" ID="ID_629449604" CREATED="1412747895384" MODIFIED="1412747896195"/>
<node TEXT="http://learnyouahaskell.com/starting-out#ready-set-go" ID="ID_876347288" CREATED="1412747932764" MODIFIED="1412747932764" LINK="http://learnyouahaskell.com/starting-out#ready-set-go"/>
</node>
<node TEXT="&quot;and&quot; and &quot;or&quot; are in Data.List" ID="ID_196742779" CREATED="1412959395721" MODIFIED="1412959417586"/>
<node TEXT="read: type must be specified" ID="ID_1563611037" CREATED="1412971804459" MODIFIED="1412971814520">
<node TEXT="&quot;We can also read parameterized types, but we have to fill in the type parameters. So we can&apos;t do read &quot;Just &apos;t&apos;&quot; :: Maybe a, but we can do read &quot;Just &apos;t&apos;&quot; :: Maybe Char.&quot;" ID="ID_999346380" CREATED="1412971814834" MODIFIED="1412971816245"/>
<node TEXT="see Learn You, chapter on defining types" ID="ID_1988849308" CREATED="1412971816786" MODIFIED="1412971824732"/>
</node>
<node TEXT="datatype generic prog&apos;" ID="ID_1540033894" CREATED="1415475612767" MODIFIED="1415475613058">
<node TEXT="quote" ID="ID_859471734" CREATED="1415088734864" MODIFIED="1415088735994">
<node TEXT="(The term &#x2018;parametric datatype&#x2019; would probably be more precise, but &#x2018;polymor- phic datatype&#x2019; is well established." ID="ID_653519514" CREATED="1415088726603" MODIFIED="1415088726603"/>
</node>
<node TEXT="in &quot;data List a = Nil | Cons a (List a)&quot;, Nil is polymorphic" ID="ID_1484942718" CREATED="1415088813046" MODIFIED="1415088829618">
<node TEXT="that parameter appears in its type signature, but not other places one might expect it" ID="ID_1720965290" CREATED="1415088860358" MODIFIED="1415088877919"/>
</node>
<node TEXT="informally, &quot;a polymorphic function cannot examine elements of polymorphic types, but can merely rearrange them&quot;" ID="ID_1330878223" CREATED="1415088956754" MODIFIED="1415088961557"/>
<node TEXT="constructor class is like type class" ID="ID_10597896" CREATED="1415090920739" MODIFIED="1415090925021">
<node TEXT="quote" ID="ID_1935182064" CREATED="1415090938987" MODIFIED="1415090941798"/>
<node TEXT="class Functor f where&#xa;  fmap :: (a &#x2192; b) &#x2192; (f a &#x2192; f )&#xa;(Strictly speaking, Functor is a constructor class rather than a type class, since its members are type constructors rather than base types: in Haskell terminology, &#x2018;types of kind &#x2217; &#x2192; &#x2217;&#x2019; rather than &#x2018;types of kind &#x2217;&#x2019;, where kinds classify types in the same way that types classify values&quot;" ID="ID_670765045" CREATED="1415090869460" MODIFIED="1415090905245"/>
</node>
</node>
<node TEXT="-&gt; is right-associative" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_500751819" CREATED="1412897781890" MODIFIED="1413183808319">
<node TEXT="(a -&gt; b -&gt; c) is the same as (a -&gt; ( b -&gt; c) )" ID="ID_1988473352" CREATED="1412897786210" MODIFIED="1412897801909"/>
</node>
<node TEXT="clever, obscure" ID="ID_477811572" CREATED="1412959127810" MODIFIED="1418940463536">
<font BOLD="true"/>
<node TEXT="Maybe for dictionary (as List)" ID="ID_695848140" CREATED="1412963360540" MODIFIED="1413269590902">
<node TEXT="equivalent" ID="ID_1346392853" CREATED="1412963470530" MODIFIED="1412963472005"/>
<node TEXT="findKey :: (Eq k) =&gt; k -&gt; [(k,v)] -&gt; Maybe v &#xa;findKey key [] = Nothing &#xa;findKey key ((k,v):xs) = if key == k &#xa;                            then Just v &#xa;                            else findKey key xs" ID="ID_1930931625" CREATED="1412963355940" MODIFIED="1412963356559"/>
<node TEXT="findKey :: (Eq k) =&gt; k -&gt; [(k,v)] -&gt; Maybe v &#xa;findKey key = foldr (\(k,v) acc -&gt; if key == k then Just v else acc) Nothing" ID="ID_1515568879" CREATED="1412963472633" MODIFIED="1412963472989"/>
</node>
<node TEXT="the &quot;id&quot; function" ID="ID_1688433812" CREATED="1412985700734" MODIFIED="1412985704425">
<node TEXT="polymorphic" ID="ID_1077818727" CREATED="1413270845376" MODIFIED="1413270868539"/>
<node TEXT="function" ID="ID_1783496698" CREATED="1413270872478" MODIFIED="1413270884355">
<node TEXT="called on &quot;a&quot;, returns &quot;a&quot;" ID="ID_1098281779" CREATED="1412985705365" MODIFIED="1412985716656"/>
<node TEXT="whatever &quot;a&quot; is" ID="ID_1038806412" CREATED="1412985724980" MODIFIED="1412985727447"/>
</node>
</node>
<node TEXT="add lists like vectors with transpose" ID="ID_1652555382" CREATED="1412959095708" MODIFIED="1413270929286">
<node TEXT="Prelude Data.List&gt; map sum $ transpose [[0,3,5,9],[10,0,0,9],[8,5,1,-1]]&#xa;&#xa;[18,8,6,17]" ID="ID_232035784" CREATED="1412959103861" MODIFIED="1413270999833"/>
<node TEXT="reminder: transpose" ID="ID_981820613" CREATED="1413271005634" MODIFIED="1413271008133">
<node TEXT="Prelude Data.List&gt; transpose [[0,3,5,9],[10,0,0,9],[8,5,1,-1]]&#xa;&#xa;[[0,10,8],[3,0,5],[5,0,1],[9,9,-1]]" ID="ID_636275248" CREATED="1413270978788" MODIFIED="1413271001527"/>
</node>
</node>
<node TEXT="head and infinite lists" ID="ID_716120541" CREATED="1412899122097" MODIFIED="1412899124932">
<node TEXT="largestDivisible = head (filter p [100000,99999..])&#xa;    where p x = x `mod` 3829 == 0" ID="ID_988274374" CREATED="1412898836162" MODIFIED="1412898837006"/>
<node TEXT="&quot;We didn&apos;t even need to use a finite list for our starting set. That&apos;s laziness in action again. Because we only end up using the head of the filtered list, it doesn&apos;t matter if the filtered list is finite or infinite. The evaluation stops when the first adequate solution is found.&quot;" ID="ID_1016241969" CREATED="1412898853617" MODIFIED="1412898856452"/>
</node>
<node TEXT="takeWhile and infinite lists" ID="ID_506044297" CREATED="1412899051222" MODIFIED="1412899055098">
<node TEXT="sum of all odd squares under 10,000" ID="ID_188463562" CREATED="1412899069397" MODIFIED="1412899083541"/>
<node TEXT="sum (takeWhile (&lt;10000) (filter odd (map (^2) [1..])))" ID="ID_203992435" CREATED="1412899056111" MODIFIED="1412899056714"/>
<node TEXT="reminder: takeWhile" ID="ID_478467380" CREATED="1412898941281" MODIFIED="1413271211915">
<node TEXT="takeWhile (/=&apos; &apos;) &quot;elephants know how to party&quot; and it would return &quot;elephants&quot;" ID="ID_466418184" CREATED="1412898940201" MODIFIED="1412898941012"/>
</node>
</node>
<node TEXT="sort by length" ID="ID_1206792459" CREATED="1412962353222" MODIFIED="1412962355673">
<node TEXT="Prelude&gt; let xs = [[5,4,5,4,4],[1,2,3],[3,5,4,3],[],[2],[2,2]]&#xa;&#xa;[load two modules]&#xa;&#xa;Prelude Data.Function Data.List&gt; sortBy (compare `on` length) xs&#xa;[[],[2],[2,2],[1,2,3],[3,5,4,3],[5,4,5,4,4]]" ID="ID_96974570" CREATED="1413271572559" MODIFIED="1413272127381"/>
<node TEXT="reminder: on" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_116529635" CREATED="1413272143523" MODIFIED="1413272217360">
<node TEXT="Prelude Data.Function&gt; :t on&#xa;on :: (b -&gt; b -&gt; c) -&gt; (a -&gt; b) -&gt; a -&gt; a -&gt; c" ID="ID_820762184" CREATED="1413272172115" MODIFIED="1413272172876"/>
</node>
</node>
</node>
</node>
<node TEXT="2015 01 19 - 02 11" LOCALIZED_STYLE_REF="styles.topic" ID="ID_722617402" CREATED="1423685158741" MODIFIED="1430982349696">
<node TEXT="fold and cons" LOCALIZED_STYLE_REF="default" ID="ID_824309709" CREATED="1421615025743" MODIFIED="1430982441227">
<node TEXT="inspir" ID="ID_272232659" CREATED="1421614260813" MODIFIED="1421614261860">
<node TEXT="from Erwig&apos;s &quot;Inductive Graphs&quot; paper" ID="ID_281846669" CREATED="1421614239501" MODIFIED="1421614257796"/>
<node TEXT="nodes = ufold (\(p,v,l,s) -&gt; (v:)) []" ID="ID_356303486" CREATED="1421613962325" MODIFIED="1421613972804"/>
</node>
<node TEXT="my variation" ID="ID_1077098134" CREATED="1421614266285" MODIFIED="1421614278724">
<node TEXT="let f (left, right)&#xa;  | left &lt; 3 = id&#xa;  | otherwise = (left:)" ID="ID_1793159716" CREATED="1421614272629" MODIFIED="1421614673263"/>
<node TEXT="extractBigLefts pairs =&#xa;  foldr f [] pairs" ID="ID_120975605" CREATED="1421614355406" MODIFIED="1421614757569"/>
<node TEXT="extractBigLefts [(4,1),(3,1),(2,1),(5,1)]" ID="ID_849101565" CREATED="1421614757766" MODIFIED="1421614766528"/>
</node>
</node>
<node TEXT="parallel list comprehensions" LOCALIZED_STYLE_REF="default" ID="ID_77877098" CREATED="1421192614599" MODIFIED="1430982441232">
<node TEXT="requires the -XParallelListComp language extension" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_399473194" CREATED="1430982301075" MODIFIED="1430982315446"/>
<node TEXT="https://downloads.haskell.org/~ghc/5.00/docs/set/parallel-list-comprehensions.html" ID="ID_1877305832" CREATED="1421192626859" MODIFIED="1421192626859" LINK="https://downloads.haskell.org/~ghc/5.00/docs/set/parallel-list-comprehensions.html"/>
<node TEXT="A parallel list comprehension has multiple independent branches of qualifier lists, each separated by a `|&apos; symbol. For example, the following zips together two lists:" ID="ID_1832879382" CREATED="1421192619032" MODIFIED="1421192619032"/>
<node TEXT="[ (x, y) | x &lt;- xs | y &lt;- ys ]" ID="ID_430364062" CREATED="1421192619032" MODIFIED="1421192619032"/>
</node>
<node TEXT="what" LOCALIZED_STYLE_REF="default" ID="ID_903880181" CREATED="1430982145203" MODIFIED="1430982441235">
<node TEXT="I got the idea from Haskell Cafe. Tried variations on it in GHCI, could not work it, don&apos;t know what they were talking about." ID="ID_1704830222" CREATED="1430982150755" MODIFIED="1430982180164"/>
<node TEXT="foo :: (red &#x2237; Double) -&gt; (green &#x2237; Double) -&gt; (blue &#x2237; Double) -&gt; IO ()" LOCALIZED_STYLE_REF="default" ID="ID_1103030060" CREATED="1421880986840" MODIFIED="1430982139666"/>
</node>
<node TEXT="low value" LOCALIZED_STYLE_REF="default" ID="ID_945398787" CREATED="1413874038322" MODIFIED="1430982441241">
<node TEXT="find a game written in Haskell" LOCALIZED_STYLE_REF="default" ID="ID_592794357" CREATED="1413448722587" MODIFIED="1413507091893">
<node TEXT="there&apos;s no way they could do it without answering my state quesitons" ID="ID_1475101849" CREATED="1413448726922" MODIFIED="1413448737653"/>
<node TEXT="I installed &quot;MazesOfMonad&quot;, haven&apos;t found it." ID="ID_1367535147" CREATED="1413449253484" MODIFIED="1413449268262"/>
</node>
<node TEXT="has (multiple!) libraries for running Java code" ID="Freemind_Link_1476589336" CREATED="1276055787914" MODIFIED="1276055800981">
<node TEXT="possibly not available for Windows" ID="Freemind_Link_593916715" CREATED="1276055801242" MODIFIED="1276055816228"/>
</node>
<node TEXT="Jaskell" ID="Freemind_Link_201566529" CREATED="1276055649745" MODIFIED="1276055651100">
<node TEXT="a functional programming language" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1527170736" CREATED="1276055644977" MODIFIED="1409709539437"/>
<node TEXT="written in Java" ID="Freemind_Link_290192624" CREATED="1276055659200" MODIFIED="1276055661804"/>
<node TEXT="can import Java classes" ID="Freemind_Link_1186830847" CREATED="1276055651313" MODIFIED="1276055664012"/>
</node>
<node TEXT="music, others&apos;" ID="ID_473134537" CREATED="1413609994187" MODIFIED="1413610001629">
<node TEXT="http://haskell.cs.yale.edu/publications/" ID="ID_259471128" CREATED="1413609987558" MODIFIED="1413609987558" LINK="http://haskell.cs.yale.edu/publications/"/>
</node>
</node>
<node TEXT="case in a lambda exp" LOCALIZED_STYLE_REF="default" ID="ID_554674073" CREATED="1423172768875" MODIFIED="1430982441243">
<node TEXT="https://downloads.haskell.org/~ghc/7.8.3/docs/html/users_guide/syntax-extns.html" ID="ID_80206758" CREATED="1423172781866" MODIFIED="1423172781866" LINK="https://downloads.haskell.org/~ghc/7.8.3/docs/html/users_guide/syntax-extns.html"/>
<node TEXT="enable with this" ID="ID_1004661650" CREATED="1423172793762" MODIFIED="1423172795601">
<node TEXT="{-# LANGUAGE LambdaCase #-}" ID="ID_1150742440" CREATED="1423172796082" MODIFIED="1423172796082"/>
</node>
<node TEXT=" The -XLambdaCase flag enables expressions of the form&#xa;&#xa;  \case { p1 -&gt; e1; ...; pN -&gt; eN }&#xa;&#xa;which is equivalent to&#xa;&#xa;  \freshName -&gt; case freshName of { p1 -&gt; e1; ...; pN -&gt; eN }&#xa;&#xa;Note that \case starts a layout, so you can write&#xa;&#xa;  \case&#xa;    p1 -&gt; e1&#xa;    ...&#xa;    pN -&gt; eN" ID="ID_1820549571" CREATED="1423172773546" MODIFIED="1423172774367"/>
</node>
<node TEXT="superclass" LOCALIZED_STYLE_REF="default" ID="ID_360894697" CREATED="1423688226774" MODIFIED="1430982441246">
<node TEXT=".one statement" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_593473314" CREATED="1423688237709" MODIFIED="1423688246616"/>
<node TEXT="in this" ID="ID_1550934012" CREATED="1423688235678" MODIFIED="1423688236604">
<node TEXT="class Eq a &#x21d2; Ord a where&#xa;  (&lt;), (&lt;=) :: a &#x2192; a &#x2192; Bool" ID="ID_1854506441" CREATED="1423688230909" MODIFIED="1423688234390"/>
</node>
<node TEXT="Eq is the superclass" ID="ID_822616525" CREATED="1423688240405" MODIFIED="1423688245236"/>
</node>
<node TEXT="* multip version numbering" LOCALIZED_STYLE_REF="default" ID="ID_1647393743" CREATED="1418695509535" MODIFIED="1430982441248">
<node TEXT="Tikhon Jelvis, haskell-cafe" ID="ID_1591348254" CREATED="1418695523542" MODIFIED="1418695528682"/>
<node TEXT="The second number is bumped each time there is a backwards-incompatible change, and the first number is bumped each time there is a *major* organizational change in the library. (It&apos;s up to 4 now.)" ID="ID_1045846580" CREATED="1418695515551" MODIFIED="1418695516025"/>
</node>
<node TEXT="to view source of just one function" LOCALIZED_STYLE_REF="default" ID="ID_499061523" CREATED="1426705460323" MODIFIED="1430982441250">
<node TEXT="see file ExtractTopLevel.hs" ID="ID_738287301" CREATED="1426705437477" MODIFIED="1426705491259"/>
</node>
</node>
<node TEXT="2015 05 07" ID="ID_1690900760" CREATED="1431030027874" MODIFIED="1431030029791">
<node TEXT="update monads generalize state monads" ID="ID_258896462" CREATED="1430638300702" MODIFIED="1430638305428">
<node TEXT="http://homepages.inf.ed.ac.uk/s1225336/papers/types13postproc.pdf" ID="ID_1327258029" CREATED="1430638306230" MODIFIED="1430638306230" LINK="http://homepages.inf.ed.ac.uk/s1225336/papers/types13postproc.pdf"/>
</node>
<node TEXT="? foldr = how to efficiently fold concatenate, right" ID="ID_1069651723" CREATED="1431405394436" MODIFIED="1431406332635"/>
</node>
<node TEXT="12" ID="ID_904086920" CREATED="1431469496715" MODIFIED="1431469497882">
<node TEXT="&quot;it&quot; in ghci" ID="ID_1405314551" CREATED="1431469498590" MODIFIED="1431469529653">
<node TEXT="https://downloads.haskell.org/~ghc/7.8.2/docs/html/users_guide/interactive-evaluation.html" ID="ID_306156355" CREATED="1431469508008" MODIFIED="1431469508008" LINK="https://downloads.haskell.org/~ghc/7.8.2/docs/html/users_guide/interactive-evaluation.html"/>
<node TEXT="see sec. &quot;2.4.7. The it variable&quot;" ID="ID_1097715396" CREATED="1431469517320" MODIFIED="1431469521213"/>
</node>
<node TEXT="global vars in GHCI" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1913286044" CREATED="1431474016758" MODIFIED="1431474054031">
<node TEXT="return" ID="ID_1200614663" CREATED="1431474214901" MODIFIED="1431474220083">
<node TEXT="Prelude System.IO&gt; x &lt;- return 3" ID="ID_94129000" CREATED="1431474212925" MODIFIED="1431474212925"/>
<node TEXT="Prelude System.IO&gt; x" ID="ID_1328854465" CREATED="1431474212925" MODIFIED="1431474212925"/>
<node TEXT="3" ID="ID_284572457" CREATED="1431474212932" MODIFIED="1431474212932"/>
</node>
<node TEXT="IO" ID="ID_1220418584" CREATED="1431474216701" MODIFIED="1431474223189">
<node TEXT="Prelude System.IO&gt; x &lt;- getLine" ID="ID_21479512" CREATED="1431474023985" MODIFIED="1431474023985"/>
<node TEXT="something" ID="ID_182090685" CREATED="1431474023985" MODIFIED="1431474023985"/>
<node TEXT="Prelude System.IO&gt; x" ID="ID_282768680" CREATED="1431474023986" MODIFIED="1431474023986"/>
<node TEXT="&quot;something&quot;" ID="ID_1524184466" CREATED="1431474023987" MODIFIED="1431474023987"/>
<node TEXT="Prelude System.IO&gt;" ID="ID_1410140186" CREATED="1431474023988" MODIFIED="1431474023988"/>
</node>
</node>
</node>
<node TEXT="lacunae 2015 05 13" ID="ID_238395558" CREATED="1431562022178" MODIFIED="1431564265726">
<font BOLD="true"/>
<node TEXT="lens" ID="ID_1881235442" CREATED="1431562024004" MODIFIED="1431562024832"/>
<node TEXT="traversable" ID="ID_1428122881" CREATED="1431562025025" MODIFIED="1431562026985"/>
<node TEXT="state monad" ID="ID_317468435" CREATED="1431562027931" MODIFIED="1431562030528"/>
<node TEXT="? template haskell" ID="ID_34389612" CREATED="1431562030740" MODIFIED="1431562053364"/>
<node TEXT="constructors, getters, setters" ID="ID_1480370835" CREATED="1414953681980" MODIFIED="1414953690303"/>
<node TEXT="writing functions for within a do loop" ID="ID_478288839" CREATED="1431562218725" MODIFIED="1431562224500"/>
<node TEXT="kinds" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1576929069" CREATED="1431562273195" MODIFIED="1431562274487"/>
<node TEXT="macros: &quot;:def&quot;" ID="ID_437581738" CREATED="1431562361091" MODIFIED="1431562368829">
<node TEXT="https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci-commands.html#id2902944" ID="ID_203333855" CREATED="1431562369221" MODIFIED="1431562369221" LINK="https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/ghci-commands.html#id2902944"/>
</node>
<node TEXT="exceptions" ID="ID_1944255477" CREATED="1431563901519" MODIFIED="1431563903451"/>
</node>
<node TEXT="2015 05 24" ID="ID_1564583254" CREATED="1432539464306" MODIFIED="1432539467857">
<node TEXT="&amp; in GHC 10" ID="ID_1683066377" CREATED="1431724269791" MODIFIED="1432539460677">
<node TEXT="can use it now by including something" ID="ID_109494157" CREATED="1431724276937" MODIFIED="1431724281629"/>
<node TEXT="Data.Function" ID="ID_1524962628" CREATED="1431724283536" MODIFIED="1431724285510"/>
<node TEXT="is $ reversed" ID="ID_1507959241" CREATED="1431724286168" MODIFIED="1431724288894"/>
</node>
<node TEXT="? Applicative" ID="ID_1077183379" CREATED="1431767106433" MODIFIED="1431767119088">
<node TEXT="import qualified Control.Foldl as L" ID="ID_1810193660" CREATED="1431767087041" MODIFIED="1431767102966"/>
<node TEXT="&gt;&gt;&gt; import Control.Applicative" ID="ID_799024604" CREATED="1431767085094" MODIFIED="1431767085094"/>
<node TEXT="&gt;&gt;&gt; let average = (/) &lt;$&gt; L.sum &lt;*&gt; L.genericLength" ID="ID_752337347" CREATED="1431767085094" MODIFIED="1431767085094"/>
</node>
</node>
<node TEXT="06 08" ID="ID_1828143812" CREATED="1433834566475" MODIFIED="1433834568729">
<node TEXT="the alternative to record syntax" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1570637759" CREATED="1433834535819" MODIFIED="1433834560276">
<node TEXT="? in a data statement|declaration, is the difference between Object a and Object {fieldname :: a}" ID="ID_131551579" CREATED="1433833975298" MODIFIED="1433834555597"/>
</node>
</node>
</node>
<node TEXT="cabal|svn futz 06 05" LOCALIZED_STYLE_REF="default" ID="ID_1790693529" CREATED="1433531772013" MODIFIED="1436762776684"/>
<node TEXT="? ongoing" LOCALIZED_STYLE_REF="default" ID="ID_27051941" CREATED="1432719708750" MODIFIED="1436762776689">
<node TEXT="in my proj, add graph-db to cabal file, or include the whole git-clone as a subfolder somewhere?" ID="ID_297396774" CREATED="1432719902054" MODIFIED="1432719932525"/>
<node TEXT="https://wiki.haskell.org/How_to_write_a_Haskell_program" ID="ID_787082946" CREATED="1432719712614" MODIFIED="1432719712614" LINK="https://wiki.haskell.org/How_to_write_a_Haskell_program"/>
<node TEXT="https://wiki.haskell.org/Structure_of_a_Haskell_project" ID="ID_735517691" CREATED="1432719718150" MODIFIED="1432719718150" LINK="https://wiki.haskell.org/Structure_of_a_Haskell_project"/>
<node TEXT="https://www.haskell.org/cabal/users-guide/" ID="ID_706960477" CREATED="1432719724199" MODIFIED="1432719724199" LINK="https://www.haskell.org/cabal/users-guide/">
<node TEXT="&quot;At least read section 2.&quot;" ID="ID_1469976447" CREATED="1432719725158" MODIFIED="1432719733909">
<node TEXT="src of that advice" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1482056109" CREATED="1432719739375" MODIFIED="1432719743515">
<node TEXT="https://wiki.haskell.org/How_to_write_a_Haskell_program" ID="ID_156837921" CREATED="1432719712614" MODIFIED="1432719712614" LINK="https://wiki.haskell.org/How_to_write_a_Haskell_program"/>
</node>
</node>
</node>
<node TEXT="https://howistart.org/posts/haskell/1" ID="ID_526194578" CREATED="1432719900493" MODIFIED="1432719900493" LINK="https://howistart.org/posts/haskell/1"/>
</node>
<node TEXT="to ask GHCI for simpler type signatures" LOCALIZED_STYLE_REF="default" ID="ID_116116897" CREATED="1433713771482" MODIFIED="1436762776691">
<node TEXT="use :info to make sure that GHCi tells us the type synonym instead of the really funky fully expanded types." ID="ID_990341079" CREATED="1433713775095" MODIFIED="1433713775095"/>
</node>
<node TEXT="u" ID="ID_1514334067" CREATED="1433832837915" MODIFIED="1435561661628">
<font BOLD="true"/>
<node TEXT="can mix quali|unquald import syntax" ID="ID_763566874" CREATED="1433832827434" MODIFIED="1433832835784">
<node TEXT="import Data.Map (Map)" ID="ID_1474743160" CREATED="1433832836285" MODIFIED="1433832836285"/>
<node TEXT="import qualified Data.Map as M" ID="ID_221378038" CREATED="1433832836285" MODIFIED="1433832836285"/>
</node>
<node TEXT="to read gabriel gonzales&apos;s blog (haskell for all) search for 2015 etc" ID="ID_9916218" CREATED="1433833264211" MODIFIED="1433833275792"/>
<node TEXT="smart constructors" LOCALIZED_STYLE_REF="default" ID="ID_680959698" CREATED="1433876739204" MODIFIED="1433892025950">
<node TEXT="https://wiki.haskell.org/Smart_constructors" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_660554690" CREATED="1433876744064" MODIFIED="1433877054544" LINK="https://wiki.haskell.org/Smart_constructors"/>
<node TEXT="skipped: section 2 (Compile-time checking ...) and onward" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_968136054" CREATED="1433877036216" MODIFIED="1433877054534"/>
<node TEXT="export only the smart constructor" ID="ID_1237701352" CREATED="1433876884826" MODIFIED="1433876889745"/>
<node TEXT="use an assertion" ID="ID_1432707566" CREATED="1433876942053" MODIFIED="1433876944201"/>
</node>
<node TEXT="7.4.5. Existentially quantified data constructors" ID="ID_1299859701" CREATED="1434481632938" MODIFIED="1434481632938">
<node TEXT="read this in serial" ID="ID_1093527866" CREATED="1434481682692" MODIFIED="1434482322439">
<node TEXT="in this" ID="ID_671651344" CREATED="1434481679945" MODIFIED="1434481681115">
<node TEXT="data Foo = forall a. MkFoo a (a -&gt; Bool) | Nil" ID="ID_1841548013" CREATED="1434481645780" MODIFIED="1434481652157"/>
</node>
<node TEXT="a is not part of Foo&apos;s type, so it can vary across instances" ID="ID_414676842" CREATED="1434481665851" MODIFIED="1434481676250"/>
<node TEXT="for example" ID="ID_437873873" CREATED="1434481676484" MODIFIED="1434481678156">
<node TEXT="[MkFoo 3 even, MkFoo &apos;c&apos; isUpper] :: [Foo]" ID="ID_1668663386" CREATED="1434481662153" MODIFIED="1434481665072"/>
</node>
</node>
<node TEXT="I left off reading at" ID="ID_819273142" CREATED="1434482322655" MODIFIED="1434482325489">
<node TEXT="The rule for record update is this: the types of the updated fields may mention only the universally-quantified type variables of the data constructor. For GADTs, the field may mention only types that appear as a simple type-variable argument in the constructor&apos;s result type. For example:" ID="ID_551248624" CREATED="1434482327256" MODIFIED="1434482329290"/>
</node>
</node>
<node TEXT="notes from here" ID="ID_759480926" CREATED="1434564879439" MODIFIED="1434564881134">
<node TEXT="https://downloads.haskell.org/~ghc/7.4.1/docs/html/users_guide/data-type-extensions.html#gadt-style" ID="ID_420459064" CREATED="1434564790611" MODIFIED="1434564790611" LINK="https://downloads.haskell.org/~ghc/7.4.1/docs/html/users_guide/data-type-extensions.html#gadt-style"/>
<node TEXT="quotes" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_962381843" CREATED="1434565210790" MODIFIED="1434565214068"/>
<node TEXT="type sigs can apply to &gt; 1 thing" ID="ID_1345158369" CREATED="1434564772235" MODIFIED="1434564778956">
<node TEXT="example" ID="ID_328503468" CREATED="1434564788386" MODIFIED="1434564789476">
<node TEXT="As with other type signatures, you can give a single signature for several data constructors." ID="ID_660563115" CREATED="1434564779921" MODIFIED="1434564779921"/>
<node TEXT="data T a where" ID="ID_1449741245" CREATED="1434564779921" MODIFIED="1434564779921">
<node TEXT="T1,T2 :: a -&gt; T a" ID="ID_224849563" CREATED="1434564779921" MODIFIED="1434564779921"/>
</node>
</node>
</node>
<node TEXT="in a data declaration header, type vars have no scope" ID="ID_150045462" CREATED="1434564847962" MODIFIED="1434564863769">
<node TEXT="  data T a where        -- The &apos;a&apos; has no scope&#xa;    T1,T2 :: b -&gt; T b   -- Means forall b. b -&gt; T b&#xa;    T3 :: T a           -- Means forall a. T a" ID="ID_1315921572" CREATED="1434564870958" MODIFIED="1434564872326"/>
</node>
<node TEXT="The type variables (if given) may be explicitly kinded" ID="ID_1076738306" CREATED="1434565203129" MODIFIED="1434565206764">
<node ID="ID_357275086" CREATED="1434565207473" MODIFIED="1434565207473"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      so we could also write the header for Foo like this:
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="data Bar a (b :: * -&gt; *) where ..." ID="ID_361332415" CREATED="1434565203129" MODIFIED="1434565203129"/>
</node>
<node TEXT="You can use strictness annotations" ID="ID_1792928998" CREATED="1434565263834" MODIFIED="1434565263834">
<node TEXT="  data Term a where&#xa;      Lit    :: !Int -&gt; Term Int&#xa;      If     :: Term Bool -&gt; !(Term a) -&gt; !(Term a) -&gt; Term a&#xa;      Pair   :: Term a -&gt; Term b -&gt; Term (a,b)" ID="ID_1559314123" CREATED="1434565270305" MODIFIED="1434565272372"/>
</node>
</node>
<node TEXT="make heterogeneous lists" ID="ID_556882787" CREATED="1434565776270" MODIFIED="1434565779335">
<node TEXT="https://wiki.haskell.org/Existential_type" ID="ID_1902700901" CREATED="1434565780092" MODIFIED="1434565780092" LINK="https://wiki.haskell.org/Existential_type"/>
<node TEXT="? particularly section 2.3" ID="ID_787664318" CREATED="1434565854912" MODIFIED="1434565859329">
<node TEXT="distinguishes the class from the type of the almost-same name" ID="ID_780040236" CREATED="1434565863236" MODIFIED="1434565872037"/>
</node>
</node>
<node TEXT="things I have read" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_981944045" CREATED="1434566199165" MODIFIED="1434566215923">
<node TEXT="https://downloads.haskell.org/~ghc/7.4.1/docs/html/users_guide/data-type-extensions.html#gadt-style" ID="ID_1442087284" CREATED="1434566212818" MODIFIED="1434566212818" LINK="https://downloads.haskell.org/~ghc/7.4.1/docs/html/users_guide/data-type-extensions.html#gadt-style"/>
<node TEXT="7.4.6. Declaring data types with explicit constructor signatures" ID="ID_3014233" CREATED="1434566201671" MODIFIED="1434567596281"/>
<node TEXT="7.4.7. Generalised Algebraic Data Types (GADTs)" ID="ID_1550245589" CREATED="1434567583277" MODIFIED="1434567609662"/>
</node>
<node TEXT="GADTs" ID="ID_1381645028" CREATED="1434566945316" MODIFIED="1434566947377">
<node TEXT="https://downloads.haskell.org/~ghc/7.4.1/docs/html/users_guide/data-type-extensions.html#gadt" ID="ID_1607349712" CREATED="1434567025248" MODIFIED="1434567025248" LINK="https://downloads.haskell.org/~ghc/7.4.1/docs/html/users_guide/data-type-extensions.html#gadt"/>
<node TEXT="allow the constructors for type (T a b ...) to be more specialized" ID="ID_1955851034" CREATED="1434566948220" MODIFIED="1434567003446">
<node ID="ID_144013115" CREATED="1434567003817" MODIFIED="1434567003817"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      e.g. some might be T Int Int ...
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="&quot;pattern matching causes type refinement&quot;" ID="ID_796835362" CREATED="1434567011301" MODIFIED="1434567027771"/>
<node TEXT="can do record syntax" ID="ID_1841215017" CREATED="1434567314421" MODIFIED="1434567317971">
<node TEXT="  data Term a where&#xa;      Lit    { val  :: Int }      :: Term Int&#xa;      Succ   { num  :: Term Int } :: Term Int&#xa;      Pred   { num  :: Term Int } :: Term Int&#xa;      IsZero { arg  :: Term Int } :: Term Bool&#xa;      Pair   { arg1 :: Term a&#xa;             , arg2 :: Term b&#xa;             }                    :: Term (a,b)&#xa;      If     { cnd  :: Term Bool&#xa;             , tru  :: Term a&#xa;             , fls  :: Term a&#xa;             }                    :: Term a" ID="ID_360339203" CREATED="1434567319164" MODIFIED="1434567320379"/>
</node>
</node>
<node TEXT="use error! it&apos;s simple!" ID="ID_781005775" CREATED="1434936248415" MODIFIED="1434936254261">
<node TEXT="is main, dupd at dwt" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_608617035" CREATED="1434936318418" MODIFIED="1434936346169">
<node TEXT="keep this title" ID="ID_663704140" CREATED="1434936349507" MODIFIED="1434936351280">
<node ID="ID_234000055" CREATED="1434936351623" MODIFIED="1434936351623"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      use error! it's simple!
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="you can use it anywhere!" ID="ID_1904005085" CREATED="1434936303866" MODIFIED="1434936307648">
<node TEXT="example" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1810759541" CREATED="1434936308394" MODIFIED="1434936311972"/>
<node TEXT="Prelude&gt; let f x = if x &lt; 10 then 1 else error &quot;what?&quot;" ID="ID_524952837" CREATED="1434936302608" MODIFIED="1434936302608"/>
<node TEXT="Prelude&gt; f 1" ID="ID_1566525064" CREATED="1434936302608" MODIFIED="1434936302608"/>
<node TEXT="1" ID="ID_1405956839" CREATED="1434936302615" MODIFIED="1434936302615"/>
<node TEXT="Prelude&gt; f 11" ID="ID_889614276" CREATED="1434936302616" MODIFIED="1434936302616"/>
<node TEXT="*** Exception: what?" ID="ID_627308269" CREATED="1434936302617" MODIFIED="1434936302617"/>
</node>
</node>
<node TEXT="strictness: good for resources" ID="ID_273617875" CREATED="1435000727133" MODIFIED="1435000731286">
<node TEXT="strict v. lazy" ID="ID_912069240" CREATED="1435000739321" MODIFIED="1435000742680"/>
<node TEXT="Strict functions are good for space usage, as they are for time, as discussed in the previous section. Strict functions get right down to business, rather than filling up the heap with closures (the system&apos;s notes to itself about how to evaluate something, should it eventually be required)." ID="ID_1865755412" CREATED="1435000732040" MODIFIED="1435000732040"/>
</node>
<node TEXT="use error! it&apos;s simple!" ID="ID_1096595335" CREATED="1434936248415" MODIFIED="1434936254261">
<node TEXT="is dup, main at Haskell" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_75807326" CREATED="1434936318418" MODIFIED="1434936325357"/>
<node TEXT="you can use it anywhere!" ID="ID_525485371" CREATED="1434936303866" MODIFIED="1434936307648">
<node TEXT="example" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_166647732" CREATED="1434936308394" MODIFIED="1434936311972"/>
<node TEXT="Prelude&gt; let f x = if x &lt; 10 then 1 else error &quot;what?&quot;" ID="ID_148672429" CREATED="1434936302608" MODIFIED="1434936302608"/>
<node TEXT="Prelude&gt; f 1" ID="ID_1494808043" CREATED="1434936302608" MODIFIED="1434936302608"/>
<node TEXT="1" ID="ID_1522433608" CREATED="1434936302615" MODIFIED="1434936302615"/>
<node TEXT="Prelude&gt; f 11" ID="ID_1403914000" CREATED="1434936302616" MODIFIED="1434936302616"/>
<node TEXT="*** Exception: what?" ID="ID_387134634" CREATED="1434936302617" MODIFIED="1434936302617"/>
</node>
</node>
<node TEXT="comments cannot begin with non(-alphanum,-whitespace)" ID="ID_363386429" CREATED="1435185366130" MODIFIED="1435185408018">
<node TEXT="for instance" ID="ID_650618622" CREATED="1435185388881" MODIFIED="1435185391791">
<node TEXT="--! triggers error, but not -- !" ID="ID_712232935" CREATED="1435185313315" MODIFIED="1435185321159"/>
</node>
</node>
<node TEXT="2015 06 28" ID="ID_199610286" CREATED="1435557122936" MODIFIED="1435557127373"/>
<node TEXT="pattern matching, multiple func defs: order matters" ID="ID_1562923298" CREATED="1435557132264" MODIFIED="1435557144168">
<node TEXT="the last is more general; first it would swallow everything" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1004618698" CREATED="1435557147176" MODIFIED="1435557161199"/>
<node TEXT="-- file: ch19/divby2.hs" ID="ID_201354421" CREATED="1435557128212" MODIFIED="1435557128212"/>
<node TEXT="divBy :: Integral a =&gt; a -&gt; [a] -&gt; Maybe [a]" ID="ID_1240087308" CREATED="1435557128212" MODIFIED="1435557128212"/>
<node TEXT="divBy _ [] = Just []" ID="ID_487621698" CREATED="1435557128214" MODIFIED="1435557128214"/>
<node TEXT="divBy _ (0:_) = Nothing" ID="ID_1243615110" CREATED="1435557128215" MODIFIED="1435557128215"/>
<node TEXT="divBy numerator (denom:xs) =" ID="ID_1172247937" CREATED="1435557128216" MODIFIED="1435557128216">
<node TEXT="case divBy numerator xs of" ID="ID_117386232" CREATED="1435557128218" MODIFIED="1435557128218">
<node TEXT="Nothing -&gt; Nothing" ID="ID_1148887173" CREATED="1435557128218" MODIFIED="1435557128218"/>
<node TEXT="Just results -&gt; Just ((numerator `div` denom) : results)" ID="ID_982019571" CREATED="1435557128218" MODIFIED="1435557128218"/>
</node>
</node>
</node>
<node TEXT="resume RWH &quot;Chapter 19. Error handling&quot; at &quot;Monadic Use of Either&quot;" ID="ID_1740488756" CREATED="1435561562035" MODIFIED="1435561589068">
<node TEXT="which is short, and thereafter is a long section on Exceptions" ID="ID_540148683" CREATED="1435561593226" MODIFIED="1435561601618"/>
</node>
<node TEXT="module: re-export an import" ID="ID_1911431303" CREATED="1436809237720" MODIFIED="1436809244182">
<node TEXT="https://www.haskell.org/onlinereport/modules.html" ID="ID_905316247" CREATED="1436809259188" MODIFIED="1436809259188" LINK="https://www.haskell.org/onlinereport/modules.html"/>
<node TEXT="module A( Mb.Maybe( Nothing, Just ) ) where&#xa;import qualified Maybe as Mb" ID="ID_1215472001" CREATED="1436809245049" MODIFIED="1436809250773"/>
</node>
</node>
<node TEXT="2015 7 8" LOCALIZED_STYLE_REF="default" ID="ID_795548979" CREATED="1436819605753" MODIFIED="1438458771399">
<node TEXT="? why is ($ x) reversed" ID="ID_1304592105" CREATED="1436315520988" MODIFIED="1436315529186">
<node TEXT="*Dwt&gt; map ($ 0) [(1+),(2+)]" ID="ID_1953393917" CREATED="1436315519437" MODIFIED="1436315519437"/>
<node TEXT="[1,2]" ID="ID_509845261" CREATED="1436315519437" MODIFIED="1436315519437"/>
<node TEXT="*Dwt&gt;" ID="ID_1719513261" CREATED="1436315519438" MODIFIED="1436315519438"/>
</node>
<node TEXT="without OverloadedStrings, can get type mismatch error" ID="ID_1075264261" CREATED="1436819537161" MODIFIED="1436819552142">
<node TEXT=".&#xa;*Sand&gt; cd &quot;tmp&quot;&#xa;&#xa;&lt;interactive&gt;:2:1:&#xa;    Not in scope: &#x2018;cd&#x2019;&#xa;    Perhaps you meant one of these:&#xa;      &#x2018;id&#x2019; (imported from Prelude), &#x2018;gcd&#x2019; (imported from Prelude)&#xa;*Sand&gt; import Turtle&#xa;*Sand Turtle&gt; cd &quot;tmp&quot;&#xa;&#xa;&lt;interactive&gt;:4:4:&#xa;    Couldn&apos;t match expected type &#x2018;Turtle.FilePath&#x2019;&#xa;                with actual type &#x2018;[Char]&#x2019;&#xa;    In the first argument of &#x2018;cd&#x2019;, namely &#x2018;&quot;tmp&quot;&#x2019;&#xa;    In the expression: cd &quot;tmp&quot;&#xa;    In an equation for &#x2018;it&#x2019;: it = cd &quot;tmp&quot;&#xa;*Sand Turtle&gt; :set -XOverloadedStrings&#xa;*Sand Turtle&gt; cd &quot;temp&quot;&#xa;*Sand Turtle&gt; pwd&#xa;FilePath &quot;/home/jeff/work/computer/Haskell/Sand/temp&quot;&#xa;*Sand Turtle&gt;" ID="ID_1314901303" CREATED="1436819579865" MODIFIED="1436819594666"/>
</node>
<node TEXT="applied things first, applied-to things last" ID="ID_1006088056" CREATED="1436832186685" MODIFIED="1436832194177">
<node TEXT="fmap func list" ID="ID_678794448" CREATED="1436832195404" MODIFIED="1436832198977"/>
</node>
<node TEXT="to find where the class C instance for type T is, look at Hackage at C, not T" ID="ID_1797670221" CREATED="1436832494909" MODIFIED="1436832515331"/>
<node TEXT="instance Class Type is like this" ID="ID_27666431" CREATED="1436832494909" MODIFIED="1436833182125">
<node TEXT="though the instance keyword is not function application" ID="ID_1610576269" CREATED="1436833182808" MODIFIED="1436833193834"/>
</node>
<node TEXT="understand these" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1396777092" CREATED="1436832572829" MODIFIED="1436832575990">
<node TEXT="http://hackage.haskell.org/package/base-4.8.0.0/docs/src/GHC-Base.html#line-1057" ID="ID_1597599809" CREATED="1436832574991" MODIFIED="1436832574991" LINK="http://hackage.haskell.org/package/base-4.8.0.0/docs/src/GHC-Base.html#line-1057"/>
<node TEXT="-- Functor/Applicative/Monad instances for IO" ID="ID_739998311" CREATED="1436832588233" MODIFIED="1436832588233"/>
</node>
<node TEXT="? # in Haskell" ID="ID_1744218976" CREATED="1436832776365" MODIFIED="1436832784641">
<node TEXT="http://hackage.haskell.org/package/base-4.8.0.0/docs/src/GHC-Base.html#line-1057" ID="ID_1319801692" CREATED="1436832793192" MODIFIED="1436832793192" LINK="http://hackage.haskell.org/package/base-4.8.0.0/docs/src/GHC-Base.html#line-1057"/>
<node TEXT="3 lines using (the same?) #" ID="ID_405743521" CREATED="1436832829349" MODIFIED="1436832842619">
<node TEXT="import {-# SOURCE #-} GHC.IO (failIO)" ID="ID_422546175" CREATED="1436832785098" MODIFIED="1436832785098"/>
<node TEXT="#if 0" ID="ID_69073975" CREATED="1436832827281" MODIFIED="1436832827281"/>
<node TEXT="data Char = C# Char#" ID="ID_606473521" CREATED="1436832823214" MODIFIED="1436832823214"/>
</node>
</node>
<node TEXT="(# is like (" ID="ID_1978103905" CREATED="1436836992785" MODIFIED="1436836999703">
<node TEXT="(# e_1, ..., e_n #)" ID="ID_898572524" CREATED="1436836991086" MODIFIED="1436836991086"/>
<node TEXT="unboxed tuples" ID="ID_313998650" CREATED="1436837007417" MODIFIED="1436837010557"/>
<node TEXT="https://downloads.haskell.org/~ghc/7.6.3/docs/html/users_guide/primitives.html" ID="ID_1839902812" CREATED="1436837006798" MODIFIED="1436837006798" LINK="https://downloads.haskell.org/~ghc/7.6.3/docs/html/users_guide/primitives.html"/>
</node>
<node TEXT="? read GHCBase in order" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1684670353" CREATED="1436838396706" MODIFIED="1436838403858">
<font BOLD="true"/>
<node TEXT="http://hackage.haskell.org/package/base-4.8.0.0/docs/src/GHC-Base.html#line-1057" ID="ID_1876566376" CREATED="1436838404506" MODIFIED="1436838404506" LINK="http://hackage.haskell.org/package/base-4.8.0.0/docs/src/GHC-Base.html#line-1057"/>
</node>
<node TEXT="? don&apos;t want to ask" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1430268087" CREATED="1436839543443" MODIFIED="1436839547046">
<node TEXT="too soon (hours) since my last ask" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_49113604" CREATED="1436839547587" MODIFIED="1436839561212"/>
<node TEXT="? where is unIO defined" ID="ID_550058905" CREATED="1436839553276" MODIFIED="1436839559472">
<node TEXT="I looked everywhere, for like 15 minutes" ID="ID_223868559" CREATED="1436839563564" MODIFIED="1436839568680"/>
<node TEXT="I found the Functor (and other) instance(s) for it, in GHC.Types" ID="ID_542897359" CREATED="1436839583251" MODIFIED="1436839599725"/>
</node>
<node TEXT="? single-case case expression" ID="ID_1372777919" CREATED="1436839882156" MODIFIED="1436839888273">
<node TEXT="http://hackage.haskell.org/package/base-4.8.0.0/docs/src/GHC-Base.html#line-1057" ID="ID_153870022" CREATED="1436839896820" MODIFIED="1436839896820" LINK="http://hackage.haskell.org/package/base-4.8.0.0/docs/src/GHC-Base.html#line-1057"/>
<node TEXT="bindIO :: IO a -&gt; (a -&gt; IO b) -&gt; IO b" ID="ID_1366093228" CREATED="1436839891158" MODIFIED="1436839891158"/>
<node TEXT="bindIO (IO m) k = IO $ \ s -&gt; case m s of (# new_s, a #) -&gt; unIO (k a) new_s" ID="ID_1750036839" CREATED="1436839891158" MODIFIED="1436839891158"/>
<node TEXT="thenIO :: IO a -&gt; IO b -&gt; IO b" ID="ID_1200677004" CREATED="1436839891158" MODIFIED="1436839891158"/>
<node TEXT="thenIO (IO m) k = IO $ \ s -&gt; case m s of (# new_s, _ #) -&gt; unIO k new_s" ID="ID_672464471" CREATED="1436839891160" MODIFIED="1436839891160"/>
</node>
</node>
</node>
<node TEXT="2015 07 31" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_348203341" CREATED="1438458142412" MODIFIED="1438458822485">
<node TEXT="why use newtypes" ID="ID_361295034" CREATED="1438402685631" MODIFIED="1438402688462"/>
<node TEXT="instances and deriving can be mixed" ID="ID_1690914660" CREATED="1438403760506" MODIFIED="1438403765992">
<node TEXT="a type can use both" ID="ID_1398298511" CREATED="1438403766410" MODIFIED="1438403769189"/>
</node>
<node TEXT="why can&apos;t I ask &quot;what functions use this thing&quot; in ghci?" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_997575158" CREATED="1438407412783" MODIFIED="1438458355732">
<font BOLD="false"/>
</node>
<node TEXT="newtype Board in tictactoe lets it be treated as list, e.g. in filter" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_390371674" CREATED="1438409083435" MODIFIED="1438458355292">
<font BOLD="false"/>
</node>
<node TEXT="nth is nth+1, no?" ID="ID_668170734" CREATED="1438410524139" MODIFIED="1438419194562"/>
<node TEXT="read type sigs from right to left" ID="ID_452372442" CREATED="1438310810200" MODIFIED="1438310814251">
<edge COLOR="#ff0000"/>
</node>
<node TEXT="can assign fixity in a let" ID="ID_1624233811" CREATED="1438311928119" MODIFIED="1438311933067">
<edge COLOR="#0000ff"/>
</node>
<node TEXT="reddit haskell til" ID="ID_610554743" CREATED="1438311942669" MODIFIED="1438311946740">
<edge COLOR="#00ff00"/>
<node TEXT="today I learned = til" ID="ID_861822276" CREATED="1438311947346" MODIFIED="1438311950510"/>
</node>
<node TEXT="flip (.)" ID="ID_1249577607" CREATED="1438311997247" MODIFIED="1438312016282">
<edge COLOR="#ff00ff"/>
</node>
<node TEXT="Either" ID="ID_436871031" CREATED="1438312262739" MODIFIED="1438312263651">
<edge COLOR="#ffff00"/>
<node TEXT="Either () String is like Maybe String" ID="ID_658591075" CREATED="1438312141041" MODIFIED="1438312265170"/>
<node TEXT="Left is different; it halts a chain" ID="ID_1160221417" CREATED="1438312265464" MODIFIED="1438312270670"/>
<node TEXT="Either String () is the return type of a function that returns nothing but might fail" ID="ID_754509309" CREATED="1438316473673" MODIFIED="1438316488963"/>
</node>
<node TEXT="this" ID="ID_1733239252" CREATED="1438314402409" MODIFIED="1438314403136">
<edge COLOR="#7c0000"/>
<node TEXT="s&#xa;Prelude Data.Either Control.Applicative&gt; (,) &lt;$&gt; [1,2] &lt;*&gt; [4,3]&#xa;[(1,4),(1,3),(2,4),(2,3)]&#xa;Prelude Data.Either Control.Applicative&gt; :i &lt;$&gt;" ID="ID_97772820" CREATED="1438314404022" MODIFIED="1438314406911"/>
<node TEXT="(,) &lt;$&gt; [1,2] is a pair of tuple-ish functions that still need to be handed the second argument" ID="ID_844559479" CREATED="1438314667881" MODIFIED="1438314689966"/>
<node TEXT="Prelude Data.Either Control.Applicative&gt; (,,) &lt;$&gt; x &lt;*&gt; x &lt;*&gt; x&#xa;[(0,0,0),(0,0,1),(0,0,2),(0,1,0),(0,1,1),(0,1,2),(0,2,0),(0,2,1),(0,2,2),(1,0,0),(1,0,1),(1,0,2),(1,1,0),(1,1,1),(1,1,2),(1,2,0),(1,2,1),(1,2,2),(2,0,0),(2,0,1),(2,0,2),(2,1,0),(2,1,1),(2,1,2),(2,2,0),(2,2,1),(2,2,2)]&#xa;Prelude Data.Either Control.Applicative&gt;" ID="ID_1041790023" CREATED="1438314994131" MODIFIED="1438314996387"/>
</node>
<node TEXT="(,,) is a thing" ID="ID_283517922" CREATED="1438314787355" MODIFIED="1438314792495">
<edge COLOR="#00007c"/>
<node TEXT="expects 3 args" ID="ID_826647647" CREATED="1438314795101" MODIFIED="1438314797991"/>
</node>
<node TEXT="&quot;total functions&quot; are defined for all input; otherwise is not total" ID="ID_1801793419" CREATED="1438315468533" MODIFIED="1438315478996">
<edge COLOR="#007c00"/>
</node>
<node TEXT="*&gt; is like &gt;&gt;" ID="ID_791784422" CREATED="1438316811351" MODIFIED="1438316815542">
<edge COLOR="#7c7c00"/>
</node>
<node TEXT="&gt; find it on github" ID="ID_1669141642" CREATED="1438316197776" MODIFIED="1438317024647">
<edge COLOR="#7c007c"/>
<font BOLD="true"/>
<node TEXT="http://www.meetup.com/santa-monica-haskell/events/223899038/" ID="ID_1396355223" CREATED="1438326969188" MODIFIED="1438326969188" LINK="http://www.meetup.com/santa-monica-haskell/events/223899038/"/>
</node>
<node TEXT=":k for data constructor questions" ID="ID_319455955" CREATED="1438317466310" MODIFIED="1438317472092">
<edge COLOR="#ff0000"/>
</node>
<node TEXT="l;ike :i" ID="ID_1638971830" CREATED="1438317472579" MODIFIED="1438317595027">
<edge COLOR="#0000ff"/>
</node>
<node TEXT="to be monad something must be of kind * -&gt; *" LOCALIZED_STYLE_REF="default" ID="ID_1964092894" CREATED="1438318494600" MODIFIED="1438318524167">
<edge COLOR="#00ff00"/>
<font BOLD="true"/>
<node TEXT="so State String Int is not a monad; rather, State String is" ID="ID_966202765" CREATED="1438318507607" MODIFIED="1438318517362"/>
</node>
<node TEXT="http://www.meetup.com/santa-monica-haskell/events/223899038/" ID="ID_315685660" CREATED="1438326964869" MODIFIED="1438326964874" LINK="http://www.meetup.com/santa-monica-haskell/events/223899038/">
<edge COLOR="#ff00ff"/>
</node>
</node>
<node TEXT="08 01" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_240291905" CREATED="1438477712675" MODIFIED="1438477714598">
<node TEXT="(.) can only chain functions of one argument" ID="ID_1954311848" CREATED="1438477715043" MODIFIED="1438477785230"/>
<node TEXT="if reading something I can&apos;t ask &quot;how does that work?&quot; of a function definition in a way that terminates (soon enough to allow me to read the whole thing), if I know its purpose that might be sufficient to understand the rest of the code." ID="ID_1112659684" CREATED="1438478218332" MODIFIED="1438478272698"/>
<node TEXT="Read is oppos Show" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1844697759" CREATED="1438478862724" MODIFIED="1438478869718">
<node TEXT="can make object from string" ID="ID_1610942644" CREATED="1438478870547" MODIFIED="1438478874616"/>
</node>
</node>
<node TEXT="08 02" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1957282678" CREATED="1438555527370" MODIFIED="1438577234376">
<node TEXT="what you are changing should be the last arg" ID="ID_633558856" CREATED="1438542193645" MODIFIED="1438555526825">
<node TEXT="if returns type X, and one of inputs is type X, that should be last input" ID="ID_1082604095" CREATED="1438542204241" MODIFIED="1438542220173"/>
</node>
<node TEXT="type sig can use function type" ID="ID_1056788060" CREATED="1438555509067" MODIFIED="1438555520415">
<node TEXT="type MoveGetter = XO -&gt; Board -&gt; IO BoardCoord" ID="ID_1152391798" CREATED="1438555520866" MODIFIED="1438555520866"/>
<node TEXT="playerMoveGetter :: MoveGetter" ID="ID_682221783" CREATED="1438555520866" MODIFIED="1438555520866"/>
<node TEXT="playerMoveGetter xo board = do" ID="ID_340146547" CREATED="1438555520868" MODIFIED="1438555520868"/>
</node>
<node TEXT="for Read and Show, in RWH am halfwayish through ch 6, typeclasses" ID="ID_425562022" CREATED="1438572172711" MODIFIED="1438572195439"/>
</node>
<node TEXT="03" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_372389584" CREATED="1438666237593" MODIFIED="1438666239405">
<node TEXT="&gt;&gt;= is polymorphic" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_787559393" CREATED="1438666240725" MODIFIED="1438666245498">
<node TEXT="it doesn&apos;t have to see the same kind of (for instance) Maybe on both sides, but the same monad yes" ID="ID_823710678" CREATED="1438666248585" MODIFIED="1438666274834"/>
</node>
<node TEXT="? Nothing and Left are terminals, attractors" ID="ID_1597077557" CREATED="1438666822730" MODIFIED="1438668766187"/>
<node TEXT="Either should be called Fallible, and the constructors Right and Wrong" ID="ID_228673589" CREATED="1438667121235" MODIFIED="1438667134057"/>
<node TEXT="monad-ish plumbing varieties" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_418875540" CREATED="1438667608147" MODIFIED="1438668136719">
<node TEXT="(&gt;&gt;=) :: m a -&gt; (a -&gt; m b) -&gt; m b (defines Monad m)" ID="ID_1988082731" CREATED="1438667631915" MODIFIED="1438667898065"/>
<node TEXT="(&lt;*&gt;) :: f (a -&gt; b) -&gt; f a -&gt; f b (defines Applicative f)" ID="ID_297129746" CREATED="1438667686153" MODIFIED="1438667870894"/>
<node TEXT="(&lt;$&gt;) :: Functor f =&gt; (a -&gt; b) -&gt; f a -&gt; f b" ID="ID_1653618580" CREATED="1438667738359" MODIFIED="1438667738359"/>
<node TEXT="(&lt;|&gt;) :: =&gt; f a -&gt; f a -&gt; f a (defines Alternative f)" ID="ID_1255368164" CREATED="1438667708204" MODIFIED="1438667878964">
<node TEXT="&lt;|&gt; is used to define Alternative, so GHCI will show a different kind of type sig" ID="ID_1384418041" CREATED="1438667819052" MODIFIED="1438667849850"/>
</node>
</node>
<node TEXT="write case statements inline as &quot;case x of {3 -&gt; 5; 2 -&gt; ...}&quot;" ID="ID_35190962" CREATED="1438668758204" MODIFIED="1438668795052"/>
</node>
<node TEXT="? early July" LOCALIZED_STYLE_REF="default" ID="ID_1154807263" CREATED="1438911548710" MODIFIED="1438911580763">
<node TEXT="monoids" ID="ID_1989734333" CREATED="1437368206357" MODIFIED="1437596338606">
<node TEXT="* excellent tutorial" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_520112381" CREATED="1437428397678" MODIFIED="1437428415132">
<node TEXT="http://blog.sigfpe.com/2009/01/haskell-monoids-and-their-uses.html" ID="ID_46117702" CREATED="1437428401206" MODIFIED="1437428401206" LINK="http://blog.sigfpe.com/2009/01/haskell-monoids-and-their-uses.html"/>
</node>
<node TEXT="no inverse!" ID="ID_170960465" CREATED="1437368208847" MODIFIED="1437428403555">
<node LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1668334442" CREATED="1437368294616" MODIFIED="1437368296302"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      has combine and not uncombine
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="the operation might be invertible (as in the monoid (Int,+,0)), or might not (as in the monoid (Int, *, 1))" ID="ID_1322650278" CREATED="1437368224753" MODIFIED="1437368258887"/>
</node>
<node TEXT="can infer use from type sig" ID="ID_1872188274" CREATED="1437428352614" MODIFIED="1437428404868">
<node TEXT="without reading the function&apos;s implementation" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_773264731" CREATED="1437428369518" MODIFIED="1437428389919"/>
<node TEXT="&quot;By using named monoids we can write type signatures that express our intentions to people reading our code: for example by using Any instead of Bool we make it clear just how our boolean value is to be used. &quot;" ID="ID_68226808" CREATED="1437428374942" MODIFIED="1437428376902"/>
</node>
</node>
<node TEXT="gary&apos;s MaybeIO meetup code" ID="ID_627725208" CREATED="1436554436879" MODIFIED="1436554446846">
<node TEXT="https://gist.github.com/gfixler/b5002dfacbd972aea6e8" ID="ID_1744185000" CREATED="1436554442947" MODIFIED="1436554442947" LINK="https://gist.github.com/gfixler/b5002dfacbd972aea6e8"/>
</node>
</node>
<node TEXT="8 5-6" ID="ID_630448269" CREATED="1438910284436" MODIFIED="1438911600480">
<node TEXT="instances can be constrained based on the types of components of a type" ID="ID_251458272" CREATED="1438848181777" MODIFIED="1438848208611">
<node TEXT="fgl" ID="ID_310871096" CREATED="1438848194500" MODIFIED="1438910289401"/>
</node>
</node>
<node TEXT="8 8" ID="ID_1725819312" CREATED="1439085470522" MODIFIED="1439085472232">
<node TEXT="can stack Error onto a monad" LOCALIZED_STYLE_REF="default" ID="ID_1628938942" CREATED="1439064842145" MODIFIED="1443085243737">
<node TEXT="https://hackage.haskell.org/package/mongoDB-0.9.5/docs/Control-Monad-Throw.html" ID="ID_731259923" CREATED="1439064853400" MODIFIED="1439064853400" LINK="https://hackage.haskell.org/package/mongoDB-0.9.5/docs/Control-Monad-Throw.html"/>
<node TEXT="is like a more detailed Either, said someone" ID="ID_1835342918" CREATED="1439065076002" MODIFIED="1439065084834"/>
</node>
<node TEXT="&quot;trace logging&quot; ~ &quot;printf debugging&quot;" LOCALIZED_STYLE_REF="default" ID="ID_133922086" CREATED="1439065228026" MODIFIED="1443085243129">
<node TEXT="https://www.reddit.com/r/haskell/comments/3g1488/debugging_monadic_code/" ID="ID_463961641" CREATED="1439065165087" MODIFIED="1439065165087" LINK="https://www.reddit.com/r/haskell/comments/3g1488/debugging_monadic_code/"/>
</node>
<node LOCALIZED_STYLE_REF="default" ID="ID_1971279727" CREATED="1439081896419" MODIFIED="1443085241886"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      ? how to chain, nest monadic functions
    </p>
  </body>
</html>
</richcontent>
<node TEXT="keep this tag" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_518038456" CREATED="1439081907254" MODIFIED="1439081910240">
<node ID="ID_1860371900" CREATED="1439081896419" MODIFIED="1439081896419"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      ? how to chain, nest monadic functions
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node TEXT="8 21" ID="ID_640552991" CREATED="1440192718460" MODIFIED="1440192719795">
<node TEXT="? foldable, traversable" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_783237805" CREATED="1440103448792" MODIFIED="1440103454331"/>
</node>
<node TEXT="Hackage lists reverse dependencies" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_202183884" CREATED="1439753605857" MODIFIED="1439753618441">
<node TEXT="http://packdeps.haskellers.com/reverse/fgl" ID="ID_21824578" CREATED="1439753618869" MODIFIED="1439753618869" LINK="http://packdeps.haskellers.com/reverse/fgl"/>
</node>
<node TEXT="float exponent (**), int exponent (^), and there&apos;s ^^ too" ID="ID_975699560" CREATED="1443084905239" MODIFIED="1443085055013"/>
<node TEXT="type declarations can mask each other" ID="ID_77952530" CREATED="1443407831004" MODIFIED="1443407843182">
<node TEXT="example" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1109741872" CREATED="1443407883969" MODIFIED="1443407886049"/>
<node ID="ID_1365511905" CREATED="1443407881095" MODIFIED="1443407881095"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <font size="23.66px" color="rgb(78, 98, 114)" face="sans-serif"><span http-equiv="content-type" style="color: rgb(78, 98, 114); text-transform: none; float: none; line-height: 13.2496px; font-weight: bold; word-spacing: 0px; display: inline !important; background-color: rgb(255, 255, 255); font-size: 23.66px; text-indent: 0px; white-space: normal; font-style: normal; font-family: sans-serif; text-align: left; font-variant: normal; letter-spacing: normal" content="text/html; charset=utf-8"><b>Data.Attoparsec.ByteString.Char8</b></span></font> 
  </body>
</html>
</richcontent>
</node>
<node TEXT="type Parser = Parser ByteString" ID="ID_1882713373" CREATED="1443407844472" MODIFIED="1443407845412"/>
</node>
<node TEXT="haskell / OverloadedStrings" ID="ID_1085468986" CREATED="1443982278948" MODIFIED="1443982300139">
<node TEXT="demonstration" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1393180886" CREATED="1443982403286" MODIFIED="1443982406394"/>
<node TEXT=":set -XOverloadedStrings" ID="ID_1086905657" CREATED="1443982486794" MODIFIED="1443982506720"/>
<node TEXT="import GHC.Exts( IsString(..) )" ID="ID_607349728" CREATED="1443982301927" MODIFIED="1443982323997"/>
<node TEXT="data X = X" ID="ID_1192612684" CREATED="1443982344415" MODIFIED="1443982346585"/>
<node TEXT="instance Show X where show = const &quot;X&quot;" ID="ID_1392599388" CREATED="1443982337365" MODIFIED="1443982603002"/>
<node TEXT="instance IsString X where fromString = const X" ID="ID_1134851754" CREATED="1443982355215" MODIFIED="1443982367639"/>
<node TEXT="X" ID="ID_474843878" CREATED="1443982391998" MODIFIED="1443982392620"/>
<node TEXT="&quot;nerp&quot; :: X" ID="ID_1710876256" CREATED="1443982392881" MODIFIED="1443982400019"/>
</node>
<node TEXT="2015 10 15" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_212702083" CREATED="1444945056742" MODIFIED="1444945059074"/>
<node TEXT="error messages state class before (invalid)member" ID="ID_507926272" CREATED="1444936762828" MODIFIED="1444936788145">
<node TEXT="in error messages it will say &quot;can&apos;t deduce (Class InstanceMember)&quot;. If I forget the order ask for 3 + &quot;X&quot;" ID="ID_2001928" CREATED="1444904845018" MODIFIED="1444904883148"/>
</node>
<node TEXT="think of &lt;$&gt; as a lift" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_992828206" CREATED="1444894645492" MODIFIED="1444936752940">
<node TEXT="maybe it is literally" ID="ID_524768698" CREATED="1444936754076" MODIFIED="1444936757672"/>
<node TEXT="its first|LHS input is not a functor" ID="ID_1964448195" CREATED="1444894651931" MODIFIED="1444894677709"/>
</node>
<node TEXT="parsing, infixes &amp; precedence" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1448826668" CREATED="1443423949343" MODIFIED="1443423954180">
<node TEXT="recs" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1428363617" CREATED="1443461834944" MODIFIED="1443461838040">
<node TEXT="https://hackage.haskell.org/package/parsec-3.1.9/docs/Text-Parsec-Expr.html" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1430838824" CREATED="1443461827666" MODIFIED="1445286139536" LINK="https://hackage.haskell.org/package/parsec-3.1.9/docs/Text-Parsec-Expr.html"/>
<node TEXT="https://en.wikipedia.org/wiki/Operator-precedence_grammar" ID="ID_534668150" CREATED="1443461833625" MODIFIED="1443461833625" LINK="https://en.wikipedia.org/wiki/Operator-precedence_grammar"/>
<node TEXT="a paper on local fixity" ID="ID_170918170" CREATED="1445286042171" MODIFIED="1445286050052">
<node TEXT="http://www.cse.chalmers.se/~nad/publications/danielsson-norell-mixfix.pdf" ID="ID_1466449215" CREATED="1445286050507" MODIFIED="1445286050507" LINK="http://www.cse.chalmers.se/~nad/publications/danielsson-norell-mixfix.pdf"/>
</node>
</node>
<node TEXT="two Haskell Cafe threads I started" ID="ID_1596900947" CREATED="1445286056651" MODIFIED="1445286119627">
<node TEXT=".serial" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_265499574" CREATED="1445286121476" MODIFIED="1445286123285"/>
<node TEXT="https://mail.google.com/mail/u/0/#search/Operator-precedence_grammar/15012da0a4c2ba65" ID="ID_205503150" CREATED="1445286120377" MODIFIED="1445286120377" LINK="https://mail.google.com/mail/u/0/#search/Operator-precedence_grammar/15012da0a4c2ba65"/>
<node TEXT="https://mail.google.com/mail/u/0/#inbox/150819cbd1045fa9" ID="ID_727435203" CREATED="1445286064429" MODIFIED="1445286064429" LINK="https://mail.google.com/mail/u/0/#inbox/150819cbd1045fa9"/>
</node>
<node TEXT="Haskell&apos;s fixity table" ID="ID_1555319723" CREATED="1445286145699" MODIFIED="1445286154419">
<node TEXT="9 = !! and ." ID="ID_1346170534" CREATED="1445286160435" MODIFIED="1445286165283"/>
<node TEXT="8-6 = arithmetic" ID="ID_619745035" CREATED="1445286176723" MODIFIED="1445286185025"/>
<node TEXT="5 = list construction" ID="ID_1927406594" CREATED="1445286190459" MODIFIED="1445286194714"/>
<node TEXT="4 = comparison, `elem`" ID="ID_470644573" CREATED="1445286198531" MODIFIED="1445286245646"/>
<node TEXT="3 = &amp;&amp;" ID="ID_211758723" CREATED="1445286211348" MODIFIED="1445286213809"/>
<node TEXT="2 = ||" ID="ID_349222143" CREATED="1445286213987" MODIFIED="1445286215816"/>
<node TEXT="1 = monad" ID="ID_12470999" CREATED="1445286216019" MODIFIED="1445286221627"/>
<node TEXT="0 = $, $!, `seq`" ID="ID_1409569966" CREATED="1445286224564" MODIFIED="1445286235985"/>
</node>
<node TEXT="set operations" ID="ID_1877178195" CREATED="1445286328177" MODIFIED="1445738516844">
<node TEXT="= things to have levels for" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1333980677" CREATED="1445738517277" MODIFIED="1445738519853"/>
<node TEXT="composition" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_617021638" CREATED="1445738550617" MODIFIED="1445738553471">
<node TEXT=". is first, $ last" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1343502116" CREATED="1445738554008" MODIFIED="1445738563734">
<node TEXT=". takes two functions" ID="ID_423348178" CREATED="1445738572216" MODIFIED="1445738575230"/>
</node>
</node>
<node TEXT="set retrieval" ID="ID_257329509" CREATED="1445738526737" MODIFIED="1445738536588"/>
<node TEXT="set construction" ID="ID_1313080724" CREATED="1445286339265" MODIFIED="1445286341930"/>
<node TEXT="set comparison" ID="ID_1460988352" CREATED="1445286343443" MODIFIED="1445286345082"/>
</node>
</node>
<node TEXT="use ### = $, ## = $., .." LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_210559615" CREATED="1445738626512" MODIFIED="1445738644984"/>
<node TEXT="read head, upward" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1012840145" CREATED="1445738704280" MODIFIED="1445738720752"/>
<node TEXT="MultiParamTypeClasses and FunctionalDependencies" ID="ID_706017157" CREATED="1445645404418" MODIFIED="1445645428095">
<node TEXT="surprisingly easy" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1100431222" CREATED="1445645552194" MODIFIED="1445645556241"/>
<node TEXT="MPTC : whereas classes describe individual types, MPTCs are relations on sets of types" ID="ID_1459406286" CREATED="1445645507834" MODIFIED="1445645544761"/>
<node TEXT="FunDep : indicates that one type determines another" ID="ID_771982990" CREATED="1445645499249" MODIFIED="1445645545840"/>
<node TEXT="example" ID="ID_14428534" CREATED="1445645495386" MODIFIED="1445645496526">
<node TEXT="quote" ID="ID_1644849714" CREATED="1445645436098" MODIFIED="1445645436864">
<node TEXT="class Monad m =&gt; Stream s m t | s -&gt; t where Source&#xa;&#xa;An instance of Stream has stream type s, underlying monad m and token type t determined by the stream" ID="ID_515265921" CREATED="1445645430905" MODIFIED="1445645431724"/>
</node>
<node TEXT="interp" ID="ID_151120362" CREATED="1445645441689" MODIFIED="1445645442543">
<node TEXT="Stream is an MPTC relating s, m, and t" ID="ID_770707305" CREATED="1445645443454" MODIFIED="1445645460104"/>
<node TEXT="the FD &quot;| s -&gt; t&quot; indicates that t is determined by s" ID="ID_870902467" CREATED="1445645460338" MODIFIED="1445645481040"/>
</node>
</node>
</node>
<node TEXT="for speed" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1589899112" CREATED="1445738389465" MODIFIED="1445738397622">
<node TEXT="Gary explains how to Hoogle in GHCI" ID="ID_1717129004" CREATED="1445478094071" MODIFIED="1445478101060">
<node TEXT="http://www.meetup.com/santa-monica-haskell/events/225732250/comments/456466660/?a=uc1_rd&amp;read=1&amp;_af=event&amp;_af_eid=225732250&amp;itemTypeToken=COMMENT&amp;https=off" ID="ID_1990375669" CREATED="1445478101483" MODIFIED="1445478101483" LINK="http://www.meetup.com/santa-monica-haskell/events/225732250/comments/456466660/?a=uc1_rd&amp;read=1&amp;_af=event&amp;_af_eid=225732250&amp;itemTypeToken=COMMENT&amp;https=off"/>
<node TEXT="his (so far) top two top-level comments" ID="ID_102477309" CREATED="1445478103943" MODIFIED="1445478115661">
<node TEXT="posted Oct 21, 2015" ID="ID_520438985" CREATED="1445478153143" MODIFIED="1445478158102"/>
</node>
</node>
</node>
<node TEXT="read head" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_513288278" CREATED="1445738704280" MODIFIED="1445738727111">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1012840145" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="&quot;@ syntax in patterns and the {}&apos;s used by record syntax both bind tighter than whitespace application.&quot;" ID="ID_359651273" CREATED="1446672412539" MODIFIED="1446672414106">
<node TEXT="Ed Kmett, Haskell Cafe, 2015 11 04, &quot;proposal: . as postfix application&quot; (not verbatim the thread title)" ID="ID_496289866" CREATED="1446672415307" MODIFIED="1446672440215"/>
</node>
<node TEXT="? exception v. either etc" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1989910649" CREATED="1439065068794" MODIFIED="1439085380295">
<node TEXT="https://www.reddit.com/r/haskell/comments/3g1488/debugging_monadic_code/" ID="ID_780082386" CREATED="1439065165087" MODIFIED="1439065165087" LINK="https://www.reddit.com/r/haskell/comments/3g1488/debugging_monadic_code/"/>
<node TEXT="use error for programmer, use maybe or either for expected bifurcations" ID="ID_1412640155" CREATED="1439064743161" MODIFIED="1439065096476"/>
<node TEXT="someone else said moands &gt; exceptions, debugging easier" ID="ID_807279100" CREATED="1439065104250" MODIFIED="1439065118487">
<node TEXT="because exceptions somehow &quot;bypass the whole purity thing&quot;" ID="ID_1020387947" CREATED="1439065146730" MODIFIED="1439065156663"/>
</node>
</node>
<node TEXT="ask : list monad fail" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1648778106" CREATED="1447622960550" MODIFIED="1447622974537">
<node TEXT="failure" ID="ID_1467424112" CREATED="1447623077710" MODIFIED="1447623089411">
<node TEXT="Prelude Control.Monad.Random Control.Monad&gt; [1,2] &gt;&gt;= (*2)&#xa;&#xa;&lt;interactive&gt;:38:1:&#xa;    No instance for (Num [b0]) arising from a use of &#x2018;it&#x2019;&#xa;    In a stmt of an interactive GHCi command: print it" ID="ID_1482129713" CREATED="1447622968030" MODIFIED="1447623077210"/>
</node>
<node TEXT="half-success" ID="ID_770648645" CREATED="1447623079318" MODIFIED="1447623087181">
<node TEXT="Prelude Control.Monad.Random Control.Monad&gt; let x = [1,2] &gt;&gt;= (*2)&#xa;Prelude Control.Monad.Random Control.Monad&gt; :t x&#xa;x :: Num [b] =&gt; [b]" ID="ID_1361758112" CREATED="1447623081342" MODIFIED="1447623082343"/>
</node>
</node>
<node TEXT="define constructor in Data stmt" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_517966159" CREATED="1447963767783" MODIFIED="1447963777742">
<node TEXT="as long as it starts with &quot;:&quot;, the constructor can be introduced in the data statement" ID="ID_1889360474" CREATED="1447963781216" MODIFIED="1447963806955"/>
<node TEXT="example" ID="ID_13522124" CREATED="1447963807184" MODIFIED="1447963808096">
<node TEXT="https://wiki.haskell.org/Parsing_expressions_and_statements" ID="ID_42750456" CREATED="1447963825062" MODIFIED="1447963825062" LINK="https://wiki.haskell.org/Parsing_expressions_and_statements"/>
<node TEXT="data Stmt = Nop | String := Expr | If Expr Stmt Stmt | While Expr Stmt&#xa;          | Seq [Stmt] | String :$ String" ID="ID_1423555155" CREATED="1447963794616" MODIFIED="1447963796042"/>
<node TEXT="The last constructor, &quot;String :$ String&quot;, I introduced myself; it still compiles." ID="ID_745896452" CREATED="1447963836624" MODIFIED="1447963853367"/>
</node>
<node TEXT="partial explanation" LOCALIZED_STYLE_REF="styles.topic" ID="ID_43469203" CREATED="1447963859591" MODIFIED="1447963865050">
<node TEXT="http://stackoverflow.com/questions/21820772/what-does-mean-in-haskell?rq=1" ID="ID_576176197" CREATED="1447963864000" MODIFIED="1447963864000" LINK="http://stackoverflow.com/questions/21820772/what-does-mean-in-haskell?rq=1"/>
</node>
</node>
<node TEXT="? define object in RHS of record assignment" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1291251801" CREATED="1447964760033" MODIFIED="1449079606816">
<node TEXT="example" ID="ID_283108250" CREATED="1447964797592" MODIFIED="1447964800424">
<node TEXT="evaluating this" ID="ID_289744694" CREATED="1447964785457" MODIFIED="1447964787465">
<node TEXT="TokenParser{ parens = m_parens&#xa;           , identifier = m_identifier&#xa;           , reservedOp = m_reservedOp&#xa;           , reserved = m_reserved&#xa;           , semiSep1 = m_semiSep1&#xa;           , whiteSpace = m_whiteSpace } = makeTokenParser def" ID="ID_1989223768" CREATED="1447964783737" MODIFIED="1447964784922"/>
</node>
<node TEXT="apparently defines &quot;m_parens&quot;" ID="ID_580752959" CREATED="1447964788425" MODIFIED="1447964793913"/>
</node>
<node TEXT="source of example" ID="ID_160755835" CREATED="1447964801641" MODIFIED="1447965837119">
<node TEXT="https://wiki.haskell.org/Parsing_expressions_and_statements" ID="ID_1668956544" CREATED="1447964811431" MODIFIED="1447964811431" LINK="https://wiki.haskell.org/Parsing_expressions_and_statements"/>
<node TEXT="code from which I saved as a file, here" ID="ID_455210281" CREATED="1447964812424" MODIFIED="1447964823225">
<node TEXT="/home/jeff/work/computer/Haskell/parse" ID="ID_975252337" CREATED="1447964840050" MODIFIED="1447964840050"/>
<node TEXT="wiki.Parsing_expressions_and_statements.hs" ID="ID_1733282618" CREATED="1447964845981" MODIFIED="1447964845981"/>
</node>
</node>
<node TEXT="I can&apos;t reproduce it myself" ID="ID_890782507" CREATED="1447965837354" MODIFIED="1447965843554">
<node TEXT="*Main&gt; data X = X {a :: Int, b :: Int} deriving Show&#xa;*Main&gt; let x = X 1 2&#xa;*Main&gt; x&#xa;X {a = 1, b = 2}&#xa;*Main&gt; X {a=aa,b=bb} = x&#xa;&#xa;&lt;interactive&gt;:33:15: parse error on input &#x2018;=&#x2019;&#xa;*Main&gt;" ID="ID_541129314" CREATED="1447965840690" MODIFIED="1447965841691"/>
</node>
</node>
<node TEXT="haskell : infixing via (`) =&gt; left-assocvt" ID="ID_1744598" CREATED="1448090324408" MODIFIED="1448090421250">
<node ID="ID_1722651488" CREATED="1448090407365" MODIFIED="1448090407365"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      v1 `f1` v2 `f2` v3 = (v1 `f1` v2) `f2` v3
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="? why can return type vary in a monadic do-block" ID="ID_1519949933" CREATED="1448860876136" MODIFIED="1448860897104">
<node TEXT="*Dwt&gt; :{" ID="ID_878583198" CREATED="1448860897535" MODIFIED="1448860897535"/>
<node TEXT="*Dwt| do" ID="ID_389863235" CREATED="1448860897535" MODIFIED="1448860897535"/>
<node TEXT="*Dwt|   return ()" ID="ID_1884169674" CREATED="1448860897537" MODIFIED="1448860897537"/>
<node TEXT="*Dwt|   return 3" ID="ID_1499053694" CREATED="1448860897539" MODIFIED="1448860897539"/>
<node TEXT="*Dwt| :}" ID="ID_1415896977" CREATED="1448860897541" MODIFIED="1448860897541"/>
<node TEXT="3" ID="ID_78202676" CREATED="1448860897544" MODIFIED="1448860897544"/>
</node>
<node TEXT="maybe vs. either" LOCALIZED_STYLE_REF="default" ID="ID_1539082202" CREATED="1448685638883" MODIFIED="1449079145701">
<font BOLD="true"/>
<node TEXT="enjoyed greatly" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1509952583" CREATED="1448697618942" MODIFIED="1448697622659">
<node TEXT="http://stackoverflow.com/questions/3795561/haskell-why-do-the-maybe-and-either-types-behave-differently-when-used-as-monad" ID="ID_1652133587" CREATED="1448697621419" MODIFIED="1448697621419" LINK="http://stackoverflow.com/questions/3795561/haskell-why-do-the-maybe-and-either-types-behave-differently-when-used-as-monad"/>
</node>
<node TEXT="? both have fail" ID="ID_96313970" CREATED="1448686137841" MODIFIED="1448686141048"/>
<node TEXT="in maybe you know whether you want nothing or just" ID="ID_1991968867" CREATED="1448685863297" MODIFIED="1448685880275"/>
<node TEXT="kinds of failure" ID="ID_1929941460" CREATED="1448686227857" MODIFIED="1448686229847">
<node TEXT="programmer error" ID="ID_83033236" CREATED="1448686247233" MODIFIED="1448686251087"/>
<node TEXT="overlapping" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1574201691" CREATED="1448686267673" MODIFIED="1448686269879"/>
<node TEXT="invalid input | user error" ID="ID_2432507" CREATED="1448686232505" MODIFIED="1448686257614"/>
<node TEXT="case exhaustion" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_741463744" CREATED="1448686285112" MODIFIED="1448686320788"/>
<node TEXT="lookup failure" ID="ID_1937650113" CREATED="1448686303712" MODIFIED="1448686305753"/>
</node>
<node TEXT="Left &gt;? Right (in priority)" ID="ID_1623211587" CREATED="1448687189705" MODIFIED="1448687203049">
<node TEXT="does Either exploit, in its prioritization of Left over Right, that errors should be handled immediately? is Left like aborting|dropping the Right?" ID="ID_1920572774" CREATED="1448687095064" MODIFIED="1448687180439"/>
</node>
<node TEXT="is &quot;Maybe do&quot; good for collecting similarly fallible ops?" ID="ID_422513449" CREATED="1448688972050" MODIFIED="1448689068939">
<node TEXT="because all failures will be repd as Nothing" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1000105045" CREATED="1448689025665" MODIFIED="1448689050235"/>
<node TEXT="myDiv2 :: Float -&gt; Float -&gt; Maybe Float" ID="ID_1826530469" CREATED="1448688986475" MODIFIED="1448688986475"/>
<node TEXT="myDiv2 x 0 = Nothing" ID="ID_1165169628" CREATED="1448688986475" MODIFIED="1448688986475"/>
<node TEXT="myDiv2 x y = Just (x / y)" ID="ID_1408183242" CREATED="1448688986478" MODIFIED="1448688986478"/>
<node TEXT="divSum2 :: Float -&gt; Float -&gt; Float -&gt; Maybe Float" ID="ID_823629122" CREATED="1448688986481" MODIFIED="1448689007713"/>
<node TEXT="divSum2 x y z = do" ID="ID_1707494681" CREATED="1448688986482" MODIFIED="1448688986482">
<node TEXT="xdy &lt;- myDiv2 x y" ID="ID_110068157" CREATED="1448688986485" MODIFIED="1448688986485"/>
<node TEXT="xdz &lt;- myDiv2 x z" ID="ID_146903727" CREATED="1448688986485" MODIFIED="1448688986485"/>
<node TEXT="return (xdy + xdz)" ID="ID_1552468017" CREATED="1448688986485" MODIFIED="1448688986485"/>
</node>
</node>
<node TEXT="(monad + fail) : one def, works in Either or Maybe context" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_137481570" CREATED="1448689497442" MODIFIED="1448689517993">
<node TEXT="http://www.randomhacks.net/2007/03/10/haskell-8-ways-to-report-errors/" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_711011996" CREATED="1448689524478" MODIFIED="1448689532112" LINK="http://www.randomhacks.net/2007/03/10/haskell-8-ways-to-report-errors/"/>
<node TEXT="section 4" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1667358735" CREATED="1448689525418" MODIFIED="1448689532104"/>
</node>
<node TEXT="Nothing ? Exception" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_35897130" CREATED="1448700909369" MODIFIED="1448700936255">
<node TEXT="*Dwt&gt; fromJust Nothing :: Maybe Int" ID="ID_1823432053" CREATED="1448700932676" MODIFIED="1448700932676"/>
<node TEXT="*** Exception: Maybe.fromJust: Nothing" ID="ID_99991744" CREATED="1448700932676" MODIFIED="1448700932676"/>
<node TEXT="*Dwt&gt; :t (fromJust Nothing :: Maybe Int)" ID="ID_1799164770" CREATED="1448700932678" MODIFIED="1448700932678"/>
<node TEXT="(fromJust Nothing :: Maybe Int) :: Maybe Int" ID="ID_942301748" CREATED="1448700932679" MODIFIED="1448700932679"/>
<node TEXT="*Dwt&gt; Nothing" ID="ID_1998408569" CREATED="1448700932681" MODIFIED="1448700932681"/>
<node TEXT="Nothing" ID="ID_147751809" CREATED="1448700932683" MODIFIED="1448700932683"/>
<node TEXT="*Dwt&gt;" ID="ID_1870987110" CREATED="1448700932684" MODIFIED="1448700932684"/>
</node>
</node>
<node TEXT="Data.Lens.Lens.&amp; is for chaining* binary functions" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_928346485" CREATED="1449650106907" MODIFIED="1449650158934">
<node TEXT="which need the first arg built up" ID="ID_749572850" CREATED="1449650106907" MODIFIED="1449650123674"/>
<node TEXT="*chaining on what Dwt calls AsPos 2" ID="ID_617411093" CREATED="1449650106907" MODIFIED="1449650125670"/>
<node TEXT="code" ID="ID_902998768" CREATED="1449650142487" MODIFIED="1449650144117"/>
<node TEXT="Prelude Control.Lens.Lens&gt; let f x = x+1" ID="ID_1026060044" CREATED="1449650106907" MODIFIED="1449650106907"/>
<node TEXT="Prelude Control.Lens.Lens&gt; let g x y = x*y" ID="ID_678979720" CREATED="1449650106908" MODIFIED="1449650106908"/>
<node TEXT="Prelude Control.Lens.Lens&gt; f$   3 &amp; f &amp; g$   4 &amp; f &amp; g$  1" ID="ID_1063041591" CREATED="1449650106908" MODIFIED="1449650106908"/>
<node TEXT="21" ID="ID_1712247806" CREATED="1449650106910" MODIFIED="1449650106910"/>
<node TEXT="Prelude Control.Lens.Lens&gt; f$   g (f 3)  $ g (f 4) 1" ID="ID_68198270" CREATED="1449650106911" MODIFIED="1449650106911"/>
<node TEXT="21" ID="ID_1339025755" CREATED="1449650106912" MODIFIED="1449650106912"/>
</node>
<node TEXT="in hoas\haskell can the user dict be simpler?" ID="ID_1360553376" CREATED="1449293640412" MODIFIED="1449293869953">
<node TEXT="to ask a user to represent &quot;verb&quot; as &quot;\a -&gt; ...&quot; is to ask them to do more work than they should need to do. the beauty of the hoas idea is that (correct me) it allows exposure of exactly those parts of haskell one wants the user to have access to. if there were some way to do that without forcing the user to learn a bunch of extra stuff seems good." ID="ID_164503848" CREATED="1449293656539" MODIFIED="1449293789547"/>
<node TEXT="It is ?advanced to me. I&apos;m not worried about hiding things from the user; I&apos;m worried about making things for them." ID="ID_1594096672" CREATED="1449293802747" MODIFIED="1449293848539"/>
</node>
<node TEXT="power series in haskell, 12 lines of code, via ben" ID="ID_427332499" CREATED="1449033534897" MODIFIED="1449033541680"/>
<node TEXT="?" ID="ID_346878608" CREATED="1436482250783" MODIFIED="1451162608658">
<node TEXT="not cruc I hope" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_535494016" CREATED="1434520470249" MODIFIED="1436482273839"/>
<node TEXT="Node = Either Stmt Rel" ID="ID_17022218" CREATED="1435518415987" MODIFIED="1435518435133">
<node TEXT="gmail thread" ID="ID_1259820195" CREATED="1435520204574" MODIFIED="1435520213093">
<node TEXT="https://mail.google.com/mail/u/0/#search/haskell/14e0c8240b300076" ID="ID_1921127118" CREATED="1435520203460" MODIFIED="1435520203460" LINK="https://mail.google.com/mail/u/0/#search/haskell/14e0c8240b300076"/>
</node>
<node ID="ID_1568120070" CREATED="1435520222466" MODIFIED="1435520222466"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p style="margin-bottom: 0px; margin-left: 0px; text-indent: 0px; margin-right: 0px; margin-top: 0px">
      DataTypesALaCarte.pdf
    </p>
  </body>
</html>
</richcontent>
<node TEXT="downloaded" ID="ID_20027757" CREATED="1435520224678" MODIFIED="1435520226077"/>
</node>
</node>
<node TEXT="recursive data + laziness = freak" ID="ID_1147067675" CREATED="1434175836266" MODIFIED="1434175849232">
<node TEXT="https://wiki.haskell.org/Tying_the_Knot" ID="ID_587360307" CREATED="1434175850165" MODIFIED="1434175850165" LINK="https://wiki.haskell.org/Tying_the_Knot"/>
</node>
</node>
<node TEXT="beautiful ! wish I had time" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_940992490" CREATED="1454138574823" MODIFIED="1454138582819">
<node TEXT="http://jtobin.ca/monadic-recursion-schemes/" LOCALIZED_STYLE_REF="default" ID="ID_220533406" CREATED="1454126710455" MODIFIED="1454138584508" LINK="http://jtobin.ca/monadic-recursion-schemes/"/>
</node>
<node TEXT="IHaskell + HaskellR" ID="ID_674037383" CREATED="1454093588639" MODIFIED="1454093594807">
<node TEXT="I: ~Mathematica" ID="ID_1864289471" CREATED="1454093599363" MODIFIED="1454093604977"/>
<node TEXT="R: embed R in H" ID="ID_1640012944" CREATED="1454093605199" MODIFIED="1454093608268"/>
</node>
<node TEXT="solved : how to shim a parallel duplicate file in haskell" LOCALIZED_STYLE_REF="default" ID="ID_552941714" CREATED="1453534799540" MODIFIED="1453741556447">
<node TEXT="to the top exporter, add &quot;import qualified Dwt.Main_2 as M2&quot; to the imports and &quot;module M2&quot; to the exports" ID="ID_213715301" CREATED="1453534825069" MODIFIED="1453534873758"/>
</node>
<node TEXT="state monad, 2016 02 17 (short)" LOCALIZED_STYLE_REF="styles.subtopic" ID="ID_1829678852" CREATED="1455778880010" MODIFIED="1455780191580">
<node TEXT="(return) does not affect the state" ID="ID_647903815" CREATED="1455778903562" MODIFIED="1455778930048">
<node TEXT="it puts (the other kind of) data into the state monad" ID="ID_138650841" CREATED="1455778930421" MODIFIED="1455778942773"/>
</node>
<node TEXT="runState (do { put 5; return &apos;X&apos; }) 1" ID="ID_175005860" CREATED="1455779729682" MODIFIED="1455779730576"/>
<node TEXT="shorthand" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1341098463" CREATED="1455779799954" MODIFIED="1455779822582">
<node TEXT="runState (modify (+1)) 1 = ((),2)" ID="ID_1404536267" CREATED="1455779794674" MODIFIED="1455779852549"/>
<node TEXT="runState (gets (+1)) 1 = (2,1)" ID="ID_14569326" CREATED="1455779831146" MODIFIED="1455779986840"/>
<node TEXT="evalState (gets (+1)) 1 = 2" ID="ID_1326088369" CREATED="1455779831146" MODIFIED="1455779833224"/>
</node>
</node>
<node TEXT="? &quot;existentials&quot; can&apos;t be unwrapped" ID="ID_1293709011" CREATED="1455963631323" MODIFIED="1455963640317">
<node TEXT="https://mail.google.com/mail/u/0/#search/existentials/152f76f8368ee546" ID="ID_1599860471" CREATED="1455963641639" MODIFIED="1455963641639" LINK="https://mail.google.com/mail/u/0/#search/existentials/152f76f8368ee546"/>
<node TEXT="search for the word &quot;unwrap&quot;, in my third message in that thread" ID="ID_357372593" CREATED="1455963647533" MODIFIED="1455963673181"/>
</node>
<node TEXT="hackage projects have indexes" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_473985249" CREATED="1456605985184" MODIFIED="1456605990463">
<node TEXT="it lists every function and where it is" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1265643236" CREATED="1456606002032" MODIFIED="1456606011167"/>
<node TEXT="on the main page there&apos;s a link to it, after the list of modules" ID="ID_259146131" CREATED="1456605991560" MODIFIED="1456606001807"/>
</node>
<node TEXT="patterns introduce new vars!" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_293949468" CREATED="1456821610405" MODIFIED="1457043024468">
<node TEXT="In a function with a local var named mv, this works:&#xa;  Map.filter (\x -&gt; case x of VarSpec y -&gt; y==mv; _ -&gt; False)&#xa;and this will fail:&#xa;  Map.filter (\x -&gt; case x of VarSpec mv -&gt; True; _ -&gt; False)" ID="ID_1055225962" CREATED="1456821613506" MODIFIED="1457040240350"/>
</node>
<node TEXT="2016 03 30" ID="ID_223532493" CREATED="1459378482095" MODIFIED="1459378485338"/>
<node TEXT="let statements work in multi-line do notation, but not &quot;do {..}&quot; notation" ID="ID_676483844" CREATED="1459231938053" MODIFIED="1459231962290">
<node TEXT="this doesn&apos;t compile" ID="ID_565216696" CREATED="1459232022133" MODIFIED="1459232031867">
<node TEXT="z = do {let z = 3; putStrLn $ show 4}" ID="ID_357812372" CREATED="1459232023758" MODIFIED="1459232023758"/>
</node>
<node TEXT="this does" ID="ID_455385982" CREATED="1459232025277" MODIFIED="1459232033804">
<node TEXT="z = do" ID="ID_850007468" CREATED="1459232050901" MODIFIED="1459232050901">
<node TEXT="let z = 3" ID="ID_1059229352" CREATED="1459232050901" MODIFIED="1459232050901"/>
<node TEXT="putStrLn $ show 4" ID="ID_82201961" CREATED="1459232050901" MODIFIED="1459232050901"/>
</node>
</node>
</node>
</node>
<node TEXT="Emacs" ID="ID_107207027" CREATED="1414097073611" MODIFIED="1414097075104">
<node TEXT="to do" ID="ID_1864539737" CREATED="1414896266713" MODIFIED="1414896267476">
<node TEXT="adaptive-wrap" ID="ID_1954328534" CREATED="1414896271280" MODIFIED="1423720302098">
<node TEXT="http://www.emacswiki.org/emacs/LineWrap" ID="ID_682156282" CREATED="1414896275870" MODIFIED="1414896275870" LINK="http://www.emacswiki.org/emacs/LineWrap"/>
<node TEXT="I installed it from within Emacs (was easy, mouse-driven)." ID="ID_145084558" CREATED="1414896538206" MODIFIED="1414896550145"/>
<node TEXT="But how to load it?" ID="ID_358696982" CREATED="1414896550374" MODIFIED="1414896560045"/>
</node>
<node TEXT="arrowish commands for next, prev brace" ID="ID_330740217" CREATED="1413953535170" MODIFIED="1413953542788">
<node TEXT="similar to freeplane&apos;s choice set" ID="ID_852595064" CREATED="1413953549784" MODIFIED="1413953554867"/>
</node>
</node>
<node TEXT="cho" ID="ID_1608103480" CREATED="1414615440684" MODIFIED="1414615460983">
<node TEXT="want unjustified: swap cmd-ctrl" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1712404391" CREATED="1419494544970" MODIFIED="1419494558933">
<node TEXT="exten" ID="ID_1906301056" CREATED="1419494559682" MODIFIED="1419494594924">
<node TEXT="to be able to code without external keyboard" ID="ID_1155465980" CREATED="1419494527339" MODIFIED="1419494566253"/>
<node TEXT="which I currently almost never need" ID="ID_691465942" CREATED="1419494566449" MODIFIED="1419494580405"/>
</node>
<node TEXT="why" ID="ID_110061334" CREATED="1419494589609" MODIFIED="1419494590852">
<node TEXT="for emacs, because it recog&apos;s only ctrl and opt" ID="ID_407232660" CREATED="1419494604529" MODIFIED="1419494617868"/>
</node>
</node>
<node TEXT="topics" ID="ID_1456818660" CREATED="1414182576133" MODIFIED="1414615490856">
<node TEXT="scripting" ID="ID_1841728301" CREATED="1414615907892" MODIFIED="1414615910959">
<node TEXT="the definitive text" ID="ID_1683670183" CREATED="1414615943803" MODIFIED="1414615951247">
<node TEXT="https://www.gnu.org/software/emacs/manual/eintr.html" ID="ID_1804784429" CREATED="1414615933092" MODIFIED="1414615933092" LINK="https://www.gnu.org/software/emacs/manual/eintr.html"/>
</node>
</node>
<node TEXT="others" ID="ID_1693916152" CREATED="1414615911268" MODIFIED="1414615912031">
<node TEXT="completion" ID="ID_217725429" CREATED="1414182595851" MODIFIED="1414182597438"/>
<node TEXT="dired: &quot;simplifies file handling&quot;" ID="ID_568313016" CREATED="1414182586892" MODIFIED="1414615903271"/>
</node>
</node>
<node TEXT="questions" ID="ID_419950870" CREATED="1414615437997" MODIFIED="1414615439250"/>
<node TEXT="problems" ID="ID_597120259" CREATED="1414871926190" MODIFIED="1414871927361">
<node TEXT="later" ID="ID_908782592" CREATED="1414871935670" MODIFIED="1414871936393">
<node TEXT="swap control for cmd" ID="ID_1908465452" CREATED="1414868359614" MODIFIED="1414871931809">
<node TEXT="&quot;keyboard customizer for Mac OS&quot;" ID="ID_157599415" CREATED="1414872051700" MODIFIED="1414872057727">
<node TEXT="https://pqrs.org/osx/karabiner/index.html.en" ID="ID_1746852121" CREATED="1414872050689" MODIFIED="1414872050689" LINK="https://pqrs.org/osx/karabiner/index.html.en"/>
</node>
<node TEXT="probably done" ID="ID_465222998" CREATED="1414872065020" MODIFIED="1414872070503">
<node TEXT="looks like an easy fix, fails" ID="ID_1717720276" CREATED="1414871666971" MODIFIED="1414871675320">
<node TEXT="http://superuser.com/questions/296243/remap-command-key-in-mac-only-for-emacs" ID="ID_687660565" CREATED="1414868365233" MODIFIED="1414868365233" LINK="http://superuser.com/questions/296243/remap-command-key-in-mac-only-for-emacs"/>
<node TEXT="(setq mac-command-modifier &apos;control)" ID="ID_1136169727" CREATED="1414871677042" MODIFIED="1414871677042"/>
<node TEXT="(setq mac-control-modifier &apos;meta)" ID="ID_1947802656" CREATED="1414871677042" MODIFIED="1414871677042"/>
</node>
</node>
</node>
</node>
</node>
</node>
<node TEXT="how" ID="ID_150098029" CREATED="1414182579556" MODIFIED="1414615465383">
<node TEXT="** will def look" ID="ID_1612049435" CREATED="1417931177827" MODIFIED="1417931250341">
<node TEXT="braces nav" ID="ID_1165274416" CREATED="1417931181514" MODIFIED="1417931198817">
<node TEXT="tags" ID="ID_901530941" CREATED="1417931216690" MODIFIED="1417931217245">
<node TEXT="parenthesis parentheses brace bracket brackets braces" ID="ID_709720029" CREATED="1417931199658" MODIFIED="1417931216470"/>
</node>
<node TEXT="http://stackoverflow.com/questions/9845661/with-emacs-how-to-go-to-the-pairing-balancing-parentheses" ID="ID_1772905006" CREATED="1417931180021" MODIFIED="1417931180021" LINK="http://stackoverflow.com/questions/9845661/with-emacs-how-to-go-to-the-pairing-balancing-parentheses"/>
</node>
</node>
<node TEXT="solved" ID="ID_1416449062" CREATED="1414545959318" MODIFIED="1414891368371">
<node TEXT="escape shortcut: C[ C[ C[" ID="ID_775501712" CREATED="1414545943118" MODIFIED="1414545952765"/>
<node TEXT="hide notification screen with Esc" ID="ID_365585346" CREATED="1414545960733" MODIFIED="1414545969659"/>
</node>
<node TEXT="files" ID="ID_1527487987" CREATED="1414634492369" MODIFIED="1414634492980">
<node TEXT="*Messages* = many (most?) messages" ID="ID_275789004" CREATED="1414634493240" MODIFIED="1414634545853">
<node TEXT="but not debugger ones" ID="ID_464006381" CREATED="1414634547223" MODIFIED="1414634549883"/>
</node>
<node TEXT="*Backtrace* = debugger info" ID="ID_805238657" CREATED="1414634573159" MODIFIED="1414634579378"/>
</node>
<node TEXT="control" ID="ID_1217004005" CREATED="1414097776940" MODIFIED="1429766767492">
<font BOLD="true"/>
<node TEXT="help" ID="ID_1105641939" CREATED="1414182465351" MODIFIED="1414182466618">
<node TEXT="big variety of commands; notes not taken" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1960029716" CREATED="1414182467919" MODIFIED="1414182486542"/>
<node TEXT="remember the bottom screen can scroll" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_830709993" CREATED="1414182488108" MODIFIED="1414182495316">
<node TEXT="the one displaying help results" ID="ID_468423209" CREATED="1414182497044" MODIFIED="1414182500711"/>
</node>
</node>
<node TEXT="execution" ID="ID_1191989762" CREATED="1414101890213" MODIFIED="1414101891328">
<node TEXT="repeat" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1636950895" CREATED="1414101565114" MODIFIED="1414101732224">
<node TEXT="precede command with &quot;C-u [number]&quot;" ID="ID_1572370266" CREATED="1414101566482" MODIFIED="1414101587796"/>
<node TEXT="does not work for all commands" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_974833504" CREATED="1414101670648" MODIFIED="1414101676897"/>
<node TEXT="good for finding column within line" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1276403433" CREATED="1414101733875" MODIFIED="1414101740595"/>
</node>
<node TEXT="execute: Cx Ce" ID="ID_1572793579" CREATED="1414192509573" MODIFIED="1414192515137">
<node TEXT="executes the s-exp behind the cursor" ID="ID_732037801" CREATED="1414192515437" MODIFIED="1414192526615"/>
</node>
<node TEXT="abort (command): C-g" ID="ID_1340237207" CREATED="1414101896348" MODIFIED="1414106122490">
<node TEXT="alternatives" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_748860709" CREATED="1414101953767" MODIFIED="1414101968696"/>
<node TEXT="abort execution" ID="ID_1364510836" CREATED="1414101955311" MODIFIED="1414101958791">
<node TEXT="useful when nonresponsive" ID="ID_365842532" CREATED="1414101933782" MODIFIED="1414101937674"/>
</node>
<node TEXT="abort command entry" ID="ID_317644305" CREATED="1414101960013" MODIFIED="1414101962696">
<node TEXT="to abort half-entered command" ID="ID_818497784" CREATED="1414101937909" MODIFIED="1414101966249"/>
</node>
</node>
<node TEXT="quit (app): Cx-Cc" ID="ID_1774119743" CREATED="1414099952728" MODIFIED="1414106118042">
<node TEXT="safe: it will prompt for saving unsaved changes" ID="ID_1885333668" CREATED="1414175903627" MODIFIED="1414175912262"/>
</node>
<node TEXT="extended commands" ID="ID_485422591" CREATED="1414175814836" MODIFIED="1414175817079">
<node TEXT="C-x: character extend" ID="ID_1366476884" CREATED="1414175823011" MODIFIED="1414175826686">
<node TEXT="follow with one character" ID="ID_640715712" CREATED="1414175826899" MODIFIED="1414175830190"/>
</node>
<node TEXT="M-x: named command extend" ID="ID_1310846824" CREATED="1414175830939" MODIFIED="1414175837750">
<node TEXT="followed with a long name" ID="ID_83270195" CREATED="1414175838202" MODIFIED="1414175845055"/>
</node>
</node>
<node TEXT="pause: Cz" ID="ID_956650384" CREATED="1414176128673" MODIFIED="1414176133691">
<node TEXT="resume with &quot;fg&quot; or &quot;%emacs&quot;" ID="ID_1639635180" CREATED="1414176170656" MODIFIED="1414176180554"/>
</node>
<node TEXT="undo/redo" ID="ID_1883672950" CREATED="1414891714922" MODIFIED="1414891716517">
<node TEXT="undo: C-/" ID="ID_425367128" CREATED="1414105131232" MODIFIED="1414891836288">
<node TEXT="or C-_, or C-u" ID="ID_650184952" CREATED="1414891836657" MODIFIED="1414891841212"/>
</node>
<node TEXT="redo: C-g C-/" ID="ID_1121720514" CREATED="1414891722539" MODIFIED="1414891847231">
<node TEXT="or C-g C-_" ID="ID_917835198" CREATED="1414891847642" MODIFIED="1414891852891"/>
<node TEXT="and probably C-g C-u" ID="ID_1257081532" CREATED="1414891853859" MODIFIED="1414891858396"/>
</node>
</node>
</node>
<node TEXT="contexts" ID="ID_596321277" CREATED="1414100101260" MODIFIED="1414175706524">
<font BOLD="true"/>
<node TEXT="I&apos;m inventing that term" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_601569194" CREATED="1414105888694" MODIFIED="1414179646552"/>
<node TEXT="frame &gt; window" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_73779851" CREATED="1414181552384" MODIFIED="1414181556649"/>
<node TEXT="within window" ID="ID_363260327" CREATED="1414102295190" MODIFIED="1414106065373">
<font BOLD="true"/>
<node TEXT="go to line" ID="ID_904190252" CREATED="1447664668358" MODIFIED="1447664669845">
<node TEXT=". goto line" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1821488391" CREATED="1447664670414" MODIFIED="1447664675182"/>
<node TEXT="Cg g" ID="ID_953624851" CREATED="1447664672967" MODIFIED="1447664679572"/>
</node>
<node TEXT="shift by whole screen" ID="ID_1687427681" CREATED="1414101786718" MODIFIED="1414101793433">
<node TEXT="next screen: Cv (broken)" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_291067453" CREATED="1414100050824" MODIFIED="1442007874841"/>
<node TEXT="prev screen: Mv" ID="ID_1730783834" CREATED="1414100103469" MODIFIED="1414100107358"/>
<node TEXT="exception" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_445486198" CREATED="1414101796261" MODIFIED="1414101801542">
<node TEXT="if given a numeric argument, they scroll by that many lines, not that many screens" ID="ID_594059627" CREATED="1414101801949" MODIFIED="1414101812503"/>
</node>
</node>
<node TEXT="center at cursor: Cl" ID="ID_1355260173" CREATED="1414100146543" MODIFIED="1414100258715">
<node TEXT="letter, not number" ID="ID_609847986" CREATED="1414100174659" MODIFIED="1414100179263"/>
</node>
<node TEXT="shift relative to cursor: Cl repeatedly" ID="ID_83417285" CREATED="1414100146543" MODIFIED="1414100233003">
<node TEXT="brings it to center, top, bottom; cycles" ID="ID_1045548991" CREATED="1414100174659" MODIFIED="1414100247611"/>
</node>
<node TEXT="close buffer: Cx k" ID="ID_1746108597" CREATED="1414192402335" MODIFIED="1414192416689">
<node TEXT="why wouldn&apos;t I say kill buffer? it was the standard." LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1363072462" CREATED="1444806478305" MODIFIED="1444806491780">
<node TEXT="grepped for it, could not find, assuming was for that reason" ID="ID_586432320" CREATED="1444806496633" MODIFIED="1444806508797"/>
</node>
</node>
<node TEXT="next, prev parenthetical" ID="ID_984201013" CREATED="1414639577099" MODIFIED="1414639599728">
<node TEXT="C-M-{n|p}" ID="ID_455778473" CREATED="1414639584616" MODIFIED="1414639591296"/>
<node TEXT="functions &quot;forward-list&quot; and &quot;backward-list&quot;" ID="ID_930609841" CREATED="1414639634242" MODIFIED="1414639651021"/>
<node TEXT="skips non-parenthetical sexps" ID="ID_469922410" CREATED="1414639796672" MODIFIED="1414639814609"/>
<node TEXT="does not leave current paren scope" ID="ID_986491561" CREATED="1414639808504" MODIFIED="1414639827025"/>
</node>
<node TEXT="next, prev sexp" ID="ID_1820579138" CREATED="1414639577099" MODIFIED="1414639655100">
<node TEXT="C-M-{f|b}" ID="ID_57282298" CREATED="1414639584616" MODIFIED="1414639666446"/>
<node TEXT="functions &quot;forward-sexp&quot; and &quot;backward-sexp&quot;" ID="ID_505433262" CREATED="1414639634242" MODIFIED="1414639674908"/>
<node TEXT="does not leave current paren scope" ID="ID_822660640" CREATED="1414639808504" MODIFIED="1414639827025"/>
</node>
<node TEXT="kill bal&apos;d exp forward" ID="ID_1333058522" CREATED="1414639938293" MODIFIED="1414639945495">
<node TEXT="C-M-k" ID="ID_1072231032" CREATED="1414639947221" MODIFIED="1414639952791"/>
<node TEXT="&quot;kill-sexp&quot;" ID="ID_857699711" CREATED="1414639969245" MODIFIED="1414639972135"/>
</node>
<node TEXT="put mark at end of sexp" ID="ID_1394591155" CREATED="1414639962985" MODIFIED="1414639983039">
<node TEXT="C-M-space" ID="ID_411629354" CREATED="1414639977460" MODIFIED="1414639979567"/>
<node TEXT="&quot;mark-sexp&quot;" ID="ID_581350611" CREATED="1414639974859" MODIFIED="1414639977095"/>
</node>
</node>
<node TEXT="across windows" ID="ID_944905846" CREATED="1414181049870" MODIFIED="1414181542439">
<font BOLD="true"/>
<node TEXT="can from a new window view a different buffer" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1302229568" CREATED="1414181429388" MODIFIED="1414181547804"/>
<node TEXT="split frame: C-x 2" ID="ID_314301140" CREATED="1414181054000" MODIFIED="1414181064889"/>
<node TEXT="scroll other window: C-M-v" ID="ID_1151670653" CREATED="1414181067621" MODIFIED="1414181550132"/>
<node TEXT="cursor to other: C-x o" ID="ID_924149796" CREATED="1414181095193" MODIFIED="1414181100732"/>
</node>
<node TEXT="files" ID="ID_950351293" CREATED="1414105433316" MODIFIED="1414106139465">
<font BOLD="true"/>
<node TEXT="find: C-x C-f" ID="ID_1846001276" CREATED="1414105435571" MODIFIED="1414105442455">
<node TEXT="does not remove previous files&apos; buffers" ID="ID_241630773" CREATED="1414105590359" MODIFIED="1414105599187"/>
</node>
<node TEXT="save this one: C-x C-s" ID="ID_1056432605" CREATED="1414105490042" MODIFIED="1414175713256"/>
<node TEXT="save some: C-x s" ID="ID_1684864228" CREATED="1414175716643" MODIFIED="1414175720991">
<node TEXT="it prompts for each buffer with unsaved changes" ID="ID_543656507" CREATED="1414175721620" MODIFIED="1414175772037"/>
</node>
<node TEXT="list buffers: C-x C-b" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1804120204" CREATED="1414105621830" MODIFIED="1414105627368"/>
<node TEXT="choose buffer: C-x b" ID="ID_1468258981" CREATED="1414106142933" MODIFIED="1414106146352"/>
<node TEXT="recover auto-save: M-x &quot;recover-file&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1598245694" CREATED="1414178505962" MODIFIED="1414178521724">
<node TEXT="if a crash leads to lost data, open the file (the normal one, not the auto-saved one named #[filename]#), then run this" ID="ID_1384817047" CREATED="1414178523824" MODIFIED="1414178552457"/>
</node>
</node>
<node TEXT="C-x 1: close all other windows" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1039271606" CREATED="1414102313340" MODIFIED="1414106084034">
<font BOLD="false"/>
<node TEXT="digit 1, not letter L" ID="ID_1768065779" CREATED="1414102328043" MODIFIED="1414102335982"/>
</node>
<node TEXT="modes" ID="ID_1268893225" CREATED="1414179464428" MODIFIED="1414179581055">
<font BOLD="true"/>
<node TEXT="major vs. minor ones" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_380765489" CREATED="1414179613303" MODIFIED="1414179641609">
<node TEXT="major modes are exclsusive, and there is always one" ID="ID_264490751" CREATED="1414179605151" MODIFIED="1414179627883"/>
<node TEXT="minor ones can coexist, and none needs exist" ID="ID_1605064781" CREATED="1414179617271" MODIFIED="1414179635840"/>
</node>
<node TEXT="switch mode: M-x [mode]" ID="ID_1401809899" CREATED="1414179018243" MODIFIED="1414183271180">
<node TEXT="M-x &quot;fundamental-mode&quot;, etc." ID="ID_667678891" CREATED="1414179120899" MODIFIED="1414179127630"/>
</node>
<node TEXT="view mode doc&apos;n" ID="ID_965672204" CREATED="1414179477530" MODIFIED="1414179480646">
<node TEXT="C-h m" ID="ID_623562502" CREATED="1414179481307" MODIFIED="1414179484765"/>
</node>
</node>
</node>
<node TEXT="custom" ID="ID_1070564769" CREATED="1414191240927" MODIFIED="1414891378855">
<node TEXT="after editing, &quot;set&quot; to execute changes" ID="ID_1264393722" CREATED="1414191318840" MODIFIED="1414191340979">
<node TEXT="Editing the value does not make it take effect right away.  To do that,&#xa;you must &quot;set&quot; the variable by activating the `[State]&apos; button and&#xa;choosing `Set for Current Session&apos;.  Then the variable&apos;s state becomes:" ID="ID_1630045307" CREATED="1414191316809" MODIFIED="1414191317875"/>
</node>
<node TEXT="big font" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1969860751" CREATED="1414192494398" MODIFIED="1414192499367">
<node TEXT="change ~/.emacs" ID="ID_1951816623" CREATED="1414192895155" MODIFIED="1414192901117"/>
<node TEXT="(set-frame-font &quot;Droid Sans Mono-30&quot; nil t)" ID="ID_1335327000" CREATED="1414192498200" MODIFIED="1414192498200"/>
<node TEXT="easier: Cx C+" ID="ID_1031391498" CREATED="1441969496850" MODIFIED="1441969513578">
<node TEXT="C+ or C-" ID="ID_473912021" CREATED="1441969532161" MODIFIED="1441969537257"/>
</node>
</node>
</node>
<node TEXT="weird problems" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1521395656" CREATED="1414181903969" MODIFIED="1414182119416">
<font BOLD="false"/>
<node TEXT="escaping a &quot;recursive edit mode&quot;" LOCALIZED_STYLE_REF="default" ID="ID_499572559" CREATED="1414181818529" MODIFIED="1414181924408">
<node TEXT="Sometimes you will get into what is called a &quot;recursive editing&#xa;level&quot;.  This is indicated by square brackets in the mode line,&#xa;surrounding the parentheses around the major mode name.  For&#xa;example, you might see [(Fundamental)] instead of (Fundamental).&#xa;&#xa;To get out of the recursive editing level, type &lt;ESC&gt; &lt;ESC&gt; &lt;ESC&gt;." ID="ID_498712458" CREATED="1414181829456" MODIFIED="1414181830300"/>
</node>
<node TEXT="if C-h (get help) fails" ID="ID_134582671" CREATED="1414181915777" MODIFIED="1414181930450">
<node TEXT="(If C-h does not display a message about help at the bottom of the&#xa;screen, try typing the F1 key or M-x help &lt;Return&gt; instead.)" ID="ID_185675867" CREATED="1414181910305" MODIFIED="1414181910988"/>
</node>
</node>
<node TEXT="text edit" ID="ID_185126868" CREATED="1414102504803" MODIFIED="1414182130767">
<font BOLD="true"/>
<node TEXT="can repeat insertion" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_998227505" CREATED="1414102819106" MODIFIED="1414102823252"/>
<node TEXT="delete and kill" ID="ID_847936028" CREATED="1414102507947" MODIFIED="1414104669079">
<node TEXT="char" ID="ID_921663472" CREATED="1414102875397" MODIFIED="1414102875967">
<node TEXT="delete prev char: &lt;DEL&gt; (backspace)" ID="ID_105633294" CREATED="1414102844790" MODIFIED="1414102872300"/>
<node TEXT="delete next char: C-d" ID="ID_1868277967" CREATED="1414102853845" MODIFIED="1414102857552"/>
</node>
<node TEXT="word" ID="ID_321133518" CREATED="1414102877067" MODIFIED="1414102877688">
<node TEXT="exception" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1102736554" CREATED="1414104390226" MODIFIED="1414104392181">
<node TEXT="when given an argument, these cut (&quot;kill&quot;) rather than delete" ID="ID_399317245" CREATED="1414104392682" MODIFIED="1414104403020"/>
</node>
<node TEXT="delete prev word: C-&lt;DEL&gt;" ID="ID_1981134248" CREATED="1414102881866" MODIFIED="1414103137384"/>
<node TEXT="delete next word: M-d" ID="ID_1734725549" CREATED="1414102893624" MODIFIED="1414102901347"/>
</node>
<node TEXT="kill here to end" ID="ID_784817008" CREATED="1414102909823" MODIFIED="1414103933385">
<node TEXT="here to end of line: C-k" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1968098626" CREATED="1414102915879" MODIFIED="1414104522399">
<node TEXT="extension" LOCALIZED_STYLE_REF="default" ID="ID_463809267" CREATED="1414104444701" MODIFIED="1414104573450">
<node TEXT="press a second time to kill the trailing newline" ID="ID_293559393" CREATED="1414104459460" MODIFIED="1414104465862"/>
</node>
<node TEXT="exception" ID="ID_1057950865" CREATED="1414104575113" MODIFIED="1414104576196">
<node TEXT="given a numeric argument N is like pressing it 2N times" ID="ID_961063870" CREATED="1414104576873" MODIFIED="1414104585764"/>
<node TEXT="so that the newlines disappear, not just the preceding contents." ID="ID_19827372" CREATED="1414104588281" MODIFIED="1414104601154"/>
</node>
</node>
<node TEXT="here to end of sentence: M-k" ID="ID_1637889086" CREATED="1414102923638" MODIFIED="1414103163963"/>
</node>
<node TEXT="delete to mark: C-w" ID="ID_1797826085" CREATED="1414103859728" MODIFIED="1414103867812"/>
</node>
<node TEXT="yank" ID="ID_1686288709" CREATED="1414104656587" MODIFIED="1414104902257">
<node TEXT="yank most recent kill: C-y" ID="ID_802629116" CREATED="1414104903166" MODIFIED="1414104940622">
<node TEXT="inserts everything most recently consecutively killed, not just the most recent" ID="ID_31520775" CREATED="1414104803701" MODIFIED="1414104819855"/>
</node>
<node TEXT="replace yank with an earlier kill: M-y*" ID="ID_275935030" CREATED="1414104909171" MODIFIED="1414105044765">
<node TEXT="can be given positive and negative arguments" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_801309883" CREATED="1414105009682" MODIFIED="1414105020043"/>
<node TEXT="* following C-y" ID="ID_82803001" CREATED="1414105033032" MODIFIED="1414105036939"/>
<node TEXT="what it does" ID="ID_1515895196" CREATED="1414105020786" MODIFIED="1414105022213">
<node TEXT="C-y, then M-y consecutively until the desired yank replaces it" ID="ID_957890253" CREATED="1414104914250" MODIFIED="1414104931133"/>
<node TEXT="cycles back to the most recent" ID="ID_1641042670" CREATED="1414104967382" MODIFIED="1414104973354"/>
</node>
</node>
</node>
<node TEXT="set mark: C-&lt;SPC&gt;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_395265152" CREATED="1414103809838" MODIFIED="1414103826960">
<node TEXT="move cursor therefrom to create highlight" ID="ID_998038025" CREATED="1414103824125" MODIFIED="1414103835399"/>
</node>
<node TEXT="add newline after cursor: C-o" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1039062890" CREATED="1414181138302" MODIFIED="1414181157411">
<font BOLD="false"/>
</node>
<node TEXT=". see also &quot;rectangles&quot;" ID="ID_1296285108" CREATED="1414892091747" MODIFIED="1414892095919"/>
</node>
<node TEXT="rectangles" ID="ID_1388962674" CREATED="1414891386760" MODIFIED="1414891388027">
<node TEXT="https://www.gnu.org/software/emacs/manual/html_node/emacs/Rectangles.html" ID="ID_885372613" CREATED="1414892122100" MODIFIED="1414892122100" LINK="https://www.gnu.org/software/emacs/manual/html_node/emacs/Rectangles.html"/>
<node TEXT="C-x r k:   kill rect" ID="ID_1324814159" CREATED="1414891394863" MODIFIED="1414891475657">
<node TEXT="also saves it as last killed rectangle" ID="ID_114951669" CREATED="1414891429207" MODIFIED="1414891432834"/>
</node>
<node TEXT="C-x r y:   yank rect" ID="ID_1863029609" CREATED="1414891394863" MODIFIED="1414891487065">
<node TEXT="also saves it as last killed rectangle" ID="ID_1215020717" CREATED="1414891429207" MODIFIED="1414891432834"/>
</node>
<node TEXT="C-x r M-w: save as last killed rectangle" ID="ID_1284410716" CREATED="1414891416479" MODIFIED="1414891427874"/>
<node TEXT="C-x r d:   delete w/o kill-copy" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1831225779" CREATED="1414891449757" MODIFIED="1447707644238"/>
<node TEXT="C-x r o:   insert blanks" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1438252738" CREATED="1414181138302" MODIFIED="1447707642378"/>
<node TEXT="C-x r c:   replace with blanks" ID="ID_271353881" CREATED="1414891538893" MODIFIED="1414891546680"/>
<node TEXT="C-x r t string &lt;RET&gt;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_461665821" CREATED="1414892009603" MODIFIED="1447707632131">
<node ID="ID_808273245" CREATED="1414892047895" MODIFIED="1414892047895"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      replace with string
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="on each line" ID="ID_1429262133" CREATED="1414892021636" MODIFIED="1414892022839"/>
</node>
<node TEXT="C-x &lt;space&gt;: highlight as rectangle" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_169603297" CREATED="1414892073043" MODIFIED="1447707652890"/>
<node TEXT="M-x string-insert-rectangle &lt;RET&gt; string &lt;RET&gt;" ID="ID_860917634" CREATED="1414892033075" MODIFIED="1414892036111">
<node TEXT="insert string" ID="ID_621237979" CREATED="1414892047895" MODIFIED="1414892054040"/>
<node TEXT="on each line" ID="ID_13983847" CREATED="1414892021636" MODIFIED="1414892022839"/>
</node>
<node TEXT="M-x delete-whitespace-rectangle" ID="ID_92626320" CREATED="1414891997773" MODIFIED="1414891998216"/>
</node>
<node TEXT="search" ID="ID_143832913" CREATED="1414180166557" MODIFIED="1414180167896">
<node TEXT="tag find tag regexp" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_90582239" CREATED="1414214125281" MODIFIED="1414214147124"/>
<node TEXT="search" ID="ID_1025709553" CREATED="1414180227216" MODIFIED="1414180229043">
<node TEXT="C-{s|r}: search {forward | backward}" ID="ID_181034569" CREATED="1414180238911" MODIFIED="1414180260661"/>
<node TEXT="next: C-s" ID="ID_802955730" CREATED="1414180655121" MODIFIED="1414180670283"/>
<node TEXT="prev: &lt;DEL&gt;" LOCALIZED_STYLE_REF="default" ID="ID_857348863" CREATED="1414180666928" MODIFIED="1414180679113"/>
<node TEXT="terminate: &lt;RETURN&gt;" ID="ID_722972716" CREATED="1414180697989" MODIFIED="1414180703648"/>
<node TEXT="weird, hopefully ignorable" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1575791896" CREATED="1414180802287" MODIFIED="1414180808911">
<node TEXT="If you are in the middle of an incremental search and type &lt;DEL&gt;, the&#xa;search &quot;retreats&quot; to an earlier location.  If you type &lt;DEL&gt; just&#xa;after you had typed C-s to advance to the next occurrence of a search&#xa;string, the &lt;DEL&gt; moves the cursor back to an earlier occurrence.  If&#xa;there are no earlier occurrences, the &lt;DEL&gt; erases the last character&#xa;in the search string.  For instance, suppose you have typed &quot;c&quot;, to&#xa;search for the first occurrence of &quot;c&quot;.  Now if you type &quot;u&quot;, the&#xa;cursor will move to the first occurrence of &quot;cu&quot;.  Now type &lt;DEL&gt;.&#xa;This erases the &quot;u&quot; from the search string, and the cursor moves back&#xa;to the first occurrence of &quot;c&quot;." ID="ID_1993410016" CREATED="1414180809428" MODIFIED="1414180809954"/>
</node>
</node>
<node TEXT="search + replace" ID="ID_1781092557" CREATED="1414176245086" MODIFIED="1414180231746">
<node TEXT="M-x &quot;replace-string&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1481645959" CREATED="1414176252893" MODIFIED="1414178416045">
<node TEXT="seems only to involve what is after the cursor (or the highlight, if there is one)" ID="ID_730054927" CREATED="1414178417826" MODIFIED="1414178431036"/>
</node>
</node>
</node>
<node TEXT="cursor" ID="ID_195164666" CREATED="1414100800359" MODIFIED="1414100801402">
<node TEXT="by space or word" ID="ID_1397716444" CREATED="1414101181260" MODIFIED="1414101183357">
<node TEXT="single space" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_814090988" CREATED="1414100802004" MODIFIED="1414100977706">
<node TEXT="C-{b,f,p,n}" ID="ID_1095328056" CREATED="1414100809525" MODIFIED="1414100850806"/>
<node TEXT="back, forward" ID="ID_1642219673" CREATED="1414100817181" MODIFIED="1414100975118"/>
<node TEXT="uP, dowN = Prev, Next" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1342194659" CREATED="1414100975439" MODIFIED="1414101370182"/>
</node>
<node TEXT="whole word: M-{b,f}" ID="ID_1290184061" CREATED="1414101019002" MODIFIED="1414101190318"/>
</node>
<node TEXT="by line or sentence" ID="ID_1241057816" CREATED="1414101192153" MODIFIED="1414101194718">
<node TEXT="C-{a|e}" ID="ID_1877060495" CREATED="1414101233728" MODIFIED="1414101239891"/>
<node TEXT="M-{a|e}" ID="ID_1096344381" CREATED="1414101240125" MODIFIED="1414101245754"/>
</node>
<node TEXT="whole file" ID="ID_1399442982" CREATED="1414101426349" MODIFIED="1414101428290">
<node TEXT="M-{&lt;|&gt;}" ID="ID_704706878" CREATED="1414101428709" MODIFIED="1414101440873"/>
</node>
<node TEXT="kill from start of line to cursor : C0 Ck" ID="ID_523772443" CREATED="1447811387660" MODIFIED="1447811400979">
<node TEXT="0 = zero, not O as in Owl" ID="ID_1821171351" CREATED="1447811401856" MODIFIED="1447811411371"/>
</node>
</node>
<node TEXT="above: &quot;fundamental mode&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1584800941" CREATED="1414179079768" MODIFIED="1414179136908"/>
<node TEXT="other modes" ID="ID_89195363" CREATED="1414194069777" MODIFIED="1414194071976">
<font BOLD="true"/>
<node TEXT="text (human-readable)" ID="ID_818979378" CREATED="1414179154744" MODIFIED="1414179698066">
<node TEXT="M-x &quot;text-mode&quot;" ID="ID_470205625" CREATED="1414179161943" MODIFIED="1414179165634"/>
</node>
<node TEXT="Haskell-mode" ID="ID_806525581" CREATED="1414194062186" MODIFIED="1414194064693"/>
<node TEXT="Lisp" ID="ID_284156701" CREATED="1414100088044" MODIFIED="1414179694123">
<font BOLD="false"/>
<node TEXT="see Lisp/Emacs" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1061766179" CREATED="1414099209842" MODIFIED="1414100091615"/>
</node>
<node TEXT="above: major modes; below: minor modes" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1040140529" CREATED="1414179689024" MODIFIED="1414194096898"/>
<node TEXT="minor modes" ID="ID_1484383015" CREATED="1414179700936" MODIFIED="1414179703087">
<node TEXT="auto-fill" ID="ID_1454470836" CREATED="1414179682985" MODIFIED="1414179708818">
<node TEXT="why: to break lines between words" ID="ID_984367776" CREATED="1414179716309" MODIFIED="1414180098839"/>
<node TEXT="how" ID="ID_380357525" CREATED="1414180092276" MODIFIED="1414180092824">
<node TEXT="enter: M-x &quot;auto-fill-mode&quot;" ID="ID_758261889" CREATED="1414179727996" MODIFIED="1414180079224"/>
<node TEXT="re-fill a paragraph: M-q, from within it" ID="ID_1760745301" CREATED="1414180054159" MODIFIED="1414180089839"/>
</node>
</node>
</node>
</node>
<node TEXT="internalized" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1282302055" CREATED="1414182147522" MODIFIED="1414182150427">
<node TEXT="C = Control, M = alt" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_828133828" CREATED="1414099974406" MODIFIED="1414100096176"/>
<node TEXT="design principles" LOCALIZED_STYLE_REF="default" ID="ID_891370267" CREATED="1414101114650" MODIFIED="1414103991353">
<node TEXT="M for word-based operations, C for ones independent of words (e.g. line, column)" ID="ID_1702735032" CREATED="1414101126726" MODIFIED="1414101154384"/>
</node>
</node>
</node>
<node TEXT="read it" ID="ID_1494798228" CREATED="1414102081060" MODIFIED="1414891372363">
<node TEXT="announcements" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_232543657" CREATED="1414098320899" MODIFIED="1414102084948">
<node TEXT="will happen while typing, even absent evaluation" ID="ID_1558509380" CREATED="1414098323348" MODIFIED="1414098333493">
<node TEXT="e.g. &quot;that is not defined&quot;" ID="ID_631438704" CREATED="1414098333913" MODIFIED="1414098337549"/>
</node>
</node>
<node TEXT="commands" ID="ID_501940332" CREATED="1414102087738" MODIFIED="1414102090405">
<node TEXT="links in" ID="ID_1344283160" CREATED="1414105398751" MODIFIED="1414105400180"/>
<node TEXT="are displayed at bottom, in the &quot;minibuffer&quot;, at least if sufficiently complex" ID="ID_110691612" CREATED="1414102090681" MODIFIED="1414105395779"/>
</node>
<node TEXT="the mode line" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1484340815" CREATED="1414178626023" MODIFIED="1414178628320">
<node TEXT="indicates percentage of file above cursor" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_312443279" CREATED="1414178629143" MODIFIED="1414178677996">
<node TEXT="exceptions" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_302823333" CREATED="1414178678539" MODIFIED="1414178681299"/>
<node TEXT="If the top of the buffer is on the screen, it will say &quot;Top&quot; instead&#xa;of &quot; 0%&quot;.  If the bottom of the buffer is on the screen, it will say&#xa;&quot;Bot&quot;.  If you are looking at a buffer so small that all of it fits on&#xa;the screen, the mode line says &quot;All&quot;." ID="ID_1216294104" CREATED="1414178696081" MODIFIED="1414178696661"/>
</node>
<node TEXT="stars at right edge = &quot;unsaved changes&quot;" ID="ID_1335040161" CREATED="1414178836748" MODIFIED="1414178850302"/>
</node>
<node TEXT="&quot;dividing rows&quot;" ID="ID_1667895614" CREATED="1414634419537" MODIFIED="1414634423205">
<node TEXT=".= a term I am making up" ID="ID_1840581740" CREATED="1414634424602" MODIFIED="1414634429765"/>
<node TEXT="each describes the window immediately above itself" ID="ID_11019289" CREATED="1414634429961" MODIFIED="1414634440957"/>
</node>
</node>
<node TEXT="vocab" ID="ID_249171786" CREATED="1414101286731" MODIFIED="1414101287422">
<node TEXT="point = where the cursor is" ID="ID_141686959" CREATED="1414101287635" MODIFIED="1414104039888"/>
<node TEXT="cut/paste = kill/yank" ID="ID_665375125" CREATED="1414104343526" MODIFIED="1414104349329"/>
<node TEXT="kill &#x2260; delete" ID="ID_10797762" CREATED="1414103943378" MODIFIED="1414103953558">
<node TEXT="killed text can be reinserted" ID="ID_1299981340" CREATED="1414103954049" MODIFIED="1414103962492"/>
<node TEXT="deletions can be undone, though" ID="ID_1843994454" CREATED="1414103965224" MODIFIED="1414103970428"/>
</node>
<node TEXT="minibuffer" ID="ID_824562121" CREATED="1414105400601" MODIFIED="1414105403750">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1344283160" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
</node>
<node TEXT=".1/2" ID="ID_1653411854" CREATED="1329846883456" MODIFIED="1414634393726">
<node TEXT="1" ID="ID_1980974601" CREATED="1398300292078" MODIFIED="1398300292312">
<node TEXT="personal motivation" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1540289002" CREATED="1303318670619" MODIFIED="1398299593269">
<icon BUILTIN="yes"/>
<node TEXT="it does folding" ID="ID_23916000" CREATED="1301522215340" MODIFIED="1329505772364">
<font NAME="SansSerif" SIZE="10" BOLD="false" ITALIC="false"/>
</node>
<node TEXT="JEdit eats documents" ID="ID_337531952" CREATED="1301522222892" MODIFIED="1311539389551"/>
</node>
<node TEXT="candidates Emacs beats" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1071486470" CREATED="1303318673683" MODIFIED="1398299593266">
<node TEXT="both of which I also downloaded" ID="ID_1467186989" CREATED="1303318686746" MODIFIED="1337634513113" COLOR="#669900">
<font NAME="SansSerif" SIZE="10" BOLD="true" ITALIC="false"/>
</node>
<node TEXT="Komodo" ID="ID_1617747581" CREATED="1303318690050" MODIFIED="1311539389545"/>
<node TEXT="Eclipse" ID="ID_867151825" CREATED="1303318692098" MODIFIED="1311539389543"/>
</node>
<node TEXT="notes" ID="ID_752254746" CREATED="1329852968545" MODIFIED="1414634349854">
<font BOLD="true"/>
<node TEXT="notation" ID="ID_782849359" CREATED="1329852970825" MODIFIED="1329852972234" COLOR="#669900">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
<node TEXT="C = Ctrl" ID="ID_573652695" CREATED="1329852972577" MODIFIED="1329852994244"/>
<node TEXT="M = Alt/Opt" ID="ID_297412445" CREATED="1329852975545" MODIFIED="1329852997900"/>
</node>
<node TEXT="moving" ID="ID_1592092079" CREATED="1329852952457" MODIFIED="1329852954821">
<node TEXT="chars: C [b, f]" ID="ID_1842881364" CREATED="1329853323214" MODIFIED="1329861845026">
<node TEXT="forward/backward" ID="ID_1468996420" CREATED="1329854016585" MODIFIED="1329854016585"/>
<node TEXT="C-f, C-b" ID="ID_375810875" CREATED="1329853353709" MODIFIED="1329853356769"/>
</node>
<node TEXT="words: M [b, f]" ID="ID_444240620" CREATED="1329853564375" MODIFIED="1329861853762">
<node TEXT="forward/backward" ID="ID_906929500" CREATED="1329854023879" MODIFIED="1329854023879"/>
<node TEXT="M-f, M-b" ID="ID_651824253" CREATED="1329853573670" MODIFIED="1329853575931"/>
</node>
<node TEXT="lines: C [p, n, a, e]" ID="ID_398420409" CREATED="1329853311645" MODIFIED="1329861834267">
<node TEXT="prev, next" ID="ID_1968880783" CREATED="1329854000696" MODIFIED="1329854006172">
<node TEXT="C-p, C-n" ID="ID_173047500" CREATED="1329853319342" MODIFIED="1329853322578"/>
</node>
<node TEXT="to start or end" ID="ID_44936045" CREATED="1329854041599" MODIFIED="1329854049146">
<node TEXT="C-a, C-e" ID="ID_431877105" CREATED="1329854050982" MODIFIED="1329854053562"/>
</node>
</node>
<node TEXT="sentences: M [a, e]" ID="ID_464338667" CREATED="1329854025159" MODIFIED="1329861969607">
<node TEXT="parallels &quot;lines&quot;" ID="ID_376821195" CREATED="1329854070966" MODIFIED="1329854075122"/>
<node TEXT="M-a, M-e" ID="ID_839782603" CREATED="1329854050982" MODIFIED="1329861990462"/>
</node>
<node TEXT="screenfulls: [C, M] v" ID="ID_585347964" CREATED="1329853006272" MODIFIED="1329861895338">
<node TEXT="less hand movement req&apos;d -- faster than the Page buttons" ID="ID_1129165743" CREATED="1329853210034" MODIFIED="1329853227668" COLOR="#669900">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
</node>
<node TEXT="C-v" ID="ID_867981893" CREATED="1329852954961" MODIFIED="1329852966284"/>
<node TEXT="M-v" ID="ID_1455879356" CREATED="1329853010481" MODIFIED="1329853013868"/>
</node>
<node TEXT="whole document: M [&lt;. &gt;]" ID="ID_625701182" CREATED="1329854260744" MODIFIED="1329861883049">
<node TEXT="M-&lt;, M-&gt;" ID="ID_1435798288" CREATED="1329854267536" MODIFIED="1329854280747"/>
</node>
<node TEXT="center: C-l" ID="ID_1855049765" CREATED="1329853068110" MODIFIED="1329861908194">
<node TEXT="(that&apos;s an L, not a 1)" ID="ID_788005247" CREATED="1329853099621" MODIFIED="1329853101638" COLOR="#669900">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
</node>
<node TEXT="done once" ID="ID_515733051" CREATED="1329853160762" MODIFIED="1329853162254">
<node TEXT="Clear screen and redisplay all the text, moving the text around the cursor to the center of the screen." ID="ID_1577531589" CREATED="1329853079627" MODIFIED="1329853099086"/>
</node>
<node TEXT="done twice" ID="ID_140192019" CREATED="1329853163554" MODIFIED="1329853165070">
<node TEXT="the cursor and surrounding text are moved to the top of the screen" ID="ID_154183576" CREATED="1329853165274" MODIFIED="1329853180135"/>
</node>
</node>
</node>
<node TEXT="iterating a command" ID="ID_1428626507" CREATED="1329854414771" MODIFIED="1329854418663">
<node TEXT="Most Emacs commands accept a numeric argument; for most commands, this&#xa;serves as a repeat-count.  The way you give a command a repeat count&#xa;is by typing C-u and then the digits before you type the command.  If&#xa;you have a META (or EDIT or ALT) key, there is another, alternative way&#xa;to enter a numeric argument: type the digits while holding down the&#xa;META key.  We recommend learning the C-u method because it works on&#xa;any terminal." ID="ID_1635423897" CREATED="1329854420307" MODIFIED="1329854422482"/>
<node TEXT="For some commands the numerical argument is a boolean flag. In this case its value is ignored; only its presence matters." ID="ID_1484303832" CREATED="1329854793528" MODIFIED="1329854820339"/>
</node>
<node TEXT="&quot;abort&quot;?" ID="ID_748017321" CREATED="1329854827639" MODIFIED="1329854877074">
<node TEXT="C-g" ID="ID_1530102881" CREATED="1329854838998" MODIFIED="1329854840418">
<node TEXT="multiple uses" ID="ID_1709745935" CREATED="1329854902180" MODIFIED="1329862232468" COLOR="#669900">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
</node>
<node TEXT="&quot;stop safely&quot; if Emacs freezes" ID="ID_1696258716" CREATED="1329854877607" MODIFIED="1329854907016"/>
<node TEXT="abort a command being executed" ID="ID_771590974" CREATED="1329854851198" MODIFIED="1329854907944"/>
<node TEXT="erase a numerical input that was going to be prefixed to a command (see &quot;iterating a command&quot;)" ID="ID_1559365774" CREATED="1329854899540" MODIFIED="1329854940120"/>
</node>
<node TEXT="&lt;Esc&gt; 3 times" ID="ID_553228600" CREATED="1329862233059" MODIFIED="1329862237943">
<node TEXT="different but similar" ID="ID_1164027716" CREATED="1329862241891" MODIFIED="1329862246247"/>
<node TEXT="useful in particular for escaping a recursive editing window" ID="ID_1131907617" CREATED="1329862278890" MODIFIED="1329862288798">
<node TEXT="because C-g just cancels commands from within that window" ID="ID_1617021652" CREATED="1329862292953" MODIFIED="1329862304669"/>
</node>
</node>
</node>
<node TEXT="deleting &amp; killing" ID="ID_1069488053" CREATED="1329855620382" MODIFIED="1329856488072">
<node TEXT="notes" ID="ID_562399733" CREATED="1329856499204" MODIFIED="1329856986905" COLOR="#669900">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
<node TEXT="&quot;deleting&quot; = normal" ID="ID_852168544" CREATED="1329856503148" MODIFIED="1329856511415"/>
<node TEXT="&quot;killing&quot; = deleting with ability to recall elsewhere" ID="ID_1432805492" CREATED="1329856488996" MODIFIED="1329856498872"/>
<node TEXT="&quot;Delete&quot; and &quot;Backspace&quot; do the same thing" ID="ID_1282121476" CREATED="1329855622190" MODIFIED="1329856516672"/>
</node>
<node TEXT="delete" ID="ID_729326096" CREATED="1329856527563" MODIFIED="1329856529127">
<node TEXT="these can be changed to kills by adding a numerical argument" ID="ID_1250039222" CREATED="1329856583121" MODIFIED="1329856593457" COLOR="#669900">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
</node>
<node TEXT="char before cursor" ID="ID_975879826" CREATED="1329856124095" MODIFIED="1329856126947">
<node TEXT="&lt;Delback&gt;" ID="ID_751890994" CREATED="1329856127199" MODIFIED="1329856158010"/>
</node>
<node TEXT="char after cursor" ID="ID_819751994" CREATED="1329856117359" MODIFIED="1329856121123">
<node TEXT="C-d" ID="ID_45465388" CREATED="1329856121311" MODIFIED="1329856122315"/>
</node>
</node>
<node TEXT="kill" ID="ID_933251588" CREATED="1329856530779" MODIFIED="1329856531815">
<node TEXT="word before cursor" ID="ID_619543640" CREATED="1329856141111" MODIFIED="1329856145594">
<node TEXT="M-&lt;Delback&gt;" ID="ID_1437711696" CREATED="1329856145838" MODIFIED="1329856156098"/>
</node>
<node TEXT="word after cursor" ID="ID_1166257513" CREATED="1329856161790" MODIFIED="1329856165642">
<node TEXT="M-d" ID="ID_398311949" CREATED="1329856166398" MODIFIED="1329856167258"/>
</node>
<node TEXT="cursor to end of line" ID="ID_1433475683" CREATED="1329856169374" MODIFIED="1329856178249">
<node TEXT="C-k" ID="ID_389088599" CREATED="1329856180501" MODIFIED="1329856182433"/>
<node TEXT="a second time deletes the trailing newline" ID="ID_1586734333" CREATED="1329856675222" MODIFIED="1329856693294" COLOR="#996600">
<icon BUILTIN="password"/>
<font NAME="SansSerif" SIZE="10" BOLD="false" ITALIC="false"/>
</node>
</node>
<node TEXT="cursor to end of sentence" ID="ID_549522694" CREATED="1329856183357" MODIFIED="1329856189313">
<node TEXT="M-k" ID="ID_1626636321" CREATED="1329856189581" MODIFIED="1329856190769"/>
</node>
<node TEXT="highlight and delete" ID="ID_1566881462" CREATED="1329856368240" MODIFIED="1329856372971">
<node TEXT="in sequence" ID="ID_854286763" CREATED="1329856388487" MODIFIED="1329856390280" COLOR="#669900">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
</node>
<node TEXT="C-&lt;Space&gt; to set mark" ID="ID_340229773" CREATED="1329856373151" MODIFIED="1329856380643"/>
<node TEXT="move cursor to other end" ID="ID_561924004" CREATED="1329856380903" MODIFIED="1329856386027"/>
<node TEXT="C-w" ID="ID_536189326" CREATED="1329856386255" MODIFIED="1329856387723"/>
</node>
</node>
<node TEXT="yank" ID="ID_381316423" CREATED="1329856789067" MODIFIED="1329856790775">
<node TEXT="yank: C-y" ID="ID_869617982" CREATED="1329856829594" MODIFIED="1329857076014">
<node TEXT="insert last killed text at cursor" ID="ID_1822710479" CREATED="1329856891233" MODIFIED="1329856891233"/>
<node TEXT="if multiple things were killed in series, this replaces all of them" ID="ID_1254229656" CREATED="1329856891664" MODIFIED="1329856903787"/>
</node>
<node TEXT="earlier yank: M-y" ID="ID_617008896" CREATED="1329857065002" MODIFIED="1329857095582">
<node TEXT="to be called after C-y" ID="ID_667294533" CREATED="1329857089746" MODIFIED="1329857098470"/>
<node TEXT="replaces the yanked text with an earlier kill. can be repeated." ID="ID_329455213" CREATED="1329856966894" MODIFIED="1329857106231"/>
<node TEXT="do that enough, and the most recent kill will eventually cycle back around" ID="ID_1542104534" CREATED="1329857106529" MODIFIED="1329857106893"/>
</node>
</node>
</node>
<node TEXT="undo" ID="ID_393811716" CREATED="1329857183183" MODIFIED="1329857184683">
<node TEXT="C-/" ID="ID_540781744" CREATED="1329857471367" MODIFIED="1329857473131"/>
<node TEXT="alternatives" ID="ID_1088941205" CREATED="1329857430504" MODIFIED="1329857476762" COLOR="#18898b" STYLE="fork">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
<edge STYLE="bezier" COLOR="#808080" WIDTH="thin"/>
<node TEXT="C-_" ID="ID_1642460302" CREATED="1329857403673" MODIFIED="1329857405245"/>
<node TEXT="C-x, u" ID="ID_1742589917" CREATED="1329857185079" MODIFIED="1329857187171">
<node TEXT="possible on more keyboards" ID="ID_819460778" CREATED="1329857434792" MODIFIED="1329857490922"/>
</node>
</node>
</node>
<node TEXT="files" ID="ID_734949614" CREATED="1329857961968" MODIFIED="1329857963396">
<node TEXT="find a file" ID="ID_168474671" CREATED="1329858061005" MODIFIED="1329858064705">
<node TEXT="C-x C-f" ID="ID_85775964" CREATED="1329858065205" MODIFIED="1329858068825"/>
<node TEXT="then type filename at prompt" ID="ID_1545079516" CREATED="1329858339933" MODIFIED="1329858351521"/>
<node TEXT="if file doesn&apos;t yet exist" ID="ID_74904330" CREATED="1329858351764" MODIFIED="1329858368078" COLOR="#cc3300" STYLE="fork">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
<edge STYLE="bezier" COLOR="#808080" WIDTH="thin"/>
<node TEXT="Emacs will display a blank document to edit" ID="ID_1732599688" CREATED="1329858372948" MODIFIED="1329858387687"/>
<node TEXT="but the document still won&apos;t exist until saved" ID="ID_1847146199" CREATED="1329858387915" MODIFIED="1329858397975"/>
</node>
</node>
<node TEXT="save current buffer" ID="ID_439876113" CREATED="1329858405227" MODIFIED="1329859028029">
<node TEXT="C-x C-s" ID="ID_537374336" CREATED="1329858407059" MODIFIED="1329858410327"/>
</node>
<node TEXT="save some buffers" ID="ID_1900713619" CREATED="1329859022561" MODIFIED="1329859025813">
<node TEXT="C-x s" ID="ID_1759868224" CREATED="1329859030993" MODIFIED="1329859032844">
<node TEXT="no C- before second character" ID="ID_807042009" CREATED="1329859038368" MODIFIED="1329859042940"/>
</node>
<node TEXT="will aks about each" ID="ID_1739502420" CREATED="1329859053232" MODIFIED="1329859057156"/>
</node>
<node TEXT="list open buffers" ID="ID_238898490" CREATED="1329858504248" MODIFIED="1329858513668">
<node TEXT="there&apos;s one for each file being edited" ID="ID_339087119" CREATED="1329858514184" MODIFIED="1329858519257" COLOR="#669900">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
</node>
<node TEXT="C-x C-b" ID="ID_1306385452" CREATED="1329858521480" MODIFIED="1329858524852"/>
</node>
<node TEXT="switch buffer" ID="ID_726910201" CREATED="1329858834470" MODIFIED="1329858836170">
<node TEXT="C-x b" ID="ID_723426164" CREATED="1329858857294" MODIFIED="1329858860186">
<node TEXT="no C- before second character" ID="ID_841838046" CREATED="1329859038368" MODIFIED="1329859042940"/>
</node>
<node TEXT="to go to the default buffer, just press Return" ID="ID_545439288" CREATED="1329858947219" MODIFIED="1329858957567"/>
</node>
</node>
<node TEXT="infrequent commands" ID="ID_1876799762" CREATED="1329859507658" MODIFIED="1329859513286">
<node TEXT="two kinds" ID="ID_1389783636" CREATED="1329859533602" MODIFIED="1329859538110"/>
<node TEXT="moderately rare: C-x C-?" ID="ID_700720777" CREATED="1329859513450" MODIFIED="1329859541917">
<node TEXT="the ? is another character" ID="ID_28191969" CREATED="1329859520194" MODIFIED="1329859524510"/>
</node>
<node TEXT="rarest: M-x" ID="ID_1831490260" CREATED="1329859542265" MODIFIED="1329859551469">
<node TEXT="calls a prompt for the name of the command" ID="ID_722328805" CREATED="1329859547622" MODIFIED="1329859561429"/>
<node TEXT="use &quot;Tab&quot; to complete a partial name" ID="ID_705278455" CREATED="1329859561649" MODIFIED="1329859567973"/>
</node>
</node>
<node TEXT="autosave" ID="ID_1304384215" CREATED="1329859729268" MODIFIED="1329859733376">
<node TEXT="saves everything you&apos;re working on, with weird filenames" ID="ID_433664754" CREATED="1329859733580" MODIFIED="1329859748807"/>
<node TEXT="see tutorial for how to recover them, circa line 712" ID="ID_534818005" CREATED="1329859749052" MODIFIED="1329859956067"/>
</node>
<node TEXT="modes" ID="ID_1786667472" CREATED="1329860104953" MODIFIED="1329860106061">
<node TEXT="major &amp; minor modes" ID="ID_476913836" CREATED="1329860425928" MODIFIED="1329860429252">
<node TEXT="the idea" ID="ID_409121164" CREATED="1329860433584" MODIFIED="1329860434604">
<node TEXT="only one major mode at a time" ID="ID_1553798186" CREATED="1329860402928" MODIFIED="1329860412652"/>
<node TEXT="many minor modes possible at once" ID="ID_323366660" CREATED="1329860412864" MODIFIED="1329860422492"/>
</node>
<node TEXT="examples" ID="ID_497694773" CREATED="1329860436256" MODIFIED="1329860437307">
<node TEXT="major" ID="ID_1666933691" CREATED="1329860388281" MODIFIED="1329860391133">
<node TEXT="Fundamental" ID="ID_905956420" CREATED="1329860115313" MODIFIED="1329860116725"/>
<node TEXT="Text" ID="ID_552659567" CREATED="1329860116937" MODIFIED="1329860117717"/>
<node TEXT="Lisp" ID="ID_156304011" CREATED="1329860117961" MODIFIED="1329860119157"/>
</node>
<node TEXT="minor" ID="ID_544244728" CREATED="1329860400993" MODIFIED="1329860401900">
<node TEXT="auto-fill" ID="ID_1677227889" CREATED="1329860440951" MODIFIED="1329860442723">
<node TEXT="makes text wrap between words" ID="ID_321466453" CREATED="1329860456055" MODIFIED="1329860464955"/>
</node>
</node>
</node>
</node>
<node TEXT="to change" ID="ID_352356579" CREATED="1329860123065" MODIFIED="1329860124805">
<node TEXT="M-x text-mode" ID="ID_455461728" CREATED="1329860125817" MODIFIED="1329860128700"/>
</node>
<node TEXT="to view documentation" ID="ID_792459917" CREATED="1329860192870" MODIFIED="1329860196402">
<node TEXT="C-h m" ID="ID_1038610099" CREATED="1329860196646" MODIFIED="1329860198218"/>
</node>
</node>
<node TEXT="search" ID="ID_1242894368" CREATED="1329860803005" MODIFIED="1329860803953">
<node TEXT="C-s, C-r" ID="ID_1544674133" CREATED="1329860834636" MODIFIED="1329860845448">
<node TEXT="forward/reverse" ID="ID_1645920904" CREATED="1329860845916" MODIFIED="1329860849567"/>
<node TEXT="&lt;Delback&gt;" ID="ID_907583103" CREATED="1329860931593" MODIFIED="1329860938597">
<node TEXT="during a search, this iterates backwards through the search results" ID="ID_896273796" CREATED="1329860934457" MODIFIED="1329860961028"/>
</node>
</node>
</node>
<node TEXT="windowing" ID="ID_144108403" CREATED="1329861344293" MODIFIED="1329861354401">
<node TEXT="terms" ID="ID_712600395" CREATED="1329862027393" MODIFIED="1329862030434" COLOR="#669900">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
<node TEXT="frame = Mac-level window" ID="ID_572290699" CREATED="1329862047273" MODIFIED="1329862051220"/>
<node TEXT="window = Emacs-level window" ID="ID_1128039991" CREATED="1329862030921" MODIFIED="1329862064252"/>
</node>
<node TEXT="windows" ID="ID_78224359" CREATED="1329862138622" MODIFIED="1329862140146">
<node TEXT="close all other windows" ID="ID_498762240" CREATED="1329855122253" MODIFIED="1329855127569">
<node TEXT="C-x 1" ID="ID_1027416199" CREATED="1329855114126" MODIFIED="1329855119314"/>
</node>
<node TEXT="two windows onto same file" ID="ID_766795415" CREATED="1329861358845" MODIFIED="1329861366112">
<node TEXT="create split" ID="ID_112785771" CREATED="1329861452186" MODIFIED="1329861454390">
<node TEXT="C-x 2" ID="ID_1819878129" CREATED="1329861444794" MODIFIED="1329861446486"/>
</node>
<node TEXT="scroll other window" ID="ID_1432530418" CREATED="1329861464081" MODIFIED="1329861509708">
<node TEXT="C-M-v" ID="ID_1055355568" CREATED="1329861466969" MODIFIED="1329861473325"/>
</node>
<node TEXT="move cursor to Other window" ID="ID_1057964031" CREATED="1329861477249" MODIFIED="1329861503126">
<node TEXT="C-x o" ID="ID_1893208817" CREATED="1329861482249" MODIFIED="1329861747431"/>
</node>
</node>
<node TEXT="two windows onto distinct files" ID="ID_1735872431" CREATED="1329861627165" MODIFIED="1329861631777">
<node TEXT="open second window as above" ID="ID_92451957" CREATED="1329861631981" MODIFIED="1329861636417"/>
<node TEXT="then open a new file in one of them" ID="ID_1707077835" CREATED="1329861636645" MODIFIED="1329861641992"/>
</node>
</node>
<node TEXT="frames" ID="ID_842195068" CREATED="1329862141510" MODIFIED="1329862142994">
<node TEXT="M-x make-frame" ID="ID_1725144525" CREATED="1329862143366" MODIFIED="1329862149882"/>
<node TEXT="M-x delete-frame" ID="ID_1421597480" CREATED="1329862143366" MODIFIED="1329862153545"/>
</node>
<node TEXT="quit, suspend" ID="ID_824219813" CREATED="1329859193388" MODIFIED="1329859290573">
<node TEXT="quit" ID="ID_80235750" CREATED="1329859291825" MODIFIED="1329859293733">
<node TEXT="C-x C-c" ID="ID_1007031143" CREATED="1329859201116" MODIFIED="1329859203503"/>
</node>
<node TEXT="suspend" ID="ID_39326938" CREATED="1329859284409" MODIFIED="1329859331354" COLOR="#18898b" STYLE="fork">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
<edge STYLE="bezier" COLOR="#808080" WIDTH="thin"/>
<node TEXT="C-z" ID="ID_52893063" CREATED="1329859296049" MODIFIED="1329859311900"/>
<node TEXT="for use in single-application shell environments" ID="ID_340527913" CREATED="1329859327264" MODIFIED="1329859366916"/>
<node TEXT="see tutorial, under &quot;Extending the command set&quot;" ID="ID_1255574026" CREATED="1329859312232" MODIFIED="1329859326844"/>
</node>
</node>
</node>
<node TEXT="help" ID="ID_233256968" CREATED="1329862347128" MODIFIED="1329862348052">
<node TEXT="more options left uncopied; see tutorial" ID="ID_1490061921" CREATED="1329862608720" MODIFIED="1329862620692" COLOR="#669900">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
</node>
<node TEXT="C-h character" ID="ID_66060032" CREATED="1329862348224" MODIFIED="1329862524071">
<node TEXT="various choices for character" ID="ID_1927785564" CREATED="1329862511883" MODIFIED="1329862519711"/>
<node TEXT="use character &quot;?&quot; for a list of other possibilities" ID="ID_579406029" CREATED="1329862519915" MODIFIED="1329862532806"/>
</node>
<node TEXT="C-h c command-name" ID="ID_1658782029" CREATED="1329862533602" MODIFIED="1329862537966">
<node TEXT="probably the most often used" ID="ID_1553972833" CREATED="1329862539194" MODIFIED="1329862553598"/>
</node>
<node TEXT="C-h f function" ID="ID_841082581" CREATED="1329862564449" MODIFIED="1329862567637"/>
</node>
<node TEXT="didn&apos;t understand" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_800215360" CREATED="1329860719623" MODIFIED="1441968465945">
<node TEXT="the part about margins" ID="ID_906796024" CREATED="1329860750030" MODIFIED="1329860753090">
<node TEXT="C-x f" ID="ID_602605251" CREATED="1329860758726" MODIFIED="1329860760370"/>
<node TEXT="line 816" ID="ID_594085576" CREATED="1329860765166" MODIFIED="1329860769858"/>
</node>
</node>
</node>
<node TEXT="next" ID="ID_1402509466" CREATED="1329863127489" MODIFIED="1329863128485">
<node TEXT="get folding working" ID="ID_463906002" CREATED="1329867321508" MODIFIED="1329867324447">
<node TEXT="The minor mode seems like what I want, but I think I&apos;ll have to learn the major mode because the minor mode expects me to know that." ID="ID_1985906687" CREATED="1329867362170" MODIFIED="1329867396776" COLOR="#669900">
<font NAME="SansSerif" SIZE="10" BOLD="true"/>
</node>
<node TEXT="major mode" ID="ID_529895151" CREATED="1329867353762" MODIFIED="1329867355077">
<node TEXT="http://www.emacswiki.org/emacs/OutlineMode" ID="ID_1496427229" CREATED="1329867346807" MODIFIED="1329867346807" LINK="http://www.emacswiki.org/emacs/OutlineMode"/>
</node>
<node TEXT="minor mode" ID="ID_1791761428" CREATED="1329867350363" MODIFIED="1329867351957">
<node TEXT="http://www.emacswiki.org/emacs/OutlineMinorMode" ID="ID_639204127" CREATED="1329867342565" MODIFIED="1329867342565" LINK="http://www.emacswiki.org/emacs/OutlineMinorMode"/>
</node>
</node>
<node TEXT="check out the &quot;Guided Tour&quot;" ID="ID_1656380448" CREATED="1329863129417" MODIFIED="1329863137885">
<node TEXT="http://www.gnu.org/software/emacs/tour/" ID="ID_1688491012" CREATED="1329863128788" MODIFIED="1329863128788" LINK="http://www.gnu.org/software/emacs/tour/"/>
</node>
</node>
<node TEXT="it would be helpful if the cursor was a different color" ID="ID_523884960" CREATED="1329854142339" MODIFIED="1329854150031"/>
<node TEXT="things it works with" ID="ID_296637545" CREATED="1329862895344" MODIFIED="1329862898444">
<node TEXT="GDB" ID="ID_405844563" CREATED="1329862898744" MODIFIED="1329862899652">
<node TEXT="Gnu Debugger" ID="ID_1358674057" CREATED="1329862899943" MODIFIED="1329862902523"/>
</node>
</node>
</node>
<node TEXT="2" ID="ID_1700494229" CREATED="1374040159445" MODIFIED="1398300294024">
<node TEXT="next" ID="ID_1008875637" CREATED="1374041412994" MODIFIED="1374041413708">
<node TEXT="http://www.gnu.org/software/emacs/tour/" ID="ID_784505453" CREATED="1374041405336" MODIFIED="1374041405336" LINK="http://www.gnu.org/software/emacs/tour/"/>
</node>
<node TEXT="notes" ID="ID_783641722" CREATED="1374041414673" MODIFIED="1374041416293">
<node TEXT="key notation" ID="ID_787746689" CREATED="1374040174036" MODIFIED="1374040188502">
<node TEXT="M = escape" ID="ID_1151540762" CREATED="1374040188668" MODIFIED="1374040193471"/>
<node TEXT="C = ctrl" ID="ID_205125522" CREATED="1374040193675" MODIFIED="1374040196855"/>
</node>
<node TEXT="shortcuts" ID="ID_1653146306" CREATED="1374040618264" MODIFIED="1374040619451">
<node TEXT="http://www.readability.com/articles/gv0ajnn3" ID="ID_660900189" CREATED="1374040619784" MODIFIED="1374040619784" LINK="http://www.readability.com/articles/gv0ajnn3"/>
<node TEXT="surprisingly possible" ID="ID_1302955787" CREATED="1374040665599" MODIFIED="1374040669946">
<node TEXT="&quot;Show all commands containing string in their name&quot;" ID="ID_900229943" CREATED="1374040670439" MODIFIED="1374040673033">
<node TEXT="http://www.readability.com/articles/gv0ajnn3" ID="ID_1452919637" CREATED="1374040619784" MODIFIED="1374040619784" LINK="http://www.readability.com/articles/gv0ajnn3"/>
</node>
<node TEXT="Repeat a command n times" ID="ID_407850127" CREATED="1374040687550" MODIFIED="1374040692689">
<node TEXT="http://www.readability.com/articles/gv0ajnn3" ID="ID_1621320696" CREATED="1374040619784" MODIFIED="1374040619784" LINK="http://www.readability.com/articles/gv0ajnn3"/>
<node TEXT="&quot;Used before a command, repeats it n times (same as C-u n)&quot;" ID="ID_1452120637" CREATED="1374040693317" MODIFIED="1374040694689"/>
</node>
<node TEXT="Swap this and previous character." ID="ID_570698556" CREATED="1374040917183" MODIFIED="1374040921105"/>
<node TEXT="Swap this and next word." ID="ID_1185468918" CREATED="1374041048844" MODIFIED="1374041056343">
<node TEXT="&quot;Reverse words around point&quot;" ID="ID_818870435" CREATED="1374041056524" MODIFIED="1374041059303"/>
</node>
<node TEXT="Collapse whitespace around point" ID="ID_733359056" CREATED="1374041111562" MODIFIED="1374041118709">
<node TEXT="&quot;Close up all blank lines above and below point&quot;" ID="ID_625848055" CREATED="1374041119001" MODIFIED="1374041120101"/>
</node>
<node TEXT="&quot;Sentence Operations&quot;" ID="ID_1979720663" CREATED="1374041189928" MODIFIED="1374041191923"/>
<node TEXT="&quot;Paragraph Operations&quot;" ID="ID_1505706638" CREATED="1374041201592" MODIFIED="1374041205163"/>
<node TEXT="&quot;Screen Operations&quot;" ID="ID_1388200738" CREATED="1374041218943" MODIFIED="1374041220194"/>
<node TEXT="&quot;Page Operations&quot;" ID="ID_1862863323" CREATED="1374041244662" MODIFIED="1374041245913"/>
<node TEXT="Center screen" ID="ID_1391300521" CREATED="1374041229526" MODIFIED="1374041231450">
<node TEXT="&quot;Redisplay current screen and center point&quot;" ID="ID_1363673332" CREATED="1374041231775" MODIFIED="1374041232986"/>
</node>
<node TEXT="&quot;Region Operations&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_191586293" CREATED="1374041288053" MODIFIED="1374041289879">
<node TEXT="region of screen between point and mark" ID="ID_1690618760" CREATED="1374041290533" MODIFIED="1374041296056"/>
</node>
</node>
<node TEXT="might want to search for" ID="ID_1864353270" CREATED="1374040959903" MODIFIED="1374040974897">
<node TEXT="&quot;Move point one word to the left&quot;" ID="ID_708363592" CREATED="1374040975830" MODIFIED="1374040985833"/>
<node TEXT="&quot;Delete one word to the&quot;" ID="ID_562747377" CREATED="1374041000933" MODIFIED="1374041002000"/>
<node TEXT="&quot;beginning of this line&quot;" ID="ID_900928528" CREATED="1374041080643" MODIFIED="1374041082102"/>
<node TEXT="&quot;Open up blank line at point&quot;" ID="ID_1629737881" CREATED="1374041086723" MODIFIED="1374041087718"/>
<node TEXT="&quot;Delete from point to end of line&quot;" ID="ID_721711984" CREATED="1374041131194" MODIFIED="1374041133013"/>
<node TEXT="&quot;split screen&quot;" ID="ID_719175294" CREATED="1374041343787" MODIFIED="1374041358942"/>
</node>
</node>
<node TEXT="to change environment" ID="ID_1977287822" CREATED="1374040212523" MODIFIED="1374040308985">
<node TEXT="remove menu bar" ID="ID_1749461559" CREATED="1374040216219" MODIFIED="1374040283549">
<node TEXT="live, this session only" ID="ID_1554146233" CREATED="1374040311224" MODIFIED="1374040339291">
<node TEXT="Esc-X menu-bar-mode" ID="ID_1428094194" CREATED="1374040220307" MODIFIED="1374040220518"/>
</node>
<node TEXT="for future sessions" ID="ID_440178161" CREATED="1374040312944" MODIFIED="1374040347627">
<node TEXT="edit ~/.emacs" ID="ID_268286153" CREATED="1374040372382" MODIFIED="1374040380841"/>
<node TEXT="add this" ID="ID_1482310866" CREATED="1374040381111" MODIFIED="1374040383594">
<node TEXT="(menu-bar-mode nil)" ID="ID_123849858" CREATED="1374040389054" MODIFIED="1374040389481"/>
</node>
</node>
</node>
</node>
<node TEXT="vocab" ID="ID_515140405" CREATED="1374040430163" MODIFIED="1374040431048">
<node TEXT="point" ID="ID_666884677" CREATED="1374040431892" MODIFIED="1374040432504">
<node TEXT="cursor position in buffer" ID="ID_1466277039" CREATED="1374040434037" MODIFIED="1374040439968"/>
</node>
<node TEXT="mark" ID="ID_177093545" CREATED="1374040448572" MODIFIED="1374040449456">
<node TEXT="invisible text marker in the file" ID="ID_1539392473" CREATED="1374040449980" MODIFIED="1374040452151"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="define a shortcut" ID="ID_1709110085" CREATED="1417937530323" MODIFIED="1417937532879">
<node TEXT="http://www.emacswiki.org/emacs/EmacsLispMode" ID="ID_788143078" CREATED="1417937552049" MODIFIED="1417937552049" LINK="http://www.emacswiki.org/emacs/EmacsLispMode"/>
<node TEXT="(define-key flyspell-mode-map &quot;\M-\t&quot; nil)" ID="ID_952161789" CREATED="1417937533315" MODIFIED="1417937554718"/>
</node>
<node TEXT="more swap commands" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1742527121" CREATED="1454466198003" MODIFIED="1454971391627">
<node TEXT="https://github.com/magnars/expand-region.el" ID="ID_1363696170" CREATED="1454466250171" MODIFIED="1454466250171" LINK="https://github.com/magnars/expand-region.el"/>
</node>
<node TEXT="Ctrl-I: dup leading space from prev line" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1525262198" CREATED="1454266978959" MODIFIED="1454971489525">
<font BOLD="false"/>
<node TEXT="close! but it&apos;s tabs" ID="ID_447203442" CREATED="1454459767909" MODIFIED="1454459772775"/>
</node>
</node>
<node TEXT="&amp; emacs haskell mode" ID="ID_1116620833" CREATED="1443926800174" MODIFIED="1445329587709">
<node TEXT="inferior-haskell-send-command" ID="ID_472467863" CREATED="1443926814284" MODIFIED="1443926814284"/>
</node>
<node TEXT="? Superdirt" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1226869468" CREATED="1454566376357" MODIFIED="1454566379631"/>
<node TEXT="Dirt" ID="ID_550072709" CREATED="1440655384921" MODIFIED="1442301955290">
<node TEXT="freq folders" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_167727076" CREATED="1454552305989" MODIFIED="1454552311742">
<node TEXT="bd" ID="ID_437744155" CREATED="1454552313119" MODIFIED="1454552313567">
<node TEXT="3: muffled" ID="ID_442371531" CREATED="1454552314180" MODIFIED="1454552402656"/>
</node>
<node TEXT="sn" LOCALIZED_STYLE_REF="default" ID="ID_701303014" CREATED="1454552250563" MODIFIED="1454552329995">
<node TEXT="3:sharp" ID="ID_711573674" CREATED="1454552253578" MODIFIED="1454552260405"/>
</node>
<node TEXT="hh" ID="ID_1126438941" CREATED="1454552391645" MODIFIED="1454552392871">
<node TEXT="3: woosh(vinyl)" ID="ID_1636076808" CREATED="1454552393463" MODIFIED="1454552412109"/>
</node>
<node TEXT="hc" ID="ID_1552046168" CREATED="1454557219458" MODIFIED="1454557220337">
<node TEXT="6: clipped, brief" ID="ID_1109190798" CREATED="1454557220939" MODIFIED="1454557234178"/>
</node>
<node TEXT="feelfx" LOCALIZED_STYLE_REF="default" ID="ID_1649848762" CREATED="1440662081739" MODIFIED="1454557168754">
<node TEXT="0 hi drone, 2 low drone" ID="ID_585856265" CREATED="1454557126180" MODIFIED="1454557155989"/>
</node>
</node>
<node TEXT="good samples, unlearned" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1082551649" CREATED="1459449921314" MODIFIED="1459449925848">
<node TEXT="ab:2 : cymbal rim, ghost" LOCALIZED_STYLE_REF="default" ID="ID_283463777" CREATED="1462420904207" MODIFIED="1462420927616"/>
<node TEXT="short 0 ~ bleep, softer" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_454306166" CREATED="1459450180197" MODIFIED="1459450189066"/>
<node TEXT="short 1 = snare" ID="ID_742108673" CREATED="1459450204098" MODIFIED="1459450207898"/>
<node TEXT="short:2 = short ringy snare" ID="ID_1370719402" CREATED="1459449926746" MODIFIED="1459449938483"/>
<node TEXT="short:3,4 = snare, strings off" ID="ID_1013330469" CREATED="1459450090534" MODIFIED="1459450114123"/>
</node>
<node TEXT="samples by folder" LOCALIZED_STYLE_REF="default" ID="ID_96697644" CREATED="1440706498195" MODIFIED="1442302748482">
<node TEXT="1" ID="ID_812502899" CREATED="1440706476380" MODIFIED="1440706476791">
<node TEXT="bd" ID="ID_273407036" CREATED="1440655393410" MODIFIED="1440655394156"/>
<node TEXT="ch = electronic snareish" ID="ID_1875414370" CREATED="1440655836496" MODIFIED="1440655848164"/>
<node TEXT="cl (cold lettuce) = high electric woodblock" ID="ID_63509699" CREATED="1440655858399" MODIFIED="1440655871473"/>
<node TEXT="* bend = like crunching leaves" ID="ID_697971535" CREATED="1440660327967" MODIFIED="1440660336993"/>
<node TEXT="* bleep:4 = high ?square wave, hospital-ish" ID="ID_139984902" CREATED="1440660370485" MODIFIED="1440660523951"/>
<node TEXT="* bleep:1 = ringy ghost machine" ID="ID_1022458591" CREATED="1440660603549" MODIFIED="1440660710744"/>
<node TEXT="bottle = high percussion, varied" ID="ID_1091575203" CREATED="1440660776783" MODIFIED="1440660894083"/>
<node TEXT="can = percussion, varied" ID="ID_1346148743" CREATED="1440660894812" MODIFIED="1440660899655"/>
<node TEXT="cosmicg: varied, noisy electronic" ID="ID_1161677217" CREATED="1440661067550" MODIFIED="1440661074521"/>
<node TEXT="* cr = crash" ID="ID_954934347" CREATED="1440661103245" MODIFIED="1440661106800"/>
<node TEXT="* dork2 = mult inharmonic vox" ID="ID_851022141" CREATED="1440661339916" MODIFIED="1440661352336"/>
<node TEXT="dr = diverse drums" ID="ID_1472716643" CREATED="1440661555366" MODIFIED="1440661558049"/>
<node TEXT="* drum:5 = kick + cymbal" ID="ID_151053890" CREATED="1440661718495" MODIFIED="1440661747354"/>
<node TEXT="* f = violinish" ID="ID_1005727988" CREATED="1440662017413" MODIFIED="1440662020777"/>
<node TEXT="feel = percussive, diverse" ID="ID_844725388" CREATED="1440662057941" MODIFIED="1440662062792"/>
<node TEXT="* fire" ID="ID_688334242" CREATED="1440662118531" MODIFIED="1440662119606"/>
<node TEXT="flick = 2 buzzes and a lot of echoey buckets" ID="ID_1257507219" CREATED="1440662154546" MODIFIED="1440662167860"/>
<node TEXT="foo = breaks" ID="ID_1975147896" CREATED="1440662212208" MODIFIED="1440662214355"/>
</node>
<node TEXT="2" ID="ID_1145296467" CREATED="1440706481019" MODIFIED="1440706481358">
<node TEXT="future = some good rubber bass" ID="ID_37586831" CREATED="1440662248645" MODIFIED="1440662252274"/>
<node TEXT="** gab = saturated ringy percussive" ID="ID_1459187855" CREATED="1440662273733" MODIFIED="1440662284873"/>
<node TEXT="glasstap = 2 taps of &amp; 1 breaking of glass, all quiet" ID="ID_1533587408" CREATED="1440662316468" MODIFIED="1440662342902"/>
<node TEXT="glitch &amp; glitch2 = the last sound of each is a cool saturated noise hit" ID="ID_1826446163" CREATED="1440662398409" MODIFIED="1440662409925"/>
<node TEXT="gretsch = an acoustic kit" ID="ID_1762147107" CREATED="1440662431376" MODIFIED="1440662441718"/>
<node TEXT="h = a small child" ID="ID_1325187035" CREATED="1440662455495" MODIFIED="1440662458194"/>
<node TEXT="haw = fighty" ID="ID_1999245636" CREATED="1440662497766" MODIFIED="1440662514065"/>
<node TEXT="hit = weird electric ringy" ID="ID_1544169643" CREATED="1440662611243" MODIFIED="1440662618028"/>
<node TEXT="if ~ gab" ID="ID_119395325" CREATED="1440662751151" MODIFIED="1440662753523"/>
<node TEXT="* industrial = weird, unpitched" ID="ID_555588965" CREATED="1440662830966" MODIFIED="1440662845637"/>
<node TEXT="* insect" ID="ID_1780403633" CREATED="1440662860894" MODIFIED="1440662862954"/>
<node TEXT="* invaders = weird" ID="ID_1689436700" CREATED="1440662903245" MODIFIED="1440662909432"/>
<node TEXT="* invaders 3, 10 = giant mech" ID="ID_1575303133" CREATED="1440662918245" MODIFIED="1440662950667"/>
<node TEXT="* jungbass = brief ringy bass" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_852127637" CREATED="1440662997731" MODIFIED="1445052411141"/>
<node TEXT="* koy = vox, low" ID="ID_58231821" CREATED="1440663076506" MODIFIED="1440663080117"/>
<node TEXT="latibro = sustained, various pitches" ID="ID_759621819" CREATED="1440663131329" MODIFIED="1440663138212"/>
<node TEXT="made2 = sustained, squonky" ID="ID_1354157187" CREATED="1440663214088" MODIFIED="1440663221611"/>
<node TEXT="* metal = high, ringy" ID="ID_1018829769" CREATED="1440663253143" MODIFIED="1440663259650"/>
<node TEXT="moan" ID="ID_261485566" CREATED="1440663281478" MODIFIED="1440663285233">
<node TEXT="is female" ID="ID_501228956" CREATED="1440663290406" MODIFIED="1440663292537"/>
</node>
<node TEXT="monsterb:4 = human growl" ID="ID_994463270" CREATED="1440663337837" MODIFIED="1440663347425"/>
</node>
<node TEXT="3" ID="ID_1340210667" CREATED="1440706486275" MODIFIED="1440706486558">
<node TEXT="* moog = thick sus" ID="ID_1169979042" CREATED="1440663376421" MODIFIED="1440663385280"/>
<node TEXT="mp3 = 2 noise, 2 pitched noise" ID="ID_39532213" CREATED="1440663427444" MODIFIED="1440663434791"/>
<node TEXT="ht, lt, mt" ID="ID_1343998131" CREATED="1440663473274" MODIFIED="1440663475278"/>
<node TEXT="mute = trumpet" ID="ID_8805693" CREATED="1440663500842" MODIFIED="1440663502765"/>
<node TEXT="notes &amp; newnotes = sinus" ID="ID_1926101488" CREATED="1440663549962" MODIFIED="1440663616392"/>
<node TEXT="noise2 = some good ones; white" ID="ID_1812206494" CREATED="1440663588723" MODIFIED="1440663598072"/>
<node TEXT="numbers = female, digits" ID="ID_164396633" CREATED="1440663633271" MODIFIED="1440663638859"/>
<node TEXT="oc = open hat?" ID="ID_1019910205" CREATED="1440663667239" MODIFIED="1440663670682"/>
<node TEXT="odx = diverse" ID="ID_1237009383" CREATED="1440663683327" MODIFIED="1440663685610"/>
<node TEXT="off = clippy square" ID="ID_1032898868" CREATED="1440663693831" MODIFIED="1440663705150"/>
<node TEXT="* pad 0 = many voice, roughly same pitch" ID="ID_102085735" CREATED="1440663735190" MODIFIED="1440663748978"/>
<node TEXT="* padlong" ID="ID_483890651" CREATED="1440663783341" MODIFIED="1440663786384"/>
<node TEXT="pebbles = long gravel kicking sample" ID="ID_183763221" CREATED="1440663812796" MODIFIED="1440663818592"/>
<node TEXT="perc = diverse" ID="ID_1602510272" CREATED="1440663840596" MODIFIED="1440663842480"/>
<node TEXT="peri = harsh" ID="ID_593068931" CREATED="1440663884308" MODIFIED="1440663886935"/>
<node TEXT="pluck = cello" ID="ID_347393756" CREATED="1440663922347" MODIFIED="1440663947455"/>
<node TEXT="* print" ID="ID_1311260219" CREATED="1440663987961" MODIFIED="1440663989045"/>
<node TEXT="* proc:1 = gritty pitched" ID="ID_856406076" CREATED="1440664038649" MODIFIED="1440664048484"/>
<node TEXT="rave = party-ish vox" ID="ID_1177359131" CREATED="1440664188934" MODIFIED="1440664192633"/>
<node TEXT="rave2:3 = buzz" ID="ID_1520172788" CREATED="1440664223261" MODIFIED="1440664228625"/>
<node TEXT="* sax" ID="ID_1775718194" CREATED="1440664257148" MODIFIED="1440664259293"/>
</node>
<node TEXT="4" ID="ID_139890391" CREATED="1440706491276" MODIFIED="1440706491974">
<node TEXT="* seawolf = attack + noise decay, echoey" ID="ID_800498039" CREATED="1440664288444" MODIFIED="1440664306106"/>
<node TEXT="sequential = diverse electric perc" ID="ID_712902850" CREATED="1440664327075" MODIFIED="1440664333486"/>
<node TEXT="sf= diverse electric perc" ID="ID_127493500" CREATED="1440664327075" MODIFIED="1440664374445"/>
<node TEXT="* sheffield = swarm" ID="ID_964004213" CREATED="1440664388193" MODIFIED="1440664402908"/>
<node TEXT="short = div elec perc" ID="ID_1386039764" CREATED="1440664419393" MODIFIED="1440664422972"/>
<node TEXT="* sid = pitched | perc, various" ID="ID_1742996883" CREATED="1440664443464" MODIFIED="1440664466520"/>
<node TEXT="** sine" ID="ID_782460819" CREATED="1440664498807" MODIFIED="1440664500483"/>
<node TEXT="sitar" ID="ID_561961115" CREATED="1440664532998" MODIFIED="1440664533810"/>
<node TEXT="speechless = funny vox" ID="ID_942087478" CREATED="1440664627660" MODIFIED="1440664637000"/>
<node TEXT="stab = ballsy, gritty pitched" ID="ID_1288458304" CREATED="1440664684043" MODIFIED="1440664691534"/>
<node TEXT="* subroc3d = cool sus elec" ID="ID_1445917279" CREATED="1440664762353" MODIFIED="1440664773460"/>
<node TEXT="sugar = funny" ID="ID_1958994033" CREATED="1440664826712" MODIFIED="1440664828755"/>
<node TEXT="* tabla" ID="ID_108897303" CREATED="1440664850239" MODIFIED="1440664851755"/>
<node TEXT="tacscan = a lot of flight (airplane) noises, other cool noises" ID="ID_3265974" CREATED="1440664933613" MODIFIED="1440664963084"/>
<node TEXT="* tink = delicate pitched" ID="ID_752385905" CREATED="1440664994708" MODIFIED="1440665013546"/>
<node TEXT="* tok = rubbery perc" ID="ID_1084810931" CREATED="1440665006781" MODIFIED="1440665011450"/>
<node TEXT="* toys" ID="ID_768287672" CREATED="1440665038803" MODIFIED="1440665040390"/>
<node TEXT="* trump(et)" ID="ID_709642862" CREATED="1440665056707" MODIFIED="1440665058982"/>
<node TEXT="* wind = elec wind" ID="ID_269860167" CREATED="1440665108482" MODIFIED="1440665111549"/>
<node TEXT="* wobble = deep rumble" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1476877927" CREATED="1440665118977" MODIFIED="1458532549510"/>
</node>
</node>
<node TEXT="want" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1848891015" CREATED="1454564063501" MODIFIED="1454564078694">
<node TEXT="flute" ID="ID_1183825593" CREATED="1454564065250" MODIFIED="1454564065930"/>
</node>
<node TEXT="samples by use|quality  $  accrete random" ID="ID_602301063" CREATED="1442302748794" MODIFIED="1445669996985">
<node TEXT="short buzz" ID="ID_970292448" CREATED="1442302755258" MODIFIED="1442302757633">
<node TEXT="insect 0" ID="ID_30264380" CREATED="1442302758340" MODIFIED="1442302762629"/>
</node>
<node TEXT="high unpitched flutter" ID="ID_1616705066" CREATED="1442302769163" MODIFIED="1442302797374">
<node TEXT="insect 1-2" ID="ID_15594649" CREATED="1442302781002" MODIFIED="1442302783383"/>
</node>
<node TEXT="perc" ID="ID_206789357" CREATED="1445143285198" MODIFIED="1445143286055">
<node TEXT="cp:1" ID="ID_1094587109" CREATED="1445143286777" MODIFIED="1445143290594">
<node TEXT="meshes better, less aggressive than cp:0" ID="ID_1243016518" CREATED="1445143291241" MODIFIED="1445143302239"/>
</node>
<node TEXT="can" ID="ID_1344048629" CREATED="1445670001762" MODIFIED="1445670002448"/>
</node>
<node TEXT="thick low buzz" ID="ID_518489278" CREATED="1445143919180" MODIFIED="1445143944460">
<node TEXT="invaders:5-8 (pitch-lower are bigger indices)" ID="ID_288858131" CREATED="1445143935838" MODIFIED="1445143993548"/>
</node>
</node>
<node TEXT="not params" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1703549268" CREATED="1444787875401" MODIFIED="1444787877964">
<node TEXT="tried, no effect detected" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_680754936" CREATED="1444787882128" MODIFIED="1444787912896"/>
<node TEXT="velocity" ID="ID_311069962" CREATED="1444787910241" MODIFIED="1444787912168"/>
</node>
</node>
<node TEXT="Tidal +" ID="ID_370683564" CREATED="1414195719623" MODIFIED="1418802873363">
<node TEXT="extd" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1589740955" CREATED="1418798390504" MODIFIED="1445329508286">
<node TEXT="extracted only once but surely enough" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1714914073" CREATED="1445329509472" MODIFIED="1445329516242"/>
<node TEXT="lang" LOCALIZED_STYLE_REF="styles.topic" ID="ID_564603404" CREATED="1417833677370" MODIFIED="1445326891158">
<node TEXT="eval" ID="ID_1273876501" CREATED="1418797694739" MODIFIED="1418797695382">
<node TEXT="no recog -&gt; silence" ID="ID_639922502" CREATED="1418797708169" MODIFIED="1418797712782">
<node TEXT="in a (sequence? string), anything it does not recognize renders as silence" ID="ID_1282807017" CREATED="1414538598787" MODIFIED="1414538622199"/>
</node>
<node TEXT="evaluate a command: C-c C-c or C-c C-&lt;enter&gt;" ID="ID_723671358" CREATED="1414537622379" MODIFIED="1418797731157"/>
<node TEXT="C-Enter might work instead of C-c C-e" ID="ID_1083581981" CREATED="1415643236404" MODIFIED="1415643250775"/>
</node>
<node TEXT="d1 ... d10" ID="ID_520169883" CREATED="1417833687137" MODIFIED="1417833692669"/>
<node TEXT="sound" ID="ID_871709400" CREATED="1417833695346" MODIFIED="1417833696189"/>
<node TEXT="|+|" ID="ID_1164735221" CREATED="1417833700962" MODIFIED="1417833704981"/>
<node TEXT="[ in a string arg to sound" ID="ID_747182346" CREATED="1417833777879" MODIFIED="1417833787678">
<node TEXT="in a series of [] expressions, each one takes the same amount of time. within each, the duration of events is scaled to match that constraint" ID="ID_6494794" CREATED="1417834155409" MODIFIED="1417834190780"/>
<node TEXT="e.g. this&#xa;d1 $ sound &quot;[bd sn sn] [cp cp]&quot;&#xa;produces a sequence of duration 12, with subdurations bd 2, sn 2, sn 2, cp 3, cp 3" ID="ID_736923431" CREATED="1417834193593" MODIFIED="1417834245151"/>
</node>
<node TEXT="{ in a string arg to sound" ID="ID_1212532571" CREATED="1417833777879" MODIFIED="1417833797307">
<node TEXT=",-separated subsequences within a {} are composed of notes of equal duration; therefore each subsequence&apos;s duration depends on its length" ID="ID_1993644587" CREATED="1417834567962" MODIFIED="1417834601853"/>
</node>
<node TEXT=", in a string arg to sound" ID="ID_1902777666" CREATED="1417833777879" MODIFIED="1417833809875">
<node TEXT="maybe only works in [] or {}" ID="ID_1368908658" CREATED="1417833817000" MODIFIED="1417833825460"/>
</node>
<node TEXT="tilde (~) = rest" ID="ID_95020759" CREATED="1417902262465" MODIFIED="1417902271238"/>
<node TEXT="with and without $" ID="ID_1335921134" CREATED="1417905079047" MODIFIED="1417905085019">
<node TEXT="d2 $ (1/6) &lt;~ sound &quot;bleep:6&quot;" ID="ID_1899502261" CREATED="1417905048119" MODIFIED="1417905064906"/>
<node TEXT="d1 $ every 4 (0.25 &lt;~) $ sound (density 2 &quot;bd sn kurt&quot;)" ID="ID_1653072633" CREATED="1417905074919" MODIFIED="1417905075458"/>
</node>
<node TEXT="transfo&apos;s" ID="ID_591975987" CREATED="1418797884943" MODIFIED="1418798446098">
<font BOLD="true"/>
<node TEXT="int and ext to sound" ID="ID_368851148" CREATED="1417901981532" MODIFIED="1418797884404">
<node TEXT="ext" ID="ID_131935678" CREATED="1417902010748" MODIFIED="1417902012441">
<node TEXT="d1 $ every 4 (density 4) $ sound &quot;bd*2 [bd [sn sn*2 sn] sn]&quot;" ID="ID_742395875" CREATED="1417902006517" MODIFIED="1417902007880"/>
</node>
<node TEXT="int" ID="ID_316452650" CREATED="1417902014685" MODIFIED="1417902015752">
<node TEXT="d1 $ sound (every 4 (density 4) &quot;bd*2 [bd [sn sn*2 sn] sn]&quot;)&#xa;   |+| pan sinewave1" ID="ID_463903991" CREATED="1417902052076" MODIFIED="1417902052495"/>
<node TEXT="note that the transformation (every, density) does not affect pan" ID="ID_1254936227" CREATED="1417902054035" MODIFIED="1417902066329"/>
</node>
</node>
<node TEXT="meta-transfo&apos;s" ID="ID_1219422459" CREATED="1418797900151" MODIFIED="1418797902595">
<node TEXT="every" ID="ID_102929167" CREATED="1417901897342" MODIFIED="1417901898386"/>
</node>
<node TEXT="transform a waveform" ID="ID_1903348965" CREATED="1417902097467" MODIFIED="1417902104582">
<node TEXT="|+| pan (slow 16 sinewave1)" ID="ID_583085164" CREATED="1417902105011" MODIFIED="1417902105608"/>
<node TEXT="|+| shape ((/ 2) &lt;$&gt; sinewave1)" ID="ID_231911641" CREATED="1417902214209" MODIFIED="1417902216316">
<node TEXT="changes its range; time domain unchanged" ID="ID_990834809" CREATED="1417902229081" MODIFIED="1417902241100"/>
</node>
</node>
<node TEXT="slow, density" ID="ID_1663251627" CREATED="1417901901519" MODIFIED="1417901903554"/>
<node TEXT="inst&apos;s" ID="ID_1645240514" CREATED="1417905044351" MODIFIED="1418802558978">
<font BOLD="true"/>
<node TEXT="rotate" ID="ID_387715660" CREATED="1417905065246" MODIFIED="1417905066322">
<node TEXT="* NOTE: ~ &#x2260; -" ID="ID_1578495917" CREATED="1417905105014" MODIFIED="1417905116593"/>
<node TEXT="d2 $ (1/6) &lt;~ sound &quot;bleep:6&quot;" ID="ID_1708382227" CREATED="1417905048119" MODIFIED="1417905064906"/>
<node TEXT="also ~&gt;" ID="ID_1450355808" CREATED="1417905097800" MODIFIED="1417905101177"/>
</node>
<node TEXT="chop" ID="ID_1194317491" CREATED="1417905572766" MODIFIED="1417905573473">
<node TEXT=".= quote" ID="ID_719971157" CREATED="1417905579855" MODIFIED="1417905584266"/>
<node TEXT="chop granualizes every sample in place as it is played. Use an integer value to specify how manu granules each sample is chopped into:" ID="ID_1978513622" CREATED="1417905574221" MODIFIED="1417905577258"/>
<node TEXT="d1 $ chop 16 $ sound &quot;arpy arp feel*4 arpy*4&quot;" ID="ID_809288474" CREATED="1417905577790" MODIFIED="1417905578154"/>
</node>
<node TEXT="degrade" ID="ID_535230104" CREATED="1417906099621" MODIFIED="1417906100672">
<node TEXT="degrade (no args)" ID="ID_786803547" CREATED="1417906108485" MODIFIED="1417906114687">
<node ID="ID_706992444" CREATED="1417906115038" MODIFIED="1417906115038"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      ? syntax
    </p>
  </body>
</html>
</richcontent>
<node TEXT="d1 $ slow 2 $ sound &quot;bd ~ sn bd ~ bd? [sn bd?] ~&quot;" ID="ID_1941852588" CREATED="1417905912457" MODIFIED="1417905912701"/>
</node>
<node TEXT="= degradeBy 0.5" ID="ID_648561162" CREATED="1417905660603" MODIFIED="1417906125985"/>
</node>
<node TEXT="degradeBy :: probability -&gt; Pattern -&gt; Pattern" ID="ID_1541480311" CREATED="1417906127404" MODIFIED="1417906157969"/>
</node>
<node TEXT="density and slow (opposites)" ID="ID_1907595208" CREATED="1417906249330" MODIFIED="1417906260381"/>
<node TEXT="brak (non-uniform)" ID="ID_885631996" CREATED="1417905224276" MODIFIED="1417905310726">
<node TEXT="brak :: Pattern a -&gt; Pattern a&#xa;brak = every 2 (((1%4) ~&gt;) . (\x -&gt; cat [x, silence]))" ID="ID_1561478476" CREATED="1417905285020" MODIFIED="1417905285982"/>
</node>
<node TEXT="every" ID="ID_1961434902" CREATED="1417906577133" MODIFIED="1417906577943">
<node TEXT="every :: Int -&gt; (Pattern a -&gt; Pattern a) -&gt; Pattern a -&gt; Pattern a" ID="ID_101827269" CREATED="1417906601196" MODIFIED="1417906601951"/>
</node>
<node TEXT="interlace" ID="ID_1022692448" CREATED="1417906962566" MODIFIED="1417906964481">
<node TEXT="merges two OscPatterns" ID="ID_358870287" CREATED="1417906964677" MODIFIED="1417906977592"/>
<node TEXT="defined in Tidal.Dirt, not Tidal.Pattern" ID="ID_1536744590" CREATED="1417906978143" MODIFIED="1417906988001"/>
<node TEXT="introduces distortion" ID="ID_205486569" CREATED="1417907014132" MODIFIED="1417907017120"/>
<node TEXT="I don&apos;t understand it." ID="ID_1456197218" CREATED="1417907017324" MODIFIED="1417907019984"/>
</node>
<node TEXT="iter" ID="ID_565658815" CREATED="1417907057636" MODIFIED="1417907081654">
<node TEXT="d1 $ iter 4 $ sound &quot;bd hh sn cp&quot;&#xa;This will produce the following over four cycles:&#xa;&#xa;bd hh sn cp&#xa;hh sn cp bd&#xa;sn cp bd hh&#xa;cp bd hh sn" ID="ID_651517063" CREATED="1417907058932" MODIFIED="1417907059799"/>
</node>
<node TEXT="rev :: Pattern a -&gt; Pattern a" ID="ID_407710087" CREATED="1417907091747" MODIFIED="1417907107570"/>
<node TEXT="slow :: Time -&gt; Pattern a -&gt; Pattern a" ID="ID_667286347" CREATED="1417907096011" MODIFIED="1417907102190"/>
<node TEXT="slowspread: iterate through list of transf&apos;rs" ID="ID_1140712327" CREATED="1417907553162" MODIFIED="1417907564663">
<node TEXT="d1 $ slowspread ($) [density 2, rev, slow 2, striate 3, (|+| speed &quot;0.8&quot;)]&#xa;    $ sound &quot;[bd*2 [~ bd]] [sn future]*2 cp jvbass*4&quot;" ID="ID_1983109958" CREATED="1417907568243" MODIFIED="1417907568703"/>
</node>
<node TEXT="sometimesBy" ID="ID_1006141091" CREATED="1417907880604" MODIFIED="1417907887264">
<node TEXT="use transformation sometimes (unif pr)" ID="ID_1681764862" CREATED="1417907891277" MODIFIED="1417907904264"/>
<node TEXT="d1 $ sometimesBy 0.25 (density 2) $ sound &quot;bd*8&quot;" ID="ID_608586010" CREATED="1417907888679" MODIFIED="1417907888962"/>
<node TEXT="aliases" ID="ID_1107879433" CREATED="1417908111498" MODIFIED="1417908130432">
<font BOLD="true"/>
<node ID="ID_1463641371" CREATED="1417908124530" MODIFIED="1417908124530"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      sometimes = sometimesBy 0.5
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_178559917" CREATED="1417908124531" MODIFIED="1417908124531"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      often = sometimesBy 0.75
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1781143782" CREATED="1417908124536" MODIFIED="1417908124536"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      rarely = sometimesBy 0.25
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1893417882" CREATED="1417908124540" MODIFIED="1417908124540"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      almostNever = sometimesBy 0.1
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1703370643" CREATED="1417908124543" MODIFIED="1417908124543"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      almostAlways = sometimesBy 0.9
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="aliases" ID="ID_328269647" CREATED="1417908111498" MODIFIED="1417908116020">
<node ID="ID_1017373219" CREATED="1417908124530" MODIFIED="1417908124530"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      sometimes = sometimesBy 0.5
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_993194144" CREATED="1417908124531" MODIFIED="1417908124531"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      often = sometimesBy 0.75
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1198713910" CREATED="1417908124536" MODIFIED="1417908124536"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      rarely = sometimesBy 0.25
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_280293867" CREATED="1417908124540" MODIFIED="1417908124540"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      almostNever = sometimesBy 0.1
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1748472001" CREATED="1417908124543" MODIFIED="1417908124543"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      almostAlways = sometimesBy 0.9
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="spread" ID="ID_1280572073" CREATED="1417908194015" MODIFIED="1417908194899">
<node TEXT="spread" ID="ID_753728513" CREATED="1417908276918" MODIFIED="1417908282689">
<node TEXT="spread :: (a -&gt; t -&gt; Pattern b) -&gt; [a] -&gt; t -&gt; Pattern b" ID="ID_1042043330" CREATED="1417908195319" MODIFIED="1417908195915"/>
<node TEXT="cycle through a list of numerical arguments to a transformer" ID="ID_1084902530" CREATED="1417908197648" MODIFIED="1417908208718"/>
<node TEXT="d1 $ spread slow [2,4%3] $ sound &quot;ho ho:2 ho:3 hc&quot;" ID="ID_145625428" CREATED="1417908275582" MODIFIED="1417908276170"/>
</node>
<node TEXT="spread&apos;" ID="ID_886349222" CREATED="1417908279462" MODIFIED="1417908281233">
<node TEXT="mysterious" ID="ID_878942615" CREATED="1417908479491" MODIFIED="1417908480590"/>
<node TEXT="takes a pattern instead of a list:" ID="ID_290088256" CREATED="1417908290215" MODIFIED="1417908295410"/>
<node TEXT="d1 $ spread&apos; slow &quot;2 4%3&quot; $ sound &quot;ho ho:2 ho:3 hc&quot;" ID="ID_1213349968" CREATED="1417908289430" MODIFIED="1417908289923"/>
</node>
</node>
<node TEXT="* striate" ID="ID_660450284" CREATED="1417908970555" MODIFIED="1417909153138">
<node TEXT="sounds great" ID="ID_256691964" CREATED="1417909153342" MODIFIED="1417909155018"/>
<node TEXT="&quot;striate N pattern&quot; plays the first Nth of each elt of pattern, then the next, etc. Pattern&apos;s length not changed." ID="ID_1331908939" CREATED="1417909188486" MODIFIED="1417909221562"/>
</node>
<node TEXT="stut" ID="ID_1658827031" CREATED="1417909938912" MODIFIED="1417909939652">
<node TEXT="args: number of repeats, feedback, fraction of cycle the stutter takes" ID="ID_528267183" CREATED="1417909943425" MODIFIED="1417910002427"/>
<node TEXT="&quot;the stutter&quot; is applied to every note. that note is repeated a certain number of times." ID="ID_1207777361" CREATED="1417910004080" MODIFIED="1417910019675"/>
<node TEXT="the fraction of a cycle a stutter takes can be negative, in which case the signals grow over time instead of shrinking (as a function of the feedback parameter)" ID="ID_361908332" CREATED="1417910019855" MODIFIED="1417910050074"/>
<node TEXT="the feedback does not asymptote to zero; stutter ends when the first arg, the number of repetitions, have elapsed" ID="ID_1386640907" CREATED="1417910050271" MODIFIED="1417910073402"/>
<node TEXT="d1 $ stut 4 0.5 (-0.3) $ sound &quot;bd sn&quot;" ID="ID_1297464382" CREATED="1417909940026" MODIFIED="1417909940026"/>
</node>
<node TEXT="trunc :: int -&gt; Pattern a -&gt; Pattern a" ID="ID_309492960" CREATED="1417910242107" MODIFIED="1417910252199">
<node TEXT="the int rep&apos;s a fraction of a cycle" ID="ID_1513327984" CREATED="1417910252451" MODIFIED="1417910273654"/>
</node>
<node TEXT="wedge :: num -&gt; Pattern a -&gt; Pattern a -&gt; Pattern a" ID="ID_1119463596" CREATED="1417910331114" MODIFIED="1417910351909">
<node TEXT="number is a fraction indicating wht portion of a cycle the first pattern gets wedged into" ID="ID_288635300" CREATED="1417910352666" MODIFIED="1417910365189"/>
</node>
<node TEXT="whenmod (generalizes &quot;every&quot;)" ID="ID_1748785927" CREATED="1417910759595" MODIFIED="1417910858452">
<node ID="ID_408603874" CREATED="1417910852185" MODIFIED="1417910852185"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      (args int len, int thresh, transformation t, Pattern p)
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="len is a number of cycles" ID="ID_1356797037" CREATED="1417910791850" MODIFIED="1417910811534"/>
<node TEXT="when the current cycle number is under thresh modulo len, t is applied to p" ID="ID_227657817" CREATED="1417910811729" MODIFIED="1417910847620"/>
</node>
<node TEXT="within" ID="ID_69893357" CREATED="1417910931599" MODIFIED="1417910932386">
<node TEXT="apply transf to patt only within arc (first arg, a pair of numbers from the unit interval, the first lesser)" ID="ID_1744739634" CREATED="1417910954711" MODIFIED="1417910983573"/>
<node TEXT="d1 $ within (0, 0.5) (density 2) $ sound &quot;bd*2 sn lt mt hh hh hh hh&quot;" ID="ID_1059019776" CREATED="1417910933568" MODIFIED="1417910933819"/>
</node>
<node TEXT="* seqP" ID="ID_1651054451" CREATED="1417912581377" MODIFIED="1417912629909">
<node TEXT="define start and end times for each of a list of patterns" ID="ID_1716739383" CREATED="1417912589937" MODIFIED="1417912607757"/>
<node TEXT="d1 $ seqP [&#xa;  (0, 128, sound &quot;bd bd*2&quot;),&#xa;  (8, 128, sound &quot;hh*2 [sn cp] cp future*4&quot;)&#xa;]" ID="ID_1339344864" CREATED="1417912613561" MODIFIED="1417912613973"/>
<node TEXT="I can&apos;t get it to work" ID="ID_1327329716" CREATED="1417912614529" MODIFIED="1417912617309"/>
</node>
<node TEXT="jux" ID="ID_54480555" CREATED="1417912742808" MODIFIED="1417912743475">
<node TEXT="apply transf&apos;n only to RHS (stereo channel)" ID="ID_1726055577" CREATED="1417912743663" MODIFIED="1417912754107"/>
</node>
</node>
</node>
<node TEXT="funky application syntax" ID="ID_726837182" CREATED="1417907535155" MODIFIED="1417907538520">
<node TEXT="notice the |+| term" ID="ID_740330222" CREATED="1417907540371" MODIFIED="1417907546543"/>
<node TEXT="d1 $ slowspread ($) [density 2, rev, slow 2, striate 3, (|+| speed &quot;0.8&quot;)]&#xa;    $ sound &quot;[bd*2 [~ bd]] [sn future]*2 cp jvbass*4&quot;" ID="ID_1752994505" CREATED="1417907538939" MODIFIED="1417907539543"/>
</node>
</node>
<node TEXT="archi" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1143414713" CREATED="1418797984494" MODIFIED="1445326891156">
<node TEXT="Pattern is a type constr" ID="ID_995736547" CREATED="1417904568855" MODIFIED="1417904583667">
<node TEXT="&quot;Pattern a&quot; is a concrete type; &quot;Pattern&quot; is not" ID="ID_88912237" CREATED="1417904575151" MODIFIED="1417904602094"/>
</node>
<node TEXT="Patterns are applicative functors" ID="ID_1377038342" CREATED="1417911006791" MODIFIED="1418802393826"/>
<node TEXT="OscPattern = &quot;Pattern OscMap&quot;" ID="ID_690816812" CREATED="1417913613312" MODIFIED="1417913619699"/>
<node TEXT="sound :: Pattern String -&gt; OscPattern" ID="ID_282402175" CREATED="1417913636944" MODIFIED="1418802968033"/>
</node>
<node TEXT="param&apos;s" LOCALIZED_STYLE_REF="styles.topic" ID="ID_692644033" CREATED="1417833707450" MODIFIED="1445326891154">
<node TEXT="vowel" ID="ID_1193098746" CREATED="1417833708721" MODIFIED="1417833709453"/>
<node TEXT="pan" ID="ID_1643479402" CREATED="1417833709657" MODIFIED="1417833710709"/>
</node>
<node TEXT="func&apos;s" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1442000044" CREATED="1418796814037" MODIFIED="1445326891146">
<node TEXT="cps" ID="ID_1951393779" CREATED="1414566535362" MODIFIED="1414566536006">
<node TEXT="tempo" ID="ID_843784934" CREATED="1414566536649" MODIFIED="1414566538038"/>
</node>
<node TEXT="rev" ID="ID_1736002178" CREATED="1414567208615" MODIFIED="1414567209227">
<node TEXT="d1 $ every 4 (rev) (sound &quot;bd*2 [bd [sn sn*2 sn] sn]&quot;)" ID="ID_1922461322" CREATED="1414567212351" MODIFIED="1414567212786"/>
</node>
<node TEXT="run" ID="ID_1365634021" CREATED="1417911875718" MODIFIED="1417911876714">
<node TEXT="is one of the &quot;pattern generators&quot;" ID="ID_323700985" CREATED="1417911873247" MODIFIED="1418802517103"/>
<node TEXT="&quot;run 5&quot; can substitute for &quot;0 1 2 3 4&quot; as a pattern argument" ID="ID_280943033" CREATED="1417911876943" MODIFIED="1417911901430"/>
</node>
<node TEXT="stack" ID="ID_310852110" CREATED="1417912028493" MODIFIED="1417912029439">
<node TEXT="makes them concurrent" ID="ID_362195234" CREATED="1417912040548" MODIFIED="1417912042768"/>
<node TEXT="lets you apply a transformation to all of them" ID="ID_784388704" CREATED="1417912035299" MODIFIED="1417912040272"/>
<node TEXT="d1 $ stack&#xa;    [ sound &quot;bd bd*2&quot;&#xa;    , sound &quot;hh*2 [sn cp] cp future*4&quot;&#xa;    ]&#xa;    |+| speed &quot;[[1 0.8], [1.5 2]*2]/3&quot;" ID="ID_7249628" CREATED="1417912030276" MODIFIED="1417912414677"/>
</node>
<node TEXT="* inspect patterns" ID="ID_1313505996" CREATED="1417913557194" MODIFIED="1418804942526">
<node TEXT="evaluate them in GHCI" ID="ID_1918086154" CREATED="1417913564769" MODIFIED="1417913581583"/>
<node TEXT="tidal&gt; brak $ sound &quot;sn bd&quot;&#xa;[((1 % 4,1 % 2),(1 % 4,1 % 2),fromList [(sound,Just (ASCII_String {d_ascii_string = &quot;sn&quot;}))]),((1 % 2,3 % 4),(1 % 2,3 % 4),fromList [(sound,Just (ASCII_String {d_ascii_string = &quot;bd&quot;}))])]" ID="ID_873059860" CREATED="1417913561448" MODIFIED="1417913562093"/>
</node>
</node>
<node TEXT="exten" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1355079712" CREATED="1418798415712" MODIFIED="1445326914250">
<node TEXT=".= mod&apos;s to Tidal, not built-in" ID="ID_1013723731" CREATED="1418802358623" MODIFIED="1418802828051"/>
<node TEXT="pitch" ID="ID_962636113" CREATED="1417836830042" MODIFIED="1417929100383">
<node TEXT="I do this all the time (thanks to Alex for teaching part of it to me!):&#xa;let up = speed . ((1.059466**) &lt;$&gt;)&#xa;&#xa;Then you can do:&#xa;d1 $ sound &quot;arpy*4&quot; |+| up &quot;0 4 7 4&quot;" ID="ID_1205438549" CREATED="1417836832770" MODIFIED="1417836833055"/>
</node>
</node>
<node TEXT="u, 2014 12 31" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1909538855" CREATED="1417982642203" MODIFIED="1445327046468">
<node TEXT="efficient to ask" ID="ID_355913618" CREATED="1417924442562" MODIFIED="1417924464828">
<node TEXT="how to modify language in use in Emacs" ID="ID_1359855000" CREATED="1417924465144" MODIFIED="1417924494364"/>
</node>
<node TEXT="cho" ID="ID_746343759" CREATED="1417983108850" MODIFIED="1417983109414">
<node TEXT="much is possible with tidal that I have little concept of" ID="ID_1218180246" CREATED="1417924341579" MODIFIED="1417983105606">
<node TEXT="without lang mods" ID="ID_935872836" CREATED="1417924353043" MODIFIED="1417924355431"/>
</node>
</node>
<node TEXT="tidal has many functions in spec and not tut" ID="ID_1594571706" CREATED="1415843183484" MODIFIED="1415843200799"/>
</node>
</node>
<node TEXT="beware : Hoogle can &quot;mislead&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_95665198" CREATED="1445501989425" MODIFIED="1445502066464">
<node TEXT="Alex uses Text.ParserCombinators.Parsec" ID="ID_427826020" CREATED="1445502009137" MODIFIED="1445502012863"/>
<node TEXT="if I ask Hoogle about a name from that library, other parser libraries are sometimes returned above it, e.g. GenParser -- and they are not equivalent; different number of type args, for instance" ID="ID_450007545" CREATED="1445502013785" MODIFIED="1445502062953"/>
</node>
<node TEXT="more @ logic.mm, mus, where, git/{art, fresh, info}" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1091797927" CREATED="1441909997612" MODIFIED="1445329495153"/>
<node TEXT="init, short" ID="ID_1532390043" CREATED="1439930067933" MODIFIED="1442301747617">
<node TEXT=".altvs" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_298575269" CREATED="1445329208824" MODIFIED="1445329210978"/>
<node TEXT="emacs" ID="ID_576207776" CREATED="1445329193848" MODIFIED="1445329194662">
<node TEXT="jackd -d coreaudio &amp;" ID="ID_277996398" CREATED="1439930070061" MODIFIED="1439930070061"/>
<node TEXT="cd ~/Dirt" ID="ID_807359330" CREATED="1439930083860" MODIFIED="1439930083860"/>
<node TEXT="./dirt &amp;" ID="ID_1962366651" CREATED="1439930083860" MODIFIED="1439930083860"/>
<node TEXT="open a .tidal file" ID="ID_243253769" CREATED="1439930109249" MODIFIED="1439930113870">
<font ITALIC="true"/>
</node>
<node TEXT="Ctrl-C then Ctrl-S." ID="ID_807972310" CREATED="1439930129440" MODIFIED="1439930132674">
<node TEXT="starts Tidal, from within Emacs" ID="ID_376417769" CREATED="1439930136007" MODIFIED="1439930142938"/>
</node>
<node TEXT="d1 $ brak $ sound &quot;bd sn/2&quot;" ID="ID_1676408002" CREATED="1439930121944" MODIFIED="1439930122795"/>
</node>
<node TEXT="no editor" LOCALIZED_STYLE_REF="default" ID="ID_218270308" CREATED="1445313809055" MODIFIED="1445329198962">
<node TEXT="= using it straight from commad-line GHCI" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_376028480" CREATED="1445313818415" MODIFIED="1445313830891"/>
<node TEXT="init" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_515845150" CREATED="1445312705199" MODIFIED="1445325366297">
<node TEXT="stack ghci" ID="ID_1797781294" CREATED="1445387548193" MODIFIED="1445387549614"/>
<node TEXT=":set -XOverloadedStrings&#xa;:m Sound.Tidal.Context&#xa;d1 &lt;- dirtStream&#xa;d1 $ sound &quot;bd sn sn sn&quot;" ID="ID_1176400976" CREATED="1445312710454" MODIFIED="1445387555906"/>
</node>
<node TEXT="https://github.com/tidalcycles/Tidal/wiki/Using-Tidal-outside-of-emacs" ID="ID_1305611360" CREATED="1445313817930" MODIFIED="1445313817930" LINK="https://github.com/tidalcycles/Tidal/wiki/Using-Tidal-outside-of-emacs"/>
</node>
</node>
<node TEXT="do-ish" ID="ID_1601810671" CREATED="1418796957467" MODIFIED="1445328702963">
<font BOLD="true"/>
<node TEXT="not urg, could mine" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1001364368" CREATED="1445326026222" MODIFIED="1445326035530">
<node TEXT="asking : run multiple lines" ID="ID_579470305" CREATED="1442303345139" MODIFIED="1442304780128">
<node TEXT="tidal-run-line is for one-line commands" ID="ID_1471153501" CREATED="1442303573979" MODIFIED="1442303588597">
<node TEXT="(define-key map [?\C-c ?\C-c] &apos;tidal-run-line)" ID="ID_652026577" CREATED="1442303572332" MODIFIED="1442303572332"/>
<node TEXT="(defun tidal-run-line ()" ID="ID_286727742" CREATED="1442303464814" MODIFIED="1442303464814">
<node TEXT="&quot;Send the current line to the interpreter.&quot;" ID="ID_150126615" CREATED="1442303464814" MODIFIED="1442303464814"/>
<node TEXT="(interactive)" ID="ID_800806219" CREATED="1442303464814" MODIFIED="1442303464814"/>
<node TEXT="(tidal-get-now)" ID="ID_1815858190" CREATED="1442303464814" MODIFIED="1442303464814"/>
<node TEXT="(let* ((s (buffer-substring (line-beginning-position)" ID="ID_177516530" CREATED="1442303464814" MODIFIED="1442303464814">
<node TEXT="(line-end-position)))" ID="ID_304202730" CREATED="1442303464814" MODIFIED="1442303464814"/>
<node TEXT="(s* (if tidal-literate-p" ID="ID_1642702610" CREATED="1442303464814" MODIFIED="1442303464814">
<node TEXT="(tidal-unlit s)" ID="ID_613363391" CREATED="1442303464814" MODIFIED="1442303464814"/>
<node TEXT="s)))" ID="ID_762369890" CREATED="1442303464814" MODIFIED="1442303464814"/>
</node>
<node TEXT="(tidal-send-string s*))" ID="ID_1182255407" CREATED="1442303464814" MODIFIED="1442303464814"/>
</node>
<node TEXT="(pulse-momentary-highlight-one-line (point))" ID="ID_811558126" CREATED="1442303464814" MODIFIED="1442303464814"/>
<node TEXT="(next-line)" ID="ID_1641263642" CREATED="1442303464814" MODIFIED="1442303464814"/>
<node TEXT=")" ID="ID_1588336302" CREATED="1442303464814" MODIFIED="1442303464814"/>
</node>
</node>
<node TEXT="tidal-run-multiple-lines is for one command" ID="ID_322274169" CREATED="1442303480995" MODIFIED="1442303508150">
<node TEXT="two key bindings" ID="ID_202841383" CREATED="1442303493427" MODIFIED="1442303615662">
<node TEXT="(define-key map [?\C-c ?\C-e] &apos;tidal-run-multiple-lines)" ID="ID_1461708355" CREATED="1442303489866" MODIFIED="1442303489866"/>
<node TEXT="(define-key map (kbd &quot;&lt;C-return&gt;&quot;) &apos;tidal-run-multiple-lines)" ID="ID_1065652472" CREATED="1442303489866" MODIFIED="1442303489866"/>
</node>
<node TEXT="(defun tidal-run-multiple-lines ()" ID="ID_808572469" CREATED="1442303464814" MODIFIED="1442303464814">
<node TEXT="&quot;Send the current region to the interpreter as a single line.&quot;" ID="ID_1815698373" CREATED="1442303464818" MODIFIED="1442303464818"/>
<node TEXT="(interactive)" ID="ID_1002921123" CREATED="1442303464818" MODIFIED="1442303464818"/>
<node TEXT="(tidal-get-now)" ID="ID_731983937" CREATED="1442303464818" MODIFIED="1442303464818"/>
<node TEXT="(save-excursion" ID="ID_133868488" CREATED="1442303464818" MODIFIED="1442303464818">
<node TEXT="(mark-paragraph)" ID="ID_869541872" CREATED="1442303464818" MODIFIED="1442303464818"/>
<node TEXT="(let* ((s (buffer-substring-no-properties (region-beginning)" ID="ID_1451771404" CREATED="1442303464818" MODIFIED="1442303464818">
<node TEXT="(region-end)))" ID="ID_323056790" CREATED="1442303464818" MODIFIED="1442303464818"/>
<node TEXT="(s* (if tidal-literate-p" ID="ID_260321230" CREATED="1442303464818" MODIFIED="1442303464818">
<node TEXT="(tidal-unlit s)" ID="ID_1171348293" CREATED="1442303464818" MODIFIED="1442303464818"/>
<node TEXT="s)))" ID="ID_1748707290" CREATED="1442303464818" MODIFIED="1442303464818"/>
</node>
<node TEXT="(tidal-send-string &quot;:{&quot;)" ID="ID_909368636" CREATED="1442303464818" MODIFIED="1442303464818"/>
<node TEXT="(tidal-send-string s*)" ID="ID_422817170" CREATED="1442303464818" MODIFIED="1442303464818"/>
<node TEXT="(tidal-send-string &quot;:}&quot;)" ID="ID_641963513" CREATED="1442303464818" MODIFIED="1442303464818"/>
<node TEXT="(mark-paragraph)" ID="ID_1316452680" CREATED="1442303464818" MODIFIED="1442303464818"/>
<node TEXT="(pulse-momentary-highlight-region (mark) (point))" ID="ID_168463162" CREATED="1442303464818" MODIFIED="1442303464818"/>
<node TEXT=")" ID="ID_139859494" CREATED="1442303464818" MODIFIED="1442303464818"/>
<node TEXT=";(tidal-send-string (replace-regexp-in-string &quot;\n&quot; &quot; &quot; s*))" ID="ID_292730379" CREATED="1442303464818" MODIFIED="1442303464818"/>
</node>
<node TEXT=")" ID="ID_1179910916" CREATED="1442303464818" MODIFIED="1442303464818"/>
</node>
<node TEXT=")" ID="ID_1873454630" CREATED="1442303464818" MODIFIED="1442303464818"/>
</node>
</node>
<node TEXT="tidal-run-region only runs the last" ID="ID_719487055" CREATED="1442303600899" MODIFIED="1442303608681">
<node TEXT="(define-key map [?\C-c ?\C-r] &apos;tidal-run-region)" ID="ID_1687252113" CREATED="1442303367599" MODIFIED="1442303367599"/>
<node TEXT="(defun tidal-run-region ()" ID="ID_1351405304" CREATED="1442303404223" MODIFIED="1442303404223">
<node TEXT="&quot;Place the region in a do block and compile.&quot;" ID="ID_1563303140" CREATED="1442303404223" MODIFIED="1442303404223"/>
<node TEXT="(interactive)" ID="ID_1298422923" CREATED="1442303404223" MODIFIED="1442303404223"/>
<node TEXT="(tidal-transform-and-store" ID="ID_1882461481" CREATED="1442303404223" MODIFIED="1442303404223">
<node TEXT="&quot;/tmp/tidal.hs&quot;" ID="ID_1695723549" CREATED="1442303404223" MODIFIED="1442303404223"/>
<node TEXT="(buffer-substring-no-properties (region-beginning) (region-end)))" ID="ID_853043326" CREATED="1442303404223" MODIFIED="1442303404223"/>
</node>
<node TEXT="(tidal-send-string &quot;:load \&quot;/tmp/tidal.hs\&quot;&quot;)" ID="ID_1018757785" CREATED="1442303404223" MODIFIED="1442303404223"/>
<node TEXT="(tidal-send-string &quot;main&quot;))" ID="ID_1873749803" CREATED="1442303404223" MODIFIED="1442303404223"/>
</node>
<node TEXT="error: &quot;save-current-buffer: Symbol&apos;s value as variable is void: tidal-modules&quot;" ID="ID_1909333049" CREATED="1442303892251" MODIFIED="1442304004510"/>
</node>
</node>
<node TEXT="asked : no intercalate string?" ID="ID_1884141014" CREATED="1442125065156" MODIFIED="1445326049076">
<node TEXT="this works in GHCI" ID="ID_965128741" CREATED="1442125034445" MODIFIED="1442125037457">
<node TEXT="Prelude&gt; import Data.List&#xa;Prelude Data.List&gt; import Data.String&#xa;Prelude Data.List Data.String&gt; intercalate &quot; &quot; [&quot;word&quot;, &quot;salad&quot;]&#xa;&quot;word salad&quot;&#xa;Prelude Data.List Data.String&gt;" ID="ID_1326195276" CREATED="1442125039117" MODIFIED="1442125040092"/>
</node>
<node TEXT="but not in Tidal" ID="ID_1662851177" CREATED="1442125050006" MODIFIED="1442125052260">
<node TEXT="v\tidal&gt;&#xa;tidal&gt; import Data.List&#xa;tidal&gt; import Data.String&#xa;tidal&gt; inercalate &quot; &quot; [&quot;word&quot;, &quot;salad&quot;]&#xa;&#xa;&lt;interactive&gt;:515:1:&#xa;    Not in scope: &#x2018;inercalate&#x2019;&#xa;    Perhaps you meant one of these:&#xa;      &#x2018;intercalate&#x2019; (imported from Sound.Tidal.Context),&#xa;      &#x2018;unintercalate&#x2019; (imported from Data.List.Split.Internals)&#xa;tidal&gt; intercalate &quot; &quot; [&quot;word&quot;,&quot;salad&quot;]&#xa;&#xa;&lt;interactive&gt;:516:1:&#xa;    No instance for (IsString [a0]) arising from a use of &#x2018;it&#x2019;&#xa;    The type variable &#x2018;a0&#x2019; is ambiguous&#xa;    Note: there is a potential instance available:&#xa;      instance IsString [Char] -- Defined in &#x2018;Data.String&#x2019;&#xa;    In the first argument of &#x2018;print&#x2019;, namely &#x2018;it&#x2019;&#xa;    In a stmt of an interactive GHCi command: print it&#xa;tidal&gt;" ID="ID_1925544469" CREATED="1442125053199" MODIFIED="1442125060343"/>
</node>
</node>
<node TEXT="read" ID="ID_1335460872" CREATED="1418848224962" MODIFIED="1418848225997">
<node TEXT="see Tidal/src" ID="ID_1862075157" CREATED="1418848226266" MODIFIED="1418848229263"/>
</node>
<node TEXT="dub" LOCALIZED_STYLE_REF="styles.topic" ID="ID_775213531" CREATED="1445326230406" MODIFIED="1445326348561">
<node TEXT="zoom style" ID="ID_797481488" CREATED="1417925192373" MODIFIED="1417925193960">
<node TEXT="use a small font, and zoom out to ordinary when not editing but rather choosing. can that way more afford lines of emptiness delineating blocks." ID="ID_1455950129" CREATED="1417925089550" MODIFIED="1417925186344"/>
</node>
<node TEXT="Emacs" LOCALIZED_STYLE_REF="default" ID="ID_796891081" CREATED="1445326316878" MODIFIED="1445326347626">
<node TEXT="replace standard shortcuts" ID="ID_577433095" CREATED="1418848708003" MODIFIED="1418849002555">
<node TEXT="many not working -- e.g. C-v (though M-v does)" ID="ID_537111217" CREATED="1417904720108" MODIFIED="1418848628346"/>
</node>
<node TEXT="insert newline bypassing autoindent" ID="ID_763177703" CREATED="1417907467525" MODIFIED="1418848695785">
<node ID="ID_1404391536" CREATED="1418849008747" MODIFIED="1418849008747"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      shortcut to
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node TEXT="historically amusing" LOCALIZED_STYLE_REF="styles.topic" ID="ID_807443663" CREATED="1445326535934" MODIFIED="1445326541570">
<node TEXT="Tidal on Hackage: suggested reading order" ID="ID_1741158990" CREATED="1417930032903" MODIFIED="1417930094505">
<node TEXT="are these the most important?" ID="ID_515336972" CREATED="1417930117318" MODIFIED="1417930130969">
<node TEXT="Sound.Tidal.Parse&#xa;Sound.Tidal.Pattern&#xa;Sound.Tidal.Strategies&#xa;Sound.Tidal.Stream" ID="ID_1390719067" CREATED="1417930113110" MODIFIED="1417930113393"/>
</node>
<node TEXT="which depends on the fewest of the others, and is that a reasonable place to start?" ID="ID_1645855162" CREATED="1417930132917" MODIFIED="1417930145944"/>
<node TEXT="I understood Time and Utils enough to feel justified moving on. Among Tidal libraries, Pattern imports only them, so I tackled Pattern next." ID="ID_433077512" CREATED="1417930199613" MODIFIED="1417930305905"/>
</node>
</node>
</node>
<node TEXT="**feas, to try" ID="ID_1958756680" CREATED="1445328822319" MODIFIED="1445329098011">
<node TEXT="edit two distinct sets of code, toggle" ID="ID_127546861" CREATED="1443923999076" MODIFIED="1443924014842"/>
<node TEXT="a sparse drum loop nearly as long as the speed-setter" ID="ID_555769593" CREATED="1444872130530" MODIFIED="1444872145531"/>
<node TEXT="mus ! white noise" ID="ID_1678075711" CREATED="1444787218623" MODIFIED="1444787229721"/>
<node TEXT="? does this run an expression from d1" LOCALIZED_STYLE_REF="default" ID="ID_135332319" CREATED="1445304633882" MODIFIED="1445329154965">
<node TEXT="(define-key map [?\C-c ?\C-1] &apos;tidal-run-d1)" ID="ID_1433516634" CREATED="1445304641986" MODIFIED="1445304641986"/>
</node>
</node>
<node TEXT="mike hodnick asks about writing a variation of stut" LOCALIZED_STYLE_REF="default" ID="ID_658425886" CREATED="1443809631546" MODIFIED="1444939929450">
<node TEXT="https://mail.google.com/mail/u/0/#inbox/15028cca7bb82e5f" ID="ID_629050819" CREATED="1443809646620" MODIFIED="1443809646620" LINK="https://mail.google.com/mail/u/0/#inbox/15028cca7bb82e5f"/>
</node>
<node TEXT="wishes, Tidal functions" ID="ID_1921840854" CREATED="1445326135846" MODIFIED="1445329121796">
<font BOLD="true"/>
<node TEXT="note sustain" ID="ID_1442769095" CREATED="1414570140109" MODIFIED="1418848773863">
<node TEXT="thread: [tidal] continuous and cps-independent sample loop" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_126471244" CREATED="1418848790891" MODIFIED="1445327569918"/>
<node TEXT="loop sample ?" ID="ID_330720319" CREATED="1417989810860" MODIFIED="1417989855495">
<node TEXT="then use gain and up (speed)" ID="ID_1757517457" CREATED="1417989806140" MODIFIED="1418796984350"/>
</node>
<node TEXT="use supercollider?" ID="ID_1630453416" CREATED="1418848800243" MODIFIED="1418848806327"/>
</node>
<node TEXT="swing|phase" ID="ID_1124231588" CREATED="1418802996301" MODIFIED="1445326147033">
<node TEXT="to send to list" ID="ID_1182159366" CREATED="1417836489017" MODIFIED="1418802995905">
<node TEXT="Regarding phase, I am imagining some kind of language device that generalizes the concept of swing, for instructions like &quot;every other beat, delay by an eighth of a beat&quot;. Recursion seems likely to have particularly cool effects, e.g. &quot;Delay the outer thirds by 10%, then to each of those thirds delay their outer thirds by 10%, ...&quot;&#xa;&#xa;Flying Lotus uses a lot of concurrent beats with the same tempo but slight and maybe evolving phase mismatches; it&apos;s a sound I love.&#xa;&#xa;Am I correct that in Tidal phase remains so far unaddressed?" ID="ID_436866943" CREATED="1417836492313" MODIFIED="1417836492724"/>
</node>
</node>
<node TEXT="control input (vague)" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1696182223" CREATED="1417849895612" MODIFIED="1445327535666">
<node TEXT="something to display during which past cycles control input was present, so able to refer to it" ID="ID_190493343" CREATED="1417850120311" MODIFIED="1417850169938"/>
<node TEXT="program the voice rendering midi instructions to next cycle retain all from this one, in perpetuity or for a finite number of repeats" ID="ID_826492490" CREATED="1417850188894" MODIFIED="1417850229300">
<node TEXT="discrete delay" ID="ID_1804094556" CREATED="1417850235205" MODIFIED="1417850247353"/>
</node>
<node TEXT="thread title?" ID="ID_81135773" CREATED="1417850115247" MODIFIED="1417850117779">
<node TEXT="control signal input and analysis (e.g. find metric subdivisions for external midi, osc)" ID="ID_629113028" CREATED="1417849897643" MODIFIED="1417850038608"/>
</node>
</node>
<node TEXT="concatenate concisely" ID="ID_736845810" CREATED="1417913766782" MODIFIED="1445326464553">
<node TEXT="this works but is verbose" ID="ID_1114986458" CREATED="1417913782854" MODIFIED="1417913795473"/>
<node TEXT="cat [ &quot;bd&quot; :: Pattern String, &quot;sn&quot; :: Pattern String, &quot;sn&quot; :: Pattern String ]" ID="ID_377141133" CREATED="1417913780821" MODIFIED="1417913781321"/>
</node>
<node TEXT="shared mem (monad?)" LOCALIZED_STYLE_REF="default" ID="ID_102285424" CREATED="1417843484132" MODIFIED="1445326960111">
<node TEXT="suggest and imagine implementing a monad-like shared memory structure such that instructions to one param could refer to, say, subsequences defined by/in terms of the other param&apos;s" ID="ID_1480968768" CREATED="1417843508368" MODIFIED="1417843593002">
<node TEXT="need a dependency graph inlet" ID="ID_1138356113" CREATED="1417843594930" MODIFIED="1417843608430">
<node TEXT="and something I&apos;m calling complete execution, which implies among other things an inlet" ID="ID_1659091848" CREATED="1417843616106" MODIFIED="1417843634317"/>
</node>
</node>
</node>
<node TEXT="loop length" ID="ID_1358063669" CREATED="1445327021678" MODIFIED="1445327026221"/>
<node TEXT="show current cycle number, position (within)" ID="ID_1006628836" CREATED="1441699306789" MODIFIED="1441699321682"/>
<node TEXT="show melody  (better, mult ways)" ID="ID_1553921956" CREATED="1445327393527" MODIFIED="1445327412035"/>
<node TEXT="address sample subfolders" ID="ID_1490729868" CREATED="1445327448910" MODIFIED="1445327453501"/>
<node TEXT="discretize" ID="ID_911906734" CREATED="1440757242581" MODIFIED="1440757244056"/>
<node TEXT="focus :: time -&gt; voice id -&gt; number" LOCALIZED_STYLE_REF="default" ID="ID_1567536739" CREATED="1443924092212" MODIFIED="1445328862040">
<node TEXT="sidechain compressors" ID="ID_1463942344" CREATED="1443924204673" MODIFIED="1443924204673"/>
</node>
<node TEXT="Tidal : give x-voice instructions at once" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_421404407" CREATED="1444871763229" MODIFIED="1444871779209">
<node TEXT="e.g. pan, existence" ID="ID_899370166" CREATED="1444871784360" MODIFIED="1444872595795"/>
</node>
<node TEXT="tidal: into-theme substitution" ID="ID_159832567" CREATED="1444871016555" MODIFIED="1444871029383">
<node TEXT="dur data across patterns" ID="ID_1591134033" CREATED="1444871030276" MODIFIED="1444871047093"/>
</node>
<node TEXT="distribute a collection of changes" ID="ID_1607694052" CREATED="1445329243608" MODIFIED="1445329255773">
<node TEXT="rotate, group mult changes so that, e.g., what would have been straight up becomes diagonal" ID="ID_1379672189" CREATED="1441851838998" MODIFIED="1441851853920"/>
</node>
<node TEXT="meta-parameters, |+|-able" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1741283797" CREATED="1445541783981" MODIFIED="1445541797078">
<node TEXT=".redun?" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1683238806" CREATED="1445542048673" MODIFIED="1445542051021"/>
<node TEXT="tidal / |+|, |*| etc include a meta-parameter command (like sound) maybe called meta, and a function from meta-params to actual params (evals after all the |*|, evalg their result)" LOCALIZED_STYLE_REF="default" ID="ID_453353156" CREATED="1445461591748" MODIFIED="1445541787193"/>
<node TEXT="carry meta-instructions across |+|" ID="ID_1020750610" CREATED="1445386529826" MODIFIED="1445386565247">
<node TEXT="eventually interpreted into Dirt instructions" ID="ID_1344537694" CREATED="1445386566426" MODIFIED="1445386571783"/>
</node>
</node>
<node TEXT="intzd" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1294622508" CREATED="1445327487902" MODIFIED="1445327490177">
<node TEXT="keyboard for fast pitch data : tone set, root, melody" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1619441734" CREATED="1444893644362" MODIFIED="1445329059665">
<node TEXT="melody repd scale stepwise or chromatic" ID="ID_586066083" CREATED="1444936852162" MODIFIED="1444936874762"/>
</node>
<node TEXT="? how to eval across multiple lines" ID="ID_61504377" CREATED="1440657063414" MODIFIED="1440657076521"/>
<node TEXT="sample lib" ID="ID_51110727" CREATED="1445326986718" MODIFIED="1445326995014">
<node TEXT="learn it" ID="ID_1282007242" CREATED="1445327002382" MODIFIED="1445327457505"/>
<node TEXT="shorten names" ID="ID_991544171" CREATED="1445327457747" MODIFIED="1445327462062"/>
</node>
<node TEXT="assoc freq to sample" ID="ID_393309043" CREATED="1418804695734" MODIFIED="1418804703169">
<node TEXT="best to associate frequencies to files using non-name data" ID="ID_690490514" CREATED="1417925270755" MODIFIED="1417925285566">
<node TEXT="if that can exist per file" ID="ID_1671871353" CREATED="1418804673614" MODIFIED="1418804681650"/>
</node>
</node>
</node>
</node>
<node TEXT="wishes, emacs" ID="ID_804412843" CREATED="1445328551999" MODIFIED="1445328554630">
<node TEXT="Emacs : unrequire bounding space for block eval" ID="ID_536213895" CREATED="1418848975593" MODIFIED="1445326326996">
<node TEXT="how to remove the restriction that C-c C-e only evaluates a block if the block has a space on either side?" ID="ID_1179798224" CREATED="1417832954847" MODIFIED="1417832982130"/>
</node>
<node TEXT="Emacs : to stop cursor jumping after eval" LOCALIZED_STYLE_REF="default" ID="ID_182106053" CREATED="1415135559506" MODIFIED="1445328171701">
<node TEXT="In &quot;tidal.el&quot; there is a function &quot;tidal-run-line&quot;, which is what&apos;s actually happening when you hit &quot;C-c C-c&quot;.  The last line of the function is &quot;(next-line)&quot;, you can just delete it (or comment it out), and the next time you start Emacs things should behave the way you want." ID="ID_161180168" CREATED="1415135567706" MODIFIED="1415135567989"/>
</node>
<node TEXT="Emacs : run multiple lines separately" LOCALIZED_STYLE_REF="default" ID="ID_1559297030" CREATED="1442340750575" MODIFIED="1445328174283">
<node TEXT="wants them all grouped, no spaces between" ID="ID_689884373" CREATED="1442340763710" MODIFIED="1442340775653"/>
<node TEXT="does not need them highlighted; just put the cursor in them" ID="ID_1354546073" CREATED="1442340773039" MODIFIED="1442340782501"/>
<node TEXT="they must all be one-liners" ID="ID_615957359" CREATED="1442340782743" MODIFIED="1442340788285"/>
<node TEXT="execute code block :tidal emacs" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_819949276" CREATED="1441855182019" MODIFIED="1445328349298">
<node TEXT="needed the phrase to google" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1072857861" CREATED="1441855201719" MODIFIED="1441855206346"/>
</node>
</node>
<node TEXT="surely haskell emacs multi-line eval is already written" LOCALIZED_STYLE_REF="default" ID="ID_1562334572" CREATED="1443419036354" MODIFIED="1445328743962">
<node TEXT="dup to git" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_219155015" CREATED="1443419043471" MODIFIED="1443419045852"/>
</node>
</node>
<node TEXT="wish : Jack realtime" ID="ID_709152274" CREATED="1445328566943" MODIFIED="1445328572061"/>
<node TEXT="exist, to learn" ID="ID_1541057476" CREATED="1445326158710" MODIFIED="1445328442815">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_181646663" STARTINCLINATION="48;0;" ENDINCLINATION="48;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
<node TEXT="schedule changes in advance" ID="ID_474868086" CREATED="1417481091552" MODIFIED="1418803604305">
<node TEXT="a way to describe the clock-state of a pattern, to schedule changes in it" ID="ID_1160105434" CREATED="1417481075248" MODIFIED="1417481090660"/>
</node>
<node TEXT="there exists SuperDirt, written in SuperCollider" ID="ID_1792368323" CREATED="1443118085128" MODIFIED="1443118096056">
<node TEXT="-- Alex on Lurk/Tidal" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_77883230" CREATED="1443118135363" MODIFIED="1443118143895"/>
<node TEXT="&quot;There&apos;s also Julian&apos;s dirt rewrite which is available as a quark package for the upcoming version of SuperCollider.&quot;" ID="ID_1356703427" CREATED="1443118130407" MODIFIED="1443118134844"/>
</node>
</node>
<node TEXT="myst" ID="ID_1750947655" CREATED="1418848304819" MODIFIED="1445329126479">
<font BOLD="true"/>
<node TEXT="* ask" ID="ID_1710074687" CREATED="1418848391959" MODIFIED="1418849456633">
<font BOLD="true"/>
<node TEXT="why ($)?" ID="ID_1029082615" CREATED="1417911045869" MODIFIED="1417911049089">
<node TEXT="d1 $ slowspread ($) [density 2, rev, slow 2, striate 3, (|+| speed &quot;0.8&quot;)]&#xa;    $ sound &quot;[bd*2 [~ bd]] [sn future]*2 cp jvbass*4&quot;" ID="ID_655234045" CREATED="1417911049733" MODIFIED="1417911050281"/>
</node>
<node TEXT="why does mapFsts use map when mapSnds uses fmap?" ID="ID_1649700053" CREATED="1417813448646" MODIFIED="1417813470479">
<node TEXT="http://hackage.haskell.org/package/tidal-0.4.21/docs/src/Sound-Tidal-Utils.html#enumerate" ID="ID_103316258" CREATED="1417813474001" MODIFIED="1417813474001" LINK="http://hackage.haskell.org/package/tidal-0.4.21/docs/src/Sound-Tidal-Utils.html#enumerate"/>
</node>
<node TEXT="&lt; press" ID="ID_1403778171" CREATED="1418848509312" MODIFIED="1418848512162">
<node TEXT="every: when does it start?" ID="ID_1483972381" CREATED="1417901854063" MODIFIED="1417901861227">
<node TEXT="if you say &quot;every 4th rep, do something else&quot;, when does it start counting? does it depend on when you execute the command?" ID="ID_975447801" CREATED="1417901861542" MODIFIED="1417901891099"/>
</node>
<node TEXT="why does sometimesBy introduce gaps?" ID="ID_169513335" CREATED="1417907967491" MODIFIED="1417907974023">
<node TEXT="in this:" ID="ID_645708165" CREATED="1417907978643" MODIFIED="1417907980239"/>
<node TEXT="d1 $ sometimesBy 0.25 (density 2) $ sound &quot;bd*8&quot;" ID="ID_129211954" CREATED="1417907977348" MODIFIED="1417907978135"/>
<node TEXT="Sometimes, as intended, the density rises. But sometimes it falls. Why?" ID="ID_1058341995" CREATED="1417907982467" MODIFIED="1417908082069"/>
</node>
</node>
</node>
<node TEXT="combining patterns" ID="ID_583964001" CREATED="1417911657371" MODIFIED="1417911660039">
<node TEXT="see .md tutorial, section &quot;Combining patterns&quot;" ID="ID_1188195672" CREATED="1417911630780" MODIFIED="1417911638398"/>
</node>
<node TEXT="x-pttn, x-cyc seq&apos;g" ID="ID_930537345" CREATED="1418848434088" MODIFIED="1418848450939">
<node TEXT="seqP" ID="ID_1630022106" CREATED="1417912581377" MODIFIED="1417912583126">
<node TEXT="define start and end times for each of a list of patterns" ID="ID_1707637009" CREATED="1417912589937" MODIFIED="1417912607757"/>
<node TEXT="d1 $ seqP [&#xa;  (0, 128, sound &quot;bd bd*2&quot;),&#xa;  (8, 128, sound &quot;hh*2 [sn cp] cp future*4&quot;)&#xa;]" ID="ID_1037029280" CREATED="1417912613561" MODIFIED="1417912613973"/>
<node TEXT="I can&apos;t get it to work" ID="ID_1646661439" CREATED="1417912614529" MODIFIED="1417912617309"/>
</node>
</node>
<node TEXT="sinewave representation" ID="ID_317202794" CREATED="1417911699970" MODIFIED="1417911703438">
<node TEXT="tidal&gt; sinewave&#xa;[((0 % 1,1 % 1),(0 % 1,1 % 1),0.0)]&#xa;tidal&gt; sinewave1&#xa;[((0 % 1,1 % 1),(0 % 1,1 % 1),0.5)]&#xa;tidal&gt;" ID="ID_1762047792" CREATED="1417911725714" MODIFIED="1417911726261"/>
</node>
<node TEXT="reload in Emacs" ID="ID_969560780" CREATED="1417931320144" MODIFIED="1418848922237">
<node TEXT="reload Tidal lib&apos;s" ID="ID_1696529280" CREATED="1417931326688" MODIFIED="1417931329076">
<node TEXT="if I modify them, which maybe I won&apos;t" ID="ID_619496194" CREATED="1418848929633" MODIFIED="1418848934077"/>
</node>
<node TEXT="reload extensions" ID="ID_828783733" CREATED="1418848934634" MODIFIED="1418848936606">
<node TEXT="i.e. extensions to Tidal, like &quot;pitch&quot;" ID="ID_1817846072" CREATED="1418848937642" MODIFIED="1418848951924"/>
</node>
<node TEXT="reload tidal.el" ID="ID_1997353376" CREATED="1417931329296" MODIFIED="1417931331803"/>
</node>
<node TEXT="syntax, functions" ID="ID_38388722" CREATED="1418849060912" MODIFIED="1418849112574">
<font BOLD="true"/>
<node TEXT="spread&apos;" ID="ID_646207027" CREATED="1417908458243" MODIFIED="1418848598378">
<node TEXT="takes a pattern instead of a list of param&apos;s to cycle the transf&apos;n through" ID="ID_1081743166" CREATED="1417908462841" MODIFIED="1417908474399"/>
</node>
<node TEXT="smash" ID="ID_1259538360" CREATED="1417907659800" MODIFIED="1417907662045"/>
<node TEXT="%" ID="ID_1729941361" CREATED="1414544895848" MODIFIED="1418848678081">
<node TEXT="d1 $ sound &quot;{bd [ht sn, lt mt ht] lt, sn cp}&quot;&#xa;By default, the number of steps in the first part (in this case, 3) is taken as the number of events per cycle used for the other parts. To specify a different number of steps per cycle, you can use %, like this:&#xa;&#xa;d1 $ sound &quot;{bd [ht sn, lt mt ht] lt, sn cp}%5&quot;&#xa;In the above example, five events will be played from each part, in rotation, every cycle." ID="ID_1355110364" CREATED="1414544892536" MODIFIED="1414544893476"/>
</node>
</node>
<node TEXT="&lt; press" ID="ID_1172289139" CREATED="1417909520870" MODIFIED="1418848518529">
<font BOLD="false"/>
<node TEXT="striate&apos;" ID="ID_707636560" CREATED="1417909519240" MODIFIED="1417909520643"/>
<node TEXT="is &quot;vowel&quot; really a param?" ID="ID_1008460064" CREATED="1417833730976" MODIFIED="1417833736836"/>
</node>
<node TEXT="why does Event have two Arcs" ID="ID_1101644859" CREATED="1440757478608" MODIFIED="1445327351802"/>
<node TEXT="markov chains?" ID="ID_1861545630" CREATED="1441852510493" MODIFIED="1445327245866">
<node TEXT="is Lurk thread" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_962056520" CREATED="1445327247638" MODIFIED="1445327252410"/>
<node TEXT="random numbers?" ID="ID_442587779" CREATED="1441852526709" MODIFIED="1441852529220"/>
</node>
<node TEXT="? how are {} polyrhythms repd" ID="ID_232533220" CREATED="1442305240227" MODIFIED="1442305247898">
<node TEXT="sound &quot;{bd ht ~, insect cp cp cp}&quot;" ID="ID_756036036" CREATED="1442305248472" MODIFIED="1442305248472">
<node TEXT="renders this (except as a single line)" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_976134691" CREATED="1442305248472" MODIFIED="1442305253535"/>
<node TEXT="(fromList [(sound,Just (ASCII_String {d_ascii_string = &quot;bd&quot;}))] 0 1/3)" ID="ID_1035894071" CREATED="1442305248472" MODIFIED="1442305248472"/>
<node TEXT="(fromList [(sound,Just (ASCII_String {d_ascii_string = &quot;ht&quot;}))] 1/3 2/3)" ID="ID_476463420" CREATED="1442305248472" MODIFIED="1442305248472"/>
<node TEXT="(fromList [(sound,Just (ASCII_String {d_ascii_string = &quot;insect&quot;}))] 0 1/3)" ID="ID_368202094" CREATED="1442305248472" MODIFIED="1442305248472"/>
<node TEXT="(fromList [(sound,Just (ASCII_String {d_ascii_string = &quot;cp&quot;}))] 1/3 2/3)" ID="ID_671360398" CREATED="1442305248472" MODIFIED="1442305248472"/>
<node TEXT="(fromList [(sound,Just (ASCII_String {d_ascii_string = &quot;cp&quot;}))] 2/3 1)" ID="ID_1432765117" CREATED="1442305248472" MODIFIED="1442305248472"/>
</node>
<node TEXT="what&apos;s displayed there is not enough information to construct its behavior -- it omits that the length of the cycle the first two notes are in is shorter (3/4 as long)" ID="ID_790730497" CREATED="1442305257459" MODIFIED="1442305298570"/>
</node>
<node TEXT="Tidal.strategies v. .pattern" ID="ID_910333847" CREATED="1444605139952" MODIFIED="1444605150516"/>
<node TEXT="? what is OscShape or (instance) kriole" ID="ID_842548640" CREATED="1444787974825" MODIFIED="1444788005904">
<node TEXT="it has a different type sig from pan, yet this is valid: d1 $ slow 2 $ up p1 |*| up &quot;[24]&quot; |*| sound &quot;[wobble,metal]&quot; |+| kriole &quot;1&quot;" ID="ID_1294080538" CREATED="1444788021994" MODIFIED="1444788048791"/>
</node>
</node>
<node TEXT="fractals!" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1632763491" CREATED="1445660673409" MODIFIED="1445660676806"/>
</node>
<node TEXT="new" LOCALIZED_STYLE_REF="styles.subtopic" ID="ID_1937478361" CREATED="1445892304813" MODIFIED="1445892306222">
<node TEXT="with Devon" ID="ID_1822654968" CREATED="1445892628077" MODIFIED="1445892842891">
<font BOLD="true"/>
<node TEXT="mysteries" ID="ID_991662418" CREATED="1445892661909" MODIFIED="1445892663036">
<node TEXT="Tidal" ID="ID_1641215929" CREATED="1445892697141" MODIFIED="1445892697933">
<node TEXT="this/these use this/*/these" ID="ID_1374298947" CREATED="1445895638006" MODIFIED="1445895708573">
<font BOLD="true"/>
<node TEXT="parseRhythm" ID="ID_395942445" CREATED="1445895658814" MODIFIED="1445895716119">
<node ID="ID_79085301" CREATED="1445895716477" MODIFIED="1445895716477"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      pSequence
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="pPolyIn" ID="ID_430530141" CREATED="1445895686502" MODIFIED="1445895687484">
<node TEXT="P.brackets" ID="ID_1315340227" CREATED="1445895743702" MODIFIED="1445895745796"/>
<node TEXT="pSequence" ID="ID_950650758" CREATED="1445895751870" MODIFIED="1445895752485"/>
<node TEXT="pMult" ID="ID_1657682504" CREATED="1445895756821" MODIFIED="1445895757443"/>
</node>
<node TEXT="pPolyOut" ID="ID_1655045429" CREATED="1445895786870" MODIFIED="1445895787492">
<node TEXT="P.braces" ID="ID_1197362926" CREATED="1445895799454" MODIFIED="1445895801325"/>
<node TEXT="pSequenceN" ID="ID_188062722" CREATED="1445895751870" MODIFIED="1445895807516"/>
<node TEXT="pMult" ID="ID_1913126440" CREATED="1445895819279" MODIFIED="1445895819279"/>
<node TEXT="density" ID="ID_1711726485" CREATED="1445895948382" MODIFIED="1445895948916"/>
</node>
<node TEXT="pSequenceN" ID="ID_1803214619" CREATED="1445895977494" MODIFIED="1445895986800">
<node TEXT="density" ID="ID_1190012119" CREATED="1445895986806" MODIFIED="1445895988458"/>
</node>
</node>
<node TEXT="[], (), &lt;&gt;, {}" ID="ID_1799792922" CREATED="1445894667662" MODIFIED="1445894672770">
<node TEXT="angle brackets in pattern string?" ID="ID_1531750425" CREATED="1445894580782" MODIFIED="1445894590067">
<node TEXT="search for &quot;angl&quot; in Parse.hs" ID="ID_843678972" CREATED="1445894594285" MODIFIED="1445894599516"/>
</node>
<node TEXT="brace = polyrhythm" ID="ID_677503084" CREATED="1445894601605" MODIFIED="1445894719737"/>
<node TEXT="(,) = bjorklund" ID="ID_388722766" CREATED="1445894747341" MODIFIED="1445894763217">
<node TEXT="all of that punctuation but the = is part of it -- paren, number, comma, number, end paren" ID="ID_1927895140" CREATED="1445894764044" MODIFIED="1445894783821"/>
</node>
</node>
<node TEXT="show" ID="ID_1482297985" CREATED="1445543765971" MODIFIED="1445892670716"/>
<node TEXT="Event, 2nd arc" ID="ID_209549872" CREATED="1445892670958" MODIFIED="1445892686629"/>
<node TEXT="varts of Parser sigs" LOCALIZED_STYLE_REF="default" ID="ID_903592014" CREATED="1445886989274" MODIFIED="1445892739829">
<node TEXT="pSequenceN :: Parser (Pattern a) -&gt; GenParser Char () (Int, Pattern a)&#xa;parseRhythm :: Parser (Pattern a) -&gt; String -&gt; (Pattern a)&#xa;pRational :: Parser (Pattern Rational)" ID="ID_602593471" CREATED="1445887001338" MODIFIED="1445887028396"/>
</node>
<node TEXT="degrade ? invisible" ID="ID_387882575" CREATED="1445643520297" MODIFIED="1445643552421">
<node TEXT="Prelude Sound.Tidal.Context&gt; sound &quot;bd?&quot;&#xa;(fromList [(sound,Just (ASCII_String {d_ascii_string = &quot;bd&quot;}))] 0 1)&#xa;Prelude Sound.Tidal.Context&gt;" ID="ID_1711024916" CREATED="1445643563936" MODIFIED="1445643565327"/>
</node>
<node TEXT="intOrFloat" LOCALIZED_STYLE_REF="default" ID="ID_575469543" CREATED="1445640401663" MODIFIED="1445893200828">
<node TEXT="it is only ever used to get a float" ID="ID_1117634928" CREATED="1445640403754" MODIFIED="1445640419559"/>
</node>
<node TEXT="pVocable" LOCALIZED_STYLE_REF="default" ID="ID_87108538" CREATED="1445640577931" MODIFIED="1445893200823">
<node TEXT="is this the same as pString?" ID="ID_1240558099" CREATED="1445640581888" MODIFIED="1445640588045"/>
</node>
</node>
<node TEXT="haskell" ID="ID_1073967455" CREATED="1445893169877" MODIFIED="1445893170820">
<node TEXT="ParsecT data declaration" ID="ID_698237443" CREATED="1445889682923" MODIFIED="1445889701416">
<node TEXT="http://hackage.haskell.org/package/parsec-3.1.9/docs/src/Text-Parsec-Prim.html#ParsecT" ID="ID_81333517" CREATED="1445889696245" MODIFIED="1445889696245" LINK="http://hackage.haskell.org/package/parsec-3.1.9/docs/src/Text-Parsec-Prim.html#ParsecT"/>
</node>
<node TEXT="do notation" ID="ID_529840884" CREATED="1445639798368" MODIFIED="1445639800085">
<node TEXT="in a do loop in a parser, what is &quot;return&quot;?" ID="ID_240294230" CREATED="1445639809342" MODIFIED="1445639838566"/>
</node>
<node TEXT="GenTokenParser : naturalOrFloat, lexeme" LOCALIZED_STYLE_REF="default" ID="ID_1405554113" CREATED="1445720591923" MODIFIED="1445720725111">
<node TEXT="http://hackage.haskell.org/package/parsec-3.1.6/docs/Text-ParserCombinators-Parsec-Token.html" ID="ID_1014950276" CREATED="1445720732450" MODIFIED="1445720732450" LINK="http://hackage.haskell.org/package/parsec-3.1.6/docs/Text-ParserCombinators-Parsec-Token.html"/>
</node>
</node>
</node>
<node TEXT="want to implem" ID="ID_601950384" CREATED="1445892594685" MODIFIED="1445892596628">
<node TEXT="nested show (pattern -&gt; event|arc|time" ID="ID_1100793091" CREATED="1445544077324" MODIFIED="1445544084010"/>
</node>
</node>
<node TEXT="there&apos;s a Dirt that uses Pulse" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1206628748" CREATED="1445898273897" MODIFIED="1445898279199">
<node TEXT="no need to switch" ID="ID_823962616" CREATED="1445898285664" MODIFIED="1445898289442"/>
</node>
<node TEXT="git with ssh, no need for pwd every time" ID="ID_85852019" CREATED="1445899048406" MODIFIED="1445899054458"/>
<node TEXT="want to implem" ID="ID_771341115" CREATED="1445892762956" MODIFIED="1445892764898">
<node TEXT="count beats away from euclid" LOCALIZED_STYLE_REF="default" ID="ID_340340855" CREATED="1445885701234" MODIFIED="1445892774933">
<node TEXT="give it a measure like income inequality for duration" ID="ID_1726488204" CREATED="1445885709258" MODIFIED="1445885729227"/>
</node>
</node>
<node TEXT="want to use" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_342138973" CREATED="1445892780277" MODIFIED="1445905694618">
<node TEXT="reminders, what stuff is" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1891090572" CREATED="1445884331330" MODIFIED="1445892810090">
<node TEXT="|/|, |-|" ID="ID_645809" CREATED="1445884332929" MODIFIED="1445884337395"/>
<node TEXT="% {} is same length" ID="ID_673640020" CREATED="1445884537570" MODIFIED="1445884548383"/>
</node>
<node TEXT="stut&apos;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1259566984" CREATED="1445885563675" MODIFIED="1445892786297">
<node TEXT="generalizes echo" ID="ID_1937507135" CREATED="1445905700554" MODIFIED="1445905705601">
<node TEXT="each echo applies an operator again" ID="ID_1824872952" CREATED="1445885572659" MODIFIED="1445885580707"/>
</node>
<node TEXT="can cycle through operators" ID="ID_662826176" CREATED="1445905707250" MODIFIED="1445905710024">
<node TEXT="d1 $ slowspread (stut&apos; 8 (0.125/2)) [(|*| up &quot;2&quot;), (|*| shape &quot;0.9&quot;),&#xa;(|*| speed &quot;-0.9&quot;)] $ sound &quot;drum(3,8)&quot;" ID="ID_1014788313" CREATED="1445905696709" MODIFIED="1445905697506"/>
</node>
</node>
<node TEXT="as opposed to coding it" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_54363499" CREATED="1445892266149" MODIFIED="1445892270192"/>
<node TEXT="successively *add* something to a frequency" ID="ID_534692102" CREATED="1445885640490" MODIFIED="1445885650026">
<node TEXT="something relatively prime" ID="ID_549161731" CREATED="1445885664321" MODIFIED="1445885667690"/>
</node>
<node TEXT="vim  :  fast, more instrument-like" ID="ID_1448078045" CREATED="1445885791873" MODIFIED="1445892907588"/>
<node TEXT="a minor scale with one narrow of two halfsteps" ID="ID_1115831448" CREATED="1445886389218" MODIFIED="1445886415427"/>
</node>
<node TEXT="how to document" LOCALIZED_STYLE_REF="default" ID="ID_138316808" CREATED="1445887173409" MODIFIED="1445892635195">
<node TEXT="&quot;document all the functions! (and yes, we&apos;re working on it, please send pull requests if you can explain something that isn&apos;t yet documented https://github.com/tidalcycles/tidalcycles.github.io/issues/20)" ID="ID_1374239096" CREATED="1445887167770" MODIFIED="1445887172520"/>
</node>
<node TEXT="reprog self" ID="ID_1452931113" CREATED="1445892925013" MODIFIED="1445892933719">
<node TEXT="program &amp; ~know" ID="ID_933505664" CREATED="1445885419946" MODIFIED="1445885429727">
<node TEXT="If I loosened the threshold of understanding at which I will code something" ID="ID_1535085293" CREATED="1445885431634" MODIFIED="1445885518287"/>
<node ID="ID_691784671" CREATED="1445885520018" MODIFIED="1445885520018"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      playing polyrhythms in two chords a major second apart, not knowing exactly when which sounds will harmonize but knowing it will sound pretty good)
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="" ID="ID_201106711" CREATED="1445885521986" MODIFIED="1445885521986"/>
</node>
</node>
</node>
<node TEXT="sources" LOCALIZED_STYLE_REF="default" ID="ID_433485157" CREATED="1418796355827" MODIFIED="1445326906686">
<node TEXT="lib&apos;s" ID="ID_673376974" CREATED="1417929914258" MODIFIED="1418796359102">
<node TEXT="cho" ID="ID_1889949851" CREATED="1417820050801" MODIFIED="1418796404231">
<node TEXT="* pending" ID="ID_961861159" CREATED="1417820973713" MODIFIED="1417820979749">
<node TEXT="Sound.Tidal.Pattern" ID="ID_1024642809" CREATED="1417820974515" MODIFIED="1418805407883">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_159833597" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1147139443" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="Sound.Tidal.Parse" ID="ID_159833597" CREATED="1417820974515" MODIFIED="1417820974515">
<node TEXT="imports Pattern" ID="ID_1811196013" CREATED="1418805377981" MODIFIED="1418805381768"/>
</node>
<node TEXT="Sound.Tidal.Strategies" ID="ID_1147139443" CREATED="1417820974516" MODIFIED="1417820974516">
<node TEXT="imports many" ID="ID_551391629" CREATED="1418805413092" MODIFIED="1418805414936"/>
<node TEXT="import Sound.Tidal.Dirt&#xa;import Sound.Tidal.Pattern&#xa;import Sound.Tidal.Stream&#xa;import Sound.Tidal.Time&#xa;import Sound.Tidal.Utils" ID="ID_1973456483" CREATED="1418805415540" MODIFIED="1418805416120"/>
</node>
</node>
<node TEXT="skipped" ID="ID_1425800116" CREATED="1417820963450" MODIFIED="1417820964565">
<node TEXT="b/c/ they look like implementation, not interface" ID="ID_478020215" CREATED="1417820084265" MODIFIED="1417820291281"/>
<node TEXT="Dirt" ID="ID_1684672036" CREATED="1417820292758" MODIFIED="1417820293449"/>
<node TEXT="Stream" ID="ID_91519689" CREATED="1417820461698" MODIFIED="1417820464710"/>
<node TEXT="Tempo" ID="ID_1127457523" CREATED="1417820054882" MODIFIED="1417820055861"/>
</node>
</node>
<node TEXT="lib&apos;s" ID="ID_982262612" CREATED="1418796404411" MODIFIED="1418796901314">
<node TEXT="https://hackage.haskell.org/package/tidal" ID="ID_1776905132" CREATED="1417929562191" MODIFIED="1417929562191" LINK="https://hackage.haskell.org/package/tidal"/>
<node TEXT="Stream" ID="ID_937819266" CREATED="1417929912001" MODIFIED="1417929914068">
<node TEXT="defines |+|" ID="ID_1933516369" CREATED="1417929918833" MODIFIED="1417929927965"/>
</node>
<node TEXT="Pattern (ready)" ID="ID_532932728" CREATED="1417929945129" MODIFIED="1418420292070">
<node TEXT="req&apos;s Util and Time, which I have read" ID="ID_1830867346" CREATED="1418420292555" MODIFIED="1418420302558"/>
</node>
<node TEXT="Parse" ID="ID_1036252633" CREATED="1417929946416" MODIFIED="1417929948212"/>
<node TEXT="Strategies" ID="ID_1767880097" CREATED="1417929948417" MODIFIED="1417929949732">
<node TEXT="defines stutter and sinewave" ID="ID_650711967" CREATED="1417929972032" MODIFIED="1417929976715"/>
</node>
</node>
</node>
<node TEXT="github/.md (main tutorial)" ID="ID_1714286820" CREATED="1417821323414" MODIFIED="1417929590226">
<node TEXT="resume at section called &quot;Pattern transformers&quot;" ID="ID_1263321820" CREATED="1414570810371" MODIFIED="1417902342610"/>
<node TEXT="https://github.com/yaxu/Tidal/blob/master/doc/tidal.md" ID="ID_1259767770" CREATED="1417821301934" MODIFIED="1417821301934" LINK="https://github.com/yaxu/Tidal/blob/master/doc/tidal.md"/>
</node>
<node TEXT="live coders|tidalers on &quot;slack&quot; (irc?)" ID="ID_949977542" CREATED="1443725324568" MODIFIED="1443725334523">
<node TEXT="quoting alex" ID="ID_1177934844" CREATED="1443725338754" MODIFIED="1443725341563"/>
<node ID="ID_732005527" CREATED="1443725335556" MODIFIED="1443725335556" LINK="https://livecode.slack.com/"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <font size="12.8px" face="arial, sans-serif" color="rgb(34, 34, 34)"><br style="line-height: normal; letter-spacing: normal; word-spacing: 0px; font-variant: normal; background-color: rgb(255, 255, 255); text-transform: none; white-space: normal; text-indent: 0px" align="start" content="text/html; charset=utf-8" http-equiv="content-type"/>
    <span style="line-height: normal; display: inline !important; font-weight: normal; letter-spacing: normal; float: none; font-variant: normal; word-spacing: 0px; text-align: start; background-color: rgb(255, 255, 255); font-style: normal; font-size: 12.8px; text-transform: none; color: rgb(34, 34, 34); white-space: normal; text-indent: 0px; font-family: arial, sans-serif">There's a livecode slack channel that Mike Hodnick and I made:</span><br style="line-height: normal; letter-spacing: normal; word-spacing: 0px; font-variant: normal; background-color: rgb(255, 255, 255); text-transform: none; white-space: normal; text-indent: 0px" align="start"/><span style="line-height: normal; display: inline !important; font-weight: normal; letter-spacing: normal; float: none; font-variant: normal; word-spacing: 0px; text-align: start; background-color: rgb(255, 255, 255); font-style: normal; font-size: 12.8px; text-transform: none; color: rgb(34, 34, 34); white-space: normal; text-indent: 0px; font-family: arial, sans-serif">&#160;</span></font><a target="_blank" style="line-height: normal; font-weight: normal; letter-spacing: normal; font-variant: normal; word-spacing: 0px; text-align: start; background-color: rgb(255, 255, 255); font-style: normal; font-size: 12.8px; text-transform: none; color: rgb(17, 85, 204); white-space: normal; text-indent: 0px; font-family: arial, sans-serif" href="https://livecode.slack.com/" rel="noreferrer"><font size="12.8px" face="arial, sans-serif" color="rgb(17, 85, 204)">https://livecode.slack.com</font></a> 
  </body>
</html>
</richcontent>
</node>
<node ID="ID_219202507" CREATED="1443809159740" MODIFIED="1443809159740" LINK="http://livecode.slack.com/"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <font size="12.8px" color="rgb(34, 34, 34)" face="arial, sans-serif"><br http-equiv="content-type" content="text/html; charset=utf-8" style="word-spacing: 0px; font-variant: normal; line-height: normal; white-space: normal; text-indent: 0px; background-color: rgb(255, 255, 255); letter-spacing: normal; text-transform: none" align="start"/>
    <span style="font-size: 12.8px; word-spacing: 0px; color: rgb(34, 34, 34); font-variant: normal; line-height: normal; white-space: normal; text-indent: 0px; text-align: start; float: none; background-color: rgb(255, 255, 255); letter-spacing: normal; font-weight: normal; text-transform: none; display: inline !important; font-family: arial, sans-serif; font-style: normal">If you'd like to join</span><span class="Apple-converted-space">&#160;</span></font><a target="_blank" rel="noreferrer" style="font-size: 12.8px; word-spacing: 0px; color: rgb(17, 85, 204); font-variant: normal; line-height: normal; white-space: normal; text-indent: 0px; text-align: start; background-color: rgb(255, 255, 255); letter-spacing: normal; font-weight: normal; text-transform: none; font-family: arial, sans-serif; font-style: normal" href="http://livecode.slack.com/"><font size="12.8px" color="rgb(17, 85, 204)" face="arial, sans-serif">livecode.slack.com</font></a><font size="12.8px" color="rgb(34, 34, 34)" face="arial, sans-serif"><span class="Apple-converted-space">&#160;</span><span style="font-size: 12.8px; word-spacing: 0px; color: rgb(34, 34, 34); font-variant: normal; line-height: normal; white-space: normal; text-indent: 0px; text-align: start; float: none; background-color: rgb(255, 255, 255); letter-spacing: normal; font-weight: normal; text-transform: none; display: inline !important; font-family: arial, sans-serif; font-style: normal">and the tidal channels please</span><br style="word-spacing: 0px; font-variant: normal; line-height: normal; white-space: normal; text-indent: 0px; background-color: rgb(255, 255, 255); letter-spacing: normal; text-transform: none" align="start"/><span style="font-size: 12.8px; word-spacing: 0px; color: rgb(34, 34, 34); font-variant: normal; line-height: normal; white-space: normal; text-indent: 0px; text-align: start; float: none; background-color: rgb(255, 255, 255); letter-spacing: normal; font-weight: normal; text-transform: none; display: inline !important; font-family: arial, sans-serif; font-style: normal">email me (or Anny or Mike).</span><br style="word-spacing: 0px; font-variant: normal; line-height: normal; white-space: normal; text-indent: 0px; background-color: rgb(255, 255, 255); letter-spacing: normal; text-transform: none" align="start"/></font> 
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="wiki" ID="ID_487247861" CREATED="1417821628886" MODIFIED="1417821630754">
<node TEXT="https://github.com/yaxu/Tidal/wiki" ID="ID_1647424779" CREATED="1417821631040" MODIFIED="1417821631040" LINK="https://github.com/yaxu/Tidal/wiki"/>
</node>
<node TEXT="tutorial on Git (unread)" LOCALIZED_STYLE_REF="default" ID="ID_178476156" CREATED="1443378356243" MODIFIED="1445328613262">
<node TEXT="https://github.com/tidalcycles/Tidal/blob/master/tutorial/tutorial.md" ID="ID_1284051164" CREATED="1443378361813" MODIFIED="1443378361813" LINK="https://github.com/tidalcycles/Tidal/blob/master/tutorial/tutorial.md"/>
</node>
<node TEXT="sample code" ID="ID_1952483856" CREATED="1417822737476" MODIFIED="1417822746561">
<node TEXT="i am a computer: music + source" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1134564436" CREATED="1417809177466" MODIFIED="1445328606322">
<node TEXT="https://github.com/kindohm/i-am-a-computer" ID="ID_1981166236" CREATED="1417809179757" MODIFIED="1417809179757" LINK="https://github.com/kindohm/i-am-a-computer"/>
<node TEXT="https://xylemrecords.bandcamp.com/album/i-am-a-computer" ID="ID_358593029" CREATED="1417809192443" MODIFIED="1417809192443" LINK="https://xylemrecords.bandcamp.com/album/i-am-a-computer"/>
</node>
<node TEXT="http://365tidalpatterns.tumblr.com/" ID="ID_604896852" CREATED="1417822737476" MODIFIED="1417822737476" LINK="http://365tidalpatterns.tumblr.com/"/>
<node TEXT="http://tidalexperiments.tumblr.com/" ID="ID_1094197411" CREATED="1417822737476" MODIFIED="1417822737476" LINK="http://tidalexperiments.tumblr.com/"/>
<node TEXT="https://twitter.com/tidalcycles" ID="ID_1066807947" CREATED="1417822737476" MODIFIED="1417822737476" LINK="https://twitter.com/tidalcycles"/>
<node TEXT="album: I am a computer, with audio" ID="ID_21234752" CREATED="1417822757947" MODIFIED="1417822782520">
<node TEXT="https://xylemrecords.bandcamp.com/album/i-am-a-computer" ID="ID_245034775" CREATED="1417822773723" MODIFIED="1417822773723" LINK="https://xylemrecords.bandcamp.com/album/i-am-a-computer"/>
<node TEXT="https://github.com/kindohm/i-am-a-computer/blob/master/10-my-maker-frees-me.tidal" ID="ID_305275218" CREATED="1417822763444" MODIFIED="1417822763444" LINK="https://github.com/kindohm/i-am-a-computer/blob/master/10-my-maker-frees-me.tidal"/>
</node>
</node>
<node TEXT="supercollider &amp; mac" ID="ID_1646482763" CREATED="1440708442105" MODIFIED="1440708452501">
<node TEXT="http://lurk.org/groups/tidal/messages/topic/3iBz4a0O1TQ1GM0UDQQfG0" ID="ID_541945897" CREATED="1440708447192" MODIFIED="1440708447193" LINK="http://lurk.org/groups/tidal/messages/topic/3iBz4a0O1TQ1GM0UDQQfG0"/>
</node>
</node>
<node TEXT="functions, u" ID="ID_181646663" CREATED="1445327084607" MODIFIED="1445328212611">
<font BOLD="true"/>
<node TEXT="sounds I like" ID="ID_794323897" CREATED="1418803654933" MODIFIED="1445328076615">
<font BOLD="true"/>
<node TEXT="intzd" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_609727923" CREATED="1445327275927" MODIFIED="1445327277888">
<node TEXT="striate" ID="ID_605700144" CREATED="1417909176254" MODIFIED="1417909177825">
<node TEXT="d1 $ striate 3 $ sound &quot;ho ho:2 ho:3 hc&quot;" ID="ID_234478103" CREATED="1417909184037" MODIFIED="1417909184657"/>
</node>
</node>
<node TEXT="samples" ID="ID_1868619755" CREATED="1414545351848" MODIFIED="1418803663248">
<font BOLD="false"/>
<node TEXT="feel/sub" ID="ID_1018351101" CREATED="1414545355480" MODIFIED="1414545529091">
<node TEXT="how to represent?" ID="ID_693099839" CREATED="1414545529349" MODIFIED="1414545531320"/>
</node>
<node TEXT="bleep/{bleep boip breathy-blip}={4-6}" ID="ID_1214852578" CREATED="1417847304016" MODIFIED="1417847377667">
<node TEXT="that is, the folder and file have the same name" ID="ID_1482636579" CREATED="1417847320392" MODIFIED="1417847325396"/>
</node>
<node TEXT="d1 $ sound &quot;arpy arp feel*4 arpy*4&quot;" ID="ID_113612791" CREATED="1417905494079" MODIFIED="1417905494516"/>
</node>
</node>
<node TEXT="use (generalize!) Bjorklund|Euclid patterns" ID="ID_1768986779" CREATED="1441824391408" MODIFIED="1445327078905">
<node TEXT="Bjorklund and Euclid Patterns&#xa;If you give two numbers in parenthesis after an element in a pattern, then Tidal will distribute the first number of sounds equally across the second number of steps:&#xa;&#xa;d1 $ sound &quot;can(5,8)&quot;" ID="ID_732113421" CREATED="1441824418208" MODIFIED="1441824420409"/>
</node>
<node TEXT="solo" ID="ID_1522026692" CREATED="1441824454228" MODIFIED="1441824457555">
<node TEXT="solo $ d1 $ sound &quot;bd sn&quot;" ID="ID_1195067016" CREATED="1441824475270" MODIFIED="1441824476137"/>
<node TEXT="not avail in plain ghci" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1698884810" CREATED="1445327114966" MODIFIED="1445327120073"/>
</node>
<node TEXT="silence needs no $" ID="ID_1665673337" CREATED="1441824484235" MODIFIED="1441824487411">
<node TEXT="d1 silence" ID="ID_777644586" CREATED="1441824488670" MODIFIED="1441824490702"/>
</node>
<node TEXT="multiply sinewave by pattern" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_996367847" CREATED="1441824859668" MODIFIED="1445327184642">
<node TEXT="d1 $ (brak (sound &quot;bd sn:2 bd sn&quot;))&#xa;   |+| pan ((*) &lt;$&gt; sinewave1 &lt;*&gt; (slow 8 $ &quot;0 0.25 0.75&quot;))" ID="ID_1625875798" CREATED="1441824855771" MODIFIED="1441824857691"/>
</node>
<node TEXT="preplace ?" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1077425706" CREATED="1440757210274" MODIFIED="1445328479186">
<node TEXT="&lt;-&gt; (?= prorate) =$ apply melody to rhythm" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_688104434" CREATED="1441874970923" MODIFIED="1441875717110">
<node TEXT="quoting Lurk/Tidal, thread &quot;MIDI numbers easy system&quot;" ID="ID_846533568" CREATED="1441874980635" MODIFIED="1441875000649"/>
<node TEXT="This also works nicely with the new prorate functions:&#xa;&#xa;k1 $ note (&quot;1 ~ [1 1] 1&quot; &lt;~&gt; ((+59) &lt;$&gt; (run 12)))&#xa;&#xa;Which applies the melody to the given rhythm." ID="ID_478717373" CREATED="1441874978794" MODIFIED="1441874979561"/>
<node TEXT="... Mike,&#xa;&#xa; &lt;~&gt; is a shorthand syntax for preplace (1,1) so it assumes each pattern is one cycle long. So if you are using &quot;every 3&quot; you&apos;d want to use preplace (1,3) to make the rhythm pattern be applied over the cycles of the value pattern to make your &quot;change&quot; appear. Otherwise" ID="ID_1109800567" CREATED="1441875473227" MODIFIED="1441875475794"/>
</node>
<node TEXT="more" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_157676914" CREATED="1445328484391" MODIFIED="1445328487473">
<node TEXT="@preplace (blen, plen) beats values@ combines the timing of @beats@ with the values&#xa;of @values@. Other ways of saying this are:&#xa;* sequential convolution&#xa;* @values@ quantized to @beats@.&#xa;&#xa;Examples:&#xa;@&#xa;d1 $ sound $ preplace (1,1) &quot;x [~ x] x x&quot; &quot;bd sn&quot;&#xa;d1 $ sound $ preplace (1,1) &quot;x(3,8)&quot; &quot;bd sn&quot;&#xa;d1 $ sound $ &quot;x(3,8)&quot; &lt;~&gt; &quot;bd sn&quot;&#xa;d1 $ sound &quot;[jvbass jvbass:5]*3&quot; |+| (shape $ &quot;1 1 1 1 1&quot; &lt;~&gt; &quot;0.2 0.9&quot;)&#xa;@" ID="ID_197038780" CREATED="1440757219028" MODIFIED="1455313608667"/>
</node>
<node TEXT="the numberic pair argument to preplace seems to do nothing" ID="ID_788442259" CREATED="1442372963582" MODIFIED="1442372972829">
<node TEXT="d1 $ sound $ preplace (1,4) &quot;x [~ x] x&quot; &quot;bd sn&quot;" ID="ID_1643279709" CREATED="1442372979262" MODIFIED="1442372979262"/>
</node>
</node>
<node TEXT="Tidal.Time (doAt)" ID="ID_1862916275" CREATED="1441864391860" MODIFIED="1445328032030">
<node TEXT="thread &quot;checking the time and scheduling in advance&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1379763478" CREATED="1441914171354" MODIFIED="1445327217792"/>
<node TEXT="working mysterious; effect seems clear from type sig" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_752239706" CREATED="1441870116119" MODIFIED="1441870134458"/>
<node TEXT="Tidal.Time" ID="ID_423540654" CREATED="1441868048446" MODIFIED="1441870107122">
<node TEXT="sam :: Time -&gt; Time" ID="ID_1195049873" CREATED="1441864451532" MODIFIED="1441864452474"/>
<node TEXT="nextSam :: Time -&gt; Time" ID="ID_1886494681" CREATED="1441864440988" MODIFIED="1441864441818"/>
<node TEXT="cyclePos :: Time -&gt; Time" ID="ID_412838566" CREATED="1441864448972" MODIFIED="1441864449971"/>
</node>
<node TEXT="Tidal.Stream.doAt" ID="ID_239636459" CREATED="1441868070935" MODIFIED="1441870103826">
<node TEXT="doAt :: RealFrac s =&gt; s -&gt; IO () -&gt; IO ()" ID="ID_796711414" CREATED="1441868075166" MODIFIED="1441868075837"/>
<node TEXT="uses Date.Time.getCurrentTime" ID="ID_68602424" CREATED="1441868315591" MODIFIED="1441870099086"/>
</node>
</node>
<node TEXT="for melody, duration : monopph cut groups" ID="ID_1378132513" CREATED="1440884770612" MODIFIED="1445327310922">
<node TEXT="tidal sample duration problem ?solved : one waveform file, unnecj long (5s?), with choke*; use amplitude also. choke implies monophonic voices" ID="ID_353639670" CREATED="1440884770613" MODIFIED="1440884770613">
<node TEXT="* choke = cut group" ID="ID_1711848491" CREATED="1440884770613" MODIFIED="1440884770613"/>
<node TEXT="choke prev sample, avoid overlap notes" ID="ID_1566734493" CREATED="1440884770613" MODIFIED="1440884770613"/>
</node>
</node>
<node TEXT="* Pattern manip" LOCALIZED_STYLE_REF="default" ID="ID_1128197862" CREATED="1440713334962" MODIFIED="1445327734721">
<node TEXT="simultaneity" ID="ID_1920623381" CREATED="1440655611193" MODIFIED="1440655697696">
<node TEXT="d1 $ stack [&#xa;  sound &quot;bd bd*2&quot;,&#xa;  sound &quot;hh*2 [sn cp] cp future*4&quot;,&#xa;  sound (samples &quot;arpy*8&quot;, (run 16))&#xa;]" ID="ID_641204390" CREATED="1440655700090" MODIFIED="1440655701125"/>
</node>
<node TEXT="append varys" ID="ID_1067046501" CREATED="1440713340306" MODIFIED="1445327655643">
<node TEXT="append :: Pattern a -&gt; Pattern a -&gt; Pattern a&#xa;append a b = cat [a,b]" ID="ID_1077338993" CREATED="1440713358689" MODIFIED="1440713361905"/>
<node TEXT="append&apos; :: Pattern a -&gt; Pattern a -&gt; Pattern a&#xa;append&apos; a b  = slow 2 $ cat [a,b]" ID="ID_1211933597" CREATED="1440713370224" MODIFIED="1440713371284">
<node TEXT="so that they take two cycles, not one" ID="ID_1822409017" CREATED="1440713373873" MODIFIED="1440713379932"/>
</node>
</node>
<node TEXT="playWhen" ID="ID_1825637908" CREATED="1440717718426" MODIFIED="1440717721614"/>
<node TEXT="* -&gt;&gt; and &lt;&lt;- rotate by events, not time" ID="ID_465502509" CREATED="1440718596945" MODIFIED="1440718619110"/>
</node>
<node TEXT="* Pattern gen (sine, env)" ID="ID_1994901083" CREATED="1440717973869" MODIFIED="1445327749438">
<node TEXT="sinewave, sinewave1 = sine, sine1" ID="ID_341789749" CREATED="1440717978732" MODIFIED="1440718029354">
<node TEXT="the latter is from [0,1] rather than [-1,1]" ID="ID_751962515" CREATED="1440717984501" MODIFIED="1440717991640"/>
</node>
<node TEXT="sineAmp n = sine1 + n" ID="ID_952146389" CREATED="1440718049584" MODIFIED="1440718056846"/>
<node TEXT="saw, tri, square : like sine" ID="ID_1130738761" CREATED="1440718115978" MODIFIED="1440718135277"/>
<node TEXT="envL = ramps 0 to 1, then stays at 1 for future cycles" ID="ID_1621514220" CREATED="1440718202625" MODIFIED="1440718216603"/>
</node>
<node TEXT="* groupByTime" ID="ID_746540709" CREATED="1440756963679" MODIFIED="1440756968026">
<node TEXT="note: Event /= Pattern" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_842138333" CREATED="1445327858135" MODIFIED="1445327893934"/>
<node TEXT="groupByTime :: [Event a] -&gt; [Event [a]]" ID="ID_1389443640" CREATED="1445327855456" MODIFIED="1445327856309"/>
</node>
<node TEXT="zoom &amp; compress  :: Arc -&gt; Pattern a -&gt; Pattern a" ID="ID_1230139280" CREATED="1440757011137" MODIFIED="1440757023148"/>
<node TEXT="? obscure" ID="ID_1705065319" CREATED="1414566533882" MODIFIED="1418848340398">
<node TEXT=". = I saw these not in the doc&apos;n, but elsewhere" ID="ID_1790029382" CREATED="1414570375153" MODIFIED="1414570399668">
<font BOLD="false"/>
</node>
<node TEXT="retrig" ID="ID_1941061943" CREATED="1414570414345" MODIFIED="1414570415428"/>
<node TEXT="seqP" ID="ID_1172100554" CREATED="1414570415657" MODIFIED="1414570420493"/>
<node TEXT="fadeIn, fadeOut" ID="ID_388968025" CREATED="1414570462743" MODIFIED="1414570466499"/>
<node TEXT="envL" ID="ID_397700058" CREATED="1414570483959" MODIFIED="1414570485379">
<node TEXT="envL progresses from 0 to 1 over a single cycle, then holds at 1 forever.&#xa;&#xa;So to make it go from 0 to 1 over four cycles, then stick at 1 you do&#xa;&#xa;slow 4 envL&#xa;&#xa;To make it go from 0.5 to 2 instead you&apos;d do&#xa;&#xa;scale 0.5 2 (slow 4 envL)" ID="ID_1681649751" CREATED="1414570551422" MODIFIED="1414570552434"/>
</node>
<node TEXT="wordsBy" ID="ID_1113241740" CREATED="1417816366067" MODIFIED="1417816367646">
<node TEXT="Sound.Tidal.Utils" ID="ID_1589707438" CREATED="1418796830793" MODIFIED="1418796830793"/>
<node TEXT="*Main&gt; wordsBy (&lt; 3) [1,4,6,1,4,5,1,6,6]&#xa;[[4,6],[4,5],[6,6]]" ID="ID_91754956" CREATED="1417816363602" MODIFIED="1417816364174"/>
</node>
</node>
<node TEXT="append&apos; preserves duration" ID="ID_1253390046" CREATED="1442126773312" MODIFIED="1442126773312"/>
<node TEXT="overlay: concurrent" ID="ID_853201133" CREATED="1442552594078" MODIFIED="1442552599376">
<node TEXT="Pattern -&gt; Pattern -&gt; Pattern" ID="ID_1631156414" CREATED="1442552601954" MODIFIED="1442552607491"/>
</node>
<node TEXT="mortal : finite duration" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1908261699" CREATED="1443378839197" MODIFIED="1445328628107">
<font BOLD="false"/>
<node TEXT="This will play the new pattern for 8 cycles and then degrade it&#xa;(increasingly filter out events) over 4 cycles until there&apos;s nothing&#xa;left&#xa;&#xa;  t1 (mortal 8 4) $ sound &quot;bd(5,8)&quot;" ID="ID_1366919809" CREATED="1443387148786" MODIFIED="1443387149649"/>
</node>
<node TEXT="shift wave" ID="ID_1350356020" CREATED="1443950094709" MODIFIED="1443950096153">
<node TEXT="((+0.2)&lt;$&gt;slow 8 sine1))" ID="ID_1311642605" CREATED="1443950096592" MODIFIED="1443950096592"/>
</node>
<node TEXT="spread" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1110764950" CREATED="1443950345284" MODIFIED="1443950346504">
<node TEXT="example" LOCALIZED_STYLE_REF="default" ID="ID_1446112430" CREATED="1443950383908" MODIFIED="1444115137595">
<node TEXT="d1 $ spread slow [2,4%3] $ sound &quot;ho ho:2 ho:3 hc&quot;" ID="ID_255202491" CREATED="1443950366732" MODIFIED="1443950367694"/>
</node>
<node TEXT="type" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_650636036" CREATED="1444115138125" MODIFIED="1444115151243">
<node TEXT="spread :: (a -&gt; t -&gt; Pattern b) -&gt; [a] -&gt; t -&gt; Pattern b" ID="ID_1771193344" CREATED="1444114901325" MODIFIED="1444114902179"/>
<node TEXT="the t will usually be a Pattern" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1013140105" CREATED="1444115153842" MODIFIED="1444115170428"/>
</node>
</node>
</node>
<node TEXT="components" ID="ID_792550530" CREATED="1445328782903" MODIFIED="1445328785887">
<font BOLD="true"/>
<node TEXT="**Parse.hs" LOCALIZED_STYLE_REF="default" ID="ID_497510138" CREATED="1443398301331" MODIFIED="1445329402825">
<node TEXT="myst" ID="ID_706622089" CREATED="1445465980679" MODIFIED="1445465981589">
<node TEXT="instance Functor Pattern where" ID="ID_951239088" CREATED="1445465982113" MODIFIED="1445465982113">
<node TEXT="fmap f (Pattern a) = Pattern $ fmap (fmap (mapThd&apos; f)) a" ID="ID_1032594880" CREATED="1445465982113" MODIFIED="1445465982113"/>
</node>
<node TEXT="GenParser Char () (Int, Pattern a)" ID="ID_238264484" CREATED="1445502364985" MODIFIED="1445502366655">
<node TEXT="example" ID="ID_1761739035" CREATED="1445502380473" MODIFIED="1445502381800">
<node TEXT="pSequenceN :: Parser (Pattern a) -&gt; GenParser Char () (Int, Pattern a)" ID="ID_1673258742" CREATED="1445502382631" MODIFIED="1445502382631"/>
</node>
<node TEXT="in what sense is Char a stream?" ID="ID_736865490" CREATED="1445502395185" MODIFIED="1445502402695"/>
</node>
<node TEXT="&quot;stream&quot; is not a class?" ID="ID_1763219902" CREATED="1445502487793" MODIFIED="1445502493240">
<node TEXT="are there no restrictions on the sort of thing (stream) a parser reads from? I was expecting a class restriction like &quot;Stream s =&gt; ParserT s u m a ...&quot; but see non e" ID="ID_1107587548" CREATED="1445502494095" MODIFIED="1445502549688"/>
</node>
<node TEXT="I removed an unused function def, &quot;r&quot;." ID="ID_1744590844" CREATED="1445499391231" MODIFIED="1445541330506">
<node TEXT="r :: Parseable a =&gt; String -&gt; Pattern a -&gt; IO (Pattern a) -- unused!&#xa;r s orig = do E.handle&#xa;                (\err -&gt; do putStrLn (show (err :: E.SomeException))&#xa;                            return orig&#xa;                )&#xa;                (return $ p s)" ID="ID_256971005" CREATED="1445499404616" MODIFIED="1445499405852"/>
</node>
</node>
<node TEXT="imports" ID="ID_857054638" CREATED="1443398347421" MODIFIED="1443398348440">
<node TEXT="Parsec" ID="ID_30100385" CREATED="1443398335955" MODIFIED="1443398343515">
<node TEXT="https://hackage.haskell.org/package/parsec-3.1.9/docs/Text-ParserCombinators-Parsec.html" ID="ID_201899254" CREATED="1443398334655" MODIFIED="1443398334655" LINK="https://hackage.haskell.org/package/parsec-3.1.9/docs/Text-ParserCombinators-Parsec.html"/>
</node>
<node TEXT="Parsec.Token as P" ID="ID_1644913352" CREATED="1443398357867" MODIFIED="1443398363035">
<node TEXT="https://hackage.haskell.org/package/parsec-3.1.9/docs/Text-ParserCombinators-Parsec-Token.html" ID="ID_599296724" CREATED="1443398357195" MODIFIED="1443398357195" LINK="https://hackage.haskell.org/package/parsec-3.1.9/docs/Text-ParserCombinators-Parsec-Token.html"/>
</node>
<node TEXT="Parsec.Language (haskellDef)" ID="ID_230314776" CREATED="1443398393347" MODIFIED="1443398409952">
<node TEXT="https://hackage.haskell.org/package/parsec-3.1.9/docs/Text-ParserCombinators-Parsec-Language.html" ID="ID_1795061923" CREATED="1443398397407" MODIFIED="1443398397407" LINK="https://hackage.haskell.org/package/parsec-3.1.9/docs/Text-ParserCombinators-Parsec-Language.html"/>
</node>
<node TEXT="GHC.Exts( IsString(..) )" ID="ID_1342624014" CREATED="1443398437299" MODIFIED="1443398439698"/>
<node TEXT="more" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_573894791" CREATED="1443398456251" MODIFIED="1443398458138"/>
</node>
<node TEXT="Parseable a" ID="ID_1775324341" CREATED="1443398500695" MODIFIED="1443398502938">
<node TEXT="class Parseable a where&#xa;  p :: String -&gt; Pattern a" ID="ID_1778777405" CREATED="1443398507723" MODIFIED="1443398508465"/>
<node TEXT="p is always ParseRhythm" ID="ID_1273189412" CREATED="1443398510387" MODIFIED="1443398555242"/>
<node TEXT="Parseable =&gt;* IsString" ID="ID_1622267816" CREATED="1443398588091" MODIFIED="1443398599730">
<node TEXT="instance (Parseable a) =&gt; IsString (Pattern a) where&#xa;  fromString = p" ID="ID_1964616685" CREATED="1443398600347" MODIFIED="1443398601450"/>
<node TEXT="read carefully: Parseable !! Pattern" ID="ID_1301427906" CREATED="1443398603370" MODIFIED="1443398622399"/>
</node>
</node>
<node TEXT="the? lexer" ID="ID_418057314" CREATED="1443402490278" MODIFIED="1443402500323">
<node TEXT="? it&apos;s just Haskell" ID="ID_691800221" CREATED="1443402515203" MODIFIED="1443402521804">
<node TEXT="lexer   = P.makeTokenParser haskellDef" ID="ID_119511977" CREATED="1443402511741" MODIFIED="1443402512651"/>
</node>
<node TEXT="? the lexer is a parser" ID="ID_768545372" CREATED="1443402554638" MODIFIED="1443402562435"/>
<node TEXT="? other parsers are made from the lexer" ID="ID_1114722146" CREATED="1443402568575" MODIFIED="1443402573621">
<node TEXT="example" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_851233623" CREATED="1443402591506" MODIFIED="1443402592785"/>
<node TEXT="angles = P.angles lexer" ID="ID_1647644065" CREATED="1443402587175" MODIFIED="1443402591069"/>
</node>
</node>
<node TEXT="r?" ID="ID_282133661" CREATED="1443404830222" MODIFIED="1443404834264">
<node TEXT="it is defined (search &quot;r ::&quot;) in Parse.hs, but used nowhere" ID="ID_1708107669" CREATED="1443404835083" MODIFIED="1443404852524"/>
<node TEXT="egrep &quot;(^|\W)r($|\W)&quot; *" ID="ID_1136289521" CREATED="1443404916532" MODIFIED="1443404916532">
<node TEXT="was" ID="ID_137497547" CREATED="1443404917919" MODIFIED="1443404918292">
<node TEXT="egrep &quot;(^|[^a-zA-Z])r([^a-zA-Z]|$)&quot; *" ID="ID_208976308" CREATED="1443404863911" MODIFIED="1443404883700"/>
</node>
</node>
</node>
<node TEXT="in pReplicate, what builds the list &quot;extras&quot;?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1870750447" CREATED="1445042581423" MODIFIED="1445325808377"/>
</node>
<node TEXT="Stream.hs" LOCALIZED_STYLE_REF="default" ID="ID_1680559044" CREATED="1445463386485" MODIFIED="1445465970483">
<node TEXT="? data TimeStamp" ID="ID_1549264845" CREATED="1445463398022" MODIFIED="1445463408557">
<node TEXT="data TimeStamp = BundleStamp | MessageStamp | NoStamp" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1738191508" CREATED="1445463396679" MODIFIED="1445463708843"/>
<node TEXT="all, grepped" ID="ID_785861540" CREATED="1445463877389" MODIFIED="1445463882044">
<node TEXT="jeff@jeffLenovUbu:~/tidal/git_Tidal_dev/Sound/Tidal$ egrep -i &quot;TimeStamp|NoStamp|MessageStamp|BundleStamp&quot; *hs" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1639166263" CREATED="1445463882488" MODIFIED="1445463969534" LINK="mailto:jeff@jeffLenovUbu"/>
<node TEXT="Dirt.hs:                 timestamp = MessageStamp," ID="ID_454382220" CREATED="1445463882488" MODIFIED="1445463882488">
<node TEXT="in this" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_35131438" CREATED="1445463917958" MODIFIED="1445463921074"/>
<node TEXT="dirt :: OscShape&#xa;dirt = OscShape {path = &quot;/play&quot;,&#xa;                 params,&#xa;                 cpsStamp = True,&#xa;                 timestamp = MessageStamp,&#xa;                 latency = 0.04,&#xa;                 namedParams = False,&#xa;                 preamble = []&#xa;                }" ID="ID_1944224846" CREATED="1445463924358" MODIFIED="1445464002321"/>
<node TEXT="where params =" ID="ID_1624556586" CREATED="1445464002942" MODIFIED="1445464005085">
<node TEXT="                 params = [ sound_p,&#xa;                            offset_p,&#xa;                            begin_p,&#xa;                            end_p,&#xa;                            speed_p,&#xa;                            pan_p,&#xa;                            velocity_p,&#xa;                            vowel_p,&#xa;                            cutoff_p,&#xa;                            resonance_p,&#xa;                            accelerate_p,&#xa;                            shape_p,&#xa;                            kriole_p,&#xa;                            gain_p,&#xa;                            cut_p,&#xa;                            delay_p,&#xa;                            delaytime_p,&#xa;                            delayfeedback_p,&#xa;                            crush_p,&#xa;                            coarse_p,&#xa;                            hcutoff_p,&#xa;                            hresonance_p,&#xa;                            bandf_p,&#xa;                            bandq_p,&#xa;                            unit_p,&#xa;                            loop_p&#xa;                          ]," ID="ID_1294616996" CREATED="1445464008478" MODIFIED="1445464009499"/>
</node>
</node>
<node TEXT="Stream.hs:data TimeStamp = BundleStamp | MessageStamp | NoStamp" ID="ID_1335052463" CREATED="1445463882492" MODIFIED="1445463882492"/>
<node TEXT="Stream.hs:                          timestamp :: TimeStamp," ID="ID_1590969365" CREATED="1445463882494" MODIFIED="1445463882494">
<node TEXT="in this" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1384154384" CREATED="1445464136358" MODIFIED="1445464137714"/>
<node TEXT="data OscShape = OscShape {path :: String,&#xa;                          params :: [Param],&#xa;                          cpsStamp :: Bool,&#xa;                          timestamp :: TimeStamp,&#xa;                          latency :: Double,&#xa;                          namedParams :: Bool,&#xa;                          preamble :: [Datum]&#xa;                         }" ID="ID_1310115056" CREATED="1445464109382" MODIFIED="1445464110642"/>
</node>
<node TEXT="Stream.hs:         osc | timestamp shape == BundleStamp = sendOSC s $ Bundle (ut_to_ntpr logicalOnset) [Message (path shape) oscdata]" ID="ID_1505278961" CREATED="1445463882498" MODIFIED="1445463882498">
<node TEXT="toMessage :: UDP -&gt; OscShape -&gt; Tempo -&gt; Int -&gt; (Double, OscMap) -&gt; Maybe (IO ())&#xa;toMessage s shape change tick (o, m) =&#xa;  do m&apos; &lt;- applyShape&apos; shape m&#xa;     let cycleD = ((fromIntegral tick) / (fromIntegral ticksPerCycle)) :: Double&#xa;         logicalNow = (logicalTime change cycleD)&#xa;         logicalPeriod = (logicalTime change (cycleD + (1/(fromIntegral ticksPerCycle)))) - logicalNow&#xa;         logicalOnset = logicalNow + (logicalPeriod * o) + (latency shape) + nudge&#xa;         sec = floor logicalOnset&#xa;         usec = floor $ 1000000 * (logicalOnset - (fromIntegral sec))&#xa;         oscdata = cpsPrefix ++ preamble shape ++ (parameterise $ catMaybes $ mapMaybe (\x -&gt; Map.lookup x m&apos;) (params shape))&#xa;         oscdata&apos; = ((int32 sec):(int32 usec):oscdata)&#xa;         osc | timestamp shape == BundleStamp = sendOSC s $ Bundle (ut_to_ntpr logicalOnset) [Message (path shape) oscdata]&#xa;             | timestamp shape == MessageStamp = sendOSC s $ Message (path shape) oscdata&apos;&#xa;             | otherwise = doAt logicalOnset $ sendOSC s $ Message (path shape) oscdata&#xa;     return osc&#xa;     where&#xa;       parameterise :: [Datum] -&gt; [Datum]&#xa;       parameterise ds | namedParams shape =&#xa;                               mergelists (map (string . name) (params shape)) ds&#xa;                       | otherwise = ds&#xa;       cpsPrefix | cpsStamp shape = [float (cps change)]&#xa;                 | otherwise = []&#xa;       nudge = maybe 0 (toF) (Map.lookup (F &quot;nudge&quot; (Just 0)) m)&#xa;       toF (Just (Float f)) = float2Double f&#xa;       toF _ = 0" ID="ID_1673486010" CREATED="1445464220390" MODIFIED="1445464221490"/>
</node>
<node TEXT="Stream.hs:             | timestamp shape == MessageStamp = sendOSC s $ Message (path shape) oscdata&apos;" ID="ID_1550376002" CREATED="1445463882499" MODIFIED="1445463882499"/>
<node TEXT="SuperCollider.hs:  timestamp = BundleStamp," LOCALIZED_STYLE_REF="styles.topic" ID="ID_69133724" CREATED="1445463882504" MODIFIED="1445464172419"/>
<node TEXT="VolcaKeys.hs:                 timestamp = NoStamp," LOCALIZED_STYLE_REF="styles.topic" ID="ID_71862539" CREATED="1445463882508" MODIFIED="1445464172426"/>
</node>
<node TEXT="annoying" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1126868747" CREATED="1445463873318" MODIFIED="1445463875572">
<node TEXT="MessageStamp used twice, in Dirt and Stream" ID="ID_779750612" CREATED="1445463417053" MODIFIED="1445463595621">
<node TEXT="Dirt.hs:                 timestamp = MessageStamp,&#xa;Stream.hs:             | timestamp shape == MessageStamp = sendOSC s $ Message (path shape) oscdata&apos;" ID="ID_1038046870" CREATED="1445463469437" MODIFIED="1445463588021"/>
</node>
<node TEXT="BundleStamp only used once, in Stream" ID="ID_876947353" CREATED="1445463563798" MODIFIED="1445463570612">
<node TEXT="Stream.hs:         osc | timestamp shape == BundleStamp = sendOSC s $ Bundle (ut_to_ntpr logicalOnset) [Message (path shape) oscdata]" ID="ID_783645756" CREATED="1445463571830" MODIFIED="1445463572899"/>
</node>
<node TEXT="NoStamp only used once, in VolcaKeys" LOCALIZED_STYLE_REF="styles.topic" ID="ID_975101769" CREATED="1445463518150" MODIFIED="1445463609034">
<node TEXT="jeff@jeffLenovUbu:~/tidal/git_Tidal_dev/Sound/Tidal$ egrep -i &quot;NoStamp&quot; *hs&#xa;Stream.hs:data TimeStamp = BundleStamp | MessageStamp | NoStamp&#xa;VolcaKeys.hs:                 timestamp = NoStamp," ID="ID_1254773495" CREATED="1445463486645" MODIFIED="1445463487724"/>
</node>
<node TEXT="TimeStamp class little referred to" ID="ID_573323830" CREATED="1445463659110" MODIFIED="1445463664580">
<node TEXT="blue = already mentioned outside of here" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_780542246" CREATED="1445463794446" MODIFIED="1445463802912">
<node TEXT="maybe as low as here" ID="ID_233477133" CREATED="1445463804039" MODIFIED="1445463806451"/>
</node>
<node TEXT="Dirt.hs:                 timestamp = MessageStamp," LOCALIZED_STYLE_REF="styles.topic" ID="ID_1479362866" CREATED="1445463672718" MODIFIED="1445463677500"/>
<node TEXT="Stream.hs:                          timestamp :: TimeStamp,&#xa;  in data OscShape = OscShape { ... }" ID="ID_1201568640" CREATED="1445463694060" MODIFIED="1445463765407"/>
<node TEXT="Stream.hs:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;osc | timestamp shape == BundleStamp = sendOSC s $ Bundle (ut_to_ntpr logicalOnset) [Message (path shape) oscdata]" ID="ID_172975071" CREATED="1445463694065" MODIFIED="1445463694065"/>
<node TEXT="Stream.hs:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;| timestamp shape == MessageStamp = sendOSC s $ Message (path shape) oscdata&apos;" ID="ID_1370756503" CREATED="1445463694067" MODIFIED="1445463694067"/>
<node TEXT="SuperCollider.hs:&#xa0;&#xa0;timestamp = BundleStamp," ID="ID_1511929716" CREATED="1445463694072" MODIFIED="1445463694072"/>
<node TEXT="VolcaKeys.hs:&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;timestamp = NoStamp," ID="ID_1671855910" CREATED="1445463694077" MODIFIED="1445463694077"/>
</node>
</node>
</node>
</node>
<node TEXT="compressor" ID="ID_487267122" CREATED="1445326764886" MODIFIED="1445326766269">
<node TEXT="radium compressor: free!" ID="ID_1523032244" CREATED="1445326741926" MODIFIED="1445326747509">
<node TEXT="https://packages.debian.org/sid/radium-compressor" ID="ID_1266922846" CREATED="1445326747977" MODIFIED="1445326747977" LINK="https://packages.debian.org/sid/radium-compressor"/>
</node>
<node TEXT="subg for Dirt&apos;s" ID="ID_614809978" CREATED="1445326768318" MODIFIED="1445326780613">
<node TEXT="https://github.com/tidalcycles/Tidal/wiki/Compression" ID="ID_1938107788" CREATED="1445326767661" MODIFIED="1445326767661" LINK="https://github.com/tidalcycles/Tidal/wiki/Compression"/>
<node TEXT="compressor off" ID="ID_1181821930" CREATED="1443898168094" MODIFIED="1443898173098">
<node TEXT="$ ./dirt --channels 4 --no-dirty-compressor" ID="ID_579319107" CREATED="1443898164642" MODIFIED="1443898166524"/>
</node>
</node>
</node>
</node>
<node TEXT="dub" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1133483424" CREATED="1445328249311" MODIFIED="1445328802063">
<node TEXT="? maybe problems" ID="ID_127912478" CREATED="1445328916839" MODIFIED="1445328929292">
<node TEXT="tidal\kubuntu" ID="ID_568409367" CREATED="1440702669722" MODIFIED="1445328916510">
<node LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1780947299" CREATED="1441394399887" MODIFIED="1441394432516"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      2015 08 26-ish
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="? why uses ghc 7.6.3.10" ID="ID_1585851515" CREATED="1440702660083" MODIFIED="1441394404464">
<node TEXT="when I already have 7.10._ somewhere" ID="ID_851973916" CREATED="1441394406386" MODIFIED="1441394416959"/>
</node>
<node TEXT="more problems too" ID="ID_1540271351" CREATED="1441394423619" MODIFIED="1441394435488"/>
</node>
<node TEXT="divide by zero?" ID="ID_1491856554" CREATED="1444119982009" MODIFIED="1444119984302">
<node TEXT="d3 $ sound &quot;f&quot;  |+| (pit 0 $ preplace (1,1) &quot;x [~ x] x x&quot; &quot;0 10 18&quot;)" ID="ID_238542800" CREATED="1444119984763" MODIFIED="1444120163002"/>
<node TEXT="up = speed . ((step**) &lt;$&gt;) where step = 2**(1/31)" ID="ID_1781980203" CREATED="1444120202912" MODIFIED="1444120203831"/>
</node>
</node>
<node TEXT="intzd" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1178550910" CREATED="1445328404567" MODIFIED="1445329301506">
<node TEXT="comma in [] for simult" ID="ID_1821293072" CREATED="1442304903339" MODIFIED="1442304917680"/>
<node TEXT="a [b c]/2 = a b a c" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1907136982" CREATED="1444241990523" MODIFIED="1444242002807"/>
<node TEXT="compoase like-param patterns" ID="ID_1696902112" CREATED="1444672716612" MODIFIED="1444672779221">
<node TEXT="|+|, |*|, |!|" ID="ID_256888381" CREATED="1444672780748" MODIFIED="1444672788963"/>
<node TEXT="(+) &lt;$&gt; &quot;1 2&quot; &lt;*&gt; &quot;2 3&quot;" ID="ID_1484895415" CREATED="1444672756789" MODIFIED="1444672759549"/>
<node TEXT="(+) &lt;$&gt; &quot;2 3&quot; &lt;*&gt; &quot;[5,10]&quot;" ID="ID_727558298" CREATED="1444672721236" MODIFIED="1444672724163"/>
</node>
</node>
<node TEXT="music" LOCALIZED_STYLE_REF="default" ID="ID_1229557733" CREATED="1442128899191" MODIFIED="1445328239895">
<node TEXT="spacing herein important" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1641672905" CREATED="1442129163938" MODIFIED="1442129167906">
<node TEXT="and looks fucked up until in another editor" ID="ID_1073614644" CREATED="1442129168777" MODIFIED="1442129174364"/>
</node>
<node TEXT="2 * 34344" ID="ID_1260293413" CREATED="1442129026704" MODIFIED="1442129070508">
<node TEXT="spacing important; the if:1 and if:2 should align, on separate lines, making everything else align too" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_282680829" CREATED="1442128930028" MODIFIED="1442129016593"/>
<node TEXT="that&apos;s 2 groups of 34344" ID="ID_1357901632" CREATED="1442129057192" MODIFIED="1442129064085"/>
<node TEXT="d1 $ slow 4 $ sound&#xa;  &quot;if:1 sn sn   cp sn ht sn   if sn sn   cp sn ht sn   cp sn ht sn                   if:2 sn sn   cp sn ht sn   cp sn sn   if sn ht sn   if sn ht sn&quot;" ID="ID_877522931" CREATED="1442128903154" MODIFIED="1442128995885"/>
</node>
<node TEXT="34344 34334" ID="ID_180244740" CREATED="1442129147396" MODIFIED="1442129155027">
<node TEXT="d1 $ slow 4 $ sound &quot;if:1 sn sn cp sn ht sn if sn sn cp sn ht sn cp sn ht sn                           if   sn sn cp sn ht sn if sn sn if sn sn    cp sn ht sn&quot;" ID="ID_442505859" CREATED="1442129146079" MODIFIED="1442129146079"/>
</node>
<node TEXT="triplets disco" ID="ID_1381382029" CREATED="1442131754690" MODIFIED="1442131757088">
<node TEXT="d4 $ slow 8 $ sound &quot;if&quot;" ID="ID_377885435" CREATED="1442131763374" MODIFIED="1442131763374"/>
<node TEXT="d1 $ slow 4 $ sound &quot;bd cp&quot;" ID="ID_1939540068" CREATED="1442131763374" MODIFIED="1442131763374"/>
<node TEXT="d2 $ slow 2 $ sound &quot;lt ht ht&quot;" ID="ID_22817394" CREATED="1442131763376" MODIFIED="1442131763376"/>
<node TEXT="d3 $ slow 0.5 $ sound &quot;ho ~ ho:1&quot; |+| gain &quot;0.7&quot;" ID="ID_363325500" CREATED="1442131763378" MODIFIED="1442131817079">
<node TEXT="was" LOCALIZED_STYLE_REF="styles.topic" ID="ID_203124009" CREATED="1442131832700" MODIFIED="1442131835179">
<node TEXT="d3 $ slow 0.5 $ 0.05 &lt;~ sound &quot;ho ~ ho:1&quot; |+| gain &quot;0.7&quot;" ID="ID_188808918" CREATED="1442131763378" MODIFIED="1442131763378"/>
</node>
</node>
</node>
</node>
<node TEXT="theory" ID="ID_547853920" CREATED="1445328240871" MODIFIED="1445328241837">
<node TEXT="partial rotations of (3+) in Z8" ID="ID_738040469" CREATED="1441851364781" MODIFIED="1441851747262">
<node TEXT="1 4 . 2 5 . 3 6 ." ID="ID_1237776695" CREATED="1441851481173" MODIFIED="1441851542460"/>
<node TEXT="0 1 2 3 4 5 6 7&#xa;1 4 7 2 5 8 3 6" ID="ID_1630087413" CREATED="1441851542980" MODIFIED="1441851623333">
<node TEXT="1 . . 2 . . 3 ." ID="ID_178920728" CREATED="1441851542980" MODIFIED="1441851653403"/>
<node TEXT="1 4 . 2 5 . 3 ." ID="ID_1472651953" CREATED="1441851542980" MODIFIED="1441851642866"/>
</node>
<node TEXT="3 params: Z_, duration, iterations" ID="ID_1158026140" CREATED="1441851686909" MODIFIED="1441851706090">
<node TEXT="Z_ = meter duration, duration = note duration" ID="ID_411953042" CREATED="1441851715957" MODIFIED="1441851723532"/>
</node>
</node>
</node>
<node TEXT="ambit" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1034836544" CREATED="1441923781633" MODIFIED="1445329287681">
<node TEXT="elec vox random graph traverse" ID="ID_1154442939" CREATED="1441852930398" MODIFIED="1441852946768">
<node ID="ID_885958717" CREATED="1441852947202" MODIFIED="1441852947202"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      speak-n-spell
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node TEXT="2015 10 20, mus rep, u" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1628550230" CREATED="1445329419400" MODIFIED="1445329433798">
<node TEXT="notns for a mel" LOCALIZED_STYLE_REF="default" ID="ID_171568016" CREATED="1445322993772" MODIFIED="1445325488109">
<font BOLD="true"/>
<node TEXT="working haskell" LOCALIZED_STYLE_REF="default" ID="ID_718139902" CREATED="1445236964768" MODIFIED="1445237083371">
<node TEXT="let p1 = &quot;~ 15    ~     [15 12 7 3]&quot;" ID="ID_1478060737" CREATED="1445236963619" MODIFIED="1445236963619"/>
<node TEXT="let p2 = &quot;~ [~ 0] [3 7] [12 15]&quot;" ID="ID_666296038" CREATED="1445236963619" MODIFIED="1445236963619"/>
<node TEXT="let p3 = append p1 p2 -- could be as easy as .." ID="ID_1595528862" CREATED="1445236963620" MODIFIED="1445236963620"/>
<node TEXT="d5 $ fast 2 $. up p3 |+| sound &quot;jvbass&quot;" ID="ID_946848380" CREATED="1445236963622" MODIFIED="1445236963622"/>
</node>
<node TEXT="sparse rep 1" LOCALIZED_STYLE_REF="default" ID="ID_537801633" CREATED="1445237095912" MODIFIED="1445322593535">
<node TEXT="&quot;the 3 runs&quot;" ID="ID_558571872" CREATED="1445237643680" MODIFIED="1445238572966">
<node TEXT="style 1" ID="ID_356322247" CREATED="1445238597625" MODIFIED="1445238613115">
<node TEXT="t.1 s.4" ID="ID_1044916675" CREATED="1445236937266" MODIFIED="1445238333969">
<node TEXT="just one note" ID="ID_727553715" CREATED="1445238574722" MODIFIED="1445238577551"/>
</node>
<node TEXT="t.3 s.+4.rd.4(d_)" ID="ID_1947813290" CREATED="1445237384656" MODIFIED="1445238378624">
<node TEXT="I put the d_ in parens because don&apos;t need to write it." LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_134644809" CREATED="1445238209944" MODIFIED="1445238220011"/>
<node ID="ID_1904449412" CREATED="1445237627661" MODIFIED="1445237627661"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      run down 4, add 4 to those (so they're now 4 3 2 1), do the scale function to them, that starts at time 3 (and ends on time 4, because the d value is unspecified, and defaults to 1/n where n = beat len (8 here)).
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="t.5.1/2 s.ru.5 d.2.1/2" ID="ID_1728267408" CREATED="1445237633744" MODIFIED="1445238404894"/>
<node TEXT="where s = scale [0,3,7]" ID="ID_1333029525" CREATED="1445238684945" MODIFIED="1445238719727">
<node TEXT="where s x = sc(ale) [0,3,7] x" LOCALIZED_STYLE_REF="styles.topic" ID="ID_795061871" CREATED="1445238684945" MODIFIED="1445238723658"/>
</node>
</node>
<node TEXT="style 2" ID="ID_825504410" CREATED="1445238595777" MODIFIED="1445238617439">
<node TEXT="t 1 | s 4" ID="ID_328329346" CREATED="1445237633744" MODIFIED="1445238678560"/>
<node TEXT="t 3 | s $ +4 $ rd 4" ID="ID_483496521" CREATED="1445237633744" MODIFIED="1445238655811"/>
<node TEXT="t 5 1/2 | s $ ru 5 | d 2 1/2" ID="ID_861322020" CREATED="1445237633744" MODIFIED="1445238527119"/>
<node TEXT="where s = scale [0,3,7]" ID="ID_1907884742" CREATED="1445238684945" MODIFIED="1445238719727"/>
</node>
</node>
<node TEXT="problems" ID="ID_329816411" CREATED="1445237660048" MODIFIED="1445237661103">
<node TEXT="how rep subdivided time?" ID="ID_537097830" CREATED="1445237664954" MODIFIED="1445237668646">
<node TEXT="t5.5: not pretty" LOCALIZED_STYLE_REF="default" ID="ID_696463947" CREATED="1445237545896" MODIFIED="1445237662933">
<node TEXT="better 11%2 ?" ID="ID_1331326758" CREATED="1445237556521" MODIFIED="1445237581006"/>
</node>
</node>
</node>
<node TEXT="operator precedence" ID="ID_29787063" CREATED="1445237945640" MODIFIED="1445237949335">
<node TEXT="immedj after t, numbers read a/b.c/d as (a + c/d)/b" ID="ID_1922597857" CREATED="1445237949936" MODIFIED="1445237990887"/>
<node TEXT="something starting at 0 time needs no t" ID="ID_1288946663" CREATED="1445238285425" MODIFIED="1445238292031"/>
</node>
<node TEXT="vocab" ID="ID_1658541876" CREATED="1445236998352" MODIFIED="1445237107698">
<node TEXT="t: time" LOCALIZED_STYLE_REF="styles.topic" ID="ID_724268646" CREATED="1445236937266" MODIFIED="1445237112279">
<node TEXT="=" ID="ID_150850384" CREATED="1445237017975" MODIFIED="1445237018622">
<node TEXT="t= start time, n in [0,max observed)" ID="ID_1596561324" CREATED="1445237005521" MODIFIED="1445237011599"/>
</node>
<node TEXT="variations" ID="ID_1743746951" CREATED="1445237013008" MODIFIED="1445237016263">
<node TEXT="or use a division symbol" ID="ID_1638350728" CREATED="1445236937267" MODIFIED="1445236937267"/>
<node TEXT="can indicate max time empty with, say, t8~" ID="ID_818045337" CREATED="1445236937267" MODIFIED="1445236937267">
<node TEXT="would indicate an 8-count;" ID="ID_680231606" CREATED="1445236937267" MODIFIED="1445236937267"/>
</node>
</node>
</node>
<node TEXT="p: pitch" ID="ID_587668984" CREATED="1445237119144" MODIFIED="1445237123224"/>
<node TEXT="$." LOCALIZED_STYLE_REF="styles.topic" ID="ID_1472596042" CREATED="1445236937267" MODIFIED="1445237111549">
<node ID="ID_1546759644" CREATED="1445237034627" MODIFIED="1445237034627"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      so that | can bind later, separate params
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="rd = run down; rd4 = 0 -1 -2 -3" ID="ID_1301806439" CREATED="1445237174938" MODIFIED="1445237191034"/>
<node TEXT="d = duration" ID="ID_1628647490" CREATED="1445237316776" MODIFIED="1445237318590">
<node TEXT="d_ = need not specify d, because by default the duration of the run is 1/n where n is the number of beats, in this case 8" ID="ID_1724456990" CREATED="1445237304711" MODIFIED="1445237348237"/>
</node>
</node>
</node>
<node TEXT="sparse rep 2" ID="ID_1823998528" CREATED="1445322584653" MODIFIED="1445322591282">
<node TEXT="d8 :&#xa;  t1 s4 ,, t3 s[4..1] ,, t5.1/2 s[4..0] d2.1/2" ID="ID_566517481" CREATED="1445322606428" MODIFIED="1445322860794"/>
</node>
</node>
<node TEXT="meter notns" LOCALIZED_STYLE_REF="default" ID="ID_1183492388" CREATED="1445323028804" MODIFIED="1445325488114">
<font BOLD="true"/>
<node TEXT="altvs" LOCALIZED_STYLE_REF="default" ID="ID_1189455179" CREATED="1445323394684" MODIFIED="1445323443929">
<node TEXT="num" ID="ID_169196201" CREATED="1445323226860" MODIFIED="1445323394313">
<node TEXT="= specify only number of top-level intervals" ID="ID_1198469013" CREATED="1445323046204" MODIFIED="1445323240962"/>
<node TEXT="works if top-level equal" ID="ID_312315629" CREATED="1445323235229" MODIFIED="1445323236842"/>
</node>
<node TEXT="dur seq" ID="ID_1221644950" CREATED="1445323244748" MODIFIED="1445323355083">
<node TEXT="the total duration and the number of parts inferred from the seq" ID="ID_335738157" CREATED="1445323356788" MODIFIED="1445323372114"/>
<node TEXT="where the durs are numbers" ID="ID_611704358" CREATED="1445323315029" MODIFIED="1445323327616"/>
</node>
</node>
<node TEXT="problems" ID="ID_665384546" CREATED="1445323445572" MODIFIED="1445323446683">
<node TEXT="= problems that a meter notation answers" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1897880131" CREATED="1445323448340" MODIFIED="1445323461009"/>
<node TEXT="how does one represent a position in the meter?" ID="ID_1577486894" CREATED="1445323455604" MODIFIED="1445323480285"/>
<node TEXT="how does one map a melody onto a meter?" ID="ID_228887814" CREATED="1445323481108" MODIFIED="1445323487258">
<node TEXT="two ? ways" ID="ID_1726346406" CREATED="1445323625796" MODIFIED="1445323630539"/>
<node TEXT="verbose, early" LOCALIZED_STYLE_REF="styles.topic" ID="ID_259639346" CREATED="1445323619813" MODIFIED="1445323623394">
<node TEXT="for instance there could be, among 8 quarter-notes, one of them that is fat, say twice as big. in that case a melody consisting of a sequence of the meter&apos;s quarter-notes would play one note per quarter-note of the meter, meaning one note was fat; by contrast a melody written in terms of the absolute unit of time that is the duration of the non-fat quarter notes would spend two of its notes in the meter&apos;s one fat interval." LOCALIZED_STYLE_REF="default" ID="ID_1935787836" CREATED="1445323501020" MODIFIED="1445323624110"/>
</node>
</node>
</node>
</node>
<node TEXT="Events should be parameter dictionaries" LOCALIZED_STYLE_REF="default" ID="ID_1194755932" CREATED="1445233560806" MODIFIED="1445325486523"/>
<node TEXT="zip meter measurements, names into the Events in an [Event]" LOCALIZED_STYLE_REF="default" ID="ID_554790204" CREATED="1445233264014" MODIFIED="1445325486527">
<node TEXT="so that // can fmap ops filtering on meter conditions" ID="ID_1585778045" CREATED="1445233292805" MODIFIED="1445233340461"/>
</node>
<node TEXT="mel, sil, mel, mel*2" ID="ID_1739350154" CREATED="1445233210150" MODIFIED="1445329334182">
<node TEXT="sil(ence)" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1010154312" CREATED="1445329334672" MODIFIED="1445329338046"/>
</node>
<node TEXT="apply _ to what predicate admits" ID="ID_661320236" CREATED="1445233147190" MODIFIED="1445233179279">
<node TEXT="is lens?" ID="ID_509484981" CREATED="1445233182013" MODIFIED="1445233184188"/>
</node>
<node TEXT="composer drag|sense aggregate variables" ID="ID_449523732" CREATED="1445310616912" MODIFIED="1445310637709">
<node TEXT="define a point in time by its acceleration, change of direction" ID="ID_1072963610" CREATED="1445310638830" MODIFIED="1445310652158"/>
</node>
<node TEXT="like patterns but displayable as instructions" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_518308058" CREATED="1445311215664" MODIFIED="1445329346760">
<node TEXT="LabPattern or Lab(_ -&gt; Pattern) = Pattern with display information" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_601843596" CREATED="1445311149951" MODIFIED="1445311211146"/>
<node TEXT="data LP a = LabPat {show :: String, thePattern :: Pattern a}&#xa;  | LabFunc {show, theFunction :: whatever slow is}" ID="ID_1818898842" CREATED="1445311223055" MODIFIED="1445311341482"/>
</node>
<node TEXT="make a list of lists where each level-2 elt is the same duration, then concat, then pass to Tidal&apos;s parser" LOCALIZED_STYLE_REF="default" ID="ID_1981520356" CREATED="1445226748643" MODIFIED="1445325577353"/>
<node TEXT="want" ID="ID_687442348" CREATED="1445205460539" MODIFIED="1445205533666">
<node TEXT="duration as part of a pattern" ID="ID_353519917" CREATED="1445205464580" MODIFIED="1445205475502"/>
<node TEXT="sub pattern into pattern" ID="ID_1701985985" CREATED="1445205503476" MODIFIED="1445205508322"/>
<node TEXT="Pattern (String,String)" ID="ID_858144853" CREATED="1445205479931" MODIFIED="1445205497782"/>
</node>
<node TEXT="argue durations in patterns" LOCALIZED_STYLE_REF="default" ID="ID_852684958" CREATED="1445217767269" MODIFIED="1445325898945">
<node TEXT="song-global vars  &gt;= {durs, patterns, voices, ..}" LOCALIZED_STYLE_REF="default" ID="ID_1480387865" CREATED="1445217682860" MODIFIED="1445217774166"/>
<node TEXT="p ++ fast 2 $. p2 ++ const &quot;~&quot; &lt;$&gt; p2" ID="ID_1716114038" CREATED="1445217789637" MODIFIED="1445217907078">
<node TEXT="++ last" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1563377539" CREATED="1445217913317" MODIFIED="1445217929496"/>
</node>
</node>
<node TEXT="dur, defined in terms of cps : can&apos;t in TidalCustom.hs, can in open code" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1845766418" CREATED="1445204222947" MODIFIED="1445325816161">
<node TEXT="I think it is because cps is defined nowhere in the Tidal libraries, but rather at &quot;interactive&quot;" ID="ID_1572647218" CREATED="1445204249203" MODIFIED="1445204304010"/>
<node TEXT="tidal&gt; :i cps&#xa;cps :: Double -&gt; IO () -- Defined at &lt;interactive&gt;:5:2&#xa;tidal&gt;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1093660769" CREATED="1445204372067" MODIFIED="1445204382219"/>
</node>
<node TEXT="zip 0 into a run" ID="ID_1934921117" CREATED="1445228282387" MODIFIED="1445325774939">
<node TEXT="serial : one tone (many voi) ,, many &amp; inharm ,, one ,, harm" ID="ID_422506471" CREATED="1445227742507" MODIFIED="1445227797602"/>
</node>
<node TEXT="fgl + tidal" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1181178594" CREATED="1444958940878" MODIFIED="1444958943544">
<node TEXT="attach musical moods to graph regions" LOCALIZED_STYLE_REF="default" ID="ID_1811642355" CREATED="1441852965989" MODIFIED="1445329380602"/>
</node>
</node>
<node TEXT="share the wish" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_483043894" CREATED="1446102039951" MODIFIED="1446102064554">
<node TEXT="I wish in this I could add a kick drum to the pitch seq." ID="ID_600636131" CREATED="1446102065988" MODIFIED="1446102085115"/>
<node TEXT="d1 $ fast 1.2 $ speed &quot;[7,6,9]*2&quot; |*| insF |*| speed ## return (4/7)" ID="ID_822941874" CREATED="1446102042171" MODIFIED="1446102042171"/>
</node>
<node TEXT="common measure for kinds of complexity" ID="ID_1876346690" CREATED="1446102456803" MODIFIED="1446102470851"/>
<node TEXT="Freeplane during Tidal" ID="ID_904377494" CREATED="1446103197587" MODIFIED="1446103203402">
<node TEXT="look for reminders, analyses" ID="ID_1412277196" CREATED="1446103204659" MODIFIED="1446103213086">
<node TEXT="? choice spaces" ID="ID_1708285222" CREATED="1446103228887" MODIFIED="1446103232731"/>
<node TEXT="analyses, decompositions" ID="ID_1015814360" CREATED="1446103216564" MODIFIED="1446103241881"/>
</node>
</node>
<node TEXT="wish : song data struct" ID="ID_888780712" CREATED="1446104695636" MODIFIED="1446104705864">
<node TEXT="keeps all melodies, but with graphish labels to indicate, for instance, the working set" ID="ID_638023576" CREATED="1446104708612" MODIFIED="1446104743854"/>
</node>
<node TEXT="+/ and -/" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1540015429" CREATED="1446107151325" MODIFIED="1446107338970">
<node TEXT="example" ID="ID_1012719697" CREATED="1446107216629" MODIFIED="1446107218124">
<node TEXT="rep: 3/4-/1/3" ID="ID_1475306541" CREATED="1446107162420" MODIFIED="1446107251291"/>
<node TEXT="value: (2+1/3)/4" ID="ID_439154692" CREATED="1446107223908" MODIFIED="1446107239020"/>
</node>
<node TEXT="example 2" ID="ID_261190364" CREATED="1446107257941" MODIFIED="1446107259468">
<node TEXT="rep: 3/4+/1/3+1/2" ID="ID_71348076" CREATED="1446107162420" MODIFIED="1446107310521"/>
<node TEXT="value: (3+(1+1/2)/3)/4" ID="ID_1960665449" CREATED="1446107264988" MODIFIED="1446107324811"/>
</node>
</node>
<node TEXT="next: sidestep Tidal.Parse" LOCALIZED_STYLE_REF="styles.subtopic" ID="ID_1346428477" CREATED="1446107766205" MODIFIED="1446107776838"/>
<node TEXT="every set of fractions has a least integral representation" ID="ID_1953073266" CREATED="1446114653978" MODIFIED="1446114674921"/>
<node TEXT="is the second Arc in an Event ignorable in all Patterns, just not OscPatterns?" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_870834807" CREATED="1446114804167" MODIFIED="1446114832017"/>
<node TEXT="music feas now" ID="ID_862324852" CREATED="1446157052545" MODIFIED="1446157055468">
<font BOLD="true"/>
<node TEXT="fraction of time the bass spends on the root" ID="ID_282832193" CREATED="1446157057815" MODIFIED="1446157063784">
<node TEXT="allows giving an extra sense of rootedness to a place, without losing rootedness the rest of the time" ID="ID_1408856036" CREATED="1446157073888" MODIFIED="1446157087117"/>
</node>
</node>
<node TEXT="timbres want" ID="ID_1815634775" CREATED="1446160778643" MODIFIED="1446160781652">
<font BOLD="true"/>
<node TEXT="xylophone" ID="ID_928228149" CREATED="1446160782858" MODIFIED="1446160801790"/>
<node TEXT="twang" ID="ID_1286368206" CREATED="1446160804091" MODIFIED="1446160805383"/>
<node TEXT="harp" ID="ID_1664136759" CREATED="1446160812245" MODIFIED="1446160814861"/>
</node>
<node TEXT="bend =&gt; supercollider" ID="ID_1720116260" CREATED="1446160966939" MODIFIED="1446160973079">
<font BOLD="true"/>
</node>
<node TEXT="Tidal | mus feas" ID="ID_1319202861" CREATED="1446238846440" MODIFIED="1446240766509">
<font BOLD="true"/>
<node TEXT="31et" ID="ID_908306032" CREATED="1446488068752" MODIFIED="1446488074474">
<node TEXT="12: 0 6 10 13 19 23 29" ID="ID_845864152" CREATED="1446488079858" MODIFIED="1446488250604">
<node TEXT="= all those values are 31et intervals" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1493572247" CREATED="1446488486585" MODIFIED="1446488520397"/>
<node TEXT="scale tones" ID="ID_59060223" CREATED="1446488481819" MODIFIED="1446488483511">
<node TEXT="12 + 6 = 18" ID="ID_1003526058" CREATED="1446488299248" MODIFIED="1446488304048"/>
<node TEXT="12 + 10" ID="ID_1708582213" CREATED="1446488288899" MODIFIED="1446488341139"/>
<node TEXT="12 + 13 = 25" ID="ID_1667465327" CREATED="1446488347462" MODIFIED="1446488357077"/>
<node TEXT="12 + 19 = 31" ID="ID_1064062218" CREATED="1446488363540" MODIFIED="1446488367153"/>
<node TEXT="12 + 23 = 25 + 10" ID="ID_1491750273" CREATED="1446488367353" MODIFIED="1446488375755"/>
<node TEXT="12 + 29 = 10" ID="ID_1059590447" CREATED="1446488445557" MODIFIED="1446488460871"/>
</node>
<node TEXT="= ion micro-sharp 1 4 6" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_692833708" CREATED="1446488526205" MODIFIED="1446488663956">
<node TEXT="in the music-standard 1-indexed scale notation it would be 2 5 7, that is the fifth degree, seventh degree and ninth degree" ID="ID_1713171018" CREATED="1446488631595" MODIFIED="1446488683932"/>
</node>
</node>
</node>
<node TEXT="Parseable should be retitled TidalParseable" ID="ID_90994610" CREATED="1445936106192" MODIFIED="1445936113233"/>
<node TEXT="stut&apos; : I hear &quot;hi&quot; recursing, but not &quot;coarse&quot;." ID="ID_1643461878" CREATED="1445937685655" MODIFIED="1445937702329"/>
<node TEXT="gain $ return 1.1 :: OscPattern" LOCALIZED_STYLE_REF="default" ID="ID_297529641" CREATED="1445938081255" MODIFIED="1446238885533"/>
<node TEXT="tidal : interpret ints in seq as diffs" ID="ID_369259606" CREATED="1446016909257" MODIFIED="1446016920724"/>
<node TEXT="tidal : why preplace -&gt; divide by zero?" ID="ID_406934385" CREATED="1446017450242" MODIFIED="1446017457698">
<node TEXT="d1 $ hi ## preplace (1,1) &quot;[x ~ x]*2 [x ~ x x]*2&quot; &quot;0 8 17 18 25 28 29 31&quot;|*| sound &quot;bd&quot;" ID="ID_1729028189" CREATED="1446017458284" MODIFIED="1446017458284"/>
</node>
<node TEXT="in a rhythm on 31et pitches 17-19 class 17 and 19 similar" ID="ID_826552244" CREATED="1446183890124" MODIFIED="1446183904899"/>
</node>
<node TEXT="speed(procg)" LOCALIZED_STYLE_REF="styles.topic" ID="ID_311069048" CREATED="1446316271007" MODIFIED="1446316286012">
<node TEXT="does Tidal ? prefer, for memory|speed purposes, the encoding &quot;bd*4&quot; to &quot;bd bd bd bd&quot;" ID="ID_1004084175" CREATED="1440795517545" MODIFIED="1440795549233"/>
</node>
<node TEXT="11 02" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_460174233" CREATED="1446673931723" MODIFIED="1446673938502"/>
<node TEXT="fgl &amp; tidal" ID="ID_205842728" CREATED="1446525392561" MODIFIED="1446526238608">
<node TEXT="four voices, group them 2 and 2, change a group&apos;s [tempo]" ID="ID_753562559" CREATED="1446525395395" MODIFIED="1446525428895"/>
<node TEXT="inherited rels" ID="ID_615846191" CREATED="1446525443537" MODIFIED="1446525449055">
<node TEXT="[voice] uses|used [pattern]" ID="ID_1482524590" CREATED="1446525449955" MODIFIED="1446525628112">
<node TEXT="uses, is determined in part by" ID="ID_1098691202" CREATED="1446525598922" MODIFIED="1446525606088"/>
<node TEXT="used indicating when" ID="ID_1700428437" CREATED="1446525629481" MODIFIED="1446525649085"/>
</node>
</node>
<node TEXT="nest instructions by graph succession" ID="ID_1120903187" CREATED="1446526805882" MODIFIED="1446526822815"/>
</node>
<node TEXT="tidal rep" ID="ID_204965518" CREATED="1446526488836" MODIFIED="1446526490063">
<node TEXT="types" ID="ID_1980863104" CREATED="1446526720474" MODIFIED="1446526721361">
<node TEXT="Dirt_Instruction" ID="ID_1900482332" CREATED="1446526519002" MODIFIED="1446526536042"/>
<node TEXT="Dirt_Seq :: Time -&gt; [Dirt_Instruction]" ID="ID_1554382176" CREATED="1446528535499" MODIFIED="1446528557736">
<node TEXT="or can be turned into such a function" ID="ID_1704512421" CREATED="1446528571002" MODIFIED="1446528586510"/>
</node>
<node TEXT="Tidal_Time  ?  User_Time" ID="ID_1724037151" CREATED="1446526547313" MODIFIED="1446526749047"/>
</node>
<node TEXT="user x-pattern seq =&gt; tidal whenmod" ID="ID_1834686313" CREATED="1446526886026" MODIFIED="1446526908932">
<node TEXT="user can determine where the down(0)beat of the ongoing cycle is by asking for a transcript" ID="ID_1586719738" CREATED="1446526920754" MODIFIED="1446526971420"/>
<node TEXT="user can specify a point in the current cycle at which to transition to the new sequence" ID="ID_715098192" CREATED="1446526971665" MODIFIED="1446526987689"/>
</node>
<node TEXT="? how sep Speed across voices within seqr" ID="ID_36437435" CREATED="1446528751297" MODIFIED="1446528762722">
<node TEXT="if I stack [bd, sn up 12] will the up 12 only apply to the sn?" ID="ID_1971170797" CREATED="1446528769818" MODIFIED="1446528800435"/>
</node>
</node>
<node TEXT="tidal &amp; graph" ID="ID_1037857247" CREATED="1446671030482" MODIFIED="1446671034017">
<node TEXT="Might I have to parse a graph into instructions, and then those instructions into Tidal messages?" ID="ID_1338256089" CREATED="1446533217277" MODIFIED="1446533231907"/>
</node>
<node TEXT="Pattern(s) -&gt; (OscPattern = Pattern OscMap)" LOCALIZED_STYLE_REF="default" ID="ID_1216177203" CREATED="1446937396688" MODIFIED="1447108150073">
<node TEXT="type OscMap = Map Param (Maybe Datum)" LOCALIZED_STYLE_REF="default" ID="ID_1101205032" CREATED="1446937510950" MODIFIED="1447107870694">
<node TEXT=". defined at Stream.hs" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1768282417" CREATED="1446937741894" MODIFIED="1446937746541"/>
<node TEXT="Datum = Sound.OSC.Type.Datum" ID="ID_686262991" CREATED="1446937537065" MODIFIED="1446937539387"/>
<node TEXT="Map = Data.Map" ID="ID_53141691" CREATED="1446937539894" MODIFIED="1446937559165"/>
</node>
<node TEXT="data Pattern a = Pattern {arc :: Arc -&gt; [Event a]}" LOCALIZED_STYLE_REF="default" ID="ID_154297501" CREATED="1446937719430" MODIFIED="1447107868231">
<node TEXT=". defined at Pattern.hs" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_34197177" CREATED="1446937721238" MODIFIED="1446937728605"/>
</node>
<node TEXT="type OscPattern = Pattern OscMap" ID="ID_1567909426" CREATED="1446937461062" MODIFIED="1446937462405">
<node TEXT=". defined at Stream.hs" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1492667192" CREATED="1446937741894" MODIFIED="1446937746541"/>
</node>
<node TEXT="sound :: Pattern String -&gt; OscPattern" LOCALIZED_STYLE_REF="default" ID="ID_253448661" CREATED="1446937428134" MODIFIED="1447107880210">
<node TEXT="@ Params.hs" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1784632505" CREATED="1446937780637" MODIFIED="1446937786228"/>
</node>
<node TEXT="sound &quot;bd sn&quot;" ID="ID_767805985" CREATED="1447108047799" MODIFIED="1447108056967"/>
</node>
<node TEXT="solved" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1518268650" CREATED="1447107740303" MODIFIED="1447107741671">
<node TEXT="Pattern.arc" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_581772183" CREATED="1446938981997" MODIFIED="1446960359916">
<node TEXT="tests" ID="ID_1371231160" CREATED="1446938996621" MODIFIED="1446938998292">
<node TEXT=".ordered" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1870739377" CREATED="1446939000949" MODIFIED="1446939002896"/>
<node TEXT="def" ID="ID_920347956" CREATED="1446939007612" MODIFIED="1446939008434">
<node TEXT="*Sound.Tidal.Context Text.ParserCombinators.Parsec&gt; let x = &quot;bd sn&quot; :: Pattern String" ID="ID_1927343914" CREATED="1446938994168" MODIFIED="1446938994168"/>
<node TEXT="*Sound.Tidal.Context Text.ParserCombinators.Parsec&gt; x" ID="ID_522795611" CREATED="1446938994168" MODIFIED="1446938994168"/>
<node TEXT="(&quot;bd&quot; 0 1/2) (&quot;sn&quot; 1/2 1)" ID="ID_290212627" CREATED="1446938994176" MODIFIED="1446938994176"/>
</node>
<node TEXT="queries" ID="ID_1226294302" CREATED="1446939018877" MODIFIED="1446939020612">
<node TEXT="(0,1/2) =&gt; bd" ID="ID_113253515" CREATED="1446939025276" MODIFIED="1446939144755">
<node TEXT="*Sound.Tidal.Context Text.ParserCombinators.Parsec&gt; (arc x) (0,1/2)" ID="ID_1320816176" CREATED="1446938994177" MODIFIED="1446938994177"/>
<node TEXT="[((0 % 1,1 % 2),(0 % 1,1 % 2),&quot;bd&quot;)]" ID="ID_1096568415" CREATED="1446938994179" MODIFIED="1446938994179"/>
</node>
<node TEXT="(0,2/3) =&gt; both events" ID="ID_587101315" CREATED="1446939027165" MODIFIED="1446939170635">
<node TEXT="*Sound.Tidal.Context Text.ParserCombinators.Parsec&gt; (arc x) (0,2/3)" ID="ID_820119540" CREATED="1446938994186" MODIFIED="1446938994186"/>
<node TEXT="[((0 % 1,1 % 2),(0 % 1,1 % 2),&quot;bd&quot;),((1 % 2,1 % 1),(1 % 2,1 % 1),&quot;sn&quot;)]" ID="ID_772925023" CREATED="1446938994188" MODIFIED="1446938994188"/>
</node>
<node TEXT="len 0 =&gt; []" ID="ID_84943812" CREATED="1446939029476" MODIFIED="1446939185118">
<node TEXT="1/2,1/2" ID="ID_1926764978" CREATED="1446939187468" MODIFIED="1446939190075">
<node TEXT="*Sound.Tidal.Context Text.ParserCombinators.Parsec&gt; (arc x) (1/2,1/2)" ID="ID_876154526" CREATED="1446938994195" MODIFIED="1446938994195"/>
<node TEXT="[]" ID="ID_271159620" CREATED="1446938994203" MODIFIED="1446938994203"/>
</node>
</node>
<node TEXT="(1/5,1/4) =&gt; bd" ID="ID_268359810" CREATED="1446939033181" MODIFIED="1446939213719">
<node TEXT="*Sound.Tidal.Context Text.ParserCombinators.Parsec&gt; (arc x) (1/5,1/4)" ID="ID_279576558" CREATED="1446938994230" MODIFIED="1446938994230"/>
<node TEXT="[((0 % 1,1 % 2),(0 % 1,1 % 2),&quot;bd&quot;)]" ID="ID_1611046443" CREATED="1446938994232" MODIFIED="1446938994232"/>
</node>
<node TEXT="" ID="ID_1555978214" CREATED="1446939031325" MODIFIED="1446939031325">
<node TEXT="*Sound.Tidal.Context Text.ParserCombinators.Parsec&gt; (arc x) (1/2,2/3)" ID="ID_1227905273" CREATED="1446938994212" MODIFIED="1446938994212"/>
<node TEXT="[((1 % 2,1 % 1),(1 % 2,1 % 1),&quot;sn&quot;)]" ID="ID_1577644672" CREATED="1446938994217" MODIFIED="1446938994217"/>
</node>
<node TEXT="" ID="ID_324545709" CREATED="1446939088772" MODIFIED="1446939088772">
<node TEXT="*Sound.Tidal.Context Text.ParserCombinators.Parsec&gt; (arc x) (1/5,1/5)" ID="ID_1916826579" CREATED="1446939087299" MODIFIED="1446939087299"/>
<node TEXT="[]" ID="ID_34804692" CREATED="1446939087299" MODIFIED="1446939087299"/>
</node>
<node TEXT="" ID="ID_1792755867" CREATED="1446939090676" MODIFIED="1446939090676">
<node TEXT="*Sound.Tidal.Context Text.ParserCombinators.Parsec&gt; (arc x) (1/5,1/6)" ID="ID_1851689330" CREATED="1446939087302" MODIFIED="1446939087302"/>
<node TEXT="[]" ID="ID_916000016" CREATED="1446939087304" MODIFIED="1446939087304"/>
</node>
<node TEXT="" ID="ID_748533303" CREATED="1446939118420" MODIFIED="1446939118420">
<node TEXT="*Sound.Tidal.Context Text.ParserCombinators.Parsec&gt; (arc x) (3/4,1/4)" ID="ID_894030095" CREATED="1446939119389" MODIFIED="1446939119389"/>
<node TEXT="[]" ID="ID_1948972393" CREATED="1446939119389" MODIFIED="1446939119389"/>
</node>
</node>
</node>
<node TEXT="belief" ID="ID_1713603949" CREATED="1446939222660" MODIFIED="1446939223675">
<node TEXT="arc len 0 =&gt; no events returned" ID="ID_1619573910" CREATED="1446939224445" MODIFIED="1446939240398"/>
<node TEXT="arc len &lt; 0 =&gt; no events returned" ID="ID_1408969783" CREATED="1446939240740" MODIFIED="1446939248515"/>
<node TEXT="arc len &gt; 0 =&gt; all overlapping events returned" ID="ID_1063745949" CREATED="1446939255844" MODIFIED="1446939266889"/>
</node>
<node TEXT="how ? elegj generate such a function" ID="ID_1152029708" CREATED="1446939320061" MODIFIED="1446939338337"/>
</node>
</node>
<node TEXT="mv git_play/tidal to tidal/git" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_959702908" CREATED="1447310936775" MODIFIED="1447310960486"/>
<node TEXT="reprogram Ctrl-b, Ctrl-f to skip to space&#xa;.have something like them for next|(?only skip) punct|alpha" ID="ID_1396206352" CREATED="1447453680798" MODIFIED="1447453759005"/>
<node TEXT="big &amp; feas" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_342985025" CREATED="1447453888662" MODIFIED="1447455740610">
<node TEXT="=? Tidal.Overlarchy" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1959322215" CREATED="1447454326350" MODIFIED="1447454336302"/>
<node TEXT="rep parallelism" ID="ID_1214116094" CREATED="1447455749775" MODIFIED="1447455753591">
<node TEXT="must duplicate rhythm from sample name to pitch" ID="ID_1549012100" CREATED="1447453894198" MODIFIED="1447453903766"/>
<node ID="ID_181598560" CREATED="1447454105030" MODIFIED="1447454285781"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      two parallel voices (can be notes in the same Tidal-&quot;&quot;-expr<font color="#0000ff">) if designed to move together, do not recog the correspondence. for instance, if I want over a tonic of 8 the pitch(just, not eq temp) seq(12,7) to play synced to seq(10,8*(7/6)), I write each in that order and know myself the 8*7/6 sounds good with 7 and bad with 10, but Tidal does not</font>
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="show parallelism" ID="ID_981082287" CREATED="1447455755655" MODIFIED="1447455757846">
<node TEXT="show patterns together, like properties aligned" ID="ID_370591597" CREATED="1447455580639" MODIFIED="1447455594035">
<node TEXT="like meaning equal" ID="ID_392781181" CREATED="1447455598943" MODIFIED="1447455601637"/>
</node>
<node TEXT="example" ID="ID_1051251376" CREATED="1447455758743" MODIFIED="1447455759563">
<node TEXT="in these" ID="ID_1855523092" CREATED="1447455764872" MODIFIED="1447455766439">
<node TEXT="let rhy n = sound &quot;f f ~ ~&quot; |*|  speed &quot;0.07&quot; |*| cut $. return n" ID="ID_1502264063" CREATED="1447455778910" MODIFIED="1447455778910"/>
<node TEXT="d1 $ (&lt;~) (1/2) $ rhy 1 |*|           speed &quot;8          [7  15 ]/2!!&quot;" ID="ID_1263083244" CREATED="1447455760040" MODIFIED="1447455760040"/>
<node TEXT="d2 $              rhy 2 |*|           speed &quot;[13 12]/2  [10 9.33]/2!!&quot;" ID="ID_543406260" CREATED="1447455760040" MODIFIED="1447455760040"/>
<node TEXT="d3 $              rhy 3 |*| slow 2 $. speed &quot;[5 3]/2 4&quot;" ID="ID_1026741248" CREATED="1447455760048" MODIFIED="1447455760048"/>
</node>
<node TEXT="the three lowest speed commands align, and (intentionally) not the first" ID="ID_1254768609" CREATED="1447455781767" MODIFIED="1447455792605"/>
<node TEXT="the pitch groups largly align, but (intentionally) the (one that (unlike the others that would be parallel to it) is not appended by &quot;!!&quot;) is not aligned to those would-bes" ID="ID_531671910" CREATED="1447455797414" MODIFIED="1447455859701"/>
</node>
</node>
</node>
<node TEXT="want ? voice states &quot;I have a unique-among-_ cut group value&quot;" LOCALIZED_STYLE_REF="default" ID="ID_689666591" CREATED="1447455442015" MODIFIED="1447455488184"/>
<node TEXT="learn harmonics around 8: 9, 10, 9.6=8*6/5, .." ID="ID_1638107394" CREATED="1447454037750" MODIFIED="1447454061072"/>
<node TEXT="&quot;what are all the notes anyone&apos;s using? If there are n of those, I need to see them in order so that I can write in corresponding order the new scale, which might be fewer than n but if so will when I write it nevertheless contain each of the n values that the original n map to&quot;" ID="ID_1567600003" CREATED="1447456280440" MODIFIED="1447456349524"/>
<node TEXT="in OvyPattern lift rep from pitch to (scale, position)" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_380844861" CREATED="1447456518420" MODIFIED="1447456564470">
<node TEXT="implem, not quite right" ID="ID_1387970224" CREATED="1447456506970" MODIFIED="1447456517091">
<node TEXT="Pattern a -&gt; (b -&gt; a) -&gt; Pattern b" ID="ID_1264888459" CREATED="1447456379346" MODIFIED="1447456410567"/>
<node TEXT="example: b :: (Scale -&gt; Position -&gt; Pitch, Scale, Position)&#xa;         a :: Pitch" ID="ID_814202269" CREATED="1447456416813" MODIFIED="1447456485972"/>
</node>
</node>
<node TEXT="assign ranges to voices (which voice sounds best in which range), assign melodies to voice groups, auto figure out which parts played by which voices" ID="ID_1540753660" CREATED="1447459016865" MODIFIED="1447459055720"/>
<node TEXT="11 13" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1110564158" CREATED="1447483336392" MODIFIED="1447483339160"/>
<node TEXT="imag graph lang" ID="ID_161781439" CREATED="1447483340715" MODIFIED="1447483343480">
<node TEXT="import Graph|Dwt as G" ID="ID_747458888" CREATED="1447483368336" MODIFIED="1447483390792"/>
<node TEXT="g &lt;- g.add" ID="ID_1002581619" CREATED="1447483346977" MODIFIED="1447483531300"/>
</node>
<node TEXT="multiple silences" ID="ID_1130580489" CREATED="1447872542745" MODIFIED="1447872545092">
<node TEXT="let msil = mapM_ ($ silence)&#xa;&#xa;msil [d1,d4,d3]" ID="ID_1402523565" CREATED="1447872547988" MODIFIED="1447872548923"/>
</node>
<node TEXT="mus + tidal, 2015 11 7-22" ID="ID_1926121064" CREATED="1448302064968" MODIFIED="1448308095984">
<font BOLD="true"/>
<node TEXT="1p" ID="ID_1450273714" CREATED="1448306222029" MODIFIED="1448306226717">
<node TEXT="? submit simple refactorings to Sound.Tidal" LOCALIZED_STYLE_REF="default" ID="ID_1232566525" CREATED="1446765002172" MODIFIED="1448302069213"/>
<node TEXT="tidal / DIY OSC" ID="ID_233814763" CREATED="1446856157444" MODIFIED="1446856161475">
<node TEXT="http://lurk.org/groups/tidal/messages/topic/1lMTRd2nDtmVcnVasSP4cp/" ID="ID_778520084" CREATED="1446856162018" MODIFIED="1446856162018" LINK="http://lurk.org/groups/tidal/messages/topic/1lMTRd2nDtmVcnVasSP4cp/"/>
</node>
<node TEXT="tidal / grid(v) pattern to (n or grid(noun))" ID="ID_1571446951" CREATED="1446922569928" MODIFIED="1446922624712">
<node TEXT="n (a number) a simple case of grid(noun)" ID="ID_1333721215" CREATED="1446922602599" MODIFIED="1446922632921"/>
</node>
<node TEXT="generators for [concur ratio] sequences" ID="ID_1200968898" CREATED="1446922944063" MODIFIED="1446922971872"/>
<node TEXT="play the relationship" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_696275197" CREATED="1446923674570" MODIFIED="1448302227172">
<font BOLD="false"/>
<node TEXT="set up an env, choose a rel like &quot;the {interval, time-quantized instruction delay, ..} between these two voices&quot;, play that thing" ID="ID_1014896496" CREATED="1446923678564" MODIFIED="1446923732350"/>
</node>
<node TEXT="tidal : sort events by (start . end)" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1480245168" CREATED="1446947374786" MODIFIED="1448302398892">
<node TEXT="&quot;.&quot; eval left first" ID="ID_1395862129" CREATED="1446947395594" MODIFIED="1446947413487"/>
</node>
<node TEXT="drums have more voices" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1654434806" CREATED="1447124512493" MODIFIED="1447124516292">
<node TEXT="kick, sn, hat etc -- how to make them compete? with bass, treb" ID="ID_761450673" CREATED="1447124520307" MODIFIED="1447124535623"/>
</node>
<node TEXT="wave of duplicate on|(off (rhythm))" LOCALIZED_STYLE_REF="styles.topic" ID="ID_415423512" CREATED="1447128261317" MODIFIED="1448302690650"/>
<node TEXT="voice wave overshoot, one disappears at end of cyc, two replace it start of next" ID="ID_371227268" CREATED="1447128870207" MODIFIED="1447128889661"/>
<node TEXT="incorporate sample hunting into tidal use rhythm" ID="ID_1376959571" CREATED="1447136974490" MODIFIED="1447136984690">
<node TEXT=". rhythm of using tidal" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_570694646" CREATED="1447136989779" MODIFIED="1448302973790"/>
</node>
<node TEXT="pre-stutter" ID="ID_960749778" CREATED="1447137477254" MODIFIED="1447137479334">
<node TEXT="play the first few bits of the verse before starting the verse on the beat" ID="ID_1189155175" CREATED="1447137480084" MODIFIED="1447137491968">
<node TEXT="until it restarts, aud thinks you changed the downbeat" ID="ID_1250594464" CREATED="1447137502758" MODIFIED="1447137510265"/>
</node>
</node>
<node TEXT="ask &quot;what is the meter? on which beat does the snare fall?&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1653686499" CREATED="1447140090497" MODIFIED="1448303046169"/>
<node TEXT="issue &quot;do _ at the next n / 8, where 8 = the meter&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_321784703" CREATED="1447140104332" MODIFIED="1448303046163"/>
<node TEXT="2 bass voices, one constant, the other duplicating the first sometimes" ID="ID_1328273681" CREATED="1447234240260" MODIFIED="1447234254269">
<node TEXT="bass and kick" ID="ID_577662916" CREATED="1447234255164" MODIFIED="1447234257074"/>
<node TEXT="pas the dutch" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1860864371" CREATED="1447234259101" MODIFIED="1447234262748"/>
</node>
</node>
<node TEXT="2p" ID="ID_1504023899" CREATED="1448306227541" MODIFIED="1448306228331">
<node TEXT="physics for music" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1262157018" CREATED="1447402741400" MODIFIED="1447402744964">
<node TEXT="gravity among melodies" ID="ID_1049093328" CREATED="1447402787169" MODIFIED="1447402799657"/>
</node>
<node TEXT="pitch =&gt; trigger &lt;= sample" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_911775651" CREATED="1448304888532" MODIFIED="1448304904684">
<node TEXT="join pitch instructions to sample trigger time instructions, new time at each new time from either" ID="ID_229356259" CREATED="1447405441348" MODIFIED="1447405467576"/>
</node>
<node TEXT="query voice(s)" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_69136023" CREATED="1448304913604" MODIFIED="1448304923525">
<node TEXT="ask &quot;what are all the psr&apos;s pitches? note start times (as fraction of a cycle)? what are all the pitches|start times of any instrument? ..&quot;" ID="ID_1326665042" CREATED="1447407571638" MODIFIED="1447407622639">
<node TEXT="that way could preserve information while escaping _" ID="ID_942930816" CREATED="1447407624679" MODIFIED="1447407631612">
<node TEXT="against being write-only, cornering myself" ID="ID_1252484740" CREATED="1447407638106" MODIFIED="1447407644344"/>
</node>
</node>
</node>
<node TEXT="song ! instrument" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_886353062" CREATED="1447470180808" MODIFIED="1447470195821">
<node TEXT="choose ?offline the params it most needs, play a (?sep proc)" ID="ID_1989791409" CREATED="1447470187527" MODIFIED="1447470243997">
<node TEXT="the ?s the same" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_73283563" CREATED="1447470244823" MODIFIED="1447470250440"/>
</node>
</node>
<node TEXT="while bass at -6, use scale (-6,0,4,10,12,18,..) and when at 0 use same except 5,13,.." ID="ID_1071651448" CREATED="1447475038106" MODIFIED="1447475100265">
<node TEXT="I might with the .. be skipping another conflict zone." ID="ID_1121302556" CREATED="1447475133042" MODIFIED="1447475141097"/>
</node>
<node TEXT="why Tidal.Graph" LOCALIZED_STYLE_REF="styles.subtopic" ID="ID_1526655044" CREATED="1447494662594" MODIFIED="1447494676921">
<node TEXT="redefining one thing, need not redefine everything dependent on it" ID="ID_1330414111" CREATED="1447494678624" MODIFIED="1447494691442"/>
<node TEXT="can make targeted queries -- &quot;what is the union of every instrument&apos;s pitch set?&quot; or &quot;show on screen the kick and snares aligned in horizontal time&quot;" ID="ID_1941530661" CREATED="1447494714503" MODIFIED="1447494789178"/>
</node>
<node TEXT="where major becomes dom 7, maj to dim with hardly a change" ID="ID_331509228" CREATED="1447551233321" MODIFIED="1447551248488"/>
<node TEXT="given 2 harmonics, divide the octave to a specified fineness using them" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1056937617" CREATED="1447570405304" MODIFIED="1448305502503"/>
<node TEXT="define a region the representative of which switches between nearby(in the region) fractions, switching to harmonize with other regions" ID="ID_1664945454" CREATED="1447570529679" MODIFIED="1448305525434"/>
<node TEXT="x-voice waves" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1319895844" CREATED="1447739289314" MODIFIED="1448305858466">
<node TEXT="assume some upper limit on the voices, say 10" ID="ID_1480966097" CREATED="1447739324171" MODIFIED="1447739346980"/>
<node TEXT="a wave state is a subset of the integers in [0,10]" ID="ID_1915194516" CREATED="1447739347201" MODIFIED="1447739374842"/>
<node TEXT="some pictures" ID="ID_933003529" CREATED="1447739389108" MODIFIED="1447739390717">
<node TEXT="adjacent digits concurrent, space next" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1471595405" CREATED="1447739473394" MODIFIED="1447739485082"/>
<node TEXT="12 1" ID="ID_1040552409" CREATED="1447739463175" MODIFIED="1447739464009">
<node TEXT="the simplest?" ID="ID_450445420" CREATED="1447739464904" MODIFIED="1447739467344"/>
</node>
<node TEXT="12 1 2 1" ID="ID_1641241374" CREATED="1447739436747" MODIFIED="1447739459827"/>
<node TEXT="1&#xa;12&#xa;123&#xa;1234" ID="ID_967139787" CREATED="1447739391630" MODIFIED="1447739398341">
<node TEXT="bach did this in the transylvannia song" ID="ID_1704349562" CREATED="1447739401313" MODIFIED="1447739407685">
<node TEXT="on a diminished chord" ID="ID_1668812228" CREATED="1447739413727" MODIFIED="1447739416432"/>
</node>
</node>
<node TEXT="1 12 2 12" ID="ID_1902006738" CREATED="1447739423901" MODIFIED="1447739430751"/>
</node>
</node>
<node TEXT="in music, when set of concurrent waves|pattern changes, important to change their durations" ID="ID_802668908" CREATED="1447820036866" MODIFIED="1447820058969">
<node TEXT="in-pat v. x-pat" ID="ID_623269762" CREATED="1447820090097" MODIFIED="1447820094608"/>
</node>
<node TEXT="0 min `then` 1 aug" ID="ID_816266275" CREATED="1447827430724" MODIFIED="1448306318365"/>
</node>
<node TEXT="3.." ID="ID_856682034" CREATED="1448306376165" MODIFIED="1448306376956">
<node TEXT="31et gives you so much more sideways" ID="ID_697894712" CREATED="1447827751344" MODIFIED="1447827764688"/>
<node TEXT="music, detect implicit contracts" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_462368155" CREATED="1447906842110" MODIFIED="1448306366875">
<node TEXT="inc. read them into one&apos;s own observed history of work" ID="ID_1036381957" CREATED="1447906856273" MODIFIED="1447906864552"/>
</node>
<node TEXT="chorus fx on vox during chorus" ID="ID_838612906" CREATED="1448007574261" MODIFIED="1448007581095"/>
<node TEXT="if the rhyme feels too predictable then alter another thing, for instance delay it" ID="ID_1894398071" CREATED="1448070532570" MODIFIED="1448306892888">
<node TEXT="observed, hamilton, room where it happens" ID="ID_146884875" CREATED="1448070548230" MODIFIED="1448070552933"/>
</node>
<node TEXT="mus imp appet prosth" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_461473590" CREATED="1448089009961" MODIFIED="1448089166385">
<node ID="ID_1670350590" CREATED="1448089164944" MODIFIED="1448089164944"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      : display a history (across graphs) of (langj high-level|observed in rendered data) [timbre, note frequency range (x-voice, within-pattern), max pattern duration, pitch range, scale, ..]
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="slightly warped parallel [third]" ID="ID_1665468846" CREATED="1448089276592" MODIFIED="1448089282976">
<node TEXT="10/31 in one, 11/31 after, from a different tonic" ID="ID_1700421198" CREATED="1448089294567" MODIFIED="1448089307653"/>
</node>
</node>
</node>
<node TEXT="linux group + jack" ID="ID_6387105" CREATED="1447143031687" MODIFIED="1447143041832"/>
<node TEXT="the natural tidal would use functions, have a monoid that is a cycle" LOCALIZED_STYLE_REF="default" ID="ID_1222238007" CREATED="1445930769443" MODIFIED="1449079024449"/>
<node TEXT="scale indices ~ drum indexes" LOCALIZED_STYLE_REF="styles.subtopic" ID="ID_1592709215" CREATED="1454395182320" MODIFIED="1454395195205">
<node TEXT="as want melody variations on mult pitch instr&apos;s, so want rhythm variations on mult drumsets" ID="ID_864794991" CREATED="1454395148385" MODIFIED="1454395180608"/>
</node>
<node TEXT="is protate obsolete, for when patterns carried lengths?" ID="ID_85829744" CREATED="1454553449790" MODIFIED="1454553457814"/>
<node TEXT="&quot;the transition functions&quot;" ID="ID_1050779522" CREATED="1454622061646" MODIFIED="1454622065232">
<node TEXT="via lurk/tidal, thread &quot;why tidal?&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1080089872" CREATED="1454622095967" MODIFIED="1454622107340"/>
<node TEXT="Ben Gold wishes it was easier to evolve in Tidal rather than stay fixed in a groove, and says he wants to learn the transition functions for that reason." ID="ID_755536694" CREATED="1454622065679" MODIFIED="1454622088305"/>
</node>
<node TEXT="reading Hackage" LOCALIZED_STYLE_REF="styles.subtopic" ID="ID_947327352" CREATED="1455662129666" MODIFIED="1455662131843">
<node TEXT="2016 02 16" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1709127073" CREATED="1455665484243" MODIFIED="1455665489079"/>
<node TEXT="Tidal.Pattern / useful-looking" LOCALIZED_STYLE_REF="styles.subtopic" ID="ID_484414802" CREATED="1455656630513" MODIFIED="1455659417564">
<node TEXT="resume after filterStartInRange" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_757682193" CREATED="1455657738817" MODIFIED="1455665767106"/>
<node TEXT="cat, slowcat ~ append, append&apos; ~ spread, slowspread" ID="ID_299228002" CREATED="1455656645218" MODIFIED="1455665700434"/>
<node TEXT="run n = listToPat [0..n-1]" ID="ID_828493570" CREATED="1455656701713" MODIFIED="1455656711517"/>
<node TEXT="when (int), whenT (time)" ID="ID_1260520080" CREATED="1455657485305" MODIFIED="1455657493549"/>
<node TEXT="playWhen : silence until start" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_584715583" CREATED="1455659425801" MODIFIED="1455661412351">
<node TEXT="d1 $ playWhen (\t -&gt; (floor t) &gt; div (floor now) 8 * 8 + 8) p2" ID="ID_37341978" CREATED="1455659447846" MODIFIED="1455659447846"/>
<node TEXT="that is intended to start the next time the cycle is equal to 0 mod 8" ID="ID_1093543381" CREATED="1455659456969" MODIFIED="1455659794694"/>
<node TEXT="except it doesn&apos;t -- it starts at mod 2" ID="ID_600386827" CREATED="1455659786426" MODIFIED="1455659798134"/>
<node TEXT="and that result appears consistent across other meters (3,5,7)" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_118008342" CREATED="1455659830417" MODIFIED="1455659850323"/>
</node>
<node TEXT="seqP :: like cat, but specifying times per event" ID="ID_909804976" CREATED="1455665532475" MODIFIED="1455665543000"/>
<node TEXT="sig :: (Time -&gt; a) -&gt; Pattern a" ID="ID_1729638538" CREATED="1455665621395" MODIFIED="1455665622480"/>
</node>
<node TEXT="?" ID="ID_1421459613" CREATED="1455665568571" MODIFIED="1455665569447">
<node TEXT="foldEvery" ID="ID_381776242" CREATED="1455665573075" MODIFIED="1455665574807"/>
</node>
<node TEXT="? Sound.Tidal.Transition" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_678790392" CREATED="1455662121538" MODIFIED="1455662136371"/>
</node>
<node TEXT="listToPat, maybeListToPat" ID="ID_1468432535" CREATED="1455656664897" MODIFIED="1455656690880">
<node TEXT="Nothing =&gt; silence" ID="ID_972488182" CREATED="1455656691272" MODIFIED="1455656694229"/>
</node>
</node>
<node TEXT="SuperCollider" ID="ID_1578777151" CREATED="1416531712822" MODIFIED="1416531713136">
<node TEXT="to start in linux : &quot;scide &amp;&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1560095010" CREATED="1442689196204" MODIFIED="1442689210398">
<font BOLD="false"/>
</node>
<node TEXT="haskell-supercollider" ID="ID_539639786" CREATED="1416678098434" MODIFIED="1418783304549">
<node ID="ID_912867391" CREATED="1418783304793" MODIFIED="1418783304793"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      only works on linux
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="most of this is from" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_339023125" CREATED="1361663311304" MODIFIED="1361663318896">
<node TEXT="Scott Wilson&apos;s SC tutorial" LOCALIZED_STYLE_REF="default" ID="ID_378720094" CREATED="1356466771026" MODIFIED="1356547647995"/>
<node TEXT="next (and last, of this series): Sequencing with Patterns" LOCALIZED_STYLE_REF="default" ID="ID_1508695130" CREATED="1350881908015" MODIFIED="1361663322718">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Sequencing%20with%20Patterns.html" ID="ID_1668075378" CREATED="1356550980792" MODIFIED="1356550980792" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Sequencing%20with%20Patterns.html"/>
<node TEXT="Firefox displays all links in purple, as if I&apos;ve read the entire tutorial, but I have not. I&apos;ve gone in order." ID="ID_283525693" CREATED="1352270053232" MODIFIED="1352270089923"/>
</node>
</node>
<node TEXT="SC in Emacs" ID="ID_72558605" CREATED="1416988404294" MODIFIED="1418783289101">
<node TEXT="http://sam.aaron.name/2010/02/09/hooking-supercollider-up-to-emacs-on-os-x.html" ID="ID_318044890" CREATED="1416988408479" MODIFIED="1416988408479" LINK="http://sam.aaron.name/2010/02/09/hooking-supercollider-up-to-emacs-on-os-x.html"/>
<node TEXT="http://www.emacswiki.org/emacs/SuperCollider" ID="ID_967045050" CREATED="1416988414769" MODIFIED="1416988414769" LINK="http://www.emacswiki.org/emacs/SuperCollider"/>
<node TEXT="http://supercollider.sourceforge.net/wiki/index.php/SuperCollider_with_emacs:_scel" ID="ID_1039391859" CREATED="1416988429102" MODIFIED="1416988429102" LINK="http://supercollider.sourceforge.net/wiki/index.php/SuperCollider_with_emacs:_scel"/>
</node>
<node TEXT="cho" ID="ID_1897297898" CREATED="1416775408736" MODIFIED="1416775410763">
<node TEXT="p" ID="ID_559801584" CREATED="1416814614187" MODIFIED="1416814615374">
<node TEXT="someone implemented CodeStack" ID="ID_1382035040" CREATED="1416814678010" MODIFIED="1416814693623">
<node TEXT="https://github.com/cappelnord/CNToolsSC3/blob/master/CodeStack.sc" ID="ID_207869249" CREATED="1416814683739" MODIFIED="1416814683739" LINK="https://github.com/cappelnord/CNToolsSC3/blob/master/CodeStack.sc"/>
</node>
<node TEXT="read classes on github" ID="ID_1267993689" CREATED="1416814616123" MODIFIED="1416814619430">
<node TEXT="links out" ID="ID_782928809" CREATED="1416814620283" MODIFIED="1416814624618">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1174509934" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
</node>
<node TEXT="?" ID="ID_1136092966" CREATED="1416515943618" MODIFIED="1416515990581">
<node TEXT="namespace var&apos;s?" ID="ID_1016943126" CREATED="1416673248087" MODIFIED="1416673254578">
<node TEXT="Can I assign a namespace to a variable ~n1 (or ~n2 ...), and within it use variable names that don&apos;t require the ~?" ID="ID_784919231" CREATED="1416515950128" MODIFIED="1416516049754"/>
</node>
<node TEXT="ask" ID="ID_1637262715" CREATED="1416778048321" MODIFIED="1416778054841">
<font BOLD="true"/>
<node TEXT="why sometimes this.var and sometimes just var" ID="ID_1683538122" CREATED="1416814502645" MODIFIED="1416814511296">
<node TEXT="https://github.com/cappelnord/CNToolsSC3/blob/master/BufferPool.sc" ID="ID_616579208" CREATED="1416814511703" MODIFIED="1416814511703" LINK="https://github.com/cappelnord/CNToolsSC3/blob/master/BufferPool.sc"/>
<node TEXT="example" ID="ID_299932848" CREATED="1416814531380" MODIFIED="1416814555007">
<node TEXT="copy it into SC to format" ID="ID_1304528786" CREATED="1416814555835" MODIFIED="1416814559559"/>
<node TEXT="rn" ID="ID_904693403" CREATED="1416814560444" MODIFIED="1416814561623">
<node TEXT="Ratio(3/2)&#xa;BufferPool&#xa;{&#xa;var &lt;&gt;server;&#xa;var &lt;&gt;bufferLength;&#xa;var &lt;&gt;channels;&#xa;var buffers;&#xa;var bufferCurrent;&#xa;var bufferNum;&#xa;&#xa;*new {|server, bufferLength, channels = 1,  num = 4|&#xa;^super.new.init(server, bufferLength, channels, num);&#xa;}&#xa;&#xa;init {|server, bufferLength, channels, num|&#xa;&#xa;this.server = server;&#xa;this.bufferLength = bufferLength;&#xa;bufferNum = num;&#xa;this.channels = channels;&#xa;bufferCurrent = 0;" ID="ID_1108127430" CREATED="1416814537668" MODIFIED="1416814549309"/>
</node>
</node>
</node>
<node TEXT="evaluation" ID="ID_688894412" CREATED="1416120945685" MODIFIED="1416778037242">
<node TEXT="an expr for which (expr) and ((expr)) evaluate, but not (((expr)))" ID="ID_1894152551" CREATED="1416120949725" MODIFIED="1416121021857">
<node TEXT="var vx;" ID="ID_298657059" CREATED="1416121022891" MODIFIED="1416121022891"/>
<node TEXT="vx = 3;" ID="ID_1401773394" CREATED="1416121022891" MODIFIED="1416121022891"/>
</node>
<node TEXT="what are blocks and regions, and how to curse through them?" ID="ID_1900717475" CREATED="1416121994051" MODIFIED="1416122006679">
<node TEXT="Preferences/Keyboard shortcuts indicates they exist" ID="ID_797138270" CREATED="1416122006939" MODIFIED="1416122017487"/>
</node>
</node>
<node TEXT="signal recursion" ID="ID_78524531" CREATED="1416781814805" MODIFIED="1416781818753">
<node TEXT="control rate" ID="ID_364831449" CREATED="1416779838699" MODIFIED="1416781827610">
<node TEXT="doesn&apos;t work" ID="ID_1312985803" CREATED="1416781828573" MODIFIED="1416781830104"/>
<node TEXT="a = 3;" ID="ID_270010989" CREATED="1416779842661" MODIFIED="1416779842661"/>
<node TEXT="a = 1.000001 * Delay1.kr(a);" ID="ID_1312999481" CREATED="1416779842661" MODIFIED="1416779842661"/>
</node>
<node TEXT="audio rate (dangerous?)" LOCALIZED_STYLE_REF="default" ID="ID_1284195593" CREATED="1352268120772" MODIFIED="1416781825944">
<node TEXT="from Googling, not tutorial" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1590838788" CREATED="1352268123284" MODIFIED="1352268132205"/>
<node TEXT="s.options.blockSize = 1;" ID="ID_538533955" CREATED="1352268133843" MODIFIED="1352268134191"/>
<node TEXT="a + ro * Delay1.ar(a)" ID="ID_1418023132" CREATED="1352268143539" MODIFIED="1352268153734">
<node TEXT="an AR(1) process (in the time-series econometric sense, not &quot;ar = audio rate&quot;)" ID="ID_1163229846" CREATED="1352268154074" MODIFIED="1352268177957"/>
</node>
</node>
</node>
</node>
<node TEXT=".free &#x2260; .remove?" ID="ID_100461979" CREATED="1416778625696" MODIFIED="1416778630036"/>
<node TEXT="what to do about clicks?" ID="ID_531953002" CREATED="1416800150658" MODIFIED="1416800153500"/>
<node TEXT="auto-indent strategy" ID="ID_208883285" CREATED="1416356738122" MODIFIED="1416356760501">
<node TEXT="I recorded these instructions and not the argument for them." ID="ID_868604766" CREATED="1416781499172" MODIFIED="1416781526471">
<node TEXT="and now I have forgotten the argument" ID="ID_1516629056" CREATED="1416781526651" MODIFIED="1416781534421"/>
</node>
<node TEXT="rn" ID="ID_569350530" CREATED="1416781516188" MODIFIED="1416781516710">
<node TEXT="between adjacent top-level blocks, must include an empty line" ID="ID_737644198" CREATED="1416356750370" MODIFIED="1416356807548">
<node TEXT="otherwise can&apos;t distinguish adjacent blocks" ID="ID_1835302393" CREATED="1416356808232" MODIFIED="1416356819548"/>
</node>
<node TEXT="however, within one, need not" ID="ID_392196583" CREATED="1416356802136" MODIFIED="1416356826325"/>
</node>
</node>
<node TEXT="how to read stack trace?" ID="ID_251249135" CREATED="1416784248435" MODIFIED="1416784251678"/>
</node>
<node TEXT="sac" ID="ID_1791521080" CREATED="1416216396287" MODIFIED="1416774348366">
<node TEXT="feedback" ID="ID_1104847776" CREATED="1416774348812" MODIFIED="1416774350382">
<node TEXT="I could perform feedback at my own event rate, even slower than &quot;kr&quot;, polled constantly, updating a global array of floats." ID="ID_716450485" CREATED="1416216422239" MODIFIED="1416774340817"/>
</node>
</node>
<node TEXT="pressing" ID="ID_1745398787" CREATED="1416774178149" MODIFIED="1416774179825">
<node TEXT="errors on startup" ID="ID_357617561" CREATED="1416353558385" MODIFIED="1416353563396"/>
<node TEXT="group synths, to message" ID="ID_7484356" CREATED="1416674259678" MODIFIED="1416674275512"/>
<node TEXT="less pressing" ID="ID_518460082" CREATED="1416207219119" MODIFIED="1416774307155">
<font BOLD="true"/>
<node TEXT="acyclic digraphs" ID="ID_125438200" CREATED="1416207228727" MODIFIED="1416774297135">
<node TEXT="one sine using another as freq" ID="ID_368621020" CREATED="1416207264238" MODIFIED="1416207270905"/>
<node TEXT="chain of three" ID="ID_1925936267" CREATED="1416207273726" MODIFIED="1416207276353"/>
<node TEXT="diamond" ID="ID_300675509" CREATED="1416207282310" MODIFIED="1416207284465">
<node TEXT="a" ID="ID_857989881" CREATED="1416207290573" MODIFIED="1416207291905">
<node TEXT="b" ID="ID_1256604608" CREATED="1416207292174" MODIFIED="1416207292857">
<node TEXT="d" ID="ID_1087811213" CREATED="1416207297797" MODIFIED="1416207299373">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1287404617" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="c" ID="ID_1860502619" CREATED="1416207293245" MODIFIED="1416207293649">
<node TEXT="d" ID="ID_1287404617" CREATED="1416207294557" MODIFIED="1416207295161"/>
</node>
</node>
</node>
</node>
<node TEXT="feedback" ID="ID_1338093829" CREATED="1416207313029" MODIFIED="1416207315240"/>
<node TEXT="control-rate systems of equations" ID="ID_634752245" CREATED="1416207367932" MODIFIED="1416207380714">
<node TEXT="on lags of each other" ID="ID_186045328" CREATED="1416207395876" MODIFIED="1416207398735"/>
<node TEXT="on each other&apos;s current values subject to an evaluation ordering" ID="ID_531427367" CREATED="1416207401660" MODIFIED="1416207418166"/>
</node>
</node>
</node>
<node TEXT="to read" ID="ID_1149057789" CREATED="1416080563941" MODIFIED="1416777054763">
<font BOLD="true"/>
<node TEXT="** classes" ID="ID_1921578898" CREATED="1416814602795" MODIFIED="1416814607014">
<node TEXT="https://github.com/search?utf8=%E2%9C%93&amp;q=supercollider+classes&amp;type=Repositories&amp;ref=searchresults" ID="ID_1937221661" CREATED="1416814601677" MODIFIED="1416814601677" LINK="https://github.com/search?utf8=%E2%9C%93&amp;q=supercollider+classes&amp;type=Repositories&amp;ref=searchresults"/>
<node TEXT="links in" ID="ID_1174509934" CREATED="1416814621483" MODIFIED="1416814622606"/>
</node>
<node TEXT="syntax shortcuts" ID="ID_1357359986" CREATED="1351436708180" MODIFIED="1416778946199">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Syntax-Shortcuts.html" ID="ID_239937087" CREATED="1351436710758" MODIFIED="1351436710758" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Syntax-Shortcuts.html"/>
</node>
<node TEXT="* Mark Polishook tutorial" ID="ID_355857563" CREATED="1416122538211" MODIFIED="1416122542358">
<node TEXT="resume at 16, buffers" ID="ID_1087141235" CREATED="1416122542523" MODIFIED="1416173424563"/>
</node>
<node TEXT="* tutorial: resume at Sec 14, scheduling" ID="ID_1135819954" CREATED="1416082412100" MODIFIED="1416162293425"/>
<node TEXT="audio tutorial, diverse, deep topics" ID="ID_1527769407" CREATED="1416212584331" MODIFIED="1416212593806">
<node TEXT="not sure how deep the treatment is, not having read" ID="ID_112129132" CREATED="1416212593986" MODIFIED="1416212606685"/>
<node TEXT="http://ecmc.rochester.edu/ecmc/docs/supercollider/scbook/Ch21_Interface_Investigations/ixi%20SC%20tutorial/" ID="ID_1547898927" CREATED="1416212608958" MODIFIED="1416212608958" LINK="http://ecmc.rochester.edu/ecmc/docs/supercollider/scbook/Ch21_Interface_Investigations/ixi%20SC%20tutorial/"/>
</node>
<node TEXT="the built-in tutorials" ID="ID_1129719879" CREATED="1416122656495" MODIFIED="1416781192901">
<node TEXT="from browser, choose &quot;tutorials&quot; filter" ID="ID_633884210" CREATED="1416122662944" MODIFIED="1416122692464"/>
</node>
<node TEXT="titles" ID="ID_1648675371" CREATED="1416080578924" MODIFIED="1416122351217">
<node TEXT="* Streams" ID="ID_1534540947" CREATED="1416523874672" MODIFIED="1416523879698"/>
<node TEXT="Environment" ID="ID_1208376122" CREATED="1416165279160" MODIFIED="1416165280836"/>
<node TEXT="class tree: resume  at LFSaw" ID="ID_1434355461" CREATED="1416045733099" MODIFIED="1416080574592"/>
<node TEXT="syntax shortcuts" ID="ID_968873066" CREATED="1416080574821" MODIFIED="1416080578769"/>
<node TEXT="more on getting help" ID="ID_542414609" CREATED="1416080657844" MODIFIED="1416080662079"/>
<node TEXT="internal snooping" ID="ID_1687145254" CREATED="1416080662283" MODIFIED="1416080664696"/>
<node TEXT="Order of Execution" ID="ID_645305376" CREATED="1416093539544" MODIFIED="1416093548374"/>
</node>
<node TEXT="topics" ID="ID_546105928" CREATED="1416122373670" MODIFIED="1416122374449">
<node TEXT="* Streams" ID="ID_1998795406" CREATED="1416523874672" MODIFIED="1416523879698"/>
<node TEXT="Streams, Patterns, Events" ID="ID_113434375" CREATED="1416122306615" MODIFIED="1416122310394">
<node TEXT="conceptually bundled but not together the title of anything" ID="ID_485956742" CREATED="1416122375997" MODIFIED="1416122387761"/>
</node>
<node TEXT="Practical Guide to Patterns" ID="ID_1767690148" CREATED="1416524176394" MODIFIED="1416524179869"/>
</node>
<node TEXT="skipped" ID="ID_708971477" CREATED="1416777039683" MODIFIED="1416777040847">
<node TEXT="buffers" ID="ID_873728392" CREATED="1416097282086" MODIFIED="1416777045974">
<font BOLD="false"/>
<node TEXT="they hold (typically audio-rate?) data, multichannel if needed" ID="ID_589272352" CREATED="1416097288374" MODIFIED="1416097315945"/>
</node>
</node>
</node>
<node TEXT="internalize" ID="ID_204166462" CREATED="1416777165889" MODIFIED="1416777167397">
<node TEXT="feat&apos;s that exist" ID="ID_1882826587" CREATED="1416777179889" MODIFIED="1416777182141">
<node TEXT="sessions" ID="ID_1662303314" CREATED="1416121148914" MODIFIED="1416777179436">
<node TEXT="save, restore them" ID="ID_1123523421" CREATED="1416121207457" MODIFIED="1416121211621">
<node TEXT="open all doc&apos;s &quot;like they were last time&quot;" ID="ID_954613420" CREATED="1416121166489" MODIFIED="1416121215709"/>
</node>
<node TEXT="switch betewen them" ID="ID_411686489" CREATED="1416121225945" MODIFIED="1416121229964">
<node TEXT="Cmd-Shift-Q" ID="ID_1702237503" CREATED="1416121235744" MODIFIED="1416121244404">
<node TEXT="or maybe Ctrl; that&apos;s what the tut&apos;l said but most of its Ctrl instances seem to be intended to be Cmd" ID="ID_1134835911" CREATED="1416121250041" MODIFIED="1416121266155"/>
</node>
</node>
</node>
</node>
</node>
</node>
<node TEXT="how" ID="ID_1749952958" CREATED="1416774197468" MODIFIED="1416774198680">
<node TEXT=". pitfalls" ID="ID_1651394895" CREATED="1416025202252" MODIFIED="1416777735509">
<node TEXT="synth order" ID="ID_651762405" CREATED="1416172945064" MODIFIED="1416172945459">
<node TEXT="links out" ID="ID_955206458" CREATED="1416172946359" MODIFIED="1416172951446">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_748411397" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="constraints on names" ID="ID_1654959137" CREATED="1416027092771" MODIFIED="1416037432951">
<font BOLD="true"/>
<node TEXT="Variable and argument names can consist of letters and numbers, but must begin with a lower-case letter and cannot contain spaces." ID="ID_49474744" CREATED="1416027095810" MODIFIED="1416027096374"/>
<node TEXT="single letter vars are predeclared" ID="ID_186292101" CREATED="1416036831774" MODIFIED="1416036841138">
<node TEXT="and some of them, e.g. s, have non-nil predefined values" ID="ID_1638747128" CREATED="1416036842023" MODIFIED="1416036857106"/>
</node>
<node TEXT="classes must be capitalized" ID="ID_126801112" CREATED="1416037433932" MODIFIED="1416777511989"/>
</node>
<node TEXT="mul idioms" ID="ID_113240887" CREATED="1416038459244" MODIFIED="1416038461946">
<font BOLD="true"/>
<node TEXT="function args" ID="ID_1445778117" CREATED="1416038462674" MODIFIED="1416038466550">
<node TEXT="the weird way of introducing them I did not record involves a pair of &quot;|&quot; characters" ID="ID_1696641079" CREATED="1416038466747" MODIFIED="1416777534225"/>
</node>
<node TEXT="list access" ID="ID_1591579884" CREATED="1416038489890" MODIFIED="1416038500621">
<node TEXT="xs[index] or xs.at(index)" ID="ID_541651690" CREATED="1416038500930" MODIFIED="1416038515229"/>
</node>
</node>
<node TEXT="vocab" ID="ID_598831725" CREATED="1416037284710" MODIFIED="1416037603233">
<font BOLD="true"/>
<node TEXT="instance var" ID="ID_1125259138" CREATED="1416037294370" MODIFIED="1416037301514">
<node TEXT="field in an instance of a class" ID="ID_1938189826" CREATED="1416037301711" MODIFIED="1416037306770"/>
</node>
<node TEXT="block of samples" ID="ID_869965225" CREATED="1416037708640" MODIFIED="1416037711491">
<node TEXT="audio rate: all samples in a block determined at once" ID="ID_476206395" CREATED="1416037711688" MODIFIED="1416037734499"/>
<node TEXT="event rate: once per block" ID="ID_245496333" CREATED="1416037734696" MODIFIED="1416037739355"/>
</node>
</node>
<node TEXT="latency" ID="ID_1896492820" CREATED="1416523050141" MODIFIED="1416523051304">
<node TEXT="adding an explicit latency value can help timing consistency" ID="ID_305835084" CREATED="1416523062333" MODIFIED="1416523078015"/>
<node TEXT="see sec 15, subsec &quot;A note on server messaging and timing&quot;" ID="ID_1700837286" CREATED="1416523052621" MODIFIED="1416523060176"/>
</node>
<node TEXT="string-like objects" ID="ID_584017192" CREATED="1416087515184" MODIFIED="1416087521482">
<node TEXT="see tutorial, sec 10 (Synth Defs), subsec. &quot;Some Notes on Symbols, Strings, SynthDef and Arg Names&quot;" ID="ID_42260183" CREATED="1416087506447" MODIFIED="1416087536883">
<font BOLD="false"/>
</node>
</node>
<node TEXT="extra function arguments appear to be ignored" ID="ID_685682978" CREATED="1416026767223" MODIFIED="1416026779443">
<node TEXT="-jbb" ID="ID_1848566939" CREATED="1416026780002" MODIFIED="1416026781483"/>
<node TEXT="e.g. try this" ID="ID_1571347090" CREATED="1416777647923" MODIFIED="1416777652029">
<node TEXT="x = {arg a; a+1};&#xa;x.(1,3)" ID="ID_1106791237" CREATED="1416777652539" MODIFIED="1416777653158"/>
</node>
</node>
<node TEXT="use can edit help files, documentation, tutorials" ID="ID_1811584873" CREATED="1416025203627" MODIFIED="1416025233601"/>
<node TEXT=".kr, .ar: constructors" ID="ID_1833577677" CREATED="1416037615289" MODIFIED="1416104034907">
<node ID="ID_1609880942" CREATED="1416037628837" MODIFIED="1416037628837"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      like .new
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="sched a numeric func -&gt; infinite loop" ID="ID_287158505" CREATED="1416516394200" MODIFIED="1416516405452">
<node TEXT="If you schedule function that returns a number, the clock will treat that number as the amount of time before running the function again." ID="ID_1442005539" CREATED="1416516368441" MODIFIED="1416516368725"/>
</node>
<node TEXT="&quot;stop&quot; destroys a Routine, but only pauses a Task" ID="ID_1094106158" CREATED="1416519962324" MODIFIED="1416519985503">
<node TEXT="so use Tasks" ID="ID_1573499261" CREATED="1416519985765" MODIFIED="1416519987712"/>
</node>
<node TEXT="SynthDefs take time to become ready on server" ID="ID_1384438594" CREATED="1416522815849" MODIFIED="1416522838630">
<node TEXT="so executing a block of code that defines and immediately uses one might render as silence the initial uses of it" ID="ID_1422086952" CREATED="1416522846160" MODIFIED="1416522874940"/>
</node>
</node>
<node TEXT="core" ID="ID_466560681" CREATED="1416776056047" MODIFIED="1416776057768">
<node TEXT="scope" ID="ID_1507195690" CREATED="1416024625525" MODIFIED="1416037590397">
<node TEXT="the paren&apos;s enclosing a &quot;var&quot; statement define its scope" ID="ID_1215266809" CREATED="1416036668146" MODIFIED="1416036687653"/>
</node>
<node TEXT="var&apos;s" ID="ID_1029650348" CREATED="1416025534197" MODIFIED="1416776450729">
<node TEXT="s = the server, usually &quot;localhost&quot;" ID="ID_148306162" CREATED="1416025553198" MODIFIED="1416025561113">
<node TEXT="s.boot, s.quit" ID="ID_1315186246" CREATED="1416025564438" MODIFIED="1416025567745"/>
</node>
<node TEXT="&quot;interpreter variables&quot;: one char, def&apos;d at start" ID="ID_620566646" CREATED="1416778575170" MODIFIED="1416778582949"/>
</node>
<node TEXT="environment" ID="ID_1134434597" CREATED="1416095696858" MODIFIED="1416095755829">
<node ID="ID_1890779927" CREATED="1416095756221" MODIFIED="1416095756221"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      environment var's
    </p>
  </body>
</html>
</richcontent>
<node ID="ID_1993081469" CREATED="1416095703637" MODIFIED="1416095703637"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      start with ~
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="are persistent and need no decl" ID="ID_562353209" CREATED="1416095704306" MODIFIED="1416095710010"/>
<node TEXT="are dangerous" ID="ID_1112690748" CREATED="1416095741770" MODIFIED="1416095743605"/>
</node>
<node TEXT="can be changed" ID="ID_1441047000" CREATED="1416095761305" MODIFIED="1416095764533">
<node TEXT="// to be sure, create a new Environment:&#xa;Environment.new.push;&#xa;&#xa;// some code..&#xa;&#xa;// restore old environment&#xa;currentEnvironment.pop;" ID="ID_624616765" CREATED="1416095746777" MODIFIED="1416095750957"/>
</node>
</node>
<node TEXT="control flow" ID="ID_86067663" CREATED="1416777111930" MODIFIED="1416782141579">
<node TEXT="iteration" ID="ID_1141724680" CREATED="1416782137064" MODIFIED="1416782146198">
<node TEXT="map over an array: do, collect" ID="ID_473366948" CREATED="1416358988498" MODIFIED="1416777121309">
<node TEXT=".= was hard to find" ID="ID_70019598" CREATED="1416360084039" MODIFIED="1416360086810"/>
<node TEXT="&quot;do&quot; is for side effects; &quot;collect&quot; is* traditional mapping" ID="ID_995253388" CREATED="1416360236307" MODIFIED="1416360252664">
<node TEXT="is* -&gt; is what I think of as" ID="ID_1334113609" CREATED="1416360252923" MODIFIED="1416360259527"/>
</node>
<node TEXT="({...}) -&gt; {...}" ID="ID_1353585402" CREATED="1416518122883" MODIFIED="1416518137630">
<node TEXT="at least for collect, the parens are not necessary if their contents would be a bracketed expression" ID="ID_1147169442" CREATED="1416518138227" MODIFIED="1416518154806"/>
</node>
<node TEXT="do v. collect" ID="ID_1412263960" CREATED="1416360180365" MODIFIED="1416360192344">
<node TEXT="[1,2].collect({arg i; i+1})" ID="ID_317123564" CREATED="1416360181702" MODIFIED="1416360181702"/>
<node TEXT="[1,2].do({arg i; i+1})" ID="ID_210298177" CREATED="1416360214143" MODIFIED="1416360214143"/>
</node>
<node TEXT="&quot;collect&quot; returns a new list" ID="ID_961931297" CREATED="1416360167276" MODIFIED="1416360172224"/>
<node TEXT="&quot;do&quot; returns the input list" ID="ID_1539559197" CREATED="1416358999634" MODIFIED="1416360163761">
<node TEXT="[1,2].do( {arg i; postln(i) } )" ID="ID_1075694187" CREATED="1416359046334" MODIFIED="1416359046334"/>
<node TEXT="also available: the numerical index" ID="ID_172451724" CREATED="1416359117968" MODIFIED="1416359130693">
<node TEXT="as the second argument" ID="ID_702202538" CREATED="1416359132473" MODIFIED="1416359135315"/>
<node TEXT="List[&apos;a&apos;, &apos;b&apos;, &apos;c&apos;].do({ arg item, i; [i, item].postln; });" ID="ID_1636453031" CREATED="1416358995793" MODIFIED="1416358996574"/>
</node>
</node>
</node>
<node TEXT="16.do( expr )" ID="ID_766750692" CREATED="1416090664666" MODIFIED="1416778131397">
<node ID="ID_1014101065" CREATED="1416778129657" MODIFIED="1416778129657"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      evaluates expr 16 times
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="[1,3,4].do({ arg i; i.postln });" ID="ID_1457806829" CREATED="1416183122500" MODIFIED="1416183127171"/>
</node>
<node TEXT="conditionals" ID="ID_65037953" CREATED="1373766214270" MODIFIED="1373766216850">
<node TEXT="someMethod { arg aBoolean;&#xa;  if(aBoolean,{&#xa;    ^someObject&#xa;  },{&#xa;    ^someOtherObject&#xa;  })&#xa;}" ID="ID_392198740" CREATED="1361746981050" MODIFIED="1361747029942"/>
</node>
</node>
<node TEXT="Function" ID="ID_237759225" CREATED="1416025731066" MODIFIED="1416080311742">
<node TEXT="&apos;cep" ID="ID_1741403724" CREATED="1416080322753" MODIFIED="1416080324869">
<node TEXT="Function is a class" ID="ID_1643176399" CREATED="1416080308211" MODIFIED="1416080326989"/>
<node TEXT="&quot;.&quot; passes messages rightward" ID="ID_119065010" CREATED="1416025911855" MODIFIED="1462170287368">
<node TEXT="in x.y, the dot sends the message y to the object x" ID="ID_612318612" CREATED="1416025895328" MODIFIED="1416025910014"/>
</node>
</node>
<node TEXT="signatures" ID="ID_131621845" CREATED="1416027023123" MODIFIED="1416080321817">
<font BOLD="false"/>
<node TEXT="with no args" ID="ID_119296480" CREATED="1416025801626" MODIFIED="1416026205365">
<node TEXT="define" ID="ID_955115364" CREATED="1416025791866" MODIFIED="1416025793525">
<node TEXT="f = { &quot;Function evaluated&quot;.postln; };" ID="ID_1802506236" CREATED="1416025736214" MODIFIED="1416025736214"/>
</node>
<node TEXT="execute" ID="ID_1581126054" CREATED="1416025795465" MODIFIED="1416025797357">
<node TEXT="f.value" ID="ID_1620840068" CREATED="1416025797585" MODIFIED="1416025799029"/>
</node>
</node>
<node TEXT="with a function as an argument" ID="ID_1015343830" CREATED="1416026179891" MODIFIED="1416026203949">
<node TEXT="f = { arg a; a.value + 3 }; &#xa0; &#xa0;// call &apos;value&apos; on the arg; polymorphism awaits!" ID="ID_552200837" CREATED="1416026183182" MODIFIED="1416026183182"/>
<node TEXT="f.value(3); &#xa0; &#xa0; &#xa0; &#xa0; &#xa0; &#xa0;// 3.value = 3, so this returns 3 + 3 = 6" ID="ID_507094962" CREATED="1416026183182" MODIFIED="1416026183182"/>
<node TEXT="g = { 3.0.rand; };" ID="ID_1519988095" CREATED="1416026183184" MODIFIED="1416026183184"/>
<node TEXT="f.value(g); &#xa0; &#xa0; &#xa0; &#xa0; &#xa0; &#xa0;// here the arg is a Function. Cool, huh?" ID="ID_1106543975" CREATED="1416026183185" MODIFIED="1416026183185"/>
<node TEXT="f.value(g); &#xa0; &#xa0; &#xa0; &#xa0; &#xa0; &#xa0;// try it again, different result" ID="ID_718996661" CREATED="1416026183186" MODIFIED="1416026183186"/>
</node>
<node TEXT="with 2 args" ID="ID_1099430134" CREATED="1416026684081" MODIFIED="1416026685845">
<node TEXT="(&#xa;f = { arg a, b;&#xa;    a - b;&#xa;};&#xa;f.value(5, 3);&#xa;)" ID="ID_235263791" CREATED="1416026686601" MODIFIED="1416026687245"/>
</node>
<node TEXT="with keywords" ID="ID_389971742" CREATED="1416026859207" MODIFIED="1416026861034">
<node TEXT="allows changing order" ID="ID_1419066668" CREATED="1416026863998" MODIFIED="1416026870802"/>
<node TEXT="f = { arg a, b; a / b; };    // &apos;/&apos; means divide&#xa;f.value(10, 2);            // regular style&#xa;f.value(b: 2, a: 10);        // keyword style" ID="ID_59889426" CREATED="1416026861791" MODIFIED="1416026862474"/>
</node>
<node TEXT="with defaults" ID="ID_1699479084" CREATED="1416026956565" MODIFIED="1416026957904">
<node TEXT="f = { arg a, b = 2; a + b; };&#xa;f.value(2);             // 2 + 2" ID="ID_945532838" CREATED="1416026958277" MODIFIED="1416026958760"/>
</node>
</node>
<node TEXT="var&apos;s" ID="ID_447696522" CREATED="1416776494996" MODIFIED="1416776495864">
<node TEXT="non-arg var&apos;s must be declared immed&apos;y" ID="ID_826559171" CREATED="1416027001100" MODIFIED="1416027018591"/>
<node TEXT="(&#xa;f = { arg a, b;&#xa;    var firstResult, finalResult;&#xa;    firstResult = a + b;&#xa;    finalResult = firstResult * 2;&#xa;    finalResult;&#xa;};&#xa;f.value(2, 3);    // this will return (2 + 3) * 2 = 10&#xa;)" ID="ID_1423728074" CREATED="1416027009060" MODIFIED="1416027010672"/>
</node>
</node>
<node TEXT="type flex" ID="ID_985815762" CREATED="1416776145795" MODIFIED="1416776159751">
<node TEXT="inheriting collection-ness from a constructor arg" ID="ID_224428995" CREATED="1416038648359" MODIFIED="1416038715076">
<node TEXT="&quot;multichannel expansion&quot;" ID="ID_1329504786" CREATED="1416038718510" MODIFIED="1416038723937"/>
<node TEXT="an array as a variable in a UGen causes the UGen to itself become an array" ID="ID_1194894623" CREATED="1416038674150" MODIFIED="1416038690802"/>
</node>
</node>
<node TEXT="class" ID="ID_997755682" CREATED="1416080460335" MODIFIED="1416080461043">
<node TEXT="to use new classes, recompile library" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_639266583" CREATED="1361753511337" MODIFIED="1373766049658">
<node TEXT="using cmd-k, not ctrl-enter" LOCALIZED_STYLE_REF="default" ID="ID_1206666718" CREATED="1361752411462" MODIFIED="1361753521238"/>
<node TEXT="where" ID="ID_513171140" CREATED="1361754718662" MODIFIED="1361754722183">
<node TEXT="I may have found it." LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_938090301" CREATED="1361754726341" MODIFIED="1361754731935">
<node TEXT="/Applications/SuperCollider/SuperCollider.app/Contents/Resources/SCClassLibrary" ID="ID_886499083" CREATED="1361754750577" MODIFIED="1361754750577"/>
<node TEXT="hidden in the SCC app, as folder" ID="ID_1958854784" CREATED="1361754751181" MODIFIED="1361754758335"/>
<node TEXT="I added a subfolder, &quot;jbb/&quot;, to it." ID="ID_330078707" CREATED="1361754768564" MODIFIED="1361754776071"/>
<node TEXT="It also contains good code examples." LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1144121393" CREATED="1361754777348" MODIFIED="1361754783589"/>
</node>
<node TEXT="quote" ID="ID_712060868" CREATED="1361754723757" MODIFIED="1361754724424">
<node TEXT="&quot;Go to the SCClassLibrary folder in the SuperCollider application directory.&#xa;&#xa;We can add or remove class definition files (those that end in .sc) from here, and then we recompile the library using cmd+K to update our class definitions. &quot;" ID="ID_280616413" CREATED="1361753521538" MODIFIED="1361753524653">
<node TEXT="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/Technicalities/08%20Writing%20Classes.html" ID="ID_1181947757" CREATED="1361753528138" MODIFIED="1361753528138" LINK="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/Technicalities/08%20Writing%20Classes.html"/>
</node>
</node>
</node>
</node>
<node TEXT="&apos;cep+" ID="ID_158268006" CREATED="1416778747663" MODIFIED="1416778771393">
<node TEXT="&quot;this&quot; and &quot;super&quot;" ID="ID_1099373627" CREATED="1361746741242" MODIFIED="1361749624094">
<node TEXT="&quot;this&quot; refers to the class" ID="ID_1994944368" CREATED="1361746747050" MODIFIED="1361749628502"/>
<node TEXT="&quot;super&quot; to its superclass" ID="ID_102406028" CREATED="1361749628755" MODIFIED="1361749632958"/>
</node>
<node TEXT="extending an elsewhere class definition" ID="ID_1071419929" CREATED="1361749485183" MODIFIED="1361749494002">
<node TEXT="+ Class {&#xa;  newMethod {&#xa;    ...&#xa;  }&#xa;  *newClassMethod {&#xa;    ...&#xa;  }&#xa;}" ID="ID_624714150" CREATED="1361749526422" MODIFIED="1361749527177"/>
</node>
<node TEXT="inheritance, circumventing name conflicts" LOCALIZED_STYLE_REF="default" ID="ID_1774147002" CREATED="1361747322272" MODIFIED="1361749146815">
<node TEXT="common at instantiation" ID="ID_34835214" CREATED="1361747299330" MODIFIED="1361749118557">
<node TEXT="linked in" ID="ID_482579494" CREATED="1361747344847" MODIFIED="1361747346171"/>
<node TEXT="&quot;Warning: if the superclass also happened to call super.new.init it will have expected to call the .init method defined in that class (the superclass), but instead the message .init will find the implementation of the class that the object actually is, which is our new subclass.   So you should use a unique methodname like myclassinit if this is likely to be a problem.&quot;" ID="ID_1031652523" CREATED="1361747328784" MODIFIED="1361747330027"/>
</node>
<node TEXT="if conflict, specify whether to search this class or a parent" ID="ID_545631514" CREATED="1361749119731" MODIFIED="1373767456462">
<node TEXT="this uses the class&apos;s init" ID="ID_1322781871" CREATED="1373767461948" MODIFIED="1373767466383">
<node TEXT="Superclass {&#xa;  var x;&#xa;  init {&#xa;     x = 5;&#xa;  }&#xa;}" ID="ID_1333386132" CREATED="1373767471268" MODIFIED="1373767471536"/>
</node>
<node TEXT="this uses its parent&apos;s" ID="ID_1530153874" CREATED="1373767473419" MODIFIED="1373767477750">
<node TEXT="NewClass : Superclass {&#xa;  var y;&#xa;  init {&#xa;    super.init;&#xa;    y = 6;&#xa;  }&#xa;}" ID="ID_1486229456" CREATED="1361749092908" MODIFIED="1373767469005"/>
</node>
</node>
</node>
<node TEXT="a class is itself an object, of type Class" ID="ID_1988457615" CREATED="1361746659597" MODIFIED="1361746667480"/>
<node TEXT="can&apos;t inherit from two classes if they are defined in separate files" ID="ID_585265086" CREATED="1361749554981" MODIFIED="1373767512183"/>
</node>
<node TEXT="inheritance" ID="ID_1623232235" CREATED="1361746934772" MODIFIED="1416778742574">
<node TEXT="without parents" ID="ID_1762739622" CREATED="1361746609303" MODIFIED="1361746944031">
<node TEXT="NewClass { // : This class&apos;s implied superclass will be Object.&#xa;      ...   &#xa;}" ID="ID_802384133" CREATED="1361746575087" MODIFIED="1373766119079"/>
</node>
<node TEXT="with a parent" ID="ID_1974438583" CREATED="1361746613031" MODIFIED="1361746946335">
<node TEXT="or multiple?" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1699544861" CREATED="1361746947372" MODIFIED="1361746953599"/>
<node TEXT="NewClass : SomeSuperclass {&#xa;    ...&#xa;}" ID="ID_1739213924" CREATED="1361746562528" MODIFIED="1361746570583"/>
</node>
</node>
<node TEXT="methods" ID="ID_1011328352" CREATED="1361746546960" MODIFIED="1373766866343">
<node TEXT="declaration" ID="ID_1676244295" CREATED="1373766184102" MODIFIED="1373766185731">
<node TEXT="class method" ID="ID_1102902498" CREATED="1361746763258" MODIFIED="1373766145940">
<node TEXT="use an asterisk" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_301176296" CREATED="1361746786570" MODIFIED="1361746793345"/>
<node TEXT="*classMethod { arg argument;" ID="ID_1502720045" CREATED="1361746843792" MODIFIED="1361746844074"/>
<node TEXT="}" ID="ID_580865976" CREATED="1361746845127" MODIFIED="1361746846586"/>
</node>
<node TEXT="instance method" ID="ID_566200786" CREATED="1361746814681" MODIFIED="1373766147331">
<node TEXT="use no asterisk" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_758250297" CREATED="1361746786570" MODIFIED="1361746822315"/>
<node TEXT="instanceMethod{ arg argument;" ID="ID_1027895168" CREATED="1361746828736" MODIFIED="1361746837803"/>
<node TEXT="}" ID="ID_1698206831" CREATED="1361746831191" MODIFIED="1361746831723"/>
</node>
</node>
<node TEXT="return value" ID="ID_1323245407" CREATED="1361746906709" MODIFIED="1373766182075">
<node TEXT="explicitly" ID="ID_1036201668" CREATED="1361747055672" MODIFIED="1361747057196">
<node TEXT="use the caret" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1236391918" CREATED="1361746926285" MODIFIED="1361746928421"/>
<node TEXT="someMethod {&#xa;    ^returnObject&#xa;}" ID="ID_1600167402" CREATED="1361746920892" MODIFIED="1361746923385"/>
<node TEXT="can be multiple, conditional" ID="ID_45221172" CREATED="1361746975794" MODIFIED="1361746980614">
<node TEXT="someMethod { arg aBoolean;&#xa;  if(aBoolean,{&#xa;    ^someObject&#xa;  },{&#xa;    ^someOtherObject&#xa;  })&#xa;}" ID="ID_1726052979" CREATED="1361746981050" MODIFIED="1361747029942"/>
</node>
</node>
<node TEXT="implicitly" ID="ID_1872979896" CREATED="1361747058601" MODIFIED="1361747060068">
<node TEXT="if no ^ is specified, the method will return the instance.&#xa;(and in the case of Class methods, will return the class)" ID="ID_99090536" CREATED="1361747061321" MODIFIED="1361747061588"/>
</node>
</node>
</node>
<node TEXT="(instance) constructors" ID="ID_1787419889" CREATED="1361747081816" MODIFIED="1373766889127">
<node TEXT="a constructor that only mimics its parent class" ID="ID_90774370" CREATED="1361747158101" MODIFIED="1373766734388">
<node TEXT="*new { // this example adds no new functionality&#xa;  ^super.new&#xa;}" ID="ID_434077775" CREATED="1361747184244" MODIFIED="1361747184832"/>
</node>
<node TEXT="one that does more" ID="ID_840870406" CREATED="1361747246282" MODIFIED="1373766743579">
<node TEXT="// this is a normal constructor method&#xa;*new { arg arga,argb,argc;&#xa;  ^super.new.init(arga,argb,argc)&#xa;}&#xa;init { arg arga,argb,argc;&#xa;  // do initiation here&#xa;}" ID="ID_1694969257" CREATED="1361747251066" MODIFIED="1361747251598"/>
</node>
</node>
<node TEXT="var&apos;s" ID="ID_1991216726" CREATED="1361746673077" MODIFIED="1361746673704">
<node TEXT="declare" ID="ID_526966868" CREATED="1373766949914" MODIFIED="1373767252933">
<node TEXT="instance vars" ID="ID_705525790" CREATED="1351404790089" MODIFIED="1373766964485">
<node TEXT="var &lt;&gt;height; //is an instance variable" ID="ID_353042683" CREATED="1361753284673" MODIFIED="1373766927876"/>
</node>
<node TEXT="class vars" ID="ID_1822610339" CREATED="1351404858202" MODIFIED="1373766970861">
<node TEXT="classvar &lt;&gt;predators; //is a class variable" ID="ID_986738780" CREATED="1361753284674" MODIFIED="1416810233582"/>
<node TEXT="accessible to any member" ID="ID_1569302494" CREATED="1373766991785" MODIFIED="1373766997220"/>
</node>
</node>
<node TEXT="use" LOCALIZED_STYLE_REF="default" ID="ID_355703139" CREATED="1361749214007" MODIFIED="1373767253917">
<node LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1881562103" CREATED="1373767041340" MODIFIED="1373767042697"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      &quot;getter, setter&quot; methods
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="motivation" ID="ID_1121933913" CREATED="1361749235119" MODIFIED="1361749236634">
<node TEXT="without these, var&apos;s would not be accessible outside the class" ID="ID_1348029239" CREATED="1361749219919" MODIFIED="1361749234762"/>
</node>
<node TEXT="syntax" ID="ID_438893889" CREATED="1361749238350" MODIFIED="1361749239306">
<node TEXT="links in" ID="ID_1639502010" CREATED="1361749418889" MODIFIED="1373767098626"/>
<node TEXT="verbose" ID="ID_350819179" CREATED="1373767177259" MODIFIED="1373767178527">
<node TEXT="NewClass : Superclass {&#xa;  var myVariable;&#xa;  variable { // The getter&#xa;    ^myVariable&#xa;  }&#xa;  variable_ { arg newValue; // This is the setter&#xa;    myVariable = newValue;&#xa;  }&#xa;}" ID="ID_1650520850" CREATED="1361749239662" MODIFIED="1361749271137"/>
</node>
<node TEXT="shorthand" LOCALIZED_STYLE_REF="default" ID="ID_1801711750" CREATED="1361749340900" MODIFIED="1373767171565">
<node TEXT="ref" ID="ID_523630912" CREATED="1361749358427" MODIFIED="1361749359366">
<font BOLD="true"/>
<node TEXT="http://danielnouri.org/docs/SuperColliderHelp/Extending%20and%20Customizing%20SC/Writing-Classes.html" ID="ID_1289641301" CREATED="1361749359294" MODIFIED="1361749359294" LINK="http://danielnouri.org/docs/SuperColliderHelp/Extending%20and%20Customizing%20SC/Writing-Classes.html"/>
</node>
<node TEXT="var &lt;getMe, &gt;setMe, &lt;&gt;getMeOrSetMe;" ID="ID_298091542" CREATED="1361749342564" MODIFIED="1361749343294"/>
<node TEXT="getMe could be &quot;retrieve&quot;, setMe &apos;set&apos;, etc." ID="ID_1906984412" CREATED="1373767193019" MODIFIED="1373767210278"/>
<node TEXT="&lt;&gt;getMeOrSetMe I do not understand." LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1689143717" CREATED="1373767235859" MODIFIED="1373767244011"/>
</node>
</node>
</node>
</node>
<node TEXT="u" ID="ID_719650816" CREATED="1416781748232" MODIFIED="1416781770541">
<font BOLD="true"/>
<node TEXT="sometimes a constructor is implicit -- Mix(...) = Mix.new(...)" ID="ID_987823934" CREATED="1416080465703" MODIFIED="1416080488835"/>
<node TEXT="finding doc&apos;n in class tree" ID="ID_1657780739" CREATED="1416096393965" MODIFIED="1416096403521">
<node TEXT="Group.superclass;                 // this will return &apos;Node&apos;&#xa;Group.superclass.help;&#xa;Group.findRespondingMethodFor(&apos;set&apos;);        // Node-set&#xa;Group.findRespondingMethodFor(&apos;postln&apos;);    // Object-postln;&#xa;Group.helpFileForMethod(&apos;postln&apos;);         // opens class Object help file" ID="ID_80161102" CREATED="1416096404045" MODIFIED="1416096404633"/>
</node>
<node TEXT="message passing framework" ID="ID_487284140" CREATED="1416781780591" MODIFIED="1416781786713">
<node TEXT="someObject.someMethod(anArg) = someMethod(someObject, anArg)" ID="ID_826475455" CREATED="1416080415167" MODIFIED="1416080427269"/>
</node>
</node>
</node>
<node TEXT="_key commands" ID="ID_855538584" CREATED="1416037557778" MODIFIED="1416776459401">
<node TEXT="Cmd-Shift-Space: manually call method assistance (lists its args)" ID="ID_1927078654" CREATED="1416120497357" MODIFIED="1416120651848"/>
<node TEXT="Cmd-L: Go to line" ID="ID_494059317" CREATED="1416120584740" MODIFIED="1416120618499"/>
<node TEXT="Cmd-E: Command line" ID="ID_1276952196" CREATED="1416120723545" MODIFIED="1416120726998"/>
<node TEXT="* Cmd-I: go to implementation" ID="ID_599614712" CREATED="1416120811016" MODIFIED="1416120827702">
<node TEXT="new file opens, in new tab" ID="ID_1049973436" CREATED="1416120828568" MODIFIED="1416120835018"/>
</node>
<node TEXT="* Cmd-U: go to uses" ID="ID_793123005" CREATED="1416121085884" MODIFIED="1416121090799"/>
<node TEXT="* Cmd-Shift-Q: switch betewen sessions" ID="ID_769946768" CREATED="1416121235744" MODIFIED="1416121536856">
<node TEXT="or maybe Ctrl; that&apos;s what the tut&apos;l said but most of its Ctrl instances seem to be intended to be Cmd" ID="ID_1122585535" CREATED="1416121250041" MODIFIED="1416121266155"/>
</node>
<node TEXT="Font: Cmd minus" ID="ID_562663988" CREATED="1416121532621" MODIFIED="1416121548687">
<node TEXT="and supposedly, Cmd plus" ID="ID_809330527" CREATED="1416121548868" MODIFIED="1416121551415"/>
</node>
<node TEXT="Cmd-P: Focus on Post window" ID="ID_1547554131" CREATED="1416121594299" MODIFIED="1416121601478">
<node TEXT="Tab to return to code from there" ID="ID_1966882299" CREATED="1416121602283" MODIFIED="1416121611622"/>
</node>
<node TEXT="Cmd-shift-P: Clear Post window" ID="ID_1470977666" CREATED="1416121622962" MODIFIED="1416121628846"/>
<node TEXT="Cmd-G, Cmd-Shift-G: find next, prev" ID="ID_1791762046" CREATED="1416121719585" MODIFIED="1416121739248"/>
<node TEXT="internalized" ID="ID_1469158485" CREATED="1416776244395" MODIFIED="1416776366535">
<font BOLD="true"/>
<node TEXT="parens: double-click just inside to highlight content" ID="ID_1195332675" CREATED="1416024901664" MODIFIED="1416025550809"/>
<node TEXT="eval one line: Shift-Enter" ID="ID_991501735" CREATED="1416024786187" MODIFIED="1416024789135"/>
<node TEXT="eval top-level block: Cmd-Enter, from inside it" ID="ID_989244571" CREATED="1416120122829" MODIFIED="1416120131935"/>
<node TEXT="eval multiple: highlight, then Shift-Enter" ID="ID_1756386484" CREATED="1416024789451" MODIFIED="1416024795910"/>
<node TEXT="to get help" ID="ID_296712828" CREATED="1416080119228" MODIFIED="1416080121096">
<node TEXT="highlight class, Cmd-d" ID="ID_562715702" CREATED="1416080127261" MODIFIED="1416080133969"/>
</node>
<node TEXT="Shift-Tab: manual tab" ID="ID_1546630555" CREATED="1416120236138" MODIFIED="1416120242205"/>
<node TEXT="Cmd-Opt-side: switch tabs" ID="ID_1949288218" CREATED="1416121872445" MODIFIED="1416776365066"/>
<node TEXT="Cmd-/: toggle line comment" ID="ID_1466976436" CREATED="1416122086827" MODIFIED="1416122099358"/>
</node>
</node>
<node TEXT="the command stack" ID="ID_408308403" CREATED="1424932464474" MODIFIED="1424932468055">
<node TEXT="the one means something ..." ID="ID_1791167811" CREATED="1424932430314" MODIFIED="1424932436780"/>
<node TEXT="the one means something ..." ID="ID_1627041490" CREATED="1424932430314" MODIFIED="1424932436780"/>
</node>
</node>
<node TEXT="audio" LOCALIZED_STYLE_REF="default" ID="ID_894602041" CREATED="1416776189692" MODIFIED="1450158074307">
<node TEXT=".= server manip" ID="ID_1299469071" CREATED="1416080803554" MODIFIED="1416776774939">
<font BOLD="false"/>
</node>
<node TEXT="SynthDef" ID="ID_504736094" CREATED="1416081084820" MODIFIED="1416790900334">
<font BOLD="true"/>
<node TEXT="_extensive" ID="ID_952075571" CREATED="1416086649366" MODIFIED="1416776638486">
<node TEXT="alt&apos;v to, more effic&apos; than functions" ID="ID_856896799" CREATED="1416081091108" MODIFIED="1416081111434">
<node TEXT="but more human work" ID="ID_1855298864" CREATED="1416081115756" MODIFIED="1416081120584"/>
</node>
<node TEXT="effic: send def to server, do not immed&apos;y instantiate" ID="ID_344911264" CREATED="1416081968381" MODIFIED="1416081988983">
<node TEXT="// execute first, by itself&#xa;SynthDef.new(&quot;tutorial-PinkNoise&quot;, { Out.ar(0, PinkNoise.ar(0.3)) }).add;&#xa;&#xa;// then:&#xa;x = Synth.new(&quot;tutorial-PinkNoise&quot;);&#xa;y = Synth.new(&quot;tutorial-PinkNoise&quot;);&#xa;x.free; y.free;" ID="ID_1707204255" CREATED="1416081992723" MODIFIED="1416081994000"/>
</node>
</node>
<node TEXT="&apos;cep" ID="ID_307000199" CREATED="1416086642864" MODIFIED="1416086646129">
<node TEXT="is a client-side repr&apos; of a server object" ID="ID_1806879760" CREATED="1416080816263" MODIFIED="1416776599792"/>
<node TEXT="synth def v. synth ~ class v. instance" ID="ID_1623846381" CREATED="1416080999237" MODIFIED="1416081009978"/>
</node>
<node TEXT="var&apos;s, at and after init" ID="ID_250156103" CREATED="1416087248676" MODIFIED="1416776682021">
<font BOLD="false"/>
<node TEXT="at creation: arguments" ID="ID_1402687308" CREATED="1416086674958" MODIFIED="1416087259719">
<node TEXT="(&#xa;SynthDef(&quot;tutorial-args&quot;, { arg freq = 440, out = 0;&#xa;    Out.ar(out, SinOsc.ar(freq, 0, 0.2));&#xa;}).add;&#xa;)&#xa;x = Synth(&quot;tutorial-args&quot;);                // no args, so default values&#xa;y = Synth(&quot;tutorial-args&quot;, [&quot;freq&quot;, 660]);        // change freq&#xa;z = Synth(&quot;tutorial-args&quot;, [&quot;freq&quot;, 880, &quot;out&quot;, 1]);    // change freq and output channel&#xa;x.free; y.free; z.free;" ID="ID_1307006607" CREATED="1416086687109" MODIFIED="1416086688018"/>
</node>
<node TEXT="post-creation" ID="ID_1373608443" CREATED="1416087253788" MODIFIED="1416087262303">
<node TEXT="set and friends" ID="ID_1763813791" CREATED="1416092604511" MODIFIED="1416092607234">
<node TEXT="search for this, in sec 10 of main tutorial, Synth Defs" ID="ID_469064212" CREATED="1416087266188" MODIFIED="1416087277292"/>
<node TEXT="&quot;Synth understands some methods which allow you to change the values of args after a synth has been created. For now we&apos;ll just look at one, &apos;set&apos;.&quot;" ID="ID_721048612" CREATED="1416087262596" MODIFIED="1416087265824"/>
</node>
<node TEXT="map" ID="ID_262198673" CREATED="1416092609622" MODIFIED="1416092611378">
<node TEXT="see tutorial section 11, busses, subsection &quot;More Fun with Control Busses&quot;" ID="ID_559504484" CREATED="1416092630182" MODIFIED="1416092638826"/>
</node>
</node>
</node>
<node TEXT="lagging &quot;set&quot; messages" ID="ID_804812931" CREATED="1416166345682" MODIFIED="1416775784759">
<node TEXT="see SynthDef.new, third argument (&quot;rates&quot;)" ID="ID_857752474" CREATED="1416775732244" MODIFIED="1416775759703"/>
<node TEXT="more notes" ID="ID_635190026" CREATED="1416775725107" MODIFIED="1416775731959">
<node TEXT="in this code" ID="ID_859949943" CREATED="1416166371235" MODIFIED="1416166374551">
<node TEXT="(SynthDef(&#xa;&quot;controlsWithLags&quot;,&#xa;{arg freq1 = 440, freq2 = 443, mul = 0.12;&#xa;Out.ar(&#xa;0,&#xa;SinOsc.ar([freq1, freq2], 0, mul)&#xa;)},&#xa;[1, 5, 5] //&#xa;).add;)&#xa;&#xa;~aSynth = Synth(&quot;controlsWithLags&quot;, [\freq1, 400, \freq2, 500, \mul, 0.1]);&#xa;~aSynth.set(\freq1, 500, \freq2, 700, \mul, 0.01);" ID="ID_530727896" CREATED="1416166366164" MODIFIED="1416166366975"/>
</node>
<node TEXT="the array [1,5,5] has the effect that freq1 takes a second, freq2 5 seconds, and mul 5 seconds to take effect when the set command (the last line) executes" ID="ID_1223433986" CREATED="1416166374804" MODIFIED="1416166406711"/>
<node TEXT="if I change that array to [1,5], mul takes effect immediately" ID="ID_860476352" CREATED="1416166407059" MODIFIED="1416166425446"/>
</node>
</node>
<node TEXT="instantiating" ID="ID_279349431" CREATED="1416781901988" MODIFIED="1416781903489">
<node TEXT="Synth instantiates SynthDefs" ID="ID_1507731635" CREATED="1416779023419" MODIFIED="1416779029181"/>
<node TEXT="Functions implicitly use SynthDefs" LOCALIZED_STYLE_REF="default" ID="ID_1500418979" CREATED="1351437358355" MODIFIED="1351437500731">
<node TEXT="but that implementation is hidden from the user" ID="ID_1500352347" CREATED="1351437501254" MODIFIED="1351437511547"/>
</node>
</node>
<node TEXT="* fixed-duration, self-memory-clearing synth" ID="ID_767839304" CREATED="1416519663250" MODIFIED="1416782293906">
<node TEXT="links out" ID="ID_1300902226" CREATED="1416519641459" MODIFIED="1416519648513">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="9" FONT_FAMILY="SansSerif" DESTINATION="ID_1589685778" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
</node>
<node TEXT="busses" ID="ID_902090845" CREATED="1416087645717" MODIFIED="1416776824647">
<font BOLD="true"/>
<node TEXT="why Bus objects (partial)" ID="ID_1829810291" CREATED="1416089377201" MODIFIED="1416089395533">
<node TEXT="safer than passing bus indices directly" ID="ID_635328205" CREATED="1416089369785" MODIFIED="1416089389669"/>
</node>
<node TEXT="there are kr and ar ones" ID="ID_788387624" CREATED="1416087652068" MODIFIED="1416087656520"/>
<node TEXT="number is fixed at server boot" ID="ID_699236484" CREATED="1416087767995" MODIFIED="1416087772135"/>
<node TEXT="all control busses are private" ID="ID_1118519966" CREATED="1416089232307" MODIFIED="1416089236335"/>
<node TEXT="ar busses in order from zero: output, input, and &quot;private&quot; (SC-internal)" ID="ID_314140515" CREATED="1416087672077" MODIFIED="1416089366524"/>
<node TEXT="Out: audio can be downsampled, but not the reverse" ID="ID_402584751" CREATED="1416087922160" MODIFIED="1416087962782">
<node TEXT="// This throws an error. Can&apos;t write a control rate signal to an audio rate bus&#xa;{Out.ar(0, SinOsc.kr)}.play;&#xa;&#xa;// This will work as the audio rate signal is downsampled to control rate&#xa;{Out.kr(0, SinOsc.ar)}.scope;" ID="ID_753056679" CREATED="1416087928912" MODIFIED="1416087929603"/>
</node>
</node>
<node TEXT="groups" ID="ID_78114198" CREATED="1416095507301" MODIFIED="1416776831902">
<font BOLD="true"/>
<node TEXT="* easy examples" ID="ID_319455709" CREATED="1416776841023" MODIFIED="1416776864506">
<node TEXT="* group synths, to message" ID="ID_1039763209" CREATED="1416674259678" MODIFIED="1416776873657">
<node TEXT="g = Group.new;&#xa;4.do({ { arg amp = 0.1; Pan2.ar(SinOsc.ar(440 + 110.rand, 0, amp), 1.0.rand2) }.play(g); });&#xa;g.set(\amp, 0.02); // turn them all down&#xa;g.free;" ID="ID_1809362650" CREATED="1416674275981" MODIFIED="1416674276770"/>
</node>
<node TEXT="one message to many receivers" ID="ID_392613874" CREATED="1416173133460" MODIFIED="1416776871305">
<node TEXT="// each of the synthdefs below has a control for amplitude (mul)&#xa;(&#xa;// build 3 synthdefs and a group&#xa;SynthDef(&quot;synthNumber1&quot;, { arg mul = 0.2;&#xa;    Out.ar(&#xa;        0,&#xa;        BrownNoise.ar(mul) * LFNoise0.kr([1, 1.01])&#xa;    )&#xa;    }, [0.1]).add;&#xa;SynthDef(&quot;synthNumber2&quot;, { arg mul = 0.2;&#xa;    Out.ar(&#xa;        0,&#xa;        WhiteNoise.ar(mul) * LFNoise1.kr([2.99, 3])&#xa;    )&#xa;    }, [0.1]).add;&#xa;SynthDef(&quot;synthNumber3&quot;, { arg mul = 0.2;&#xa;    Out.ar(&#xa;        0,&#xa;        PinkNoise.ar(mul) * LFNoise2.kr([0.79, 0.67])&#xa;    )&#xa;}, [0.1]).add;&#xa;)&#xa;&#xa;(&#xa;// make a group&#xa;~myGroup = Group.new;&#xa;)&#xa;&#xa;(&#xa;// attach 3 synths&#xa;Synth.head(~myGroup, &quot;synthNumber1&quot;);&#xa;Synth.head(~myGroup, &quot;synthNumber2&quot;);&#xa;Synth.head(~myGroup, &quot;synthNumber3&quot;);&#xa;)&#xa;&#xa;// set the \mul control of each of the 3 synths in the group&#xa;~myGroup.set(\mul, 0.01.rrand(0.2))&#xa;&#xa;// execute to see a diagram of the nodes&#xa;(&#xa;s.queryAllNodes;&#xa;)" ID="ID_1851510146" CREATED="1416173134259" MODIFIED="1416173135051"/>
</node>
</node>
<node TEXT="class tree" ID="ID_677538293" CREATED="1416095511558" MODIFIED="1416095594271">
<node TEXT="synths are nodes" ID="ID_1630048759" CREATED="1416095508342" MODIFIED="1416095510720"/>
<node TEXT="groups are collections of nodes" ID="ID_401474560" CREATED="1416095513845" MODIFIED="1416095523577"/>
</node>
<node TEXT="group order" ID="ID_1704645188" CREATED="1416095581229" MODIFIED="1416172970219">
<node TEXT="g = Group.new;&#xa;h = Group.before(g);&#xa;g.free; h.free;" ID="ID_1368554230" CREATED="1416095582763" MODIFIED="1416095583392"/>
</node>
<node TEXT="synth order" ID="ID_1511033815" CREATED="1416093617462" MODIFIED="1416172667385">
<node TEXT="links in" ID="ID_748411397" CREATED="1416172948719" MODIFIED="1416172949859"/>
<node TEXT="why" ID="ID_1416156629" CREATED="1416093649255" MODIFIED="1416093649936">
<node TEXT="there is an order on the synths" ID="ID_1970743627" CREATED="1416093633422" MODIFIED="1416093640514"/>
<node TEXT="for each sample block, those synths are eval&apos;d in order" ID="ID_1415033646" CREATED="1416093640693" MODIFIED="1416093647649"/>
<node TEXT="if some use others&apos; results, the others must be eval&apos;d first" ID="ID_1543805808" CREATED="1416093647870" MODIFIED="1416093664552"/>
</node>
<node TEXT="default: insert at head" ID="ID_1730906231" CREATED="1416172667848" MODIFIED="1416172695920">
<node TEXT="head of default group" ID="ID_181688455" CREATED="1416172696195" MODIFIED="1416172697569"/>
</node>
<node TEXT="to control" ID="ID_861347947" CREATED="1416093627439" MODIFIED="1416172677375">
<node TEXT=".= alternative idioms" ID="ID_1496922911" CREATED="1416173034222" MODIFIED="1416173037922"/>
<node TEXT="* use groups" ID="ID_83571895" CREATED="1416173015486" MODIFIED="1416173076221">
<node TEXT=".= my favorite idiom" ID="ID_1229077277" CREATED="1416173076711" MODIFIED="1416173079419"/>
<node TEXT="(&#xa;~source = Group.head(s);    // attach the group to the head of the default_node&#xa;~effect = Group.tail(s);    // attach the group to the tail of the default_node&#xa;)&#xa;&#xa;(&#xa;// add the synths to the appropriate groups&#xa;Synth.head(~effect, &quot;secondNode-filter&quot;);&#xa;Synth.head(~source, &quot;firstNode-source&quot;);&#xa;)" ID="ID_1425621619" CREATED="1416173018693" MODIFIED="1416173019258"/>
</node>
<node TEXT="&quot;add actions&quot;" ID="ID_1341926303" CREATED="1416093699504" MODIFIED="1416173054545">
<node TEXT="(there are other possible addActions, too)" ID="ID_254741609" CREATED="1416093702877" MODIFIED="1416172893916"/>
<node TEXT="Synth-new has two arguments which allow you to specify where in the order a synth is added. The first is a target, and the second is an addAction. The latter specifies the new synth&apos;s position in relation to the target." ID="ID_1326197671" CREATED="1416093620511" MODIFIED="1416093624059"/>
<node TEXT="x = Synth(&quot;default&quot;, [\freq, 300]);&#xa;// add a second synth immediately after x&#xa;y = Synth(&quot;default&quot;, [\freq, 450], x, \addAfter);&#xa;x.free; y.free;" ID="ID_1617421631" CREATED="1416093624559" MODIFIED="1416093625161"/>
</node>
<node TEXT="Synth constructor" ID="ID_1627530592" CREATED="1416172899975" MODIFIED="1416173059570">
<node TEXT="rather than Synth(...), choose a non-default constructor:" ID="ID_468731176" CREATED="1416172902231" MODIFIED="1416172926098"/>
<node TEXT="(&#xa;Synth.head(s, &quot;firstNode-source&quot;);&#xa;Synth.tail(s, &quot;secondNode-filter&quot;);&#xa;)" ID="ID_821747962" CREATED="1416172887449" MODIFIED="1416172898731"/>
</node>
</node>
</node>
<node TEXT="add actions" ID="ID_113481692" CREATED="1416095800600" MODIFIED="1416095804146">
<node TEXT="addBefore, addAfter" ID="ID_1519443028" CREATED="1416095804335" MODIFIED="1416095808772"/>
<node TEXT="addToHead, addToTail" ID="ID_1149178005" CREATED="1416095808967" MODIFIED="1416095812947"/>
<node TEXT="addReplace (rare)" ID="ID_1320727599" CREATED="1416095813135" MODIFIED="1416095815331"/>
</node>
<node TEXT="stay in the default group" ID="ID_273695599" CREATED="1416096013765" MODIFIED="1416096017199"/>
<node TEXT="* group.set" ID="ID_233824721" CREATED="1352269617901" MODIFIED="1416782106572">
<node TEXT="sends the set message to every node in the group" ID="ID_353915197" CREATED="1352269629357" MODIFIED="1352269635687"/>
</node>
</node>
<node TEXT="buffers: skipped" ID="ID_1308080058" CREATED="1416097282086" MODIFIED="1416777029779">
<font BOLD="true"/>
<node TEXT="they hold (typically audio-rate?) data, multichannel if needed" ID="ID_1570626549" CREATED="1416097288374" MODIFIED="1416097315945"/>
</node>
<node TEXT="out (Function)" ID="ID_456691253" CREATED="1416081395431" MODIFIED="1416081405986">
<node TEXT="example" ID="ID_1086348374" CREATED="1416081738617" MODIFIED="1416081740748">
<node TEXT="(&#xa;SynthDef.new(&quot;tutorial-SinOsc-stereo&quot;, { var outArray;&#xa;    outArray = [SinOsc.ar(400, 0, 0.2), SinOsc.ar(750, 0, 0.2)];&#xa;    Out.ar(0, outArray)&#xa;}).play;&#xa;)" ID="ID_312695465" CREATED="1416081741465" MODIFIED="1416081742101"/>
</node>
<node TEXT="one arg is the least output channel it uses; the greatest is implicit" ID="ID_934389032" CREATED="1416081702057" MODIFIED="1416081732124"/>
<node TEXT="verbose" ID="ID_663451877" CREATED="1416081735232" MODIFIED="1416081736772">
<node TEXT="Out takes two arguments: The first is the index number of the bus to write out on. These start from 0, which on a stereo setup is usually the left output channel. The second is either a UGen or an Array of UGens. If you provide an array (i.e. a multichannel output) then the first channel will be played out on the bus with the indicated index, the second channel on the bus with the indicated index + 1, and so on." ID="ID_1912920491" CREATED="1416081406518" MODIFIED="1416081407363"/>
</node>
</node>
<node TEXT=".play returns a Synth" ID="ID_1047352684" CREATED="1416081798440" MODIFIED="1416081831779">
<node TEXT="Both Function-play and SynthDef-play return another type of object, a Synth, which represents a synth on the server." ID="ID_122798905" CREATED="1416081791368" MODIFIED="1416081791963"/>
</node>
<node TEXT=".free silences" ID="ID_1128540116" CREATED="1416081827551" MODIFIED="1416776720484">
<node ID="ID_1197516316" CREATED="1416081850938" MODIFIED="1416081850938"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      is a selective Cmd-.
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="frees memory, cpu" ID="ID_1595751571" CREATED="1416081851958" MODIFIED="1416081854850"/>
</node>
</node>
<node TEXT="scheduling" ID="ID_1917105857" CREATED="1416515517344" MODIFIED="1416778570067">
<font BOLD="false"/>
<node TEXT="sched" ID="ID_361493233" CREATED="1416518576947" MODIFIED="1416518577679">
<node TEXT="clock varieties" ID="ID_352526376" CREATED="1416515525896" MODIFIED="1416515530763">
<node TEXT="TempoClock" ID="ID_908530505" CREATED="1416515530975" MODIFIED="1416515536852">
<node TEXT="there can be many TempoClocks all running at different speed" ID="ID_437962835" CREATED="1416515865257" MODIFIED="1416515869093"/>
</node>
<node TEXT="SystemClock" ID="ID_163443067" CREATED="1416515532711" MODIFIED="1416515538955">
<node TEXT="there is only one SystemClock" ID="ID_160556177" CREATED="1416515870180" MODIFIED="1416515872414"/>
</node>
<node TEXT="AppClock" ID="ID_1540583471" CREATED="1416515540825" MODIFIED="1416515542139">
<node TEXT="sloppier" ID="ID_1824810773" CREATED="1416515542312" MODIFIED="1416515543867"/>
</node>
</node>
<node TEXT="sched an event" ID="ID_684098987" CREATED="1416516169341" MODIFIED="1416516257346">
<node TEXT="relative" ID="ID_1033195171" CREATED="1416516149566" MODIFIED="1416516172528">
<node TEXT="print hello in five seconds" ID="ID_1059993197" CREATED="1416515571791" MODIFIED="1416515578170"/>
<node TEXT="SystemClock.sched(5, { &quot;hello&quot;.postln });" ID="ID_870903024" CREATED="1416515578472" MODIFIED="1416515579034"/>
</node>
<node TEXT="abs" ID="ID_1819969239" CREATED="1416516152766" MODIFIED="1416516173808">
<node TEXT="(&#xa;var timeNow = TempoClock.default.beats;&#xa;&quot;Time is now: &quot;.post; timeNow.postln;&#xa;&quot;Scheduling for: &quot;.post; (timeNow + 5).postln;&#xa;TempoClock.default.schedAbs(timeNow + 5,&#xa;    { &quot;Time is later: &quot;.post; thisThread.clock.beats.postln; nil });&#xa;)" ID="ID_145285202" CREATED="1416516154342" MODIFIED="1416516155082"/>
</node>
</node>
<node TEXT="change clock speed" ID="ID_8399733" CREATED="1416516107438" MODIFIED="1416516109577">
<node TEXT="TempoClock.default.tempo = 2;    // 2 beats/sec, or 120 BPM&#xa;  // default is 1" ID="ID_200259386" CREATED="1416516110230" MODIFIED="1416516118004"/>
</node>
<node TEXT="find relevant clock" ID="ID_1280657133" CREATED="1416516205484" MODIFIED="1416516272523">
<node TEXT="r" ID="ID_952130511" CREATED="1416776967109" MODIFIED="1416776967256">
<node TEXT="kind of magic" ID="ID_1274096181" CREATED="1416776961277" MODIFIED="1416776963552"/>
</node>
<node ID="ID_500709414" CREATED="1416516273348" MODIFIED="1416516273348"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      thisThread.clock
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="called from within function f" ID="ID_549436904" CREATED="1416516207268" MODIFIED="1416516228687"/>
<node ID="ID_696678013" CREATED="1416516229393" MODIFIED="1416516229393"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      says which clock is running f
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="query time" ID="ID_480732386" CREATED="1416516308251" MODIFIED="1416516309526">
<node TEXT="SystemClock.beats;&#xa;TempoClock.default.beats;&#xa;AppClock.beats;&#xa;thisThread.clock.beats;" ID="ID_577887166" CREATED="1416516309954" MODIFIED="1416516310414"/>
</node>
<node TEXT="schedulable classes" ID="ID_1997298303" CREATED="1416516332554" MODIFIED="1416516335717">
<node ID="ID_723914812" CREATED="1416516371659" MODIFIED="1416516371659"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Function
    </p>
  </body>
</html>
</richcontent>
<node TEXT="return a number -&gt; loop" ID="ID_751804904" CREATED="1416516414192" MODIFIED="1416516464195">
<node TEXT="If you schedule function that returns a number, the clock will treat that number as the amount of time before running the function again." ID="ID_1602597538" CREATED="1416516368441" MODIFIED="1416516368725"/>
</node>
</node>
<node ID="ID_297504874" CREATED="1416516371660" MODIFIED="1416516371660"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Routine
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_948861221" CREATED="1416516371663" MODIFIED="1416516371663"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      Task
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="Routine" ID="ID_1182589277" CREATED="1416519910389" MODIFIED="1416519912600">
<node TEXT="step through one" ID="ID_1032406157" CREATED="1416518589019" MODIFIED="1416518591086">
<node TEXT="r = Routine({&#xa;    &quot;abcde&quot;.yield;&#xa;    &quot;fghij&quot;.yield;&#xa;    &quot;klmno&quot;.yield;&#xa;    &quot;pqrst&quot;.yield;&#xa;    &quot;uvwxy&quot;.yield;&#xa;    &quot;z{|}~&quot;.yield;&#xa;});&#xa;&#xa;r.next; // try evaluating this line multiple times" ID="ID_1501122508" CREATED="1416518591523" MODIFIED="1416518613848"/>
</node>
<node TEXT="schedule one" ID="ID_1825278804" CREATED="1416518925398" MODIFIED="1416518927165">
<node TEXT="code" ID="ID_198592707" CREATED="1416519040868" MODIFIED="1416519041457">
<node TEXT="(r = Routine({&#xa;    var delta;&#xa;    loop {&#xa;        delta = rrand(1, 3) * 0.5;&#xa;        &quot;Will wait &quot;.post; delta.postln;&#xa;        delta.yield;&#xa;    }&#xa;});)&#xa;&#xa;r.next; // eval&apos;d only once; no long-term effect&#xa;TempoClock.default.sched(0, r); // starts a long process&#xa;r.stop;" ID="ID_582579330" CREATED="1416518927815" MODIFIED="1416519195134"/>
</node>
<node TEXT="the sched call" ID="ID_1334165292" CREATED="1416519042357" MODIFIED="1416519160135">
<node TEXT="the sched call says &quot;run r now&quot; (now = 0)" ID="ID_639116927" CREATED="1416519047949" MODIFIED="1416519104319"/>
<node TEXT="each evaluation of r yields the delta value" ID="ID_1905113502" CREATED="1416519104523" MODIFIED="1416519128407"/>
<node TEXT="sched treats a numeric return value as a duration to wait before repeating the routine" ID="ID_1649044656" CREATED="1416519128619" MODIFIED="1416519144702"/>
<node TEXT="hence it continues until the stop call" ID="ID_1719246467" CREATED="1416519145811" MODIFIED="1416519206772"/>
</node>
</node>
<node TEXT="play one" ID="ID_824925847" CREATED="1416519583523" MODIFIED="1416519584638">
<node TEXT="links in" ID="ID_1589685778" CREATED="1416519645554" MODIFIED="1416519646558"/>
<node TEXT="code" ID="ID_1779382379" CREATED="1416519607459" MODIFIED="1416519608127">
<node TEXT="(&#xa;SynthDef(\singrain, { |freq = 440, amp = 0.2, sustain = 1|&#xa;    var sig;&#xa;    sig = SinOsc.ar(freq, 0, amp) * EnvGen.kr(Env.perc(0.01, sustain), doneAction: 2);&#xa;    Out.ar(0, sig ! 2);    // sig ! 2 is the same as [sig, sig]&#xa;}).add;&#xa;&#xa;r = Routine({&#xa;    var delta;&#xa;    loop {&#xa;        delta = rrand(1, 3) * 0.5;&#xa;        Synth(\singrain, [freq: exprand(200, 800), amp: rrand(0.1, 0.5), sustain: delta * 0.8]);&#xa;        delta.yield;&#xa;    }&#xa;});&#xa;)" ID="ID_669454539" CREATED="1416519587083" MODIFIED="1416519587671"/>
<node TEXT="r.play;&#xa;&#xa;r.stop;" ID="ID_1877742057" CREATED="1416519593123" MODIFIED="1416519593430"/>
</node>
<node TEXT="independent of all clocks" ID="ID_393864179" CREATED="1416519625011" MODIFIED="1416519632310"/>
</node>
</node>
<node TEXT="Task" ID="ID_700678770" CREATED="1416519914046" MODIFIED="1416519914713">
<node TEXT="like Routine, but &quot;stop&quot; pauses it" ID="ID_891039159" CREATED="1416519914862" MODIFIED="1416519960962"/>
</node>
<node TEXT="Pattern" ID="ID_1213244659" CREATED="1416523197226" MODIFIED="1416523199829">
<node TEXT="effect and purpose" ID="ID_598980945" CREATED="1416523229273" MODIFIED="1416523237732">
<node TEXT="creates a Routine" ID="ID_894683879" CREATED="1416523226466" MODIFIED="1416523228693"/>
<node TEXT="faster to write" ID="ID_998839657" CREATED="1416523200075" MODIFIED="1416523204573"/>
</node>
<node TEXT="example" ID="ID_1431036962" CREATED="1416523204818" MODIFIED="1416523205677">
<node TEXT="p = Pseq([60, 72, 71, 67, 69, 71, 72, 60, 69, 67], 1);&#xa;r = p.asStream;&#xa;while { (m = r.next).notNil } { m.postln };" ID="ID_84210416" CREATED="1416523206098" MODIFIED="1416523206637"/>
</node>
<node TEXT="lib" ID="ID_1556191930" CREATED="1416523365990" MODIFIED="1416523377058">
<node TEXT="is huge: 120 classes" ID="ID_1655120422" CREATED="1416523372551" MODIFIED="1416523379210"/>
<node TEXT="examples" ID="ID_610587327" CREATED="1416523381799" MODIFIED="1416523384730">
<node TEXT="generate" ID="ID_710801062" CREATED="1416523407581" MODIFIED="1416523408394">
<node TEXT="random" ID="ID_1135551228" CREATED="1416523408630" MODIFIED="1416523409617"/>
<node TEXT="random, no repeats" ID="ID_1045834238" CREATED="1416523408630" MODIFIED="1416523415833"/>
</node>
<node TEXT="transform" ID="ID_728855638" CREATED="1416523404983" MODIFIED="1416523406249">
<node TEXT="shuffle" ID="ID_1843170022" CREATED="1416523389254" MODIFIED="1416523390218"/>
<node TEXT="stutter" ID="ID_5912009" CREATED="1416523385103" MODIFIED="1416523386170"/>
</node>
</node>
</node>
<node TEXT="PBind: play notes from pattern" ID="ID_902413266" CREATED="1416524013300" MODIFIED="1416524019857">
<node TEXT="see tutorial ch 15, sequencing with patterns" ID="ID_277788169" CREATED="1416524044654" MODIFIED="1416524052904"/>
<node TEXT="briefer notation, for at least some purposes" ID="ID_565632821" CREATED="1416524053212" MODIFIED="1416524065274">
<node TEXT="avoids having to call &quot;next&quot; or &quot;yield&quot;" ID="ID_168578324" CREATED="1416524072885" MODIFIED="1416524079800"/>
</node>
</node>
</node>
<node TEXT="?" ID="ID_384520305" CREATED="1416778076306" MODIFIED="1416778076734">
<node TEXT="&quot;quant&quot; (start time) argument for Routine.play and Task.play" ID="ID_840202706" CREATED="1416520242960" MODIFIED="1416520269491">
<node TEXT="could see main tutorial, sec. 15: sequencing with routines and tasks" ID="ID_306253654" CREATED="1416520279783" MODIFIED="1416520293850"/>
</node>
</node>
</node>
<node TEXT="prob" ID="ID_729285033" CREATED="1416776046071" MODIFIED="1416778570068">
<font BOLD="false"/>
<node TEXT="misc" ID="ID_493019761" CREATED="1416781578371" MODIFIED="1416781665950">
<font BOLD="false"/>
<node TEXT="feedback" ID="ID_1069749016" CREATED="1416213704759" MODIFIED="1416781355105">
<node ID="ID_1172949653" CREATED="1416781355485" MODIFIED="1416781355485"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      sample code
    </p>
  </body>
</html>
</richcontent>
<node TEXT="http://sccode.org/tag/category/feedback" ID="ID_447181293" CREATED="1416213708059" MODIFIED="1416213708059" LINK="http://sccode.org/tag/category/feedback"/>
</node>
<node TEXT="looks like real feedback to me" ID="ID_1483106353" CREATED="1416213851676" MODIFIED="1416213856431">
<node TEXT="http://scacinto.wordpress.com/2010/12/02/fun-with-feedback-and-supercollider/" ID="ID_1651083930" CREATED="1416213856830" MODIFIED="1416213856830" LINK="http://scacinto.wordpress.com/2010/12/02/fun-with-feedback-and-supercollider/"/>
<node TEXT="immed&apos;y after this quote" ID="ID_1673789592" CREATED="1416213870331" MODIFIED="1416213875254">
<node ID="ID_1341801487" CREATED="1416213875625" MODIFIED="1416213879004"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <span charset="utf-8" style="letter-spacing: normal; word-spacing: 0px; float: none; line-height: 19.1999988555908px; font-weight: normal; font-variant: normal; font-size: 12px; color: rgb(51, 51, 51); text-indent: 0px; font-family: arial, verdana, sans-serif; white-space: normal; font-style: normal; display: inline !important; background-color: rgb(241, 247, 248); text-transform: none; text-align: left"><font face="arial, verdana, sans-serif" size="12px" color="rgb(51, 51, 51)">resonant frequency of a low pass filter and the delay time</font></span>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node TEXT="List/Array" ID="ID_1937303122" CREATED="1416185246339" MODIFIED="1416778239088">
<node TEXT="* lists are an interface to arrays" ID="ID_839063021" CREATED="1361669652751" MODIFIED="1416781845752"/>
<node TEXT="http://doc.sccode.org/Classes/Array.html" ID="ID_1189590301" CREATED="1416778239422" MODIFIED="1416778239422" LINK="http://doc.sccode.org/Classes/Array.html"/>
<node TEXT="subset: [list].at([list])" ID="ID_1714260766" CREATED="1416184459800" MODIFIED="1416778163976">
<node TEXT="e.g. [1,2,3].at([0,2]) -&gt; [ 1, 3 ]" ID="ID_1120371689" CREATED="1416184479664" MODIFIED="1416184497147"/>
</node>
<node ID="ID_1082419045" CREATED="1416781265054" MODIFIED="1416781265054"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      copyRange
    </p>
  </body>
</html>
</richcontent>
<node TEXT="(&#xa;var y, z;&#xa;z = List[1, 2, 3, 4, 5];&#xa;y = z.copyRange(1,3);&#xa;z.postln;&#xa;y.postln;&#xa;)" ID="ID_1052669982" CREATED="1416185263586" MODIFIED="1416185264238"/>
</node>
<node TEXT="range of consecutive integers" ID="ID_476594451" CREATED="1416781269088" MODIFIED="1416781274458">
<node TEXT="((1..10)) is the array from 1 to 10; (1..10), however, does not evaluate" ID="ID_1751777188" CREATED="1416213169880" MODIFIED="1416213189923"/>
</node>
</node>
<node TEXT="random" ID="ID_374600263" CREATED="1416026071732" MODIFIED="1416026072808">
<node TEXT="&quot;3.0.rand&quot; returns a number from 0 to 3" ID="ID_1823286903" CREATED="1416026074380" MODIFIED="1416026083883"/>
<node TEXT="Synth Def randomness is different" ID="ID_389554169" CREATED="1416082192226" MODIFIED="1416082202988">
<node TEXT="&quot;rand&quot; is eval&apos;d in client" ID="ID_1503801730" CREATED="1416082206008" MODIFIED="1416082247348">
<node TEXT="so this gives different freq&apos;s" ID="ID_1095196762" CREATED="1416082217840" MODIFIED="1416082221676"/>
<node TEXT="f = { SinOsc.ar(440 + 200.rand, 0, 0.2) };&#xa;x = f.play;&#xa;y = f.play;&#xa;z = f.play;&#xa;x.free; y.free; z.free;" ID="ID_1243942909" CREATED="1416082203305" MODIFIED="1416082203901"/>
</node>
<node TEXT="Rand is eval&apos;d in server" ID="ID_1568662040" CREATED="1416082237400" MODIFIED="1416082250019">
<node TEXT="// With Rand, it works!&#xa;SynthDef(&quot;tutorial-Rand&quot;, { Out.ar(0, SinOsc.ar(Rand(440, 660), 0, 0.2)) }).add;&#xa;x = Synth(&quot;tutorial-Rand&quot;);&#xa;y = Synth(&quot;tutorial-Rand&quot;);&#xa;z = Synth(&quot;tutorial-Rand&quot;);&#xa;x.free; y.free; z.free;" ID="ID_1074466490" CREATED="1416082250511" MODIFIED="1416082251316"/>
</node>
</node>
</node>
<node TEXT="Rational (fraction) class" ID="ID_375361952" CREATED="1416184715669" MODIFIED="1416184723504">
<node TEXT="http://ecmc.rochester.edu/ecmc/docs/supercollider/scbook/Ch20_dewdrop_chucklib/dewdrop_lib/ddwCommon/ddwRational/Help/Rational.html" ID="ID_1308680390" CREATED="1416184724586" MODIFIED="1416184724586" LINK="http://ecmc.rochester.edu/ecmc/docs/supercollider/scbook/Ch20_dewdrop_chucklib/dewdrop_lib/ddwCommon/ddwRational/Help/Rational.html"/>
<node TEXT="http://quarks.sourceforge.net/" ID="ID_269487399" CREATED="1416778269802" MODIFIED="1416778269802" LINK="http://quarks.sourceforge.net/"/>
</node>
<node TEXT="print" ID="ID_1942381533" CREATED="1416515777468" MODIFIED="1416778364472">
<node TEXT="&quot;Time is now: &quot;.post; timeNow.postln;" ID="ID_1234209492" CREATED="1416515780670" MODIFIED="1416515780670"/>
</node>
</node>
<node TEXT="audio proc" ID="ID_1847527883" CREATED="1416781575626" MODIFIED="1416781641163">
<font BOLD="false"/>
<node TEXT="audio onset/transient detection" ID="ID_321104621" CREATED="1416425051385" MODIFIED="1416425060995">
<node TEXT="&quot;[I have found] PV_HainsworthFoote.ar to be very reliable for onset detection, plus it has a waittime argument.&quot;" ID="ID_320475673" CREATED="1416781540755" MODIFIED="1416781572743"/>
</node>
<node TEXT="FFT" ID="ID_460573573" CREATED="1416213591441" MODIFIED="1416213592299">
<node TEXT="http://ecmc.rochester.edu/ecmc/docs/supercollider/scbook/Ch21_Interface_Investigations/ixi%20SC%20tutorial/ixi_SC_tutorial_11.html" ID="ID_1125703765" CREATED="1416213592742" MODIFIED="1416213592742" LINK="http://ecmc.rochester.edu/ecmc/docs/supercollider/scbook/Ch21_Interface_Investigations/ixi%20SC%20tutorial/ixi_SC_tutorial_11.html"/>
<node TEXT="req: find how to load audio samples into buffer" ID="ID_1522769988" CREATED="1416213593480" MODIFIED="1416213602691">
<node TEXT="the way they encoded is obsolete, I believe" ID="ID_678213465" CREATED="1416213602896" MODIFIED="1416213609428"/>
</node>
</node>
</node>
<node TEXT="audio data" ID="ID_1612385094" CREATED="1416781621465" MODIFIED="1416781641163">
<font BOLD="false"/>
<node TEXT="multichannel" ID="ID_491066028" CREATED="1416778488235" MODIFIED="1416778491471">
<node TEXT="Out.ar(0, sig ! 2);    // sig ! 2 is the same as [sig, sig]" ID="ID_437149607" CREATED="1416519390398" MODIFIED="1416519392547"/>
</node>
</node>
<node TEXT="monome" ID="ID_946461682" CREATED="1416526090863" MODIFIED="1416781649797">
<node TEXT="http://monome.org/docs/dev:supercollider_tutorial" ID="ID_619043055" CREATED="1416531501432" MODIFIED="1416531501432" LINK="http://monome.org/docs/dev:supercollider_tutorial"/>
</node>
</node>
</node>
<node TEXT="use" ID="ID_813012618" CREATED="1416776551252" MODIFIED="1416777717781">
<node TEXT="timbres" ID="ID_487464772" CREATED="1416775999079" MODIFIED="1416776754368">
<font BOLD="true"/>
<node TEXT="RLFF rq (reciprocal of q) values above 1: weird, LOUD" ID="ID_228757835" CREATED="1416169483325" MODIFIED="1416776011099"/>
<node TEXT="Klank: bank of resonators. metallic." ID="ID_90276793" CREATED="1416172182180" MODIFIED="1416172458949">
<node TEXT="&quot;can be used to simulate the resonant modes of an object&quot;" ID="ID_531828166" CREATED="1416172188787" MODIFIED="1416172211876"/>
</node>
<node TEXT="chaos UGens" ID="ID_603373240" CREATED="1416111766992" MODIFIED="1416782163111">
<font BOLD="true"/>
<node TEXT="Crackle" ID="ID_38824260" CREATED="1416113236510" MODIFIED="1416113238113"/>
<node TEXT="Cusp" ID="ID_917356032" CREATED="1416112045363" MODIFIED="1416112049526">
<node TEXT="{ SinOsc.ar(CuspL.ar(40, MouseX.kr(0.9,1.1,1), MouseY.kr(1.8,2,1))*800+900)*0.4 }.play(s);" ID="ID_971743546" CREATED="1416111772319" MODIFIED="1416111773211"/>
<node TEXT="{ SinOsc.ar(CuspN.ar(40, MouseX.kr(0.9,1.1,1), MouseY.kr(1.8,2,1))*800+900)*0.4 }.play(s);" ID="ID_1769954719" CREATED="1416111887045" MODIFIED="1416111887464"/>
</node>
<node TEXT="FBSine*" ID="ID_1419471971" CREATED="1416112051395" MODIFIED="1416112120622">
<node TEXT="{ FBSineC.ar(SampleRate.ir/4) * 0.2 }.play(s);" ID="ID_816429969" CREATED="1416111912925" MODIFIED="1416111913240"/>
<node TEXT="// increase phase multiplier&#xa;{ FBSineC.ar(SampleRate.ir, 1, 0, XLine.kr(1, 2, 10), 0.1) * 0.2 }.play(s);" ID="ID_4740564" CREATED="1416111951323" MODIFIED="1416111951824"/>
<node TEXT="// modulate frequency and index multiplier&#xa;{ FBSineC.ar(LFNoise2.kr(1, 1e4, 1e4), LFNoise2.kr(1,16,17), 1, 1.005, 0.7) * 0.2 }.play(s);" ID="ID_1509588945" CREATED="1416111977729" MODIFIED="1416111978143"/>
<node TEXT="// randomly modulate params&#xa;(&#xa;{ FBSineC.ar(&#xa;    LFNoise2.kr(1, 1e4, 1e4),&#xa;    LFNoise2.kr(1, 32, 33),&#xa;    LFNoise2.kr(1, 0.5),&#xa;    LFNoise2.kr(1, 0.05, 1.05),&#xa;    LFNoise2.kr(1, 0.3, 0.3)&#xa;) * 0.2 }.play(s);&#xa;)" ID="ID_232736071" CREATED="1416112039707" MODIFIED="1416112040190"/>
</node>
<node TEXT="gingerbread" ID="ID_1674202139" CREATED="1416112153592" MODIFIED="1416112155453">
<node TEXT="// default initial params&#xa;{ GbmanL.ar(MouseX.kr(20, SampleRate.ir)) * 0.1 }.play(s);" ID="ID_1491870406" CREATED="1416112156793" MODIFIED="1416112157108"/>
<node TEXT="* next: fairly regular wave" ID="ID_473279341" CREATED="1416112238390" MODIFIED="1416112253218"/>
<node TEXT="// as a frequency control&#xa;{ SinOsc.ar(GbmanL.ar(40)*400+500)*0.4 }.play(s);" ID="ID_824311912" CREATED="1416112250087" MODIFIED="1416112250555"/>
<node TEXT="// as a frequency control&#xa;{ SinOsc.ar(GbmanL.ar(40)*400+500)*0.4 }.play(s);" ID="ID_345704920" CREATED="1416112306069" MODIFIED="1416112306304"/>
</node>
<node TEXT="henon*" ID="ID_1634980729" CREATED="1416112303460" MODIFIED="1416112361199">
<node TEXT="// as a frequency control&#xa;{ SinOsc.ar(HenonC.ar(40, MouseX.kr(1,1.4), MouseY.kr(0,0.3))*800+900)*0.4 }.play(s);" ID="ID_1533888027" CREATED="1416112334964" MODIFIED="1416112335623"/>
</node>
<node TEXT="* Latoocarfian" ID="ID_897513324" CREATED="1416112420890" MODIFIED="1416112430037">
<node TEXT="diverse: scratch, screech and silence" ID="ID_1238346432" CREATED="1416112438178" MODIFIED="1416112452160"/>
<node TEXT="// randomly modulate all params&#xa;(&#xa;{ LatoocarfianC.ar(&#xa;    SampleRate.ir/4,&#xa;    LFNoise2.kr(2,1.5,1.5),&#xa;    LFNoise2.kr(2,1.5,1.5),&#xa;    LFNoise2.kr(2,0.5,1.5),&#xa;    LFNoise2.kr(2,0.5,1.5)&#xa;) * 0.2 }.play(s);&#xa;)" ID="ID_1103366980" CREATED="1416112422443" MODIFIED="1416112423070"/>
</node>
<node TEXT="LinCong*" ID="ID_1039243905" CREATED="1416112520505" MODIFIED="1416112543435">
<node TEXT="scratch. outstanding warbly pitch control" ID="ID_221968337" CREATED="1416112526785" MODIFIED="1416112572101"/>
<node TEXT="// randomly modulate params&#xa;(&#xa;{ LinCongC.ar(&#xa;    LFNoise2.kr(1, 1e4, 1e4),&#xa;    LFNoise2.kr(0.1, 0.5, 1.4),&#xa;    LFNoise2.kr(0.1, 0.1, 0.1),&#xa;    LFNoise2.kr(0.1)&#xa;) * 0.2 }.play(s);&#xa;)" ID="ID_258277137" CREATED="1416112523001" MODIFIED="1416112523372"/>
<node TEXT="// as frequency control...&#xa;(&#xa;{&#xa;SinOsc.ar(&#xa;    LinCongC.ar(&#xa;        40,&#xa;        LFNoise2.kr(0.1, 0.1, 1),&#xa;        LFNoise2.kr(0.1, 0.1, 0.1),&#xa;        LFNoise2.kr(0.1),&#xa;        0, 500, 600&#xa;    )&#xa;) * 0.4 }.play(s);&#xa;)" ID="ID_905806939" CREATED="1416112558544" MODIFIED="1416112558900"/>
</node>
<node TEXT="* Logistic" ID="ID_178438221" CREATED="1416112751356" MODIFIED="1416112754200">
<node TEXT="clear chaos border, both sides varying within" ID="ID_964638667" CREATED="1416112757020" MODIFIED="1416112782023"/>
<node TEXT="// explore via Mouse&#xa;{ Logistic.ar(MouseX.kr(3, 3.99), MouseY.kr(10, 10000, &apos;exponential&apos;), 0.25, 0.5) }.play" ID="ID_944449995" CREATED="1416112754533" MODIFIED="1416112755128"/>
</node>
<node TEXT="* Quadratic" ID="ID_1115568509" CREATED="1416112884298" MODIFIED="1416112887837">
<node TEXT="generalizees logistic" ID="ID_1860466572" CREATED="1416112889034" MODIFIED="1416112892069"/>
<node TEXT="// logistic map as frequency control&#xa;(&#xa;{ var r;&#xa;    r = MouseX.kr(3.5441, 4);    // stable range&#xa;    SinOsc.ar(QuadC.ar(40, r.neg, r, 0, 0.1, 800, 900)) * 0.4;&#xa;}.play(s);&#xa;)" ID="ID_1546053518" CREATED="1416112888026" MODIFIED="1416112888614"/>
</node>
<node TEXT="* Standard map" ID="ID_287703564" CREATED="1416112984513" MODIFIED="1416112986868">
<node TEXT="// mouse-controlled param&#xa;{ StandardL.ar(SampleRate.ir/2, MouseX.kr(0.9,4)) * 0.3 }.play(s);" ID="ID_1285483596" CREATED="1416112987136" MODIFIED="1416112987636"/>
<node TEXT="// as a frequency control&#xa;{ SinOsc.ar(StandardL.ar(40, MouseX.kr(0.9,4))*800+900)*0.4 }.play(s);" ID="ID_1864565377" CREATED="1416113189351" MODIFIED="1416113189698"/>
</node>
</node>
<node TEXT="compressed Gauss" ID="ID_1168705026" CREATED="1416731867151" MODIFIED="1416731872826">
<node TEXT="( {&#xa;var z;&#xa;z = 0.00002 * LFGauss.ar(&#xa;// these are the two default args but I forget that.&#xa;duration: MouseX.kr(0.001,1,1),&#xa;width: 0.1)&#xa;* Saw.ar(&#xa;MouseY.kr(1, 10000, 1) ) ! 2;&#xa;Compander.ar(z, z,&#xa;thresh: 0.1,&#xa;slopeBelow: 0.01,&#xa;slopeAbove: 0.01,&#xa;clampTime: 0.01,&#xa;relaxTime: 0.01 ) ;&#xa;}.play; )" ID="ID_625880710" CREATED="1416731868751" MODIFIED="1416731869252"/>
<node TEXT="( {&#xa;var z;&#xa;z = 0.1 * LFGauss.ar(&#xa;MouseX.kr(0,1), 0.1)&#xa;* SinOsc.ar(&#xa;MouseY.kr(1, 10000, 1) ) ! 2;&#xa;Compander.ar(z, z,&#xa;thresh: MouseX.kr(0.1, 1),&#xa;slopeBelow: 0.01,&#xa;slopeAbove: 0.01,&#xa;clampTime: 0.01,&#xa;relaxTime: 0.01 ) ;&#xa;}.play; )" ID="ID_469157451" CREATED="1416731281608" MODIFIED="1416731282084"/>
<node TEXT="g.set(\amp, 0.02); // after executing, turn them all down" ID="ID_1101027272" CREATED="1416772202136" MODIFIED="1416772207579"/>
</node>
<node TEXT="Gauss" ID="ID_531723816" CREATED="1416772383773" MODIFIED="1416772389138">
<node TEXT="( {&#xa;var dur = Pulse.ar(&#xa;MouseX.kr(2, 400, 1)&#xa;* [1, 1.1]&#xa;).range(0.0006, 0.01);&#xa;var width = SinOsc.ar(0.5&#xa;* [1, 1.1]&#xa;).range(0.01, 0.3);&#xa;LFGauss.ar(dur, width) * 0.2&#xa;}.play&#xa;);" ID="ID_1185694608" CREATED="1416772389917" MODIFIED="1416772390425"/>
</node>
<node TEXT="klank" ID="ID_575901244" CREATED="1416172526367" MODIFIED="1416172527666">
<node TEXT="// -- overlap texture 2&#xa;(&#xa;SynthDef(&quot;help-KlankOverlapTexture2&quot;,&#xa;{|out = 0, freqs = #[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], rings = #[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], atk = 5, sus = 8, rel = 5, pan = 0|&#xa;    var e = EnvGen.kr(Env.linen(atk, sus, rel, 1, 4), doneAction:2);&#xa;    var i = BrownNoise.ar(0.0012);&#xa;    var z = Klank.ar(&#xa;        `[freqs, nil, rings],     // specs&#xa;        i                    // input&#xa;    );&#xa;    Out.ar(out, Pan2.ar(z*e, pan));&#xa;}).add;&#xa;&#xa;r = Routine{&#xa;    var sustain = 6, transition = 4, overlap = 5;&#xa;    var period = transition*2+sustain/overlap;&#xa;    0.5.wait;            // wait for the synthdef to be sent to the server&#xa;    inf.do {&#xa;        Synth(&quot;help-KlankOverlapTexture2&quot;, [&#xa;            \atk, transition,&#xa;            \sus, sustain,&#xa;            \rel, transition,&#xa;            \pan, 1.0.rand2,&#xa;            \freqs, {6000.0.linrand+80}.dup(12),&#xa;            \rings, {0.1.rrand(3)}.dup(12)&#xa;        ]);&#xa;        period.wait;&#xa;    }&#xa;};&#xa;r.play;&#xa;)&#xa;&#xa;r.stop;" ID="ID_1925695698" CREATED="1416172528158" MODIFIED="1416172529350"/>
</node>
<node TEXT="sines and envel&apos;s" ID="ID_617942779" CREATED="1416168544435" MODIFIED="1416168557966">
<node TEXT="by hand" ID="ID_1521715144" CREATED="1416168560355" MODIFIED="1416168640037">
<node TEXT="( {&#xa;  var n = 20;&#xa;  Mix.arFill(&#xa;    n,  // generate n sine waves&#xa;    {&#xa;      SinOsc.ar(&#xa;        [67.0.rrand(2000), 67.0.rrand(2000)],&#xa;        0,&#xa;        n.reciprocal // =&gt; amps sum to 1&#xa;      ) *&#xa;      EnvGen.kr(&#xa;        Env.sine(2.0.rrand(17)),&#xa;        doneAction: 0&#xa;      )&#xa;    }&#xa;  )   *&#xa;  EnvGen.kr( // global env&#xa;    Env.perc(11, 6),&#xa;    doneAction: 2,&#xa;    levelScale: 0.75&#xa;) }.scope )" ID="ID_1236760309" CREATED="1416168512283" MODIFIED="1416182572911"/>
</node>
<node TEXT="* using Klang" ID="ID_395624832" CREATED="1416168640609" MODIFIED="1416168652000">
<node TEXT="(&#xa;{&#xa;loop({&#xa;    play({&#xa;        Pan2.ar(Klang.ar(`[ Array.rand(12, 200.0, 2000.0), nil, nil ], 1, 0), 1.0.rand)&#xa;             * EnvGen.kr(Env.sine(4), 1, 0.02, doneAction: 2);&#xa;    });&#xa;    2.wait;&#xa;})&#xa;}.fork;&#xa;)" ID="ID_1318678218" CREATED="1416168644394" MODIFIED="1416168645045"/>
<node TEXT="(&#xa;{&#xa;loop({&#xa;    play({&#xa;        var nPartials = 12, nChans = 5, n = nPartials * nChans;&#xa;        Splay.ar(Klang.ar(`[ { { rrand(200.0, 2000.0) } ! nPartials } ! nChans, nil, nil ], 1, 0))&#xa;             * EnvGen.kr(Env.sine(4), 1, 0.02, doneAction: 2);&#xa;    });&#xa;    2.wait;&#xa;})&#xa;}.fork;&#xa;)" ID="ID_1132609968" CREATED="1416168686344" MODIFIED="1416168686925"/>
</node>
</node>
<node TEXT="&quot;classic&quot; amp mod uses abs" ID="ID_1796248671" CREATED="1416168870126" MODIFIED="1416168891161">
<node TEXT="// &quot;classic&quot;&#xa;{ SinOsc.ar(440, 0, 0.571) * SinOsc.kr(880).abs }.scope&#xa;&#xa;// &quot;ring&quot;&#xa;// ... what&apos;s the difference?&#xa;{ SinOsc.ar(440, 0, 0.571) * SinOsc.kr(880) }.scope" ID="ID_359629592" CREATED="1416168891509" MODIFIED="1416168892185"/>
</node>
<node TEXT="a coll of SynthDefs" ID="ID_1450646187" CREATED="1416784737554" MODIFIED="1416784743846">
<node TEXT="https://github.com/brunoruviaro/SynthDefs-for-Patterns" ID="ID_1714897715" CREATED="1416784744278" MODIFIED="1416784744278" LINK="https://github.com/brunoruviaro/SynthDefs-for-Patterns"/>
</node>
<node TEXT="metallic, pitched" ID="ID_549652104" CREATED="1416887193696" MODIFIED="1416887200488">
<node TEXT="(" ID="ID_361463650" CREATED="1416887195884" MODIFIED="1416887195884"/>
<node TEXT="{" ID="ID_905635811" CREATED="1416887195884" MODIFIED="1416887195884"/>
<node TEXT="&#xa0; &#xa0; z = WhiteNoise.ar(0.2);" ID="ID_54223581" CREATED="1416887195885" MODIFIED="1416887195885"/>
<node TEXT="&#xa0; &#xa0; z + AllpassN.ar(z, 0.01, XLine.kr(0.0001, 0.01, 20), 0.2)" ID="ID_1782362914" CREATED="1416887195886" MODIFIED="1416887195886"/>
<node TEXT="}.play)" ID="ID_1994381617" CREATED="1416887195887" MODIFIED="1416887195887"/>
</node>
</node>
<node TEXT="mix for a chord" ID="ID_1563885815" CREATED="1416775872226" MODIFIED="1416775898137">
<node TEXT="Mix.arFill: for chords" ID="ID_890935169" CREATED="1416166844764" MODIFIED="1416166852877">
<node TEXT="these are equiv&apos;" ID="ID_456446559" CREATED="1416166854922" MODIFIED="1416166861973"/>
<node TEXT="{ Mix.arFill(3, { arg i; Saw.ar(500 + (i * 100), 0.05) }) }.scope;" ID="ID_454846509" CREATED="1416166853284" MODIFIED="1416166854263"/>
<node TEXT="(&#xa;{&#xa;    Mix.ar(&#xa;        // the ugens that will be mixed go into an array&#xa;        [&#xa;            Saw.ar(500, 0.05),&#xa;            Saw.ar(600, 0.06),&#xa;            Saw.ar(700, 0.06)&#xa;        ]&#xa;    )&#xa;}.scope&#xa;)" ID="ID_1526045418" CREATED="1416166871882" MODIFIED="1416166872416"/>
</node>
</node>
<node TEXT="free via envelope" ID="ID_924319278" CREATED="1416166997597" MODIFIED="1416775984498">
<node TEXT="/= quote" ID="ID_169845200" CREATED="1416167015598" MODIFIED="1416167017338"/>
<node TEXT="// modulate amplitude&#xa;{ SinOsc.ar(440, 0, 0.1) * EnvGen.kr(Env.sine(1), doneAction: 2) }.scope;" ID="ID_517825758" CREATED="1416167006686" MODIFIED="1416167007472"/>
<node TEXT="Setting the doneAction argument (control) to 2 insures that after the envelope reaches its endpoint, SuperCollider will release the memory it used for the instances of the SinOsc and the EnvGen." ID="ID_958002349" CREATED="1416167014070" MODIFIED="1416167014522"/>
</node>
</node>
<node TEXT="_infreq" ID="ID_378388243" CREATED="1416024571846" MODIFIED="1416024580042">
<node TEXT="extensive margin" ID="ID_1320549040" CREATED="1416024584854" MODIFIED="1416024590082">
<node TEXT="don&apos;t invest unless it seems likely worth it" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_88457740" CREATED="1413849136984" MODIFIED="1413849148096"/>
<node TEXT="higher-order functions?" ID="ID_1411663307" CREATED="1413849067182" MODIFIED="1413849075897">
<node TEXT="taking functions as arguments" ID="ID_43589063" CREATED="1413849076071" MODIFIED="1413849079673"/>
</node>
<node TEXT="meta-programming?" ID="ID_1949303898" CREATED="1413849044417" MODIFIED="1413849066364">
<node TEXT="code as manipulable data" ID="ID_659976853" CREATED="1413849068671" MODIFIED="1413849072018"/>
</node>
</node>
<node TEXT="old notes, best extracted" ID="ID_569812101" CREATED="1416024599462" MODIFIED="1416781115058">
<node TEXT="operation" ID="ID_258418547" CREATED="1361661244156" MODIFIED="1373768871169">
<node TEXT="getting help" ID="ID_1572359211" CREATED="1350876834447" MODIFIED="1373768368294">
<node TEXT="from within SC" LOCALIZED_STYLE_REF="default" ID="ID_923138225" CREATED="1351434894545" MODIFIED="1373768379438">
<node TEXT="help generally" LOCALIZED_STYLE_REF="default" ID="ID_1615617140" CREATED="1351435042991" MODIFIED="1361753047034">
<node TEXT="Help.gui;" ID="ID_266698725" CREATED="1351434898088" MODIFIED="1351434901187"/>
<node TEXT="cmd-d with nothing highlighted" ID="ID_1289344863" CREATED="1351435013841" MODIFIED="1361753028340"/>
</node>
<node TEXT="cmd-d" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1146223421" CREATED="1351435013841" MODIFIED="1361753045148">
<node TEXT="gets the help file for the selected thing" ID="ID_1634711270" CREATED="1361753014299" MODIFIED="1361753019510"/>
</node>
<node TEXT="cmd-j" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1529818405" CREATED="1361753029561" MODIFIED="1361753045146">
<node TEXT="gets the code defining the selected thing" ID="ID_1354279469" CREATED="1361753032042" MODIFIED="1361753040301"/>
</node>
<node TEXT="help for a class" ID="ID_1503795684" CREATED="1351435046679" MODIFIED="1351435304920">
<node TEXT="works for some methods too" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1636016038" CREATED="1351435191099" MODIFIED="1351435196109"/>
<node TEXT="for gui window" ID="ID_702364007" CREATED="1351435557012" MODIFIED="1351435571327">
<node TEXT="highlight the class, then Cmd-d" ID="ID_273277448" CREATED="1351435048783" MODIFIED="1351435138019"/>
</node>
<node TEXT="for post window" ID="ID_1189710788" CREATED="1351435562484" MODIFIED="1351435573439">
<node TEXT="&quot;Array&quot; here could be anything" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_617344809" CREATED="1351435599395" MODIFIED="1351435607492"/>
<node TEXT="Array.dumpFullInterface;" ID="ID_1452958227" CREATED="1351435574030" MODIFIED="1351435574030"/>
<node ID="ID_516741420" CREATED="1351435591033" MODIFIED="1351435591033"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <span class="s1">Array</span><span class="s3">.dumpAllMethods;</span>
  </body>
</html>
</richcontent>
<node TEXT="only instance methods" ID="ID_1416329885" CREATED="1351435614387" MODIFIED="1351435617447"/>
<node TEXT="including inherited ones" ID="ID_670095087" CREATED="1351435625771" MODIFIED="1351435629886"/>
</node>
<node TEXT="Array.class.dumpAllMethods;" ID="ID_871941695" CREATED="1351435574030" MODIFIED="1351435574030">
<node TEXT="only class methods" ID="ID_774565287" CREATED="1351435622938" MODIFIED="1351435625518"/>
<node TEXT="including inherited ones" ID="ID_321472416" CREATED="1351435625771" MODIFIED="1351435629886"/>
</node>
</node>
<node TEXT="dunno what it does" ID="ID_78200040" CREATED="1351435770207" MODIFIED="1351435779628">
<node TEXT=".browse;" ID="ID_533727425" CREATED="1351435700729" MODIFIED="1351435705653">
<node TEXT="I&apos;m not sure what it does." ID="ID_1059698343" CREATED="1351435705874" MODIFIED="1351435709285"/>
</node>
</node>
<node TEXT="remember superclasses" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_782597232" CREATED="1351435420384" MODIFIED="1351435424619">
<node TEXT="sometimes a method is documented only for a superclass" ID="ID_663435346" CREATED="1351435427034" MODIFIED="1351435435261"/>
</node>
</node>
<node TEXT="help for a method" ID="ID_1329029773" CREATED="1351435796470" MODIFIED="1351435798626">
<node TEXT="list all implementing classes" ID="ID_749043962" CREATED="1351435908206" MODIFIED="1351435913296">
<node TEXT="highlight, Cmd-y" ID="ID_945194075" CREATED="1351435803199" MODIFIED="1351435809883"/>
</node>
<node TEXT="show definition" ID="ID_1705447282" CREATED="1351436021735" MODIFIED="1351436026313">
<node TEXT="Cmd-j" ID="ID_1567516757" CREATED="1351436026518" MODIFIED="1351436030057"/>
</node>
<node TEXT="find which superclass&apos;s implementation a class inherits a method from" ID="ID_1469099267" CREATED="1351436185946" MODIFIED="1351436209405">
<node TEXT="&quot;Array&quot; could be anything here, too" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_192378231" CREATED="1351436275748" MODIFIED="1351436282213"/>
<node ID="ID_1599666080" CREATED="1351436209735" MODIFIED="1361667802098"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <span class="s3">Array.findRespondingMethodFor(</span><span class="s6">'select'</span><span class="s3">);</span>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1132044161" CREATED="1351436258881" MODIFIED="1351436258881"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p7">
      <span class="s1">Array</span><span class="s3">.helpFileForMethod(</span><span class="s6">'select'</span><span class="s3">); </span>
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="list all references to selected text" ID="ID_974666258" CREATED="1351435922604" MODIFIED="1351435947413">
<node TEXT="highlight, cmd-shift-y" ID="ID_1422350583" CREATED="1351435947690" MODIFIED="1351435952014"/>
</node>
<node TEXT="documentation for a class" ID="ID_943774768" CREATED="1351435305179" MODIFIED="1351435307854">
<node TEXT="highlight, then Cmd-j" ID="ID_655368693" CREATED="1351435312643" MODIFIED="1351435317911"/>
</node>
</node>
<node TEXT="main site" ID="ID_1189855671" CREATED="1350875355178" MODIFIED="1351436429396">
<node TEXT="http://supercollider.sourceforge.net/" ID="ID_1220712676" CREATED="1350875354307" MODIFIED="1350875354307" LINK="http://supercollider.sourceforge.net/"/>
</node>
<node TEXT="mailing list" ID="ID_1555394885" CREATED="1350875669620" MODIFIED="1350875671927">
<node TEXT="http://www.birmingham.ac.uk/facilities/BEAST/research/supercollider/mailinglist.aspx" ID="ID_1101678715" CREATED="1350875672291" MODIFIED="1350875672291" LINK="http://www.birmingham.ac.uk/facilities/BEAST/research/supercollider/mailinglist.aspx"/>
</node>
<node TEXT="swiki" ID="ID_10742119" CREATED="1351436422936" MODIFIED="1351436424417">
<node ID="ID_235723464" CREATED="1351436424774" MODIFIED="1351436424774" LINK="http://swiki.hfbk-hamburg.de:8888/MusicTechnology/6"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p10">
      <span class="s7">http://swiki.hfbk-hamburg.de:8888/MusicTechnology/6</span>
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="many learning materials" ID="ID_1068627501" CREATED="1351436994764" MODIFIED="1351437014830">
<node TEXT="listed at bottom" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1228958846" CREATED="1351437026152" MODIFIED="1351437035852"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Help.html" ID="ID_1323867183" CREATED="1351437009082" MODIFIED="1351437009082" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Help.html"/>
</node>
<node TEXT="suggested reading" ID="ID_946320735" CREATED="1350877010506" MODIFIED="1361661282518">
<node TEXT="from Scott Wilson&apos;s SC tutorial, by chapter" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_59157262" CREATED="1361661268739" MODIFIED="1361661275262"/>
<node TEXT="section 1" ID="ID_602036784" CREATED="1350877086207" MODIFIED="1361663030706">
<node TEXT="source" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1522797960" CREATED="1350877089223" MODIFIED="1350877100504">
<node TEXT="end of &quot;First Steps&quot;" ID="ID_1891195597" CREATED="1350877092409" MODIFIED="1350877095681"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/First%20Steps.html" ID="ID_1760464464" CREATED="1350877090778" MODIFIED="1350877090778" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/First%20Steps.html"/>
</node>
<node TEXT="the interpreter" ID="ID_1532989014" CREATED="1350877029311" MODIFIED="1350877032500">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/How-to-Use-the-Interpreter.html" ID="ID_815921964" CREATED="1350877012993" MODIFIED="1350877012993" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/How-to-Use-the-Interpreter.html"/>
</node>
<node TEXT="literals" ID="ID_1028460149" CREATED="1350877037707" MODIFIED="1350877038747">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Literals.html" ID="ID_1575651255" CREATED="1350877039059" MODIFIED="1350877039059" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Literals.html"/>
</node>
<node TEXT="string" ID="ID_1740204749" CREATED="1350877045192" MODIFIED="1350877045973">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Collections/String.html" ID="ID_765255232" CREATED="1350877046261" MODIFIED="1350877046261" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Collections/String.html"/>
</node>
<node TEXT="client &amp; server" ID="ID_1624221701" CREATED="1350877056257" MODIFIED="1350877058748">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/ClientVsServer.html" ID="ID_1307906595" CREATED="1350877059069" MODIFIED="1350877059069" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/ClientVsServer.html"/>
</node>
<node TEXT="server" ID="ID_1767645156" CREATED="1350877065689" MODIFIED="1350877066476">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Server-Architecture.html" ID="ID_400411027" CREATED="1350877066834" MODIFIED="1350877066834" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Server-Architecture.html"/>
</node>
</node>
<node TEXT="section 2" ID="ID_1958004568" CREATED="1350880002153" MODIFIED="1361663010394">
<node TEXT="source" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_357526864" CREATED="1350880010152" MODIFIED="1350880011426">
<node TEXT="end of &quot;Start your Engines&quot;" ID="ID_301589743" CREATED="1350880018513" MODIFIED="1350880023067"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Start%20Your%20Engines.html" ID="ID_1164881298" CREATED="1350880025399" MODIFIED="1350880025399" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Start%20Your%20Engines.html"/>
</node>
<node TEXT="the server" ID="ID_924066328" CREATED="1350880003656" MODIFIED="1350880004964">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Server.html" ID="ID_760068467" CREATED="1350880002780" MODIFIED="1350880002780" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Server.html"/>
</node>
</node>
<node TEXT="section 3" ID="ID_1096748123" CREATED="1350881823234" MODIFIED="1361663016835">
<node TEXT="source" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1396938088" CREATED="1350881823866" MODIFIED="1350881825412">
<node TEXT="end of &quot;functions and other functionality&quot;" ID="ID_1321156274" CREATED="1350881825842" MODIFIED="1350881831997"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Functions%20and%20Other%20Functionality.html" ID="ID_1052046721" CREATED="1350881856160" MODIFIED="1350881856160" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Functions%20and%20Other%20Functionality.html"/>
</node>
<node TEXT="functions" ID="ID_1052955513" CREATED="1350881864001" MODIFIED="1350881875130">
<font BOLD="true"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Functions.html" ID="ID_371958056" CREATED="1350881865422" MODIFIED="1350881865422" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Functions.html"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Core/Kernel/Function.html" ID="ID_1199405756" CREATED="1350881870029" MODIFIED="1350881870029" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Core/Kernel/Function.html"/>
</node>
<node TEXT="assignment statements" ID="ID_491442988" CREATED="1350881883271" MODIFIED="1350881885580">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Assignment.html" ID="ID_718468396" CREATED="1350881885910" MODIFIED="1350881885910" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Assignment.html"/>
</node>
<node TEXT="objects, messages" ID="ID_1580555348" CREATED="1350881888670" MODIFIED="1350881890835">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Intro-to-Objects.html" ID="ID_72668636" CREATED="1350881891134" MODIFIED="1350881891134" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Intro-to-Objects.html"/>
</node>
<node TEXT="literals" ID="ID_628126443" CREATED="1350881893991" MODIFIED="1350881894964">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Literals.html" ID="ID_1208880361" CREATED="1350881895285" MODIFIED="1350881895285" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Literals.html"/>
</node>
</node>
<node TEXT="section 4" ID="ID_1246967432" CREATED="1351406133559" MODIFIED="1361663017572">
<node TEXT="source" LOCALIZED_STYLE_REF="default" ID="ID_1477343816" CREATED="1351406147767" MODIFIED="1351406191831">
<node TEXT="~&quot;functions and sound&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_918356648" CREATED="1351406151735" MODIFIED="1351406163376"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Functions%20and%20Sound.html" ID="ID_933997402" CREATED="1351406159330" MODIFIED="1351406159330" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Functions%20and%20Sound.html"/>
</node>
<node TEXT="end suggests" ID="ID_1225207774" CREATED="1351406188878" MODIFIED="1351406221016">
<node TEXT="UGens" ID="ID_1966623808" CREATED="1351406174598" MODIFIED="1351406206120"/>
<node TEXT="Functions" ID="ID_804563542" CREATED="1351406206510" MODIFIED="1351406208273"/>
</node>
</node>
<node TEXT="section 5" ID="ID_550082904" CREATED="1351406910673" MODIFIED="1361663019155">
<node TEXT="source" ID="ID_1844981815" CREATED="1351406924769" MODIFIED="1351406925556">
<node TEXT="Stereo" ID="ID_1369276684" CREATED="1351406920378" MODIFIED="1351406921908"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Presented%20in%20Living%20Stereo.html" ID="ID_431417001" CREATED="1351406922732" MODIFIED="1351406922732" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Presented%20in%20Living%20Stereo.html"/>
</node>
<node TEXT="end rec&apos;s" ID="ID_1490036854" CREATED="1351406926769" MODIFIED="1351406927948">
<node TEXT="multichannel" ID="ID_595751174" CREATED="1351406929433" MODIFIED="1351406932132"/>
<node TEXT="collections" ID="ID_220541560" CREATED="1351406932328" MODIFIED="1351406933676"/>
<node TEXT="Pan2" ID="ID_1433076997" CREATED="1351406933890" MODIFIED="1351406934884">
<node TEXT="for stereo" ID="ID_299214785" CREATED="1351406935297" MODIFIED="1351406937220"/>
</node>
</node>
</node>
<node TEXT="section 6" ID="ID_17217252" CREATED="1351407539909" MODIFIED="1361663020323">
<node TEXT="source" ID="ID_290526805" CREATED="1351407544813" MODIFIED="1351407545680">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Mix%20it%20Up.html" ID="ID_427061361" CREATED="1351407546057" MODIFIED="1351407546057" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Mix%20it%20Up.html"/>
</node>
<node ID="ID_789285265" CREATED="1351407541023" MODIFIED="1351407541023" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/UGens/Multichannel/Mix.html"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p7">
      <span class="s3"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/UGens/Multichannel/Mix.html">Mix</a></span><b><span class="s2"> </span></b><span class="s4"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/UGens/Algebraic/BinaryOpUGen.html">BinaryOpUGen</a></span><b><span class="s2"> </span></b><span class="s5"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Operators.html">Operators</a></span><b><span class="s2"> </span></b><span class="s5"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Syntax-Shortcuts.html">Syntax-Shortcuts</a></span>
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="(4 things)" ID="ID_1679684756" CREATED="1351407568756" MODIFIED="1351407570896"/>
</node>
<node TEXT="section 7" ID="ID_688035437" CREATED="1351407838382" MODIFIED="1361663021420">
<node TEXT="source" ID="ID_434370398" CREATED="1351407839613" MODIFIED="1351407840666">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Scoping%20and%20Plotting.html" ID="ID_195469558" CREATED="1351407841017" MODIFIED="1351407841017" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Scoping%20and%20Plotting.html"/>
</node>
<node TEXT="3 rec&apos;s" ID="ID_393966612" CREATED="1351407845174" MODIFIED="1351407846370">
<node ID="ID_356952528" CREATED="1351407844509" MODIFIED="1351407844509" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Core/Kernel/Function.html"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p11">
      <a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Core/Kernel/Function.html">Function</a><b><span class="s3"> </span></b><span class="s2"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Server.html">Server</a></span><b><span class="s3"> </span></b><span class="s2"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/GUI/Main-GUI/Stethoscope.html">Stethoscope</a></span>
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="section 8" ID="ID_1032809829" CREATED="1351439437011" MODIFIED="1361663022500">
<node TEXT="source" ID="ID_1920550686" CREATED="1351439431172" MODIFIED="1351439432062">
<node TEXT="SynthDefs and Synths" ID="ID_1093392618" CREATED="1351439424995" MODIFIED="1351439428983"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/SynthDefs%20and%20Synths.html" ID="ID_1844730733" CREATED="1351439429741" MODIFIED="1351439429741" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/SynthDefs%20and%20Synths.html"/>
</node>
<node TEXT="7 rec&apos;s" ID="ID_993951760" CREATED="1351439416555" MODIFIED="1351439418127">
<node ID="ID_683137793" CREATED="1351439405292" MODIFIED="1351439405292" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/SynthDef.html"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p11">
      <a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/SynthDef.html">SynthDef</a><b><span class="s1"> </span></b><span class="s10"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Synth.html">Synth</a></span><b><span class="s1"> </span></b><span class="s10"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Collections/String.html">String</a></span><b><span class="s1"> </span></b><span class="s10"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Core/Symbol.html">Symbol</a></span><b><span class="s1"> </span></b><span class="s10"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Literals.html">Literals</a></span><b><span class="s1"> </span></b><span class="s10"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Other%20Topics/Randomness.html">Randomness</a></span><b><span class="s1"> </span></b><span class="s10"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/UGens/UGens.html">UGens</a></span>
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="section 9" ID="ID_1134439001" CREATED="1352267382130" MODIFIED="1361663023372">
<node TEXT="source" ID="ID_753143552" CREATED="1352267383107" MODIFIED="1352267384115">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Busses.html" ID="ID_56580433" CREATED="1352267403860" MODIFIED="1352267403860" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Busses.html"/>
</node>
<node TEXT="5 ref&apos;s" ID="ID_575276459" CREATED="1352267384347" MODIFIED="1352267399861">
<node ID="ID_78131069" CREATED="1352267386828" MODIFIED="1352267386828" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Bus.html"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p15">
      <span class="s9"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Bus.html">Bus</a></span><b><span class="s2"> </span></b><span class="s10"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/UGens/InOut/In.html">In</a></span><b><span class="s2"> </span></b><span class="s10"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/UGens/Multichannel/OutputProxy.html">OutputProxy</a></span><b><span class="s2"> </span></b><span class="s10"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Order-of-execution.html">Order-of-execution</a></span><b><span class="s2"> </span></b><span class="s10"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Synth.html">Synth</a></span>
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="section 10" ID="ID_613903314" CREATED="1352269826285" MODIFIED="1361663024235">
<node TEXT="source" ID="ID_1016963932" CREATED="1352269827599" MODIFIED="1352269828475">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Groups.html" ID="ID_1866955622" CREATED="1352269852440" MODIFIED="1352269852440" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Groups.html"/>
</node>
<node TEXT="9 ref&apos;s" ID="ID_1248077834" CREATED="1352269829423" MODIFIED="1352269846889">
<node ID="ID_1878274824" CREATED="1352269847676" MODIFIED="1352269847676" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Group.html"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p14">
      <span class="s7"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Group.html">Group</a></span><b><span class="s2"> </span></b><span class="s8"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Node.html">Node</a></span><b><span class="s2"> </span></b><span class="s8"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/default_group.html">default_group</a></span><b><span class="s2"> </span></b><span class="s8"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/RootNode.html">RootNode</a></span><b><span class="s2"> </span></b><span class="s8"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Intro-to-Objects.html">Intro-to-Objects</a></span><b><span class="s2"> </span></b><span class="s8"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Order-of-execution.html">Order-of-execution</a></span><b><span class="s2"> </span></b><span class="s8"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Synth.html">Synth</a></span><b><span class="s2"> </span></b><span class="s8"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/More-On-Getting-Help.html">More-On-Getting-Help</a></span><b><span class="s2"> </span></b><span class="s8"><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Other%20Topics/Internal-Snooping.html">Internal-Snooping</a></span>
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="section 11" ID="ID_1473185574" CREATED="1356463371605" MODIFIED="1361663025139">
<node TEXT="source" ID="ID_1703377485" CREATED="1356463387541" MODIFIED="1356463388415">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Buffers.html" ID="ID_1605817190" CREATED="1356463385275" MODIFIED="1356463385275" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Buffers.html"/>
</node>
<node TEXT="6 ref&apos;s" ID="ID_1028547089" CREATED="1356463378734" MODIFIED="1356463380687">
<node ID="ID_255543460" CREATED="1356463375856" MODIFIED="1356463375856" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Buffer.html"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p20">
      <a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Buffer.html"><span class="s9">Buffer</span></a><b><span class="s2"> </span></b><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/UGens/Playback%20and%20Recording/PlayBuf.html"><span class="s8">PlayBuf</span></a><b><span class="s2"> </span></b><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/UGens/Playback%20and%20Recording/RecordBuf.html"><span class="s8">RecordBuf</span></a><b><span class="s2"> </span></b><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/SynthDef.html"><span class="s8">SynthDef</span></a><b><span class="s2"> </span></b><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/UGens/Info/BufRateScale.html"><span class="s8">BufRateScale</span></a><b><span class="s2"> </span></b><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/UGens/Oscillators/Shaper.html"><span class="s8">Shaper</span></a>
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="section 12" ID="ID_548221319" CREATED="1356464279736" MODIFIED="1361663025859">
<node TEXT="source" ID="ID_1273865562" CREATED="1356464291526" MODIFIED="1356464292369">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Scheduling%20Events.html" ID="ID_494995424" CREATED="1356464295562" MODIFIED="1356464295562" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Scheduling%20Events.html"/>
</node>
<node TEXT="4 ref&apos;s" ID="ID_1758966425" CREATED="1356464283471" MODIFIED="1356464288520">
<node ID="ID_1704198990" CREATED="1356464280535" MODIFIED="1356464280535" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Scheduling/SystemClock.html"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p8">
      <a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Scheduling/SystemClock.html"><span class="s7">SystemClock</span></a><span class="Apple-tab-span"> </span><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Scheduling/TempoClock.html"><span class="s7">TempoClock</span></a><span class="Apple-tab-span"> </span><a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Scheduling/AppClock.html"><span class="s7">AppClock</span></a>
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_782241723" CREATED="1356464280537" MODIFIED="1356464280537" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Core/Kernel/Function.html"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p8">
      <a href="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Core/Kernel/Function.html"><span class="s7">Function</span></a>
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
</node>
<node TEXT="how it interprets" ID="ID_1630829638" CREATED="1350876453346" MODIFIED="1361662578176">
<node TEXT="result of last command evaluated always posts" ID="ID_1403093542" CREATED="1350876455395" MODIFIED="1350876559636"/>
<node TEXT="contiguous whitespace is equivalent to a single space" ID="ID_1379411800" CREATED="1350876758925" MODIFIED="1350876790052"/>
<node TEXT="no precedence order on math functions" ID="ID_95911806" CREATED="1350881111545" MODIFIED="1350881128116">
<node TEXT="must make it all explicit, with parens" ID="ID_712548731" CREATED="1350881128576" MODIFIED="1350881141916"/>
</node>
<node TEXT="comments" ID="ID_1461951412" CREATED="1350880565958" MODIFIED="1350880567609">
<node TEXT="processed // ignored" ID="ID_578446270" CREATED="1350880567845" MODIFIED="1350880585291"/>
</node>
</node>
<node TEXT="how to interpret it" ID="ID_402369165" CREATED="1361661789213" MODIFIED="1361662580888">
<node TEXT="error reports" ID="ID_1842271161" CREATED="1350876692280" MODIFIED="1361661797087">
<node TEXT="the dot appears where SC discovered the error -- usually shortly after the problematic passage" ID="ID_1100734766" CREATED="1350876703911" MODIFIED="1350876720281"/>
</node>
</node>
<node TEXT="how to write it" LOCALIZED_STYLE_REF="default" ID="ID_491900943" CREATED="1361662489167" MODIFIED="1415521640076">
<font BOLD="true"/>
<node TEXT="sample code" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_630934842" CREATED="1361661301618" MODIFIED="1373765469129">
<node TEXT="making a synth" ID="ID_1487402976" CREATED="1352268503511" MODIFIED="1361661312469">
<node TEXT="sample code" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_275957992" CREATED="1361661313378" MODIFIED="1361661320597"/>
<node TEXT="pulsed pink noise with delay" ID="ID_1599301430" CREATED="1352268528334" MODIFIED="1352268533026">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Busses.html" ID="ID_1927458612" CREATED="1352268511363" MODIFIED="1352268511363" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Busses.html"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Groups.html" ID="ID_662723447" CREATED="1352268519302" MODIFIED="1352268519302" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Groups.html"/>
</node>
</node>
</node>
<node LOCALIZED_STYLE_REF="default" ID="ID_1983084227" CREATED="1361669381979" MODIFIED="1373768333100"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      user-defined
    </p>
  </body>
</html>
</richcontent>
<node TEXT="functions" ID="ID_256117471" CREATED="1350880263142" MODIFIED="1350880264288">
<node TEXT="must be declared as var&apos;s before definition" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_684412263" CREATED="1361751918756" MODIFIED="1361751926380">
<node TEXT="(&#xa;  var func;&#xa;  func = {&#xa;    var greet;&#xa;    greet = &quot;hello world&quot;;&#xa;    greet.postln;&#xa;  };&#xa;  func.value;&#xa;)" ID="ID_1491023607" CREATED="1361751966386" MODIFIED="1361751967399"/>
</node>
<node TEXT="most likely template" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1752646514" CREATED="1373765703181" MODIFIED="1373765739283">
<node TEXT="f = { arg a, by; var c, d; ... }" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_243438621" CREATED="1373765706636" MODIFIED="1413842229671">
<node TEXT="by -&gt; b?" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1573566646" CREATED="1413842220791" MODIFIED="1413842227350"/>
</node>
</node>
<node TEXT="defined by curly braces" ID="ID_1030199241" CREATED="1350880265420" MODIFIED="1350880269577">
<node ID="ID_298798074" CREATED="1350880264623" MODIFIED="1350880264623"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <span class="s4">f = { </span>&quot;Function evaluated&quot;<span class="s4">.postln; };</span>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="operands" ID="ID_1049647015" CREATED="1350880881995" MODIFIED="1413842383083">
<node TEXT="define function with operands" ID="ID_710528719" CREATED="1350880981798" MODIFIED="1413842385419">
<node TEXT="two idioms" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_103644567" CREATED="1350881298851" MODIFIED="1350881302165"/>
<node TEXT="ordinary" ID="ID_904439494" CREATED="1350881295513" MODIFIED="1350881296838">
<node TEXT="f = { arg a, b;        &#xa;    a - b;&#xa;    };" ID="ID_1117074964" CREATED="1350880888002" MODIFIED="1350881026976"/>
</node>
<node TEXT="bar notation" ID="ID_944612171" CREATED="1350881302769" MODIFIED="1350881312628">
<node ID="ID_1601890485" CREATED="1350881312942" MODIFIED="1350881312942"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    g = { <span class="s2">|a, b|</span> a + b; };
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="functions can have more methods beyond &quot;value&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1908176151" CREATED="1373765377509" MODIFIED="1373765413156">
<node TEXT="&quot;This is the same with any method that takes arguments, not just value.&quot;" ID="ID_1195366164" CREATED="1350880992335" MODIFIED="1350880994810"/>
</node>
<node TEXT="default values" ID="ID_142184806" CREATED="1350881170766" MODIFIED="1361662014193">
<node TEXT="syntax" ID="ID_563794533" CREATED="1350881238452" MODIFIED="1350881239854">
<node ID="ID_1065712201" CREATED="1350881203025" MODIFIED="1350881203025"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    f = { <span class="s2">arg</span> a, b = 2; a + b; };
  </body>
</html>
</richcontent>
</node>
<node TEXT="f.value(2);" ID="ID_257095682" CREATED="1350881209471" MODIFIED="1350881212922"/>
</node>
<node TEXT="must be literals" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1442848076" CREATED="1350881233485" MODIFIED="1350881244421">
<node TEXT="numbers, strings, &quot;symbols&quot;, or collections thereof" ID="ID_1593263232" CREATED="1350881245821" MODIFIED="1350881259216"/>
</node>
</node>
</node>
<node TEXT="evaluate a function" ID="ID_676896977" CREATED="1350881038098" MODIFIED="1413842371164">
<node TEXT="if no operands" ID="ID_1887610675" CREATED="1350880365977" MODIFIED="1413842402169">
<node TEXT="f.value;" ID="ID_1474388484" CREATED="1350880369506" MODIFIED="1350880374276"/>
</node>
<node TEXT="if operands" ID="ID_387484821" CREATED="1350881191319" MODIFIED="1413842404049">
<node TEXT="idioms" LOCALIZED_STYLE_REF="default" ID="ID_1238816355" CREATED="1413842312518" MODIFIED="1413842325992">
<node TEXT="alternatives" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1076785586" CREATED="1413842332461" MODIFIED="1413842334117"/>
<node TEXT="ordinary" ID="ID_1146444857" CREATED="1350881053130" MODIFIED="1350881054205">
<node ID="ID_50358130" CREATED="1350881042052" MODIFIED="1350881042052"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      f.value(5, 3);
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="reordering variables" ID="ID_1913274028" CREATED="1350881047274" MODIFIED="1350881051677">
<node ID="ID_1823344333" CREATED="1350881021332" MODIFIED="1350881021332"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    f.value(b: 2, a: 10);
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="those 2 idioms can be mixed" LOCALIZED_STYLE_REF="default" ID="ID_1305148170" CREATED="1350881076697" MODIFIED="1413842329876">
<node TEXT="but ordinary (non-specified) arguments must come first (leftmost)" ID="ID_1105238661" CREATED="1350881093588" MODIFIED="1413842357825"/>
</node>
</node>
</node>
</node>
<node TEXT="variables" ID="ID_1651240506" CREATED="1350879258798" MODIFIED="1350879260162">
<node TEXT="see also &quot;functions / local variables&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1087051031" CREATED="1350881381672" MODIFIED="1350881390098"/>
<node TEXT="declaration" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_1869884568" CREATED="1361662351588" MODIFIED="1361662395910">
<node TEXT="most need it" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1436220872" CREATED="1361662396843" MODIFIED="1361662398923"/>
<node TEXT="syntax" ID="ID_1234529358" CREATED="1361662383403" MODIFIED="1361662384359">
<node TEXT="&quot;var foo&quot;" ID="ID_1100600582" CREATED="1361662376788" MODIFIED="1361662382199"/>
</node>
<node TEXT="&quot;interpreter variables&quot;" LOCALIZED_STYLE_REF="default" ID="ID_1104564637" CREATED="1350881590646" MODIFIED="1373765576700">
<node TEXT="uniquely, these don&apos;t need to be declared by the user" ID="ID_309194072" CREATED="1373765577356" MODIFIED="1373765583084"/>
<node TEXT="global, declared at startup" ID="ID_934235250" CREATED="1350881596142" MODIFIED="1350881609153"/>
<node TEXT="consist of the letters a through z" ID="ID_1880954742" CREATED="1350881599823" MODIFIED="1350881617034"/>
<node TEXT="links in" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_121909034" CREATED="1373765536025" MODIFIED="1373765593467"/>
</node>
</node>
<node TEXT="default assignments" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1392855856" CREATED="1350879948066" MODIFIED="1373765662134">
<node TEXT="what?" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1224350229" CREATED="1373765657254" MODIFIED="1373765659528"/>
<node TEXT="s = Server.local" ID="ID_992622250" CREATED="1350879269412" MODIFIED="1350879960028">
<node TEXT="the LHS name can be changed" ID="ID_364184012" CREATED="1350879272656" MODIFIED="1350879972766"/>
</node>
</node>
<node TEXT="scope" ID="ID_1534897152" CREATED="1373765759396" MODIFIED="1373765760006">
<node TEXT="tag local" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1587146131" CREATED="1350881370744" MODIFIED="1373765816209"/>
<node TEXT="denoted by parens and curlies" ID="ID_1270753329" CREATED="1350881491075" MODIFIED="1373765789957">
<node TEXT="w/r/t variable scope, they work the same" LOCALIZED_STYLE_REF="default" ID="ID_1470178675" CREATED="1361662428507" MODIFIED="1373765804765"/>
</node>
<node TEXT="declaration" ID="ID_1586187580" CREATED="1350881394728" MODIFIED="1350881426056">
<node TEXT="f = { arg a, b;&#xa;    var firstResult, finalResult;&#xa;    firstResult = a + b;&#xa;    ...&#xa;}" ID="ID_221133340" CREATED="1350881399919" MODIFIED="1373765829412"/>
</node>
</node>
</node>
<node TEXT="freeing memory" ID="ID_415470698" CREATED="1361730437202" MODIFIED="1373765939234">
<node TEXT="tag clear, tag erase" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_504350572" CREATED="1373765946126" MODIFIED="1373765954319"/>
<node TEXT="I don&apos;t know how these difference." LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_321217680" CREATED="1361730445977" MODIFIED="1373765933026"/>
<node TEXT="x.free;" ID="ID_1196542745" CREATED="1361730444491" MODIFIED="1373765927533"/>
<node ID="ID_345095297" CREATED="1373765928202" MODIFIED="1373765928202"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      o.remove;
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="data structures" ID="ID_883770010" CREATED="1373767541962" MODIFIED="1373767543597">
<node TEXT="arrays" LOCALIZED_STYLE_REF="default" ID="ID_1676149556" CREATED="1351406366352" MODIFIED="1361669365495">
<node TEXT="ref" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1443078718" CREATED="1361669535786" MODIFIED="1373768199749">
<node TEXT="http://danielnouri.org/docs/SuperColliderHelp/Collections/Array.html" ID="ID_1153668953" CREATED="1361669534805" MODIFIED="1361669534805" LINK="http://danielnouri.org/docs/SuperColliderHelp/Collections/Array.html"/>
</node>
<node TEXT="these might be the same" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1960589253" CREATED="1361669528426" MODIFIED="1361669531499"/>
<node TEXT="def&apos;n" ID="ID_1009910462" CREATED="1351406441732" MODIFIED="1351406442711">
<node TEXT="ordered collection with limited number of spots" ID="ID_1305569443" CREATED="1351406443563" MODIFIED="1351406471935"/>
</node>
<node TEXT="instantiation" ID="ID_1082077867" CREATED="1373768091090" MODIFIED="1373768092878">
<node TEXT="named" ID="ID_525211189" CREATED="1361669544498" MODIFIED="1373768086710">
<node TEXT="z = Array.new(size);" ID="ID_1736981940" CREATED="1361669542922" MODIFIED="1361669543158"/>
<node TEXT="z = Array.newClear(size);" ID="ID_1895767162" CREATED="1361669680846" MODIFIED="1361669681729">
<node TEXT="fills it with nils" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1226048580" CREATED="1361669682766" MODIFIED="1361669688831"/>
</node>
</node>
<node TEXT="nameless" ID="ID_149291754" CREATED="1351406602883" MODIFIED="1373768083646">
<node TEXT="example" ID="ID_1551214942" CREATED="1351406371815" MODIFIED="1351406373147">
<node ID="ID_719831079" CREATED="1351406368242" MODIFIED="1351406368242"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    { [<span class="s2">SinOsc</span>.ar(440, 0, 0.2), <span class="s2">SinOsc</span>.ar(442, 0, 0.2)] }.play;
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="in []" ID="ID_1727643442" CREATED="1351406368879" MODIFIED="1351406370971"/>
<node TEXT="multichannel expansion" ID="ID_1528177821" CREATED="1351406661599" MODIFIED="1351406666259">
<node TEXT="the idea" ID="ID_1244903222" CREATED="1351406677023" MODIFIED="1351406678059">
<node TEXT="plug an N-array into one osc gets an N-array of the same osc" ID="ID_677387861" CREATED="1351406681967" MODIFIED="1351406702042"/>
</node>
<node TEXT="example" ID="ID_923797272" CREATED="1351406678575" MODIFIED="1351406679603">
<node ID="ID_1532680693" CREATED="1351406669544" MODIFIED="1373767828948"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p4">
      { <span class="s2">SinOsc</span>.ar([440, 442], 0, 0.2) }.play;
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="result is stereo" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_223919871" CREATED="1373768009493" MODIFIED="1373768017896"/>
</node>
</node>
</node>
</node>
<node TEXT="methods" ID="ID_757455795" CREATED="1351406501066" MODIFIED="1351406502021">
<node TEXT="storage" ID="ID_934295819" CREATED="1373768158753" MODIFIED="1373768159811">
<node TEXT="a.put(2,obj);" LOCALIZED_STYLE_REF="default" ID="ID_243422593" CREATED="1361669702437" MODIFIED="1373768157218"/>
</node>
<node TEXT="retrieval" ID="ID_609570318" CREATED="1351406549911" MODIFIED="1351406551322">
<node TEXT="array.at( 0-indexed position )" ID="ID_1875062791" CREATED="1351406502233" MODIFIED="1351406556994"/>
<node TEXT="array[ 0-indexed position ]" ID="ID_440892105" CREATED="1351406557638" MODIFIED="1351406564369"/>
<node TEXT=".choose" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1424001690" CREATED="1351406727044" MODIFIED="1373768179933">
<node TEXT="retrieves at random" ID="ID_7665712" CREATED="1351406738548" MODIFIED="1351406746839"/>
</node>
</node>
</node>
<node TEXT="uses" ID="ID_347222883" CREATED="1351406600235" MODIFIED="1351406601103">
<node TEXT="multichannel audio" ID="ID_444416369" CREATED="1351406612076" MODIFIED="1351406614695"/>
</node>
<node TEXT="sample code, tested" LOCALIZED_STYLE_REF="styles.topic" ID="ID_936357706" CREATED="1361749935488" MODIFIED="1373768226743">
<node TEXT="I wrote it, tested it." LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_770502147" CREATED="1361749963048" MODIFIED="1361749985201"/>
<node TEXT="( // Testing.&#xa;  x = Array.newClear(3);&#xa;  z = Array.newClear(3);&#xa;  z.put(0,2);&#xa;  z.put(1,x);&#xa;  z.postln&#xa;)" ID="ID_1163090712" CREATED="1361749939225" MODIFIED="1361749952477"/>
</node>
</node>
</node>
</node>
<node TEXT="shortcuts" ID="ID_1926898472" CREATED="1350876825408" MODIFIED="1350876826604">
<node TEXT="many" ID="ID_355604144" CREATED="1373768415338" MODIFIED="1373768421680">
<font BOLD="true"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Other%20Topics/Shortcuts.html" ID="ID_1694830321" CREATED="1351434948914" MODIFIED="1351434948914" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Other%20Topics/Shortcuts.html"/>
</node>
<node TEXT="bring post window to front" ID="ID_1542617786" CREATED="1350876862214" MODIFIED="1350876869393">
<node TEXT="cmd \" ID="ID_759686875" CREATED="1350876869624" MODIFIED="1350876881115"/>
</node>
<node TEXT="clear post window" ID="ID_1293789416" CREATED="1350876896342" MODIFIED="1350876899217">
<node TEXT="cmd shift k" ID="ID_891570212" CREATED="1350876900599" MODIFIED="1350876903530"/>
</node>
<node TEXT="new code window" ID="ID_1100875547" CREATED="1350877151647" MODIFIED="1350877156600">
<node TEXT="cmd n" ID="ID_1784254741" CREATED="1350877156840" MODIFIED="1350877160481"/>
</node>
<node TEXT="stop all sound" ID="ID_1219705378" CREATED="1350880213512" MODIFIED="1350880215602">
<node TEXT="cmd ." ID="ID_921366057" CREATED="1350880215806" MODIFIED="1350880218193"/>
</node>
</node>
<node TEXT="inspect" LOCALIZED_STYLE_REF="default" ID="ID_1621122584" CREATED="1373768796687" MODIFIED="1413777730488">
<node TEXT="was marked &quot;u, largely audio&quot;, in light blue" LOCALIZED_STYLE_REF="styles.topic" ID="ID_714526937" CREATED="1413777734053" MODIFIED="1413777744953"/>
<node TEXT="best extracted, twice" ID="ID_1167968883" CREATED="1361663159596" MODIFIED="1416779371207">
<node TEXT="each of these readings spanned roughly a day" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1465116211" CREATED="1361667819716" MODIFIED="1361667831492"/>
<node TEXT="from here" ID="ID_738077857" CREATED="1361663171348" MODIFIED="1361663178443"/>
<node TEXT="reading 2" ID="ID_1401664414" CREATED="1351404516252" MODIFIED="1361663036036">
<node TEXT="purposes" ID="ID_952177568" CREATED="1351404645737" MODIFIED="1351404723422">
<node TEXT="sinewave" ID="ID_166262493" CREATED="1351404575124" MODIFIED="1351404581676">
<node ID="ID_499734594" CREATED="1351404582061" MODIFIED="1351404582061"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    { <span class="s1">SinOsc</span>.ar(440, 0, 0.2) }.play;
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="control one wave with another" ID="ID_1171782136" CREATED="1351405913238" MODIFIED="1351405917674">
<node TEXT="( { var ampOsc;&#xa;&#xa;    ampOsc = SinOsc.kr(0.5, 1.5pi, 0.5, 0.5);&#xa;&#xa;    SinOsc.ar(440, 0, ampOsc);&#xa;&#xa;}.play; )" ID="ID_2219520" CREATED="1351405935766" MODIFIED="1351405962435"/>
</node>
<node TEXT="stereo" ID="ID_995105987" CREATED="1351406825063" MODIFIED="1351406827082">
<node TEXT="many other UGens do it, too" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_120177839" CREATED="1351406863006" MODIFIED="1351406880994"/>
<node TEXT="Pan2" ID="ID_615297714" CREATED="1351406838102" MODIFIED="1351406839394">
<node TEXT=".ar( signal, stereo position )" ID="ID_393669541" CREATED="1351406840590" MODIFIED="1351406850642"/>
<node TEXT="example" ID="ID_611080159" CREATED="1351406853207" MODIFIED="1351406854138">
<node TEXT="{ Pan2.ar(PinkNoise.ar(0.2), SinOsc.kr(0.5)) }.play;" ID="ID_970483714" CREATED="1351406827367" MODIFIED="1351406836850"/>
</node>
</node>
</node>
<node TEXT="many parallel signals" ID="ID_455951149" CREATED="1351407388539" MODIFIED="1351407391693">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Mix%20it%20Up.html" ID="ID_678520377" CREATED="1351407414717" MODIFIED="1351407414717" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Mix%20it%20Up.html"/>
<node TEXT="(&#xa;var n = 8;&#xa;{ Mix.fill(n, { SinOsc.ar(500 + 500.0.rand, 0, 1 / n) }) }.play;&#xa;)" ID="ID_1357497417" CREATED="1351407399034" MODIFIED="1351407399485"/>
<node TEXT="&quot;By simply changing the value of n, you can have vastly different numbers of SinOscs!&quot;" ID="ID_773743432" CREATED="1351407409765" MODIFIED="1351407411077"/>
<node TEXT="first arg is the number of times to evaluate second" ID="ID_1666068774" CREATED="1351407450425" MODIFIED="1351407459075"/>
</node>
<node TEXT="plotting graphs" ID="ID_1670542962" CREATED="1351407641010" MODIFIED="1351407652501">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Scoping%20and%20Plotting.html" ID="ID_627498468" CREATED="1351407655660" MODIFIED="1351407655660" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Scoping%20and%20Plotting.html"/>
<node ID="ID_1124492242" CREATED="1351407642794" MODIFIED="1351407642794"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p5">
      { <span class="s1">PinkNoise</span>.ar(0.2) + <span class="s1">SinOsc</span>.ar(440, 0, 0.2) + <span class="s1">Saw</span>.ar(660, 0.2) }.plot;
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT=".plot is a method callable on Functions" ID="ID_853889892" CREATED="1351407671985" MODIFIED="1351407680204"/>
</node>
</node>
<node TEXT="audio engine" ID="ID_649074200" CREATED="1351405700786" MODIFIED="1351405702877">
<node TEXT="audio vs. control rate" ID="ID_842310141" CREATED="1351405425257" MODIFIED="1351405428269">
<node TEXT=".ar" ID="ID_1701518361" CREATED="1351405014587" MODIFIED="1351405020230">
<node TEXT="&quot;audio rate&quot;" ID="ID_1853028093" CREATED="1351405466609" MODIFIED="1351405469140"/>
<node TEXT="works like &quot;.new&quot;" ID="ID_62086019" CREATED="1351405016394" MODIFIED="1351405397370"/>
<node TEXT="calculates each sample separately" ID="ID_749466843" CREATED="1351405435889" MODIFIED="1351405455285"/>
</node>
<node TEXT=".kr" ID="ID_1579667228" CREATED="1351405455936" MODIFIED="1351405456860">
<node TEXT="&quot;control rate&quot;" ID="ID_1712586411" CREATED="1351405459594" MODIFIED="1351405461844"/>
<node TEXT="calculates one value per &quot;block&quot; (which is a set of samples)" ID="ID_1391556757" CREATED="1351405470656" MODIFIED="1351405484812"/>
</node>
</node>
<node TEXT="mul &gt; 1 &lt;=&gt; clipping" ID="ID_895167140" CREATED="1351405704321" MODIFIED="1351405713645">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Functions%20and%20Sound.html" ID="ID_1268767952" CREATED="1351405718581" MODIFIED="1351405718581" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Functions%20and%20Sound.html"/>
<node TEXT="see &quot;This is a good default as anything bigger would cause clipping and distortion&quot;" ID="ID_1315762934" CREATED="1351405732458" MODIFIED="1351405734605"/>
</node>
<node TEXT="mixing" ID="ID_838788360" CREATED="1351406962680" MODIFIED="1351406999002">
<node TEXT="motivation unclear to me; skipping details" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1543878330" CREATED="1351407339140" MODIFIED="1351407348340"/>
<node TEXT="can use +" ID="ID_1451898911" CREATED="1351406999287" MODIFIED="1351407002025"/>
<node TEXT="can use class &quot;Mix&quot;" ID="ID_903882449" CREATED="1351407003916" MODIFIED="1351407014088">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Mix%20it%20Up.html" ID="ID_713931150" CREATED="1351407014608" MODIFIED="1351407014608" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Mix%20it%20Up.html"/>
<node TEXT="lowers the dimensions of collections of channels to fewer" ID="ID_527889493" CREATED="1351407199314" MODIFIED="1351407212520"/>
<node TEXT="shorthand" ID="ID_1342471347" CREATED="1351407234625" MODIFIED="1351407239213">
<node TEXT="Mix( ... ) is the same as Mix.new( ... )" ID="ID_843497297" CREATED="1351407239392" MODIFIED="1351407249995"/>
</node>
</node>
</node>
</node>
<node TEXT="meaning of brackets" ID="ID_1380345058" CREATED="1351406388346" MODIFIED="1351406391150">
<node TEXT="{}: function" ID="ID_429746557" CREATED="1351406391674" MODIFIED="1351406395077"/>
<node TEXT="[]: array" ID="ID_1075652699" CREATED="1351406395706" MODIFIED="1351406399077"/>
</node>
</node>
<node TEXT="reading 3" ID="ID_583306843" CREATED="1351434699431" MODIFIED="1361663036794">
<node TEXT="snooping around" ID="ID_69844370" CREATED="1351436317395" MODIFIED="1351436327238">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Other%20Topics/Internal-Snooping.html" ID="ID_1931967647" CREATED="1351436319381" MODIFIED="1351436319381" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Other%20Topics/Internal-Snooping.html"/>
<node TEXT="&quot;looking under the hood&quot;" ID="ID_1369259572" CREATED="1351436328066" MODIFIED="1351436332149"/>
</node>
<node TEXT="syntax equivalencies" ID="ID_148037238" CREATED="1351436704620" MODIFIED="1351436707855">
<node TEXT="example" ID="ID_1923561909" CREATED="1351436712811" MODIFIED="1351436713895">
<node TEXT="the calling class is implicitly a method&apos;s first argument" ID="ID_1124183905" CREATED="1351436637583" MODIFIED="1351436666569">
<node TEXT="e.g. these are the same" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_942574782" CREATED="1351436670374" MODIFIED="1351436677406"/>
<node ID="ID_1696238447" CREATED="1351436675428" MODIFIED="1351436675428"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p7">
      { <span class="s5">SinOsc</span>.ar(440, 0, 0.2) }.play;
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_816960334" CREATED="1351436675430" MODIFIED="1351436675430"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p7">
      play({ <span class="s5">SinOsc</span>.ar(440, 0, 0.2) });
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
<node TEXT="server abstractions" ID="ID_1549987529" CREATED="1351437099532" MODIFIED="1351437102528">
<node TEXT="where I first read about" ID="ID_1451907608" CREATED="1351437128868" MODIFIED="1351437143304">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/SynthDefs%20and%20Synths.html" ID="ID_1207475748" CREATED="1351437128293" MODIFIED="1351437128293" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/SynthDefs%20and%20Synths.html"/>
</node>
<node TEXT="def&apos;n" ID="ID_1086665177" CREATED="1351437121820" MODIFIED="1351437122570">
<node TEXT="client-side representations of server objects" ID="ID_958873009" CREATED="1351437104252" MODIFIED="1351437121535"/>
</node>
<node TEXT="Server does not speak SC." ID="ID_1947991608" CREATED="1351437201060" MODIFIED="1351437223407">
<node TEXT="doesn&apos;t understand functions, OOP, etc." ID="ID_689297455" CREATED="1351437209109" MODIFIED="1351437228111"/>
</node>
<node TEXT="members" ID="ID_742826541" CREATED="1351437168046" MODIFIED="1351437169602">
<node TEXT="SynthDef" ID="ID_206634854" CREATED="1351437170143" MODIFIED="1351437172026">
<node TEXT="UGen network data" ID="ID_656093938" CREATED="1351437249307" MODIFIED="1351437273944"/>
<node ID="ID_1234085210" CREATED="1351437270224" MODIFIED="1351437270224"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      sent to server as byte code
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="Function, SynthDef equivalence" ID="ID_377703051" CREATED="1351437443728" MODIFIED="1351437459172">
<node TEXT="these are equivalent" ID="ID_13462218" CREATED="1351437480088" MODIFIED="1351437484075">
<node TEXT="//first the Function&#xa;{ SinOsc.ar(440, 0, 0.2) }.play;" ID="ID_371085077" CREATED="1351437469529" MODIFIED="1351437477101"/>
<node TEXT="// now here&apos;s an equivalent SynthDef&#xa;SynthDef.new(&quot;tutorial-SinOsc&quot;, { Out.ar(0, SinOsc.ar(440, 0, 0.2)) }).play;" ID="ID_1046592341" CREATED="1351437477640" MODIFIED="1351437478179"/>
</node>
</node>
<node TEXT="arg&apos;s" ID="ID_1489581209" CREATED="1351437551971" MODIFIED="1351437553614">
<node TEXT="first: name (string)" ID="ID_1350973403" CREATED="1351437555786" MODIFIED="1351437570789"/>
<node TEXT="second: UGen Graph Function" ID="ID_1408992843" CREATED="1351437560370" MODIFIED="1351437568109">
<node ID="ID_1789913134" CREATED="1351437597194" MODIFIED="1351437606058"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <span class="s2">example: {Out</span>.ar(0, <span class="s2">SinOsc</span>.ar(440, 0, 0.2))}
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="using Out" ID="ID_107853227" CREATED="1351437736305" MODIFIED="1351437739044">
<node TEXT="plugging an Osc into an Out" ID="ID_1900250556" CREATED="1351437725505" MODIFIED="1351437733188">
<node TEXT="Out.ar(0, SinOsc.ar(440, 0, 0.2))" ID="ID_591013521" CREATED="1351437751224" MODIFIED="1351437752283"/>
<node TEXT="that, wrapped in brackets, is the sort of function SynthDefs take as second argument" ID="ID_1365051378" CREATED="1351437754297" MODIFIED="1351437773921"/>
</node>
<node TEXT="writes a signal, audio or control rate, to one of the server&apos;s &quot;busses&quot;" ID="ID_1802242377" CREATED="1351437784934" MODIFIED="1351437811499"/>
<node TEXT="arg&apos;s: Out( bus number, Ugen or array thereof )" ID="ID_726703219" CREATED="1351437826634" MODIFIED="1351437852213">
<node TEXT="if the second is an array, its elements are routed in order to bus N, N+1, N+2 .. where N is the first argument" ID="ID_217999372" CREATED="1351437999917" MODIFIED="1351438024543"/>
</node>
</node>
<node TEXT="methods" ID="ID_929174537" CREATED="1351438283451" MODIFIED="1351438285011">
<font BOLD="true"/>
<node TEXT=".free" ID="ID_560204233" CREATED="1351438203155" MODIFIED="1351438213080">
<node TEXT="called on an instance" ID="ID_1723070531" CREATED="1351438213829" MODIFIED="1351438219776"/>
<node TEXT="stops playing, frees memory" ID="ID_1107948995" CREATED="1351438219972" MODIFIED="1351438255887"/>
<node TEXT="more flexible than stopping all audio with Cmd-." ID="ID_448670489" CREATED="1351438256772" MODIFIED="1351438256998"/>
</node>
<node TEXT=".send" ID="ID_349631900" CREATED="1351438289778" MODIFIED="1351438290797">
<node TEXT="streams definition over network to server" ID="ID_1077940295" CREATED="1351438333582" MODIFIED="1351438340809"/>
</node>
<node TEXT=".load" ID="ID_1688323254" CREATED="1351438292345" MODIFIED="1351438293605">
<node TEXT="similar to send" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_33833535" CREATED="1351438342702" MODIFIED="1351438344919"/>
<node TEXT="writes synth def to disk, so server can load it" ID="ID_1086928025" CREATED="1351438304835" MODIFIED="1351438312959"/>
<node TEXT="file extension &quot;.scsyndef&quot;" ID="ID_345841957" CREATED="1351438314003" MODIFIED="1351438326985"/>
<node TEXT="written to &quot;synthdefs/&quot;, &quot;in the main SuperCollider directory&quot;" ID="ID_430429963" CREATED="1351438355766" MODIFIED="1351438376377"/>
<node TEXT="will load every time SC is run" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_1818856925" CREATED="1351438421086" MODIFIED="1351438427001">
<node TEXT="so restrict it to big things that I use a lot and would take a while to stream" ID="ID_242228049" CREATED="1351438407798" MODIFIED="1351438458850"/>
</node>
</node>
</node>
</node>
<node TEXT="Synth" ID="ID_898393419" CREATED="1351438501190" MODIFIED="1351438502954">
<node TEXT="to instantiate SynthDefs" ID="ID_196819557" CREATED="1351438503133" MODIFIED="1351438508504"/>
<node TEXT="example" ID="ID_1698815953" CREATED="1351438510782" MODIFIED="1351438511864">
<node TEXT="SynthDef.new(&quot;tutorial-PinkNoise&quot;, { Out.ar(0, PinkNoise.ar(0.3)) }).send(s);&#xa;x =Synth.new(&quot;tutorial-PinkNoise&quot;);&#xa;y =Synth.new(&quot;tutorial-PinkNoise&quot;);&#xa;x.free; y.free;" ID="ID_1591883920" CREATED="1351438516062" MODIFIED="1351438516409"/>
</node>
<node TEXT="relation to Functions" ID="ID_376909152" CREATED="1351438639682" MODIFIED="1351438646877">
<node TEXT="specifically, to repeatedly calling the same Function" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1752582654" CREATED="1351438647260" MODIFIED="1351438655923"/>
<node TEXT="efficient" ID="ID_1460093489" CREATED="1351438599603" MODIFIED="1351438660997">
<node TEXT="why" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_293530679" CREATED="1351438561772" MODIFIED="1351438563652"/>
<node TEXT="&quot;as it saves the effort of evaluating the Function, compiling the byte code, and sending it multiple times&quot;" ID="ID_311626975" CREATED="1351438555444" MODIFIED="1351438558935"/>
</node>
<node TEXT="inflexible" ID="ID_662011483" CREATED="1351438628499" MODIFIED="1351438663277">
<node TEXT="why" ID="ID_1220794013" CREATED="1351438675250" MODIFIED="1351438675949">
<node ID="ID_504040958" CREATED="1351438676247" MODIFIED="1351438676247"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    the UGen Graph Function in a SynthDef is evaluated <i>once and only once</i>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="example" ID="ID_488004500" CREATED="1351438713818" MODIFIED="1351438714813">
<node TEXT="if the UGen in its definition contains a random parameter, that parameter will be evaluated only when the definition is created, not on each instantiation" ID="ID_1067469419" CREATED="1351438715026" MODIFIED="1351438743453"/>
</node>
</node>
</node>
<node TEXT="adding variety" ID="ID_263715452" CREATED="1351438820304" MODIFIED="1351438836701">
<node TEXT="i.e. fighting the constraints that evaluation at definition imposes" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_898218877" CREATED="1351438836874" MODIFIED="1351438861109"/>
<node TEXT="use Rand or other evaluated-on-instantiation UGens" ID="ID_193883006" CREATED="1351438866081" MODIFIED="1351439041683">
<node TEXT="explication" ID="ID_973240410" CREATED="1351438923319" MODIFIED="1351438927731">
<node TEXT="rather than uncapitalized rand" ID="ID_1702688789" CREATED="1351438871928" MODIFIED="1351438878451"/>
<node TEXT="Rand is a UGen, evaluated on each instantiation" ID="ID_95593798" CREATED="1351438878658" MODIFIED="1351438909034"/>
</node>
<node TEXT="example" ID="ID_1982543558" CREATED="1351438918167" MODIFIED="1351438919290">
<node ID="ID_1918231898" CREATED="1351438919878" MODIFIED="1351438919878"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <span class="s2">SynthDef</span>(<span class="s3">&quot;tutorial-Rand&quot;</span>, { <span class="s2">Out</span>.ar(0, <span class="s2">SinOsc</span>.ar(<span class="s2">Rand</span>(440, 660), 0, 0.2)) }).send(s);
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="add arguments to the SynthDef&apos;s UGen Graph Function" ID="ID_1038248525" CREATED="1351439049360" MODIFIED="1351439067845">
<node TEXT="(&#xa;SynthDef(&quot;tutorial-args&quot;, { arg freq = 440, out = 0;&#xa;Out.ar(out, SinOsc.ar(freq, 0, 0.2));&#xa;}).send(s);&#xa;)&#xa;x =Synth(&quot;tutorial-args&quot;);// no args, so default values&#xa;y =Synth(&quot;tutorial-args&quot;, [&quot;freq&quot;, 660]);// change freq&#xa;z =Synth(&quot;tutorial-args&quot;, [&quot;freq&quot;, 880,&quot;out&quot;, 1]);// change freq and output channel&#xa;x.free; y.free; z.free;" ID="ID_131446604" CREATED="1351439118373" MODIFIED="1351439118825"/>
</node>
</node>
<node TEXT="modifying after instantiation" ID="ID_1413487856" CREATED="1351439207968" MODIFIED="1351439212156">
<node TEXT="source" ID="ID_996509781" CREATED="1351439224943" MODIFIED="1351439226388">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/SynthDefs%20and%20Synths.html" ID="ID_405558715" CREATED="1351439226721" MODIFIED="1351439226721" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/SynthDefs%20and%20Synths.html"/>
</node>
<node TEXT="code" ID="ID_1260859770" CREATED="1351439220345" MODIFIED="1351439220948">
<node TEXT="Server.default = Server.internal;&#xa;s = Server.default;&#xa;s.boot;&#xa;(&#xa;SynthDef.new(&quot;tutorial-args&quot;, { arg freq = 440, out = 0;&#xa;Out.ar(out, SinOsc.ar(freq, 0, 0.2));&#xa;}).send(s);&#xa;)&#xa;s.scope;// scope so you can see the effect&#xa;x =Synth.new(&quot;tutorial-args&quot;);&#xa;x.set(&quot;freq&quot;, 660);&#xa;x.set(&quot;freq&quot;, 880, &quot;out&quot;, 1);&#xa;x.free;" ID="ID_1064012177" CREATED="1351439217497" MODIFIED="1351439218108"/>
</node>
</node>
</node>
</node>
</node>
<node TEXT="pitfall: Strings vs. Symbols" ID="ID_1320140278" CREATED="1351439308060" MODIFIED="1351439317206">
<node TEXT="like Symbols are the same object; they pass the triple-equals test" ID="ID_380382830" CREATED="1351439325787" MODIFIED="1351439352549"/>
<node TEXT="like Strings pass the double-equals test but not necessarily the triple" ID="ID_1174190153" CREATED="1351439352794" MODIFIED="1351439366278"/>
</node>
</node>
<node TEXT="reading 4" ID="ID_889248969" CREATED="1352263849002" MODIFIED="1361663037524">
<node TEXT="busses" ID="ID_1265596101" CREATED="1352263849946" MODIFIED="1352263851085">
<node TEXT="audio and control rate varieties" ID="ID_1775388825" CREATED="1352263896736" MODIFIED="1352263910295"/>
<node TEXT="audio bus order on server" ID="ID_582335205" CREATED="1352263851546" MODIFIED="1352264045223">
<node TEXT="tag question" ID="ID_1892301588" CREATED="1352264020986" MODIFIED="1352264025975">
<node TEXT="apparently not an issue for other busses, just server audio busses" ID="ID_878809717" CREATED="1352264026155" MODIFIED="1352264038695"/>
</node>
<node TEXT="first is number 0" ID="ID_1218935894" CREATED="1352263875399" MODIFIED="1352263880220"/>
<node TEXT="outputs listed first, then inputs" ID="ID_1856506692" CREATED="1352263858616" MODIFIED="1352263887429"/>
</node>
<node TEXT="&apos;public&apos; ~ &apos;in/out of computer&apos;" ID="ID_938123824" CREATED="1352264134328" MODIFIED="1352264180579">
<node TEXT="and &apos;private&apos;~ &apos;computer-internal&apos;, e.g. between synths" ID="ID_687510103" CREATED="1352264139784" MODIFIED="1352264195215"/>
<node TEXT="all control busses are private" ID="ID_1388943649" CREATED="1352265190030" MODIFIED="1352265200025"/>
</node>
<node TEXT="setting the # of inputs/outputs" ID="ID_1846072725" CREATED="1352264247828" MODIFIED="1352264253646">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/ServerOptions.html" ID="ID_1436783242" CREATED="1352264241274" MODIFIED="1352264241274" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/ServerOptions.html"/>
<node TEXT="&quot;The number of control and audio busses available, as well as the number of input and output channels is set at the time the server app is booted.(See ServerOptions [the link above] for information on how to set the number of input and output channels, and busses.)&quot;" ID="ID_1318552376" CREATED="1352264269701" MODIFIED="1352264282209"/>
</node>
<node TEXT="write" ID="ID_1280726331" CREATED="1352264332786" MODIFIED="1352264339270">
<node TEXT="Out.ar(index, output)" ID="ID_424253256" CREATED="1352264341129" MODIFIED="1352264362463"/>
</node>
<node TEXT="read" ID="ID_720317807" CREATED="1352264344714" MODIFIED="1352264345326">
<node TEXT="In.ar(index, number of channels)" ID="ID_1423361656" CREATED="1352264345561" MODIFIED="1352264375914"/>
</node>
<node TEXT="downsampling only" ID="ID_1185873877" CREATED="1352264461695" MODIFIED="1352264521104">
<node TEXT="Out" ID="ID_1523427452" CREATED="1352264561939" MODIFIED="1352264564343">
<node TEXT="Out.kr() can accept an audio rate input" ID="ID_1017981219" CREATED="1352264465102" MODIFIED="1352264508961"/>
<node TEXT="Out.ar() cannot accept a control rate input" ID="ID_1208024673" CREATED="1352264473933" MODIFIED="1352264516598"/>
</node>
<node TEXT="audio rate UGens besides Out" ID="ID_517724488" CREATED="1352264566019" MODIFIED="1352264582435">
<node TEXT="can often accept both signals" ID="ID_1500871018" CREATED="1352264570898" MODIFIED="1352264576532"/>
</node>
</node>
<node TEXT="the client-side Bus object" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1708120025" CREATED="1352264797706" MODIFIED="1352265255962">
<node TEXT="motivation" ID="ID_301814351" CREATED="1352264915799" MODIFIED="1352264916899">
<node TEXT="hides indices from user" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_767760761" CREATED="1352265259780" MODIFIED="1352265271785"/>
<node TEXT="more convenient than handling In or Out UGens and indices directly" ID="ID_212547620" CREATED="1352264811986" MODIFIED="1352264832917"/>
<node TEXT="can &quot;encapsulate several adjacent sever-side busses into a single Bus object, allowing you to treat them as a group&quot;" ID="ID_1664130313" CREATED="1352265010460" MODIFIED="1352265012502"/>
</node>
<node TEXT="syntax" ID="ID_889624267" CREATED="1352264907000" MODIFIED="1352264907921">
<node TEXT="instantiation" ID="ID_1603810948" CREATED="1352265351673" MODIFIED="1352265355597">
<node TEXT="default # of channels = 1" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_1214877154" CREATED="1352264910023" MODIFIED="1352264913937"/>
<node TEXT="Bus.audio( Server object, @ of channels )" ID="ID_353260738" CREATED="1352264885032" MODIFIED="1352264897916"/>
<node TEXT="Bus.control( Server object, @ of channels )" ID="ID_558346846" CREATED="1352264885032" MODIFIED="1352264904138"/>
</node>
<node TEXT="reporting" ID="ID_55134692" CREATED="1352265346825" MODIFIED="1352266718799">
<node ID="ID_295871946" CREATED="1352265373813" MODIFIED="1352265379956"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p6">
      <span class="s2">b.index;</span>
    </p>
  </body>
</html>
</richcontent>
<node TEXT="I&apos;m not sure why you would want to do this." LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_299501205" CREATED="1352265357938" MODIFIED="1352265365795"/>
</node>
<node ID="ID_1097533870" CREATED="1352265373814" MODIFIED="1352265387975"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p6">
      <span class="s2">b.numChannels;</span>
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_49421519" CREATED="1352266720126" MODIFIED="1352266720126"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    b.get({ <span class="s3">arg</span> val; val.postln; f = val; });
  </body>
</html>
</richcontent>
<node TEXT="writes value to post window" ID="ID_895287245" CREATED="1352266737084" MODIFIED="1352266745449"/>
</node>
</node>
<node TEXT="retirement" ID="ID_706207603" CREATED="1352265447918" MODIFIED="1352265502097">
<node TEXT="b.free; // frees b&apos;s indices. You can&apos;t use this Bus object after that" ID="ID_770287466" CREATED="1352265456117" MODIFIED="1352265479046"/>
<node TEXT="does not remove the bus object" ID="ID_1593050483" CREATED="1352265503013" MODIFIED="1352265509736">
<node TEXT="tag question" ID="ID_1615699722" CREATED="1352265510956" MODIFIED="1352265513496"/>
<node TEXT="why?" ID="ID_3817489" CREATED="1352265513715" MODIFIED="1352265514493"/>
</node>
</node>
<node TEXT="assign level" ID="ID_1098778711" CREATED="1352266392072" MODIFIED="1352266407667">
<node TEXT="only possible for control-rate busses" ID="ID_736741152" CREATED="1352266407879" MODIFIED="1352266413148"/>
<node TEXT="bus.set( number )" ID="ID_1391305540" CREATED="1352266413576" MODIFIED="1352266420899"/>
</node>
<node TEXT=".get" ID="ID_1563296076" CREATED="1352267009870" MODIFIED="1352267010895">
<node TEXT="tag question" ID="ID_925245656" CREATED="1352267011302" MODIFIED="1352267013552"/>
</node>
</node>
<node TEXT="operation" ID="ID_1123391382" CREATED="1352266796283" MODIFIED="1352266798120">
<node TEXT="audio rate busses revert to zero when receiving no input" ID="ID_1577681512" CREATED="1352266798980" MODIFIED="1352266832111"/>
<node TEXT="control rate busses hold their last received value until something new is written" ID="ID_125506999" CREATED="1352266813732" MODIFIED="1352266825430"/>
</node>
<node TEXT="Bus-get" ID="ID_1402585682" CREATED="1352266900305" MODIFIED="1352266903419">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Busses.html" ID="ID_178563157" CREATED="1352266925500" MODIFIED="1352266925500" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Busses.html"/>
<node TEXT="tag question" ID="ID_1800990970" CREATED="1352266907127" MODIFIED="1352266908651"/>
<node TEXT="&quot;Bus-get takes a Function (called an action function) as an argument. This is because it takes a small amount of time for the server to get the reply and send it back. The function, which is passed the value (or Array of values in the case of a multichannel bus) as an argument, allows you to do something with the value once its come back.&quot;" ID="ID_1473108311" CREATED="1352266903655" MODIFIED="1352266906341"/>
</node>
</node>
</node>
<node TEXT="pitfalls" ID="ID_572502309" CREATED="1352267178455" MODIFIED="1352267180292">
<node TEXT="server execution order" ID="ID_1353927861" CREATED="1352267180881" MODIFIED="1352267186650">
<node TEXT="the problem" ID="ID_1674938628" CREATED="1352267262484" MODIFIED="1352267272857">
<node TEXT="&quot;as a general rule, when you are connecting synths together using busses it is important that synths which write signals to busses are earlier in the server&apos;s order than synths which read those signals from those busses.&quot;" ID="ID_593051145" CREATED="1352267187816" MODIFIED="1352267191166"/>
</node>
<node TEXT="coding for it" ID="ID_794018242" CREATED="1352267266750" MODIFIED="1352267268447">
<node TEXT="this makes y be evaluated after x" ID="ID_1934987468" CREATED="1352267275391" MODIFIED="1352267281888">
<node TEXT="x = Synth(&quot;default&quot;, [\freq, 300]);&#xa;// add a second synth immediately after x&#xa;y = Synth(&quot;default&quot;, [\freq, 450], x, \addAfter);&#xa;x.free; y.free;" ID="ID_1104826920" CREATED="1352267282870" MODIFIED="1352267288408"/>
</node>
<node TEXT="equivalent, simpler" ID="ID_348901713" CREATED="1352267337211" MODIFIED="1352267340453">
<node TEXT="equivalent to a subset of the previous, that is" ID="ID_106974497" CREATED="1352267355347" MODIFIED="1352267361398"/>
<node TEXT="// These two lines of code are equivalent&#xa;&#xa;y = Synth.new(&quot;default&quot;, [\freq, 450], x, \addAfter);&#xa;&#xa;y = Synth.after(x, &quot;default&quot;, [\freq, 450]);" ID="ID_1480325025" CREATED="1352267340971" MODIFIED="1352267341887"/>
</node>
</node>
</node>
</node>
<node TEXT="commands" ID="ID_1145611814" CREATED="1352265308569" MODIFIED="1352265309582">
<node TEXT="s.reboot" ID="ID_441944435" CREATED="1352265294988" MODIFIED="1352265297151">
<node TEXT="s.reboot; // this will restart the server app and thus reset the bus allocators" ID="ID_195224609" CREATED="1352265302034" MODIFIED="1352265302982"/>
</node>
<node TEXT="likely for synths" ID="ID_379898532" CREATED="1352265681326" MODIFIED="1352265684121">
<node TEXT="SynthDef" ID="ID_160092080" CREATED="1352265678344" MODIFIED="1352265680026"/>
<node TEXT="Out.ar" ID="ID_1994727647" CREATED="1352265692110" MODIFIED="1352265693426"/>
<node TEXT="SinOsc.ar" ID="ID_640646426" CREATED="1352265693959" MODIFIED="1352265698921"/>
<node TEXT=".send" ID="ID_1427531816" CREATED="1352265704197" MODIFIED="1352265713464">
<node TEXT="called on instances of SynthDef, among other things" ID="ID_1135503456" CREATED="1352265719181" MODIFIED="1352265728799"/>
</node>
<node TEXT="Synth.new" ID="ID_542340409" CREATED="1352265736686" MODIFIED="1352265738920"/>
<node TEXT="N.do( { ... } )" ID="ID_966573311" CREATED="1352265844697" MODIFIED="1352265871972">
<node TEXT="evaluates the function N times" ID="ID_1401380419" CREATED="1352265855890" MODIFIED="1352265875628"/>
<node TEXT="where N is an integer" ID="ID_160408881" CREATED="1352265875848" MODIFIED="1352265884057"/>
</node>
<node TEXT="Decay2.ar" ID="ID_745549202" CREATED="1352265960549" MODIFIED="1352265967786"/>
<node TEXT="Impulse.ar" ID="ID_59524727" CREATED="1352265968047" MODIFIED="1352265970377"/>
<node TEXT="PinkNoise.ar" ID="ID_1705497626" CREATED="1352265973750" MODIFIED="1352265976137"/>
<node TEXT="AllpassC.ar" ID="ID_1829004288" CREATED="1352265993917" MODIFIED="1352266003592"/>
<node TEXT="Rand" ID="ID_544676588" CREATED="1352266008620" MODIFIED="1352266009952"/>
<node TEXT=".dup" ID="ID_350422727" CREATED="1352266021828" MODIFIED="1352266023000">
<node TEXT="tag question" ID="ID_791109809" CREATED="1352266023428" MODIFIED="1352266025208"/>
<node TEXT="what is this?" ID="ID_1750365407" CREATED="1352266025429" MODIFIED="1352266028022"/>
</node>
<node TEXT="having a synth read from a bus" ID="ID_913308401" CREATED="1352266474367" MODIFIED="1352266520177">
<node TEXT="the &quot;map&quot; command at the end" ID="ID_97989559" CREATED="1352266601521" MODIFIED="1352266605758"/>
<node TEXT="(&#xa;  b = Bus.control(s, 1); b.set(880);&#xa;  c = Bus.control(s, 1); c.set(884);&#xa;  x = SynthDef(&quot;tutorial-map&quot;, { arg freq1 = 440, freq2 = 440;&#xa;    Out.ar(0, SinOsc.ar([freq1, freq2], 0, 0.1));&#xa;  }).play(s);&#xa;)&#xa;x.map(\freq1, b, \freq2, c);" ID="ID_1624300993" CREATED="1352266526444" MODIFIED="1352266599322"/>
</node>
<node TEXT="addAction: \addToHead" ID="ID_1903825021" CREATED="1352266688128" MODIFIED="1352266688585">
<node TEXT="tag question" ID="ID_1700007534" CREATED="1352266689664" MODIFIED="1352266692243"/>
</node>
</node>
</node>
<node TEXT="nodes and groups" ID="ID_535648404" CREATED="1352268225281" MODIFIED="1352268296103">
<node TEXT="def&apos;s" ID="ID_466494170" CREATED="1352268401225" MODIFIED="1352268402318">
<node TEXT="the server has two types of node: groups and synths" ID="ID_1626077509" CREATED="1352268298094" MODIFIED="1352268328422"/>
<node TEXT="groups are collections of nodes" ID="ID_964711260" CREATED="1352268283414" MODIFIED="1352268333544"/>
</node>
<node TEXT="ordering them" ID="ID_242920817" CREATED="1352268418498" MODIFIED="1352268419982">
<node TEXT="g = Group.new;&#xa;&#xa;h = Group.before(g);&#xa;&#xa;g.free; h.free;" ID="ID_353990726" CREATED="1352268420480" MODIFIED="1352268421302"/>
</node>
<node TEXT="&quot;add actions&quot;" ID="ID_327685466" CREATED="1352268785135" MODIFIED="1352268789730">
<node TEXT="list" ID="ID_216466366" CREATED="1352268888059" MODIFIED="1352268888727">
<node TEXT="\addBefore" ID="ID_1555302830" CREATED="1352268792727" MODIFIED="1352268794816"/>
<node TEXT="\addAfter" ID="ID_1022497935" CREATED="1352268795037" MODIFIED="1352268796889"/>
<node TEXT="\addReplace" ID="ID_213758927" CREATED="1352268798973" MODIFIED="1352268802658">
<node TEXT="rarely used" ID="ID_1384411152" CREATED="1352268802879" MODIFIED="1352268804273"/>
</node>
<node TEXT="\addToHead" ID="ID_252148557" CREATED="1352268805078" MODIFIED="1352268808449">
<node TEXT="adds to group, at most upstream position" ID="ID_397392208" CREATED="1352268811917" MODIFIED="1352268851865"/>
</node>
<node TEXT="\addToTail" ID="ID_975613730" CREATED="1352268853661" MODIFIED="1352268856390">
<node TEXT="adds to group, at most downstream position" ID="ID_1639803937" CREATED="1352268856612" MODIFIED="1352268868728"/>
</node>
</node>
<node TEXT="convenience methods" ID="ID_1203936180" CREATED="1352268890315" MODIFIED="1352268892661">
<node TEXT="these are equivalent" ID="ID_858843200" CREATED="1352268893219" MODIFIED="1352268896301">
<node ID="ID_1758801558" CREATED="1352268897006" MODIFIED="1352268897006"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p7">
      <span class="s2">h = </span><span class="s1">Group</span><span class="s2">.head(g);</span><span class="Apple-tab-span"> </span>// add h to the head of g
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_278512113" CREATED="1352268897008" MODIFIED="1352268897008"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p7">
      <span class="s2">x = </span><span class="s1">Synth</span><span class="s2">.tail(h, </span><span class="s3">\default</span><span class="s2">);</span><span class="Apple-tab-span"> </span>// add x to the tail of h
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="sim. for others" ID="ID_168314988" CREATED="1352268898947" MODIFIED="1352268900534"/>
</node>
</node>
<node ID="ID_299658658" CREATED="1352268919121" MODIFIED="1352268924487"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <span class="s2">s.queryAllNodes;</span>
  </body>
</html>
</richcontent>
<node ID="ID_1529653423" CREATED="1352268924854" MODIFIED="1352268924854"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    this will post a representation of the node hierarchy
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="root node and default group" ID="ID_162297917" CREATED="1352268993680" MODIFIED="1352268997619">
<node TEXT="def&apos;s" ID="ID_422306493" CREATED="1352269522407" MODIFIED="1352269525100">
<node TEXT="root node" ID="ID_22711916" CREATED="1352269015166" MODIFIED="1352269018730">
<node TEXT="ID = 0" ID="ID_697468066" CREATED="1352269018975" MODIFIED="1352269020507"/>
</node>
<node TEXT="default group" ID="ID_1839957969" CREATED="1352269031942" MODIFIED="1352269033555">
<node TEXT="ID = 1" ID="ID_1719059931" CREATED="1352269033758" MODIFIED="1352269034995"/>
<node TEXT="the default target for all Nodes" ID="ID_721020936" CREATED="1352269051638" MODIFIED="1352269057075"/>
<node TEXT="what you will get if you supply a Server as a target" ID="ID_1656722995" CREATED="1352269057359" MODIFIED="1352269057762"/>
</node>
</node>
<node TEXT="use the default group" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_862645581" CREATED="1352269509250" MODIFIED="1352269528104">
<node TEXT="&quot;In general you should add nodes to the default group, or groups contained within it, and not before or after it.&quot;" ID="ID_622957562" CREATED="1352269517656" MODIFIED="1352269520926"/>
<node TEXT="example" ID="ID_712015968" CREATED="1352269538511" MODIFIED="1352269540203">
<node TEXT="&quot;When adding an &apos;effects&apos; synth, for instance, one should resist the temptation to add it after the default group, and instead create a separate source group within the default group. &quot;" ID="ID_1862800658" CREATED="1352269540608" MODIFIED="1352269542305"/>
</node>
</node>
</node>
<node TEXT="classes" ID="ID_284789374" CREATED="1352269757065" MODIFIED="1352269758291">
<node TEXT="Synth and Group inherit from Node" ID="ID_345430895" CREATED="1352269759418" MODIFIED="1352269768227"/>
<node TEXT="some of their functions are only documented there" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_230879605" CREATED="1352269769038" MODIFIED="1352269776259"/>
</node>
</node>
<node TEXT="Environment" ID="ID_123167899" CREATED="1352268673355" MODIFIED="1352268675637">
<node TEXT="variable names, other stuff" ID="ID_775528745" CREATED="1352268709631" MODIFIED="1352268718149"/>
<node TEXT="// to be sure, create a new Environment:&#xa;Environment.new.push;&#xa;// some code..&#xa;// restore old environment&#xa;currentEnvironment.pop;" ID="ID_635356160" CREATED="1352268694026" MODIFIED="1352268704288"/>
</node>
</node>
<node TEXT="reading 5" ID="ID_927469131" CREATED="1356461260117" MODIFIED="1361663038210">
<node TEXT="buffer" ID="ID_1764593236" CREATED="1356461260982" MODIFIED="1356461271641">
<node TEXT="is" LOCALIZED_STYLE_REF="styles.topic" ID="ID_827540806" CREATED="1356461265949" MODIFIED="1356461348528">
<node TEXT="an ordered array of floats on the server" ID="ID_748698547" CREATED="1356461267923" MODIFIED="1356461317329"/>
<node TEXT="the usual way of storing data on the server" ID="ID_588162506" CREATED="1356461317541" MODIFIED="1356461322793"/>
</node>
<node TEXT="setup" ID="ID_1315414790" CREATED="1356461393941" MODIFIED="1356461394897">
<node TEXT="choices" ID="ID_133062934" CREATED="1356461508188" MODIFIED="1356461509505">
<node TEXT="number of buffers" ID="ID_1953883930" CREATED="1356461396373" MODIFIED="1356461529953"/>
<node TEXT="single, multichannel" ID="ID_1216600365" CREATED="1356461332315" MODIFIED="1356461527600"/>
<node TEXT="memory allocation" ID="ID_1802180062" CREATED="1356461407003" MODIFIED="1356461533840"/>
</node>
<node TEXT="syntax" ID="ID_1129772294" CREATED="1356461511508" MODIFIED="1356461514288">
<node TEXT="create a blank, counting floats" ID="ID_1952504418" CREATED="1356461606582" MODIFIED="1356461882081">
<node TEXT="this" ID="ID_411323661" CREATED="1356461547744" MODIFIED="1356461548596">
<node TEXT="s.boot;&#xa;b = Buffer.alloc(s, 100, 2); // allocate 2 channels, and 100 frames&#xa;b.free; // free the memory (when you&apos;re finished using it)" ID="ID_1858128326" CREATED="1356461515117" MODIFIED="1356461520214"/>
</node>
<node TEXT="does this" ID="ID_935686577" CREATED="1356461549799" MODIFIED="1356461550716">
<node TEXT="allocates a 2 channel buffer with 100 frames" ID="ID_344571966" CREATED="1356461563231" MODIFIED="1356461570755"/>
<node TEXT="&apos;=&gt; each frame is a pair of floats" ID="ID_1937455388" CREATED="1356461581869" MODIFIED="1356461591439"/>
</node>
</node>
<node TEXT="create a blank, counting seconds" ID="ID_1278935175" CREATED="1356461610031" MODIFIED="1356461884313">
<node TEXT="b = Buffer.alloc(s, s.sampleRate * 8.0, 2); // an 8 second stereo buffer&#xa;b.free;" ID="ID_574078451" CREATED="1356461611980" MODIFIED="1356461616021"/>
</node>
<node TEXT="create one holding a wave file" ID="ID_1355977136" CREATED="1356461868614" MODIFIED="1356461890170">
<node TEXT="// read a soundfile" ID="ID_1862738130" CREATED="1356461953763" MODIFIED="1356461953763">
<node TEXT="b = Buffer.read(s, &quot;sounds/a11wlk01.wav&quot;);" ID="ID_1548034340" CREATED="1356461953763" MODIFIED="1356461953763"/>
</node>
<node TEXT="// now play it" ID="ID_171828057" CREATED="1356461953763" MODIFIED="1356461953763">
<node TEXT="(" ID="ID_232725160" CREATED="1356461953764" MODIFIED="1356461953764"/>
<node TEXT="x = SynthDef(&quot;tutorial-PlayBuf&quot;,{ arg out = 0, bufnum;" ID="ID_333837254" CREATED="1356461953764" MODIFIED="1356461953764"/>
<node TEXT="Out.ar( out," ID="ID_1664264528" CREATED="1356461953764" MODIFIED="1356461953764"/>
<node TEXT="PlayBuf.ar(1, bufnum, BufRateScale.kr(bufnum))" ID="ID_1500937107" CREATED="1356461953764" MODIFIED="1356461953764"/>
<node TEXT=")" ID="ID_1693659588" CREATED="1356461953764" MODIFIED="1356461953764"/>
<node TEXT="}).play(s,[\bufnum, b]);" ID="ID_709958336" CREATED="1356461953764" MODIFIED="1356461953764"/>
<node TEXT=")" ID="ID_175323245" CREATED="1356461953764" MODIFIED="1356461953764"/>
<node TEXT="x.free; b.free;" ID="ID_1193473596" CREATED="1356461953764" MODIFIED="1356461953764"/>
</node>
</node>
</node>
</node>
<node TEXT="retirement" ID="ID_1096575458" CREATED="1356461631969" MODIFIED="1356461644522">
<node TEXT="use &quot;free&quot;" ID="ID_1979972999" CREATED="1356461654846" MODIFIED="1356461657082"/>
<node TEXT="don&apos;t use that buffer again" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1935633823" CREATED="1356461668645" MODIFIED="1356461689399"/>
<node TEXT="its number is made available for reallocation" ID="ID_1528082251" CREATED="1356461659910" MODIFIED="1356461686689"/>
</node>
<node TEXT="access" ID="ID_1475414180" CREATED="1356461434318" MODIFIED="1356461435275">
<node TEXT="can be accessed by any synths, any time, concurrently" ID="ID_34970931" CREATED="1356461435477" MODIFIED="1356461468118"/>
</node>
<node TEXT="queries" ID="ID_1320903796" CREATED="1356462395285" MODIFIED="1356462396626">
<node TEXT="b.bufnum;&#xa;b.numFrames;&#xa;b.numChannels;&#xa;b.sampleRate;" ID="ID_952682411" CREATED="1356462396988" MODIFIED="1356462421867"/>
</node>
<node TEXT="read, write" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_471764449" CREATED="1356463006875" MODIFIED="1356463202629">
<node TEXT="syntax" ID="ID_119255325" CREATED="1356463024969" MODIFIED="1356463026358">
<node TEXT="a single value" ID="ID_128265378" CREATED="1356463143849" MODIFIED="1356463161716">
<node ID="ID_844507980" CREATED="1356463016975" MODIFIED="1356463016975"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      b.set(7, 0.5); // set the value at 7 to 0.5
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1435198161" CREATED="1356463016977" MODIFIED="1356463016977"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      b.get(7, {|msg| msg.postln}); // get the value at 7 and post it when the reply is received
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="consecutive set of values" ID="ID_958276799" CREATED="1356463151337" MODIFIED="1356463158876">
<node TEXT="getn, setn" ID="ID_1416390204" CREATED="1356463163305" MODIFIED="1356463165716"/>
</node>
<node TEXT="traffic limit" ID="ID_1660743394" CREATED="1356463203659" MODIFIED="1356463207694">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Buffers.html" ID="ID_677349486" CREATED="1356463249269" MODIFIED="1356463249269" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Buffers.html"/>
<node TEXT="no more than 1633 values can be get or set at a time" ID="ID_288431214" CREATED="1356463207947" MODIFIED="1356463230358">
<node ID="ID_155369849" CREATED="1356463230677" MODIFIED="1356463230677"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      if using UDP (the default)
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="use &apos;loadCollection&apos; and &apos;loadToFloatArray&apos; to get around that" ID="ID_1797900381" CREATED="1356463237138" MODIFIED="1356463243661"/>
</node>
</node>
<node TEXT="format" ID="ID_833754066" CREATED="1356463032538" MODIFIED="1356463033788">
<node TEXT="N-channel buffers are still 1-dimensional arrays; the first N indices correspond to the values of channels 1-N in frame 1, etc." ID="ID_748726446" CREATED="1356463033993" MODIFIED="1356463104522"/>
</node>
</node>
<node TEXT="b.plot" ID="ID_988768551" CREATED="1356463277195" MODIFIED="1356463280502">
<node TEXT="displays a graph, I&apos;m guessing" ID="ID_27213517" CREATED="1356463280682" MODIFIED="1356463292029"/>
</node>
<node TEXT="b.play" ID="ID_1381119103" CREATED="1356463305850" MODIFIED="1356463307253">
<node TEXT="b.play; // frees itself&#xa;x = b.play(true); // loops so doesn&apos;t free" ID="ID_1599078888" CREATED="1356463307618" MODIFIED="1356463310735"/>
</node>
<node TEXT="avoid using bufnum" ID="ID_14706493" CREATED="1356462238573" MODIFIED="1356462251876">
<node TEXT="&quot;Buffers are numbered, starting from zero. You can get a Buffer&apos;s number using its bufnum method, but you will not normally need to do this, since Buffer objects can be passed directly as UGen inputs or Synth args.&quot;" ID="ID_345148547" CREATED="1356462252350" MODIFIED="1356462258159"/>
</node>
<node TEXT="latency and action functions" ID="ID_1452797254" CREATED="1356462607351" MODIFIED="1356462611738">
<node TEXT="an action function can be (see example in &quot;ref&quot; below) something to do once the server has responded, updating variables. useful because there is latency, so if the action was immediate instead of waiting for a trigger event, it might act on obsolete information." ID="ID_259682652" CREATED="1356462668525" MODIFIED="1356462727201"/>
<node TEXT="ref" ID="ID_1722975071" CREATED="1356462629525" MODIFIED="1356462632832">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Buffers.html" ID="ID_1325172461" CREATED="1356462631033" MODIFIED="1356462631033" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Buffers.html"/>
<node TEXT="see this paragraph" ID="ID_996056697" CREATED="1356462611951" MODIFIED="1356462614267">
<node ID="ID_646658111" CREATED="1356462614593" MODIFIED="1356462614593"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    Now (like with the example using an action function in our Bus-get example; see <b>[Busses]</b>) because of the small messaging latency between client and server, instance variables will not be immediately updated when you do something like read a file into a buffer. For this reason, many methods in Buffer take action functions as arguments. Remember that an action function is just a Function that will be evaluated after the client has received a reply, and has updated the Buffer's vars. It is passed the Buffer object as an argument.
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="and the next paragraph, and the body of code in the middle" ID="ID_1706005095" CREATED="1356462615207" MODIFIED="1356462625235"/>
</node>
</node>
<node TEXT="record into buffers" ID="ID_1845944560" CREATED="1356462816801" MODIFIED="1356462819092">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Buffers.html" ID="ID_846918379" CREATED="1356462819468" MODIFIED="1356462819468" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Buffers.html"/>
<node TEXT="search for word &quot;RecordBuf&quot;" ID="ID_1270110315" CREATED="1356462828256" MODIFIED="1356462834416"/>
</node>
<node TEXT="pitfalls" ID="ID_245650842" CREATED="1356462147949" MODIFIED="1356462149162">
<node TEXT="cannot make number of buffers an argument in a SynthDef and change it later" ID="ID_950443024" CREATED="1356462149340" MODIFIED="1356462165401">
<node TEXT="If you need versions that can play varying numbers of channels then make multiple SynthDefs or use Function-play." ID="ID_1509635532" CREATED="1356462183235" MODIFIED="1356462184006"/>
</node>
</node>
</node>
<node TEXT="scheduling events" ID="ID_1661343932" CREATED="1356463703743" MODIFIED="1356463711505">
<node TEXT="ref" ID="ID_676386587" CREATED="1356463730992" MODIFIED="1356463731529">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Scheduling%20Events.html" ID="ID_828486277" CREATED="1356463714614" MODIFIED="1356463714614" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Scheduling%20Events.html"/>
</node>
<node TEXT="is for &quot;asynchronous actions&quot;" ID="ID_71562258" CREATED="1356463825915" MODIFIED="1356463847709">
<node TEXT="ones that happen substantially after execution of the function that calls them" ID="ID_41678437" CREATED="1356463847906" MODIFIED="1356463869781"/>
</node>
<node TEXT="major clocks" ID="ID_1665560376" CREATED="1356463733038" MODIFIED="1356463740667">
<node TEXT="TempoClock" ID="ID_1363816436" CREATED="1356463740847" MODIFIED="1356463745640">
<node TEXT="tempo-aware" ID="ID_864470297" CREATED="1356463753686" MODIFIED="1356463755672"/>
</node>
<node TEXT="SystemClock" ID="ID_970006023" CREATED="1356463745854" MODIFIED="1356463750072">
<node TEXT="seconds" ID="ID_103130924" CREATED="1356463751655" MODIFIED="1356463752763"/>
</node>
</node>
<node TEXT="parallel clocks" ID="ID_322685958" CREATED="1356463961285" MODIFIED="1356463963553">
<node TEXT="Note that we have moved to TempoClock, since this is the most commonly used. While there is only one SystemClock, there can be many TempoClocks all running at different speeds, if need be." ID="ID_326885219" CREATED="1356463970446" MODIFIED="1356463972401"/>
<node TEXT="one is the default, accessed with TempoClock.default" ID="ID_359484403" CREATED="1356463982625" MODIFIED="1356463990268"/>
</node>
<node TEXT="the clock relevant to a process" ID="ID_1712845940" CREATED="1356464036522" MODIFIED="1356464047897">
<node TEXT="use &quot;thisThread.clock&quot;" ID="ID_1822107263" CREATED="1356464055766" MODIFIED="1356464060721"/>
<node TEXT="why" ID="ID_264038626" CREATED="1356464061598" MODIFIED="1356464062736">
<node TEXT="Inside a scheduled function, you might want to know which clock is running the function." ID="ID_1680119268" CREATED="1356464049814" MODIFIED="1356464055395"/>
</node>
</node>
<node TEXT="c.beats" ID="ID_695409155" CREATED="1356464075677" MODIFIED="1356464077394">
<node TEXT="queries a clock for the time" ID="ID_1128301457" CREATED="1356464081557" MODIFIED="1356464094686"/>
</node>
<node TEXT="relative scheduling" ID="ID_308970445" CREATED="1356463926101" MODIFIED="1356463928390">
<node TEXT="schedule something for 5 seconds from execution" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_796977485" CREATED="1356463776152" MODIFIED="1356463944421"/>
<node TEXT="SystemClock.sched(5, { &quot;hello&quot;.postln });" ID="ID_1513498975" CREATED="1356463790247" MODIFIED="1356463790980"/>
</node>
<node TEXT="absolute scheduling" ID="ID_34814336" CREATED="1356463930845" MODIFIED="1356463933519">
<node TEXT="(&#xa;vartimeNow = TempoClock.default.beats;&#xa;&quot;Time is now: &quot;.post; timeNow.postln;&#xa;&quot;Scheduling for: &quot;.post; (timeNow + 5).postln;&#xa;TempoClock.default.schedAbs(timeNow + 5,&#xa;{ &quot;Time is later: &quot;.post; thisThread.clock.beats.postln; nil });&#xa;)" ID="ID_1145133767" CREATED="1356463939348" MODIFIED="1356463939745"/>
</node>
<node TEXT="schedule verbs, not nouns" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1799739961" CREATED="1356464120949" MODIFIED="1356464125319">
<node TEXT="Suppose we schedule &quot;hello&quot; by itself.   TempoClock.default.sched(5, &quot;hello&quot;);   Nothing happens. That&apos;s because &quot;hello&quot; is just a value -- it doesn&apos;t do anything. The lesson is that it makes sense to schedule objects that will take some action." ID="ID_130168176" CREATED="1356464141309" MODIFIED="1356464141566"/>
</node>
<node TEXT="pitfall" ID="ID_358379625" CREATED="1356464180415" MODIFIED="1356464181624">
<node TEXT="surprise infinite loop" ID="ID_706323594" CREATED="1356464199102" MODIFIED="1356464208739">
<node TEXT="the feature/problem" ID="ID_773959161" CREATED="1356464210448" MODIFIED="1356464214091">
<node ID="ID_148020433" CREATED="1356464182433" MODIFIED="1356464182433"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3">
      If you schedule function that returns a number, the clock will treat that number as the amount of time before running the function again.
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="example" ID="ID_684627559" CREATED="1356464217409" MODIFIED="1356464218572">
<node ID="ID_313891224" CREATED="1356464218968" MODIFIED="1356464218968"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p6">
      // fires many times (but looks like it should fire just once)
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_211758388" CREATED="1356464218969" MODIFIED="1356464218969"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p5">
      <span class="s2">TempoClock</span>.default.sched(1, { rrand(1, 3).postln; });
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_80779791" CREATED="1356464218972" MODIFIED="1356464218972"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3">
      This will keep going forever, until you stop it with cmd-.
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="severe example" ID="ID_452569578" CREATED="1356464251182" MODIFIED="1356464264241">
<node ID="ID_1815794166" CREATED="1356464258162" MODIFIED="1356464258162"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3">
      If that number happens to be 0, or negative, something worse happens. The function will run again immediately. And, if the number is always 0, it creates an infinite loop that can lock up SuperCollider.
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="a solution" ID="ID_1692563593" CREATED="1356464225433" MODIFIED="1356464230427">
<node ID="ID_1803688079" CREATED="1356464218975" MODIFIED="1356464218975"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3">
      If you want the function to run only once, make sure to end the function with 'nil':
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_813175390" CREATED="1356464218977" MODIFIED="1356464218977"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p6">
      // fires once
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1943449261" CREATED="1356464218979" MODIFIED="1356464218979"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p5">
      <span class="s2">TempoClock</span>.default.sched(1, { rrand(1, 3).postln; <span class="s2">nil</span> });
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
</node>
<node TEXT="routines and tasks" ID="ID_1105654337" CREATED="1356547808108" MODIFIED="1356547810936">
<node TEXT="ref" ID="ID_949679933" CREATED="1356548167122" MODIFIED="1356548168005">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Sequencing%20with%20Routines%20and%20Tasks.html" ID="ID_1243078195" CREATED="1356548165944" MODIFIED="1356548165944" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Sequencing%20with%20Routines%20and%20Tasks.html"/>
</node>
<node TEXT="functions execute completely or not at all; these don&apos;t" ID="ID_1368380715" CREATED="1356547817044" MODIFIED="1356548883648"/>
<node TEXT="routine" ID="ID_699384949" CREATED="1356547813628" MODIFIED="1356547815583">
<node TEXT="purpose" ID="ID_976558778" CREATED="1356548827863" MODIFIED="1356548839529">
<node TEXT="&quot;can run part of the way through, return a value, and then pick up where it left off the next time it&apos;s needed.&quot;" ID="ID_1677993022" CREATED="1356547839603" MODIFIED="1356547851151"/>
</node>
<node TEXT="create routine" ID="ID_833622899" CREATED="1356548087834" MODIFIED="1356548095100">
<node TEXT=" r = Routine({&#xa;  &quot;abcde&quot;.yield;&#xa;  &quot;fghij&quot;.yield;&#xa;  &quot;klmno&quot;.yield;&#xa;  &quot;pqrst&quot;.yield;&#xa;  &quot;uvwxy&quot;.yield;&#xa;  &quot;z{|}~&quot;.yield;&#xa;});" ID="ID_1205578686" CREATED="1356548074612" MODIFIED="1356548075185"/>
</node>
<node TEXT="read from routine" ID="ID_1943765920" CREATED="1356548142323" MODIFIED="1356548147069">
<node ID="ID_1405417339" CREATED="1356548147424" MODIFIED="1356548147424"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <span charset="utf-8" style="line-height: normal; letter-spacing: normal; text-align: start; font-weight: normal; display: inline !important; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 9px; float: none; color: rgb(0, 0, 0); font-family: Monaco; text-transform: none"><font size="9px" color="rgb(0, 0, 0)" face="Monaco">r.next</font></span>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="schedule the routine" ID="ID_839682236" CREATED="1356548346397" MODIFIED="1356548348553">
<node ID="ID_849703808" CREATED="1356548401951" MODIFIED="1356548401951"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      TempoClock.default.sched(0, r);
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="example of use" ID="ID_890058541" CREATED="1356548407332" MODIFIED="1356548409446">
<node TEXT="r = Routine({&#xa;  var delta;&#xa;  loop {&#xa;    delta = rrand(1, 3) * 0.5;&#xa;    &quot;Will wait &quot;.post; delta.postln;&#xa;    delta.yield;&#xa;  }&#xa;});&#xa;r.next;&#xa;TempoClock.default.sched(0, r);&#xa;r.stop;" ID="ID_1153094056" CREATED="1356548349996" MODIFIED="1356548388549"/>
</node>
</node>
<node TEXT="playing a routine" ID="ID_700472433" CREATED="1356548618871" MODIFIED="1356548621178">
<node TEXT="(&#xa;  SynthDef(\singrain, { |freq = 440, amp = 0.2, sustain = 1|&#xa;    var sig;&#xa;    sig = SinOsc.ar(freq, 0, amp) * EnvGen.kr(Env.perc(0.01, sustain), doneAction: 2);&#xa;    Out.ar(0, sig ! 2); // sig ! 2 is the same as [sig, sig]&#xa;  }).send(s);&#xa; &#xa;  r = Routine({&#xa;    var delta;&#xa;    loop {&#xa;      delta = rrand(1, 3) * 0.5;&#xa;      Synth(\singrain, [freq: exprand(200, 800), amp: rrand(0.1, 0.5), sustain: delta * 0.8]);&#xa;      delta.yield;&#xa;    }&#xa;  });&#xa;)&#xa;r.play;&#xa;r.stop;" ID="ID_1346990709" CREATED="1356548633734" MODIFIED="1356548634556"/>
</node>
</node>
<node TEXT="task" ID="ID_676178996" CREATED="1356548764464" MODIFIED="1356548765163">
<node TEXT="how it differs from a routine" ID="ID_652764889" CREATED="1356548842453" MODIFIED="1356548849433">
<node TEXT="I don&apos;t understand this." LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_968172501" CREATED="1356548851621" MODIFIED="1356548855286"/>
<node TEXT="&quot;Once you stop a routine, you can only start it over again from the beginning. There is no way to replay the routine from the point where it was stopped.&#xa;&#xa;Task is a variation that can be paused and resumed at will.&quot;" ID="ID_195079256" CREATED="1356548765688" MODIFIED="1356548804384"/>
</node>
<node TEXT="example" ID="ID_650377055" CREATED="1356548933379" MODIFIED="1356548934302">
<node TEXT="(&#xa;t = Task({&#xa;  loop {&#xa;    [60, 62, 64, 65, 67, 69, 71, 72].do({ |midi|&#xa;      Synth(\singrain, [freq: midi.midicps, amp: 0.2, sustain: 0.1]);&#xa;      0.125.wait;&#xa;    });&#xa;  }&#xa;}).play;&#xa;)&#xa;t.stop; // probably stops in the middle of the scale&#xa;t.play; // should pick up with the next note&#xa;t.stop;" ID="ID_13359654" CREATED="1356548934611" MODIFIED="1356548935383"/>
</node>
</node>
<node TEXT="use with clocks" ID="ID_249062062" CREATED="1356549243978" MODIFIED="1356549246405">
<node TEXT="function calls" ID="ID_1263281145" CREATED="1356549287411" MODIFIED="1356549298124">
<node TEXT="aRoutine.play(clock, quant)" ID="ID_1175507371" CREATED="1356549287411" MODIFIED="1356549287411"/>
<node TEXT="aTask.play(argClock, doReset, quant)" ID="ID_1954746606" CREATED="1356549287411" MODIFIED="1356549287411"/>
</node>
<node TEXT="arg&apos;s to same" ID="ID_671172830" CREATED="1356549287411" MODIFIED="1356549302015">
<node TEXT="clock (Routine) or argClock (Task): Which clock should handle scheduling for this sequence" ID="ID_374545502" CREATED="1356549287412" MODIFIED="1356549287412"/>
<node TEXT="doReset (Task only): If true, reset the sequence to the beginning before playing; if false (default), resume" ID="ID_749381293" CREATED="1356549287412" MODIFIED="1356549287412"/>
<node TEXT="quant: A specification of the exact starting time" ID="ID_628341585" CREATED="1356549287412" MODIFIED="1356549287412"/>
</node>
</node>
<node TEXT="routines for data, tasks for pacing?" ID="ID_1433891500" CREATED="1356550245064" MODIFIED="1356550258011">
<node TEXT="code" ID="ID_240616011" CREATED="1356550268504" MODIFIED="1356550269115">
<node TEXT="(&#xa;var midi, dur;&#xa;midi = Routine({&#xa;  [60, 72, 71, 67, 69, 71, 72, 60, 69, 67].do({ |midi| midi.yield });&#xa;});&#xa;dur = Routine({&#xa;  [2, 2, 1, 0.5, 0.5, 1, 1, 2, 2, 3].do({ |dur| dur.yield });&#xa;});&#xa;&#xa;SynthDef(\smooth, { |freq = 440, sustain = 1, amp = 0.5|&#xa;  var sig;&#xa;  sig = SinOsc.ar(freq, 0, amp) * EnvGen.kr(Env.linen(0.05, sustain, 0.1), doneAction: 2);&#xa;  Out.ar(0, sig ! 2)&#xa;}).send(s);&#xa;&#xa;r = Task({&#xa;  var delta;&#xa;  while {&#xa;    delta = dur.next;&#xa;    delta.notNil&#xa;  } {&#xa;    Synth(\smooth, [freq: midi.next.midicps, sustain: delta]);&#xa;    delta.yield;&#xa;  }&#xa;}).play(quant: TempoClock.default.beats + 1.0);&#xa;)" ID="ID_16323338" CREATED="1356550258304" MODIFIED="1356550266622"/>
</node>
<node TEXT="what it does" ID="ID_455449329" CREATED="1356550297445" MODIFIED="1356550298984">
<node TEXT="Note that routines are used for the data, but task is used for play. Also, unlike the previous infinite sequences, this one stops when it runs out of data. That&apos;s the purpose of the while loop" ID="ID_644924661" CREATED="1356550300229" MODIFIED="1356550300592"/>
</node>
</node>
</node>
<node TEXT="quant, phase notation" ID="ID_1656221654" CREATED="1356549421128" MODIFIED="1356549455785">
<node TEXT="quant" ID="ID_100385434" CREATED="1356549446058" MODIFIED="1356549446058">
<node TEXT="Corresponds roughly to bar length; the current time is rounded up to the next multiple of this number" ID="ID_1569776019" CREATED="1356549446058" MODIFIED="1356549446058"/>
</node>
<node TEXT="phase" ID="ID_1185139459" CREATED="1356549446058" MODIFIED="1356549446058">
<node TEXT="Position within the bar (0 = beginning of the bar)" ID="ID_181277426" CREATED="1356549446059" MODIFIED="1356549446059"/>
<node TEXT="if absent, defaults to 0" ID="ID_1386482060" CREATED="1356549475357" MODIFIED="1356549480280"/>
</node>
</node>
<node TEXT="handling latency" ID="ID_1810265492" CREATED="1356550796192" MODIFIED="1356550809092">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Sequencing%20with%20Routines%20and%20Tasks.html" ID="ID_1938428466" CREATED="1356550824591" MODIFIED="1356550824591" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Sequencing%20with%20Routines%20and%20Tasks.html"/>
<node TEXT="use &quot;makeBundle&quot;" ID="ID_1569160744" CREATED="1356550811305" MODIFIED="1356550813164"/>
<node TEXT="more info" ID="ID_1400529395" CREATED="1356550758706" MODIFIED="1356550874106">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/ServerTiming.html" ID="ID_1704554550" CREATED="1356550762421" MODIFIED="1356550762421" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/ServerTiming.html"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/bundledCommands.html" ID="ID_1554790039" CREATED="1356550863387" MODIFIED="1356550863387" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/bundledCommands.html"/>
</node>
</node>
<node TEXT="patterns" ID="ID_594805314" CREATED="1356571969850" MODIFIED="1356571971838">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Sequencing%20with%20Patterns.html" ID="ID_645450381" CREATED="1356573062473" MODIFIED="1356573062473" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Tutorials/Getting-Started/Sequencing%20with%20Patterns.html"/>
<node TEXT="equivalent to routines" ID="ID_1548567968" CREATED="1356572675159" MODIFIED="1356572812718">
<node TEXT="routine" ID="ID_1703735321" CREATED="1356572682759" MODIFIED="1356572683994">
<node TEXT="r = Routine({&#xa;  [60, 72, 71, 67, 69, 71, 72, 60, 69, 67].do({ |midi| midi.yield });&#xa;});&#xa;while { (m = r.next).notNil } { m.postln };" ID="ID_596772253" CREATED="1356572696471" MODIFIED="1356572697314"/>
</node>
<node TEXT="pattern" ID="ID_1965748340" CREATED="1356572721598" MODIFIED="1356572722721">
<node TEXT="p = Pseq([60, 72, 71, 67, 69, 71, 72, 60, 69, 67], 1);&#xa;r = p.asStream;&#xa;while { (m = r.next).notNil } { m.postln };" ID="ID_247405126" CREATED="1356572723493" MODIFIED="1356572724137"/>
</node>
</node>
<node TEXT="durations and pitches" ID="ID_1444172486" CREATED="1356572997478" MODIFIED="1356573054944">
<node TEXT="(&#xa;var midi, dur;&#xa;midi = Pseq([60, 72, 71, 67, 69, 71, 72, 60, 69, 67], 1).asStream;&#xa;dur = Pseq([2, 2, 1, 0.5, 0.5, 1, 1, 2, 2, 3], 1).asStream;&#xa;&#xa;SynthDef(\smooth, { |freq = 440, sustain = 1, amp = 0.5|&#xa;  var sig;&#xa;  sig = SinOsc.ar(freq, 0, amp) * EnvGen.kr(Env.linen(0.05, sustain, 0.1), doneAction: 2);&#xa;  Out.ar(0, sig ! 2)&#xa;}).send(s);&#xa;&#xa;r = Task({&#xa;  var delta;&#xa;  while {&#xa;    delta = dur.next;&#xa;    delta.notNil&#xa;  } {&#xa;    Synth(\smooth, [freq: midi.next.midicps, sustain: delta]);&#xa;    delta.yield;&#xa;  }&#xa;}).play(quant: TempoClock.default.beats + 1.0);&#xa;)" ID="ID_784411487" CREATED="1356573055292" MODIFIED="1356573056137"/>
</node>
<node TEXT="many functions" ID="ID_295121601" CREATED="1356573351656" MODIFIED="1356573356649">
<node TEXT="return members of a list" ID="ID_1738313733" CREATED="1356573375760" MODIFIED="1356573389697">
<node ID="ID_1264719936" CREATED="1356573376413" MODIFIED="1361669901258"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p style="color: rgb(0, 0, 0); white-space: normal; margin-bottom: 0px; text-transform: none; text-align: start; font-weight: normal; font-size: 12px; font-variant: normal; word-spacing: 0px; margin-top: 0px; margin-left: 0px; font-style: normal; font-family: Helvetica; margin-right: 0px; letter-spacing: normal; text-indent: 0px; line-height: normal" class="p3" charset="utf-8">
      <b><br class="Apple-interchange-newline"/>
      Pseq(list, repeats, offset)</b><span class="Apple-converted-space">&#160;</span>-- return the list's values in order
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1263821714" CREATED="1356573376415" MODIFIED="1356573376415"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 12px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(0, 0, 0); font-family: Helvetica; text-transform: none">
      <b>Pshuf(list, repeats)</b><span class="Apple-converted-space">&#160;</span>-- scramble the list into random order
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_219525090" CREATED="1356573376418" MODIFIED="1356573376418"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 12px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(0, 0, 0); font-family: Helvetica; text-transform: none">
      <b>Prand(list, repeats)</b><span class="Apple-converted-space">&#160;</span>-- choose from the list's values randomly
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1246920746" CREATED="1356573376422" MODIFIED="1356573376422"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 12px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(0, 0, 0); font-family: Helvetica; text-transform: none">
      <b>Pxrand(list, repeats)</b><span class="Apple-converted-space">&#160;</span>-- choose randomly, but never return the same list item twice in a row
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_473002816" CREATED="1356573376425" MODIFIED="1356573376425"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 12px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(0, 0, 0); font-family: Helvetica; text-transform: none">
      <b>Pwrand(list, weights, repeats)</b><span class="Apple-converted-space">&#160;</span>-- like Prand, but chooses values according to a list of probabilities/weights
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="generate values" ID="ID_1666418734" CREATED="1356573396358" MODIFIED="1356573397976">
<node ID="ID_1332776746" CREATED="1356573365706" MODIFIED="1356573365706"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3" charset="utf-8" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 12px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(0, 0, 0); font-family: Helvetica; text-transform: none">
      <b>Pseries(start, step, length)</b><span class="Apple-converted-space">&#160;</span>-- arithmetic series, e.g., 1, 2, 3, 4, 5
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1075843390" CREATED="1356573365708" MODIFIED="1356573365708"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 12px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(0, 0, 0); font-family: Helvetica; text-transform: none">
      <b>Pgeom(start, grow, length)</b><span class="Apple-converted-space">&#160;</span>-- geometric series, e.g., 1, 2, 4, 8, 16
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_327504438" CREATED="1356573365727" MODIFIED="1356573365727"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 12px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(0, 0, 0); font-family: Helvetica; text-transform: none">
      <b>Pwhite(lo, hi, length)</b><span class="Apple-converted-space">&#160;</span>-- random number generator, uses rrand(lo, hi) -- equal distribution
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_633680454" CREATED="1356573365731" MODIFIED="1356573365731"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 12px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(0, 0, 0); font-family: Helvetica; text-transform: none">
      <b>Pexprand(lo, hi, length)</b><span class="Apple-converted-space">&#160;</span>-- random number generator, uses exprand(lo, hi) -- exponential distribution
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="modify the output of another pattern" ID="ID_1710435631" CREATED="1356573408383" MODIFIED="1356573412682">
<node ID="ID_1909126719" CREATED="1356573415076" MODIFIED="1356573419427"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3" charset="utf-8" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 12px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(0, 0, 0); font-family: Helvetica; text-transform: none">
      <b>Pn(pattern, repeats)</b><span class="Apple-converted-space">&#160;</span>-- repeat the pattern as many times as repeats indicates
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1237021341" CREATED="1356573415079" MODIFIED="1356573415079"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p3" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 12px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(0, 0, 0); font-family: Helvetica; text-transform: none">
      <b>Pstutter(n, pattern)</b><span class="Apple-converted-space">&#160;</span>-- repeat individual values from a pattern<span class="Apple-converted-space">&#160;</span><i>n</i><span class="Apple-converted-space">&#160;</span>times.<span class="Apple-converted-space">&#160;</span><i>n</i><span class="Apple-converted-space">&#160;</span>may be a numeric pattern itself.
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
<node TEXT="nesting" ID="ID_472620970" CREATED="1356573434595" MODIFIED="1356573435495">
<node ID="ID_1878037593" CREATED="1356573437166" MODIFIED="1356573437166"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p5" charset="utf-8" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 9px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(0, 0, 0); font-family: Monaco; text-transform: none">
      p =<span class="Apple-converted-space">&#160;</span><span class="s2" style="color: rgb(0, 33, 190)"><font color="rgb(0, 33, 190)">Pwhite</font></span>(0.0,<span class="Apple-converted-space">&#160;</span><span class="s2" style="color: rgb(0, 33, 190)"><font color="rgb(0, 33, 190)">Pseries</font></span>(0.01, 0.01,<span class="Apple-converted-space">&#160;</span><span class="s2" style="color: rgb(0, 33, 190)"><font color="rgb(0, 33, 190)">inf</font></span>), 100).asStream;
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_632498400" CREATED="1356573437168" MODIFIED="1356573437168"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p8" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 9px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(178, 20, 13); font-family: Monaco; text-transform: none">
      // .all pulls from the stream until it returns nil
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_1147477669" CREATED="1356573437172" MODIFIED="1356573437172"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p8" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 9px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(178, 20, 13); font-family: Monaco; text-transform: none">
      // obviously you don't want to do this for an 'inf' length stream!
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_182951205" CREATED="1356573437175" MODIFIED="1356573437175"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p5" style="line-height: normal; letter-spacing: normal; text-align: start; margin-bottom: 0px; font-weight: normal; font-variant: normal; word-spacing: 0px; text-indent: 0px; font-style: normal; white-space: normal; font-size: 9px; margin-left: 0px; margin-top: 0px; margin-right: 0px; color: rgb(0, 0, 0); font-family: Monaco; text-transform: none">
      p.all.plot;
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="exhaustion before replacement" ID="ID_1086907530" CREATED="1356573462763" MODIFIED="1356573466686">
<node TEXT="goal" ID="ID_477788142" CREATED="1356573524073" MODIFIED="1356573554223">
<node TEXT="if you want" ID="ID_471887635" CREATED="1356573473755" MODIFIED="1356573519109">
<node TEXT="&quot;to order a set of numbers randomly so that all numbers come out before a new order is chosen&quot;" ID="ID_489866024" CREATED="1356573512041" MODIFIED="1356573516422"/>
</node>
<node TEXT="then" ID="ID_1870089925" CREATED="1356573503456" MODIFIED="1356573504109">
<node TEXT="&quot;use Pn to repeat a Pshuf&quot;" ID="ID_1887740481" CREATED="1356573504586" MODIFIED="1356573508301"/>
</node>
</node>
<node TEXT="request" ID="ID_1166872339" CREATED="1356573483106" MODIFIED="1356573557278">
<node TEXT="p = Pn(Pshuf([1, 2, 3, 4, 5], 1), inf).asStream;&#xa;p.nextN(15); // get 15 values from the pattern&apos;s stream" ID="ID_1593795000" CREATED="1356573484498" MODIFIED="1356573485533"/>
</node>
</node>
<node TEXT="Pbind, and having a pattern call play" ID="ID_80377652" CREATED="1356573594073" MODIFIED="1356576482400">
<node TEXT="code" ID="ID_430680371" CREATED="1356576485558" MODIFIED="1356576486088">
<node TEXT="(&#xa;SynthDef(\smooth, { |freq = 440, sustain = 1, amp = 0.5|&#xa;var sig;&#xa;sig = SinOsc.ar(freq, 0, amp) * EnvGen.kr(Env.linen(0.05, sustain, 0.1), doneAction: 2);&#xa;Out.ar(0, sig ! 2)&#xa;}).add;&#xa;)&#xa;&#xa;(&#xa;p = Pbind(&#xa;// the name of the SynthDef to use for each note&#xa;\instrument, \smooth,&#xa;// MIDI note numbers -- converted automatically to Hz&#xa;\midinote, Pseq([60, 72, 71, 67, 69, 71, 72, 60, 69, 67], 1),&#xa;// rhythmic values&#xa;\dur, Pseq([2, 2, 1, 0.5, 0.5, 1, 1, 2, 2, 3], 1)&#xa;).play;&#xa;)" ID="ID_562073698" CREATED="1356576483598" MODIFIED="1356576484338"/>
</node>
<node TEXT="mechanism" ID="ID_1408742887" CREATED="1356576504931" MODIFIED="1356576507513">
<node TEXT="message: &quot;event&quot;" ID="ID_768535743" CREATED="1356576551635" MODIFIED="1356576557342">
<node TEXT="The Pbind pattern generates Event objects, which contain names and values describing how the note is supposed to sound." ID="ID_1150784515" CREATED="1356576509203" MODIFIED="1356576510241"/>
</node>
<node TEXT="interpretation" ID="ID_585040156" CREATED="1356576547154" MODIFIED="1356576549143">
<node TEXT="what interprets? the function &quot;play&quot;? the event being interpreted?" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_669773552" CREATED="1356576559044" MODIFIED="1356576578876"/>
<node TEXT="interprets the values according to a set of defaults and rules encoded within the event prototype and performs an action in response. The default action is to play a new synth on the server." ID="ID_273840285" CREATED="1356576549604" MODIFIED="1356576550127"/>
</node>
<node TEXT="delay: the delta value" ID="ID_1551899064" CREATED="1356576600867" MODIFIED="1356576610437">
<node TEXT="tells SuperCollider how long to wait until playing the next event." ID="ID_972038411" CREATED="1356576604730" MODIFIED="1356576605027"/>
</node>
</node>
</node>
<node TEXT="choosing phrases with a pattern full of patterns" ID="ID_1815959550" CREATED="1356582335749" MODIFIED="1356582351664">
<node TEXT="(&#xa;  SynthDef(\bass, { |&#xa;    freq = 440, gate = 1, amp = 0.5, slideTime = 0.17, ffreq = 1100, width = 0.15, detune = 1.005, preamp = 4|&#xa;    var sig,&#xa;    env = Env.adsr(0.01, 0.3, 0.4, 0.1); &#xa;    freq = Lag.kr(freq, slideTime);&#xa;    sig = Mix(VarSaw.ar([freq, freq * detune], 0, width, preamp)).distort * amp * EnvGen.kr(env, gate, doneAction: 2);&#xa;    sig = LPF.ar(sig, ffreq);&#xa;    Out.ar(0, sig ! 2)&#xa;  }).add;&#xa;  TempoClock.default.tempo = 132/60;&#xa;  p = Pxrand([&#xa;    Pbind(&#xa;      \instrument, \bass,&#xa;      \midinote, 36,&#xa;      \dur, Pseq([0.75, 0.25, 0.25, 0.25, 0.5], 1),&#xa;      \legato, Pseq([0.9, 0.3, 0.3, 0.3, 0.3], 1),&#xa;      \amp, 0.5, \detune, 1.005&#xa;    ),&#xa;    Pmono(\bass,&#xa;      \midinote, Pseq([36, 48, 36], 1),&#xa;      \dur, Pseq([0.25, 0.25, 0.5], 1),&#xa;      \amp, 0.5, \detune, 1.005&#xa;    ),&#xa;    Pmono(\bass,&#xa;      \midinote, Pseq([36, 42, 41, 33], 1),&#xa;      \dur, Pseq([0.25, 0.25, 0.25, 0.75], 1),&#xa;      \amp, 0.5, \detune, 1.005&#xa;    ),&#xa;    Pmono(\bass,&#xa;      \midinote, Pseq([36, 39, 36, 42], 1),&#xa;      \dur, Pseq([0.25, 0.5, 0.25, 0.5], 1),&#xa;      \amp, 0.5, \detune, 1.005&#xa;    )&#xa;  ], inf).play(quant: 1);&#xa;)&#xa;// totally cheesy, but who could resist?&#xa;(&#xa;  SynthDef(\kik, {&#xa;    |preamp = 1, amp = 1|&#xa;    var freq = EnvGen.kr(Env([400, 66], [0.08], -3)),&#xa;    sig = SinOsc.ar(freq, 0.5pi, preamp).distort * amp * EnvGen.kr(Env([0, 1, 0.8, 0], [0.01, 0.1, 0.2]), doneAction: 2);&#xa;    Out.ar(0, sig ! 2);&#xa;  }).add;&#xa;  k = Pbind(&#xa;    \instrument, \kik, \delta, 1, \preamp, 4.5, \amp, 0.32&#xa;  ).play(quant: 1);&#xa;)&#xa;p.stop;&#xa;k.stop;" ID="ID_1609566637" CREATED="1356582352555" MODIFIED="1356582568964"/>
</node>
</node>
</node>
</node>
<node TEXT="debris" ID="ID_870669305" CREATED="1350876418724" MODIFIED="1373768690717">
<node TEXT="weak coverage" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_366333393" CREATED="1373768319516" MODIFIED="1373768324774"/>
<node TEXT="audio" ID="ID_2697996" CREATED="1373767840450" MODIFIED="1373767842332">
<node TEXT="initialization" ID="ID_379178459" CREATED="1350878885014" MODIFIED="1350878895736">
<node TEXT="start/stop server" ID="ID_1747484157" CREATED="1350878904892" MODIFIED="1350879911790">
<node TEXT="called &quot;booting&quot; it" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_842193071" CREATED="1350879000386" MODIFIED="1350879005955"/>
<node TEXT="manually" ID="ID_642454187" CREATED="1350879899194" MODIFIED="1350879901367">
<node TEXT="focus on the &quot;server window&quot; for localhost" ID="ID_1845572879" CREATED="1350879013808" MODIFIED="1350879047334"/>
<node TEXT="hit spacebar, or click &quot;boot&quot;" ID="ID_1504252486" CREATED="1350879062456" MODIFIED="1350879068963"/>
</node>
<node TEXT="in code" ID="ID_533135489" CREATED="1350879902738" MODIFIED="1350879903742">
<node ID="ID_1853807186" CREATED="1350879904422" MODIFIED="1350879904422"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p5">
      s.boot;
    </p>
  </body>
</html>
</richcontent>
</node>
<node ID="ID_415589590" CREATED="1350879904420" MODIFIED="1350879904420"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p class="p5">
      s.quit;
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
</node>
</node>
</node>
<node TEXT="commands" ID="ID_825992898" CREATED="1361669394950" MODIFIED="1361669396689">
<node TEXT="print to screen" ID="ID_614305702" CREATED="1361661738070" MODIFIED="1361661743449">
<node TEXT="postln" ID="ID_1324886617" CREATED="1350876424187" MODIFIED="1350880426475">
<node TEXT="that&apos;s &quot;post line&quot;, not &quot;post in&quot;" LOCALIZED_STYLE_REF="AutomaticLayout.level,3" ID="ID_898931442" CREATED="1361661576147" MODIFIED="1361661586503"/>
<node TEXT="prints to the &quot;post&quot; window" ID="ID_340517073" CREATED="1350876432496" MODIFIED="1350876450368"/>
</node>
</node>
<node TEXT="random numbers" ID="ID_1766852075" CREATED="1350880720493" MODIFIED="1350880727538">
<node TEXT="integer in [0,N]" ID="ID_1463606483" CREATED="1350880727774" MODIFIED="1350880740345">
<node TEXT="(N+1).rand" ID="ID_1544188270" CREATED="1350880740950" MODIFIED="1350880746311"/>
</node>
<node TEXT="float in [0,N]" ID="ID_1307936903" CREATED="1350880748596" MODIFIED="1350880755113">
<node TEXT="N.0.rand" ID="ID_1840285828" CREATED="1350880798852" MODIFIED="1350880803678"/>
<node TEXT="think of it as (3.0).rand" ID="ID_1917098230" CREATED="1350880807515" MODIFIED="1350880816621"/>
</node>
</node>
</node>
<node TEXT="classes" ID="ID_1149952036" CREATED="1351405056313" MODIFIED="1361746423439">
<node TEXT="UGen" ID="ID_765821265" CREATED="1351405091160" MODIFIED="1351405095163">
<node TEXT="&quot;unit generator&quot;" ID="ID_1764394448" CREATED="1351405095359" MODIFIED="1351405098403"/>
<node TEXT="SinOsc is one" ID="ID_435428044" CREATED="1351405084776" MODIFIED="1351405103499"/>
</node>
<node TEXT="ArrayedCollection" ID="ID_1133404206" CREATED="1361669777307" MODIFIED="1361669782158">
<node TEXT="http://danielnouri.org/docs/SuperColliderHelp/Collections/ArrayedCollection.html" ID="ID_1967426086" CREATED="1361669776246" MODIFIED="1361669776246" LINK="http://danielnouri.org/docs/SuperColliderHelp/Collections/ArrayedCollection.html"/>
<node TEXT="superclass of arrays" ID="ID_1378487266" CREATED="1361669783299" MODIFIED="1361669788382"/>
</node>
<node TEXT="SinOsc" ID="ID_1178315801" CREATED="1351404702851" MODIFIED="1351404704526">
<node TEXT="is a class" ID="ID_1753836677" CREATED="1351404726443" MODIFIED="1351404727950"/>
<node TEXT=".ar( freq, phase in radians, mul )" ID="ID_312297607" CREATED="1351405538802" MODIFIED="1351405582104"/>
</node>
</node>
<node TEXT="informal" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_677381074" CREATED="1361662619101" MODIFIED="1361746447140">
<node TEXT="&quot;mul&quot;" ID="ID_1272698411" CREATED="1351405627290" MODIFIED="1351405628597">
<node TEXT="&quot;multiplier&quot;, probably generally amplitude" ID="ID_1482088373" CREATED="1351405637402" MODIFIED="1351405651104"/>
<node TEXT="common argument name; often not explained" ID="ID_1802749228" CREATED="1351405628810" MODIFIED="1351405636861"/>
</node>
<node TEXT="&quot;add&quot;" ID="ID_27715772" CREATED="1351405754020" MODIFIED="1351405755360">
<node TEXT="audio offset" ID="ID_350766730" CREATED="1351405766140" MODIFIED="1351405771352"/>
<node TEXT="common argument name; often not explained" ID="ID_894029564" CREATED="1351405628810" MODIFIED="1351405636861"/>
</node>
</node>
<node TEXT=".play" ID="ID_1071803259" CREATED="1351404640241" MODIFIED="1351405021926">
<node TEXT="To Functions, &apos;play&apos; means evaluate yourself and play the result on a server." ID="ID_1231808971" CREATED="1351404642436" MODIFIED="1361662597298"/>
</node>
</node>
</node>
</node>
<node TEXT="internalize" LOCALIZED_STYLE_REF="default" ID="ID_1595111033" CREATED="1373765522177" MODIFIED="1413777214354">
<node TEXT="forgetting the var statement works only sometimes" ID="ID_649850693" CREATED="1373766818902" MODIFIED="1373766831545">
<node TEXT="&quot;f = {function body}&quot; can be evaluated by itself, but &quot;foo = {function body}&quot; can&apos;t unless it is preceded by a &quot;var&quot; statement." LOCALIZED_STYLE_REF="default" ID="ID_590905389" CREATED="1350881695860" MODIFIED="1350881755403"/>
<node TEXT="why" LOCALIZED_STYLE_REF="default" ID="ID_675426808" CREATED="1350881751178" MODIFIED="1373765544482">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_121909034" STARTINCLINATION="40;0;" ENDINCLINATION="40;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="multiple inheritance, instantiation conflicts" ID="ID_386881171" CREATED="1361747340000" MODIFIED="1416781016063">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_482579494" STARTINCLINATION="251;0;" ENDINCLINATION="251;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
<node TEXT="setter methods must take only 1 arg" ID="ID_440512858" CREATED="1361749418889" MODIFIED="1373767100820">
<arrowlink SHAPE="CUBIC_CURVE" COLOR="#000000" WIDTH="2" TRANSPARENCY="80" FONT_SIZE="10" FONT_FAMILY="Ayuthaya" DESTINATION="ID_1639502010" STARTINCLINATION="228;0;" ENDINCLINATION="228;0;" STARTARROW="NONE" ENDARROW="DEFAULT"/>
</node>
</node>
<node TEXT="to read" ID="ID_358612607" CREATED="1356468040909" MODIFIED="1361663218862">
<node TEXT="I liked this better than the first." LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1148568560" CREATED="1361753546520" MODIFIED="1361753581764">
<node TEXT="http://www.sussex.ac.uk/Users/nc81/modules/cm1/workshop.html#chapter13" ID="ID_990091513" CREATED="1361753548559" MODIFIED="1361753548559" LINK="http://www.sussex.ac.uk/Users/nc81/modules/cm1/workshop.html#chapter13"/>
</node>
<node TEXT="next" ID="ID_1740036548" CREATED="1361663251281" MODIFIED="1361663255692">
<node TEXT="not ordered" LOCALIZED_STYLE_REF="AutomaticLayout.level,1" ID="ID_652524702" CREATED="1361663280471" MODIFIED="1361663287555"/>
<node TEXT="control structures" LOCALIZED_STYLE_REF="default" ID="ID_884434293" CREATED="1356550398739" MODIFIED="1361663265737">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Control-Structures.html" ID="ID_1979685024" CREATED="1356550402856" MODIFIED="1356550402856" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Language/Control-Structures.html"/>
</node>
<node TEXT="OSC" LOCALIZED_STYLE_REF="default" ID="ID_812397572" CREATED="1356467142303" MODIFIED="1361663265739">
<node TEXT="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/10.1%20Open%20Sound%20Control.html" ID="ID_1694249012" CREATED="1356467143555" MODIFIED="1356467143555" LINK="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/10.1%20Open%20Sound%20Control.html"/>
</node>
<node TEXT="MIDI input" LOCALIZED_STYLE_REF="default" ID="ID_1170667009" CREATED="1356467168453" MODIFIED="1361663265741">
<node TEXT="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/7.1%20Interaction%202.html" ID="ID_22427437" CREATED="1356467170330" MODIFIED="1356467170330" LINK="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/7.1%20Interaction%202.html"/>
</node>
<node TEXT="messaging idioms" LOCALIZED_STYLE_REF="default" ID="ID_449574809" CREATED="1356467739158" MODIFIED="1361663265742">
<node TEXT="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/10.2%20Messaging%20Style.html" ID="ID_1933473066" CREATED="1356467742002" MODIFIED="1356467742002" LINK="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/10.2%20Messaging%20Style.html"/>
</node>
<node TEXT="GUI" LOCALIZED_STYLE_REF="default" ID="ID_1313420393" CREATED="1356467777132" MODIFIED="1361663265743">
<node TEXT="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/4.2%20Graphical%20User%20Interfaces.html" ID="ID_1080723751" CREATED="1356467778238" MODIFIED="1356467778238" LINK="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/4.2%20Graphical%20User%20Interfaces.html"/>
<node TEXT="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/4.3%20Further%20GUI%20Example.html" ID="ID_1182256043" CREATED="1356467804638" MODIFIED="1356467804638" LINK="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/4.3%20Further%20GUI%20Example.html"/>
<node TEXT="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/5.3%20GUI+Loop%20Example.html" ID="ID_1768528092" CREATED="1356467821504" MODIFIED="1356467821504" LINK="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/5.3%20GUI+Loop%20Example.html"/>
</node>
<node TEXT="order of execution" LOCALIZED_STYLE_REF="default" ID="ID_1140738293" CREATED="1356468006080" MODIFIED="1361663265743">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Order-of-execution.html" ID="ID_1237467503" CREATED="1356468008807" MODIFIED="1356468008807" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/Order-of-execution.html"/>
</node>
<node TEXT="writing classes" LOCALIZED_STYLE_REF="default" ID="ID_263634552" CREATED="1356468033293" MODIFIED="1361663265744">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Extending%20and%20Customizing%20SC/Writing-Classes.html" ID="ID_524393363" CREATED="1356468035544" MODIFIED="1356468035544" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Extending%20and%20Customizing%20SC/Writing-Classes.html"/>
</node>
<node TEXT="GUI" LOCALIZED_STYLE_REF="default" ID="ID_1174929197" CREATED="1356468170713" MODIFIED="1361663265745">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/GUI/GUI-Overview.html" ID="ID_662738679" CREATED="1356468171719" MODIFIED="1356468171719" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/GUI/GUI-Overview.html"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/GUI/GUI-Classes.html" ID="ID_1037879234" CREATED="1356468174812" MODIFIED="1356468174812" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/GUI/GUI-Classes.html"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/GUI/GUI-Tools/GUI.html" ID="ID_1304258599" CREATED="1356468178459" MODIFIED="1356468178459" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/GUI/GUI-Tools/GUI.html"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/GUI/GUI-Tools/ViewRedirect.html" ID="ID_1845722439" CREATED="1356468181926" MODIFIED="1356468181926" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/GUI/GUI-Tools/ViewRedirect.html"/>
</node>
</node>
<node TEXT="less likely useful" ID="ID_746007419" CREATED="1361663267849" MODIFIED="1361663270387">
<node TEXT="patterns, streams" ID="ID_1372931068" CREATED="1356576633481" MODIFIED="1356576635613">
<node TEXT="a tutorial" ID="ID_411635270" CREATED="1356576637737" MODIFIED="1356576638980">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Streams-Patterns-Events/A%20Practical%20Guide/PG_01_Introduction.html" ID="ID_1266661186" CREATED="1356576635937" MODIFIED="1356576635937" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Streams-Patterns-Events/A%20Practical%20Guide/PG_01_Introduction.html"/>
</node>
<node TEXT="Patterns/Streams Help" ID="ID_203487976" CREATED="1356576662528" MODIFIED="1356576662804">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Streams-Patterns-Events/Streams.html" ID="ID_697877297" CREATED="1356576645258" MODIFIED="1356576645258" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Streams-Patterns-Events/Streams.html"/>
</node>
</node>
<node TEXT="sussex.ac.uk" ID="ID_1240900380" CREATED="1356467113438" MODIFIED="1356547640603">
<font BOLD="true"/>
<node TEXT="source" ID="ID_236280785" CREATED="1356467787229" MODIFIED="1356467788135">
<node TEXT="http://www.sussex.ac.uk/Users/nc81/modules/cm1/workshop.html#chapter9" ID="ID_1259707953" CREATED="1356467785567" MODIFIED="1356467785567" LINK="http://www.sussex.ac.uk/Users/nc81/modules/cm1/workshop.html#chapter9"/>
</node>
<node TEXT="random functions" ID="ID_7266807" CREATED="1356467046663" MODIFIED="1356467123225">
<node TEXT="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/9.1%20Algorithmic%20Strategies.html" ID="ID_894681818" CREATED="1356467057129" MODIFIED="1356467057129" LINK="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/9.1%20Algorithmic%20Strategies.html"/>
</node>
<node TEXT="sequencing" ID="ID_1938011534" CREATED="1356467123438" MODIFIED="1356467124841">
<node TEXT="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/9.2%20Patterns.html" ID="ID_300515088" CREATED="1356467125223" MODIFIED="1356467125223" LINK="http://www.sussex.ac.uk/Users/nc81/modules/cm1/scfiles/9.2%20Patterns.html"/>
</node>
</node>
<node TEXT="creating standalone apps" ID="ID_1425721261" CREATED="1356468194215" MODIFIED="1356468196971">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Extending%20and%20Customizing%20SC/Creating-Standalone-Applications.html" ID="ID_1510053078" CREATED="1356468197286" MODIFIED="1356468197286" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/Extending%20and%20Customizing%20SC/Creating-Standalone-Applications.html"/>
</node>
<node TEXT="bundling and latency" ID="ID_964777836" CREATED="1356550758706" MODIFIED="1356550863014">
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/ServerTiming.html" ID="ID_916016275" CREATED="1356550762421" MODIFIED="1356550762421" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/ServerTiming.html"/>
<node TEXT="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/bundledCommands.html" ID="ID_1763527739" CREATED="1356550863387" MODIFIED="1356550863387" LINK="http://supercollider.svn.sourceforge.net/viewvc/supercollider/trunk/common/build/Help/ServerArchitecture/bundledCommands.html"/>
</node>
</node>
<node TEXT="seemed useful, 2013 02 23" ID="ID_1939290654" CREATED="1361667624378" MODIFIED="1361667662352">
<node TEXT="&quot;Notes on MIDI support&quot;" ID="ID_815139424" CREATED="1361667633953" MODIFIED="1361667641309">
<node TEXT="http://akustik.hfbk.net/sc/SuperColliderHelp/Control/UsingMIDI.html" ID="ID_1375067517" CREATED="1361667633277" MODIFIED="1361667633277" LINK="http://akustik.hfbk.net/sc/SuperColliderHelp/Control/UsingMIDI.html"/>
</node>
<node TEXT="&quot;DX490a - Summer 2010&quot;" ID="ID_1637877257" CREATED="1361667668137" MODIFIED="1361667689292">
<node TEXT="&quot;Instructor: Stelios Manousakis&quot;" ID="ID_1283049897" CREATED="1361667698368" MODIFIED="1361667701699"/>
<node TEXT="http://modularbrains.net/dx490a/DX490A_su2010_10.2_[Networking-1%7CWithin_one_computer].html" ID="ID_1064323462" CREATED="1361667673707" MODIFIED="1361667673707"/>
</node>
</node>
<node TEXT="almost comprehensible, on midi" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1400359174" CREATED="1361667899362" MODIFIED="1361668834797">
<node TEXT="http://akustik.hfbk.net/sc/SuperColliderHelp/Control/UsingMIDI.html" ID="ID_1148224764" CREATED="1361667901980" MODIFIED="1361667901980" LINK="http://akustik.hfbk.net/sc/SuperColliderHelp/Control/UsingMIDI.html"/>
</node>
</node>
</node>
</node>
<node TEXT="p: patterns" ID="ID_1138476127" CREATED="1416885030247" MODIFIED="1416888767488">
<node TEXT="** where to resume" ID="ID_1987661360" CREATED="1416885064126" MODIFIED="1416888776113">
<node TEXT=".= both" ID="ID_939375008" CREATED="1416989516675" MODIFIED="1416989520087"/>
<node TEXT="part 4 of &quot;Understanding Streams, Patterns and Events&quot;" ID="ID_1258015688" CREATED="1416885058070" MODIFIED="1416989515348"/>
<node ID="ID_1082934269" CREATED="1416989516023" MODIFIED="1416989516023"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      subsection &quot;EventStreamPlayer&quot;
    </p>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="everything is a stream" ID="ID_1877722162" CREATED="1416885032070" MODIFIED="1416885034570">
<node TEXT=" In Object, both next and reset are defined to return this. Thus any object is by default a stream that represents an infinite sequence of itself." ID="ID_100719453" CREATED="1416885034822" MODIFIED="1416885035426"/>
</node>
<node TEXT="Patterns can be changed on the fly" ID="ID_927706390" CREATED="1416879345753" MODIFIED="1416885107919">
<node TEXT="e.g. here" ID="ID_1661327845" CREATED="1416879349472" MODIFIED="1416879350452">
<node TEXT="http://blog.carltesta.net/" ID="ID_732180797" CREATED="1416879350746" MODIFIED="1416879350746" LINK="http://blog.carltesta.net/"/>
</node>
</node>
<node TEXT="function as stream" ID="ID_1793900857" CREATED="1416885274123" MODIFIED="1416885282228">
<node TEXT="?" ID="ID_1759955565" CREATED="1416885287266" MODIFIED="1416885293725">
<node TEXT="isn&apos;t the function already a stream, because everything is?" ID="ID_38208414" CREATED="1416885293914" MODIFIED="1416885305225"/>
</node>
<node TEXT="code" ID="ID_519191926" CREATED="1416885285346" MODIFIED="1416885285925">
<node TEXT="(&#xa;var a;&#xa;a = FuncStream.new({ #[1, 2, 3, 4].choose });&#xa;5.do({ a.next.postln; });    // print 5 values from the stream&#xa;)" ID="ID_700716144" CREATED="1416885282562" MODIFIED="1416885283246"/>
</node>
</node>
<node TEXT="Routine" ID="ID_645782016" CREATED="1416885524478" MODIFIED="1416885525545">
<node TEXT="&quot;x.yield&quot; returns x and suspends execution, resumable at the next instruction via the &quot;next&quot; method" ID="ID_976231431" CREATED="1416885526110" MODIFIED="1416885581340"/>
</node>
<node TEXT="* nested eval!" ID="ID_1874190312" CREATED="1416885731617" MODIFIED="1416885734877">
<node TEXT="works for Streams" ID="ID_1782291165" CREATED="1416888347699" MODIFIED="1416888359591">
<node TEXT="(&#xa;var a, b, c;&#xa;// a is a stream that counts from 0 to 9&#xa;a = Routine.new({&#xa;        10.do({ arg i; i.yield; })&#xa;    });&#xa;// b is a stream that counts from 100 to 280 by 20&#xa;b = Routine.new({&#xa;        forBy (100,280,20, { arg i; i.yield })&#xa;    });&#xa;c = a + b;    // add streams a and b&#xa;12.do({ c.next.postln; });&#xa;)" ID="ID_1471719367" CREATED="1416885838913" MODIFIED="1416885839332"/>
</node>
<node TEXT="works for Patterns" ID="ID_1501488943" CREATED="1416888350948" MODIFIED="1416888357678">
<node TEXT="(&#xa;var a, b, c;&#xa;a = Pseries.new(0,1,10);    // a is a pattern whose stream counts from 0 to 9&#xa;b = a.squared;            // pattern b is a square of the pattern a&#xa;c = b.asStream;&#xa;12.do({ c.next.postln; });&#xa;)" ID="ID_14157981" CREATED="1416888352987" MODIFIED="1416888353496"/>
</node>
</node>
<node TEXT="collect ~ apply" ID="ID_550425004" CREATED="1416886439878" MODIFIED="1416886625232">
<node TEXT="for Streams" ID="ID_478375682" CREATED="1416888404467" MODIFIED="1416888407629">
<node TEXT="(&#xa;var a, b;&#xa;// a is a stream that counts from 0 to 9&#xa;a = Routine.new({&#xa;        10.do({ arg i; i.yield; })&#xa;    });&#xa;// b is a stream that adds 100 to even values&#xa;b = a.collect({ arg item; if (item.even, { item + 100 },{ item }); });&#xa;6.do({ b.next.postln; });&#xa;)" ID="ID_1603486851" CREATED="1416886442413" MODIFIED="1416886442993"/>
</node>
<node TEXT="for Patterns: same" ID="ID_825972534" CREATED="1416888399786" MODIFIED="1416888402119"/>
</node>
<node TEXT="select, reject ~ filter" ID="ID_345736143" CREATED="1416886565364" MODIFIED="1416886641875">
<node TEXT="for Streams" ID="ID_1281882719" CREATED="1416888394011" MODIFIED="1416888398470">
<node TEXT="(&#xa;var a, b;&#xa;// a is a stream that counts from 0 to 9&#xa;a = Routine.new({&#xa;        10.do({ arg i; i.yield; })&#xa;    });&#xa;// b is a stream that only returns the odd values from stream a&#xa;b = a.select({ arg item; item.odd; });&#xa;6.do({ b.next.postln; });&#xa;)" ID="ID_283538425" CREATED="1416886571219" MODIFIED="1416886572088"/>
</node>
<node TEXT="for Patterns: same" ID="ID_1505981627" CREATED="1416888399786" MODIFIED="1416888402119"/>
<node TEXT="reject just negates the test" ID="ID_1205249126" CREATED="1416886642753" MODIFIED="1416886659425"/>
</node>
<node TEXT="Pfunc: Pattern that makes a FuncStream" ID="ID_1213930387" CREATED="1416888189734" MODIFIED="1416888199146">
<node TEXT="(&#xa;var a, b;&#xa;a = Pfunc.new({ #[1, 2, 3, 4].choose });&#xa;b = a.asStream;            // make a stream from the pattern&#xa;5.do({ b.next.postln; });    // print 5 values from the stream&#xa;)" ID="ID_718368235" CREATED="1416888199662" MODIFIED="1416888200202"/>
</node>
<node TEXT="Prout: Pattern that makes a Routine" ID="ID_1883453206" CREATED="1416888210983" MODIFIED="1416888219370">
<node TEXT="(&#xa;var a, b, c;&#xa;a = Prout.new({&#xa;        3.do({ arg i; 3.rand.yield; })&#xa;    });&#xa;// make two streams from the pattern&#xa;b = a.asStream;&#xa;c = a.asStream;&#xa;4.do({ b.next.postln; });    // print 4 values from first stream&#xa;4.do({ c.next.postln; });    // print 4 values from second stream&#xa;)" ID="ID_693632446" CREATED="1416888219887" MODIFIED="1416888220370"/>
</node>
<node TEXT="Patterns to make numeric sequences" ID="ID_1993412227" CREATED="1416888292877" MODIFIED="1416888307584">
<node TEXT="Pseries: arithmetic series" ID="ID_1665196184" CREATED="1416888251062" MODIFIED="1416888322048">
<node TEXT="(&#xa;var a, b;&#xa;a = Pseries.new(10, 3, 8);    // stream starts at 10, steps by 3 and has length 8&#xa;b = a.asStream;&#xa;9.do({ b.next.postln; });    // print 9 values from stream&#xa;)" ID="ID_175044019" CREATED="1416888249255" MODIFIED="1416888250146"/>
</node>
<node TEXT="Pgeom: geometric series" ID="ID_1378683545" CREATED="1416888311045" MODIFIED="1416888316511">
<node TEXT="(&#xa;var a, b;&#xa;a = Pgeom.new(10, 3, 8);    // stream starts at 10, steps by factor of 3 and has length 8&#xa;b = a.asStream;&#xa;9.do({ b.next.postln; });    // print 9 values from stream&#xa;)" ID="ID_720419904" CREATED="1416888309197" MODIFIED="1416888309810"/>
</node>
</node>
<node TEXT="ListPatterns" ID="ID_511500100" CREATED="1416984061316" MODIFIED="1416984063246">
<node TEXT="purpose (brief)" ID="ID_1199448404" CREATED="1416984523306" MODIFIED="1416984528693">
<node TEXT="cycle through lists" ID="ID_542607102" CREATED="1416984063491" MODIFIED="1416984069007"/>
</node>
<node TEXT="interface" ID="ID_974900853" CREATED="1416984529946" MODIFIED="1416984534005">
<node TEXT="each has a list and a &quot;repeats&quot; command (variable meaning)" ID="ID_1639393828" CREATED="1416984070043" MODIFIED="1416984094419">
<node TEXT="the repeats arg&apos;s meaning varies across subclasses" ID="ID_1238852731" CREATED="1416984078220" MODIFIED="1416984085959"/>
</node>
<node TEXT="might take an offset" ID="ID_1239077030" CREATED="1416984106618" MODIFIED="1416984108822"/>
</node>
<node TEXT="how they nest" ID="ID_1962541610" CREATED="1416984537498" MODIFIED="1416984539885">
<node TEXT="serial insertion" ID="ID_1472599861" CREATED="1416984540106" MODIFIED="1416984542990"/>
</node>
<node TEXT="arith transf" ID="ID_269349846" CREATED="1416984720951" MODIFIED="1416984873551">
<node TEXT="Pattern b plays pattern a once normally, once transposed up a fifth and once transposed up a fourth." ID="ID_715448424" CREATED="1416984745014" MODIFIED="1416984745514"/>
<node TEXT="(&#xa;var a, b;&#xa;a = Pseq(#[60, 62, 63, 65, 67, 63]);&#xa;b = Pseq([ a, a + 7, a + 5], inf).asStream;&#xa;Task({&#xa;    24.do({&#xa;        Synth(\help_SPE3_SimpleSine, [ \freq, b.next.midicps ]);&#xa;        0.3.wait;&#xa;    });&#xa;}).play;&#xa;)" ID="ID_561255966" CREATED="1416984739798" MODIFIED="1416984740491"/>
</node>
<node TEXT="sum two seq&apos;s" ID="ID_595711904" CREATED="1416984883996" MODIFIED="1416984887751">
<node TEXT="the next yield* is drawn from each in parallel, and they loop independently if different lengths" ID="ID_781162887" CREATED="1416984909884" MODIFIED="1416984962054">
<node TEXT="*if I&apos;m using that terms right" ID="ID_1160342530" CREATED="1416984938869" MODIFIED="1416984940207"/>
</node>
<node TEXT="verb" ID="ID_478230580" CREATED="1416984962299" MODIFIED="1416984963382">
<node TEXT="Adding two patterns together. The second pattern transposes each fifth note of the first pattern down an octave." ID="ID_1596942693" CREATED="1416984904827" MODIFIED="1416984905543"/>
<node TEXT="(&#xa;var a;&#xa;a = Pseq(#[60, 62, 63, 65, 67, 63], inf) + Pseq(#[0, 0, 0, 0, -12], inf);&#xa;a = a.asStream.midicps;&#xa;Task({&#xa;    inf.do({&#xa;        Synth(\help_SPE3_SimpleSine,[\freq, a.next]);&#xa;        0.3.wait;&#xa;    });&#xa;}).play;&#xa;)" ID="ID_87057985" CREATED="1416984893532" MODIFIED="1416984894105"/>
</node>
</node>
<node TEXT="members" ID="ID_1964666504" CREATED="1416984506619" MODIFIED="1416984507791">
<node TEXT="Prand, Pxrand, Pseq, Pser, Pshuf" ID="ID_818590517" CREATED="1416984362293" MODIFIED="1416984506334"/>
</node>
<node TEXT="idioms" ID="ID_1230180802" CREATED="1416985589719" MODIFIED="1416985590787">
<node TEXT="Task from [Pattern as Stream]" ID="ID_1772413832" CREATED="1416985573992" MODIFIED="1416985583963">
<node TEXT="pat = Pseq([&#xa;    Pseq(#[0.0], 10),&#xa;    Pseq(#[0.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 2),&#xa;    Pseq(#[0.9, 0.0, 0.0, 0.2, 0.0, 0.0, 0.0, 0.2, 0.0, 0.0], 2),&#xa;    ...&#xa;]);&#xa;&#xa;stream = pat.asStream;&#xa;&#xa;Task({&#xa;    loop({&#xa;        if( ( amp = stream.next ) &gt; 0,&#xa;            { Synth(\help_SPE3_Mridangam, [ \t_amp, amp ]) }&#xa;        );&#xa;        (1/8).wait;&#xa;    })&#xa;}).play&#xa;)" ID="ID_1005224760" CREATED="1416985584519" MODIFIED="1416985585244"/>
</node>
</node>
</node>
<node TEXT="Environments" ID="ID_908791800" CREATED="1416985828163" MODIFIED="1416985829799">
<node TEXT="~ notation" ID="ID_1275112395" CREATED="1416985829995" MODIFIED="1416985858142">
<node ID="ID_785240951" CREATED="1416985861013" MODIFIED="1416985861013"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      refers to &quot;currentEnvironment&quot;
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="is shorthand for this" ID="ID_1381034318" CREATED="1416985863122" MODIFIED="1416985866094">
<node TEXT="currentEnvironment.at(\myvariable).postln;" ID="ID_1073318770" CREATED="1416985852660" MODIFIED="1416985852660"/>
<node TEXT="currentEnvironment.put(\myvariable, 999);" ID="ID_1143500836" CREATED="1416985852660" MODIFIED="1416985852660"/>
</node>
</node>
<node TEXT="create and use" ID="ID_1539554237" CREATED="1416986176278" MODIFIED="1416986178473">
<node TEXT="(&#xa;var a;&#xa;a = Environment.make({&#xa;    ~a = 10;&#xa;    ~b = 200;&#xa;    ~c = 3000;&#xa;});&#xa;a.use({&#xa;    ~a + ~b + ~c&#xa;}).postln;&#xa;)" ID="ID_1132806647" CREATED="1416986179030" MODIFIED="1416986179651"/>
</node>
<node TEXT="get unspec&apos;d val&apos;s from Env" ID="ID_1665460755" CREATED="1416986474315" MODIFIED="1416986480851">
<node TEXT="code" ID="ID_1681091212" CREATED="1416986482618" MODIFIED="1416986483133">
<node TEXT="(&#xa;var f;&#xa;&#xa;// define a function&#xa;f = { arg x, y, z; [x, y, z].postln; };&#xa;&#xa;Environment.use({&#xa;    ~x = 7;&#xa;    ~y = 8;&#xa;    ~z = 9;&#xa;&#xa;    f.valueEnvir(1, 2, 3);    // all values supplied&#xa;    f.valueEnvir(1, 2);    // z is looked up in the current Environment&#xa;    f.valueEnvir(1);    // y and z are looked up in the current Environment&#xa;    f.valueEnvir;        // all arguments are looked up in the current Environment&#xa;    f.valueEnvir(z: 1);    // x and y are looked up in the current Environment&#xa;});&#xa;)" ID="ID_579820105" CREATED="1416986469329" MODIFIED="1416986469711"/>
</node>
<node TEXT="use envir or valueArrayEnvir" ID="ID_1825680176" CREATED="1416986497153" MODIFIED="1416986510887"/>
<node TEXT="If the argument is not found then whatever the function defines as the default value for that argument is used." ID="ID_695394759" CREATED="1416986394308" MODIFIED="1416986395878"/>
</node>
</node>
<node TEXT="Event" ID="ID_1340207035" CREATED="1416986923769" MODIFIED="1416986946484">
<node ID="ID_19102270" CREATED="1416986948092" MODIFIED="1416986948092"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <p>
      subclasses Environment
    </p>
  </body>
</html>
</richcontent>
</node>
<node TEXT="purpose" ID="ID_522601177" CREATED="1416986950904" MODIFIED="1416986952148">
<node TEXT="events are mappings of Symbols representing names of parameters for a musical event to their value" ID="ID_1324776579" CREATED="1416986943649" MODIFIED="1416986954317"/>
</node>
<node TEXT="&quot;the&quot; prototype" ID="ID_1641958977" CREATED="1416986971216" MODIFIED="1416986976499">
<node TEXT="good thing to understand before writing my own" ID="ID_1622265728" CREATED="1416986979896" MODIFIED="1416986985868">
<node TEXT="believe I and says the tutorial" ID="ID_42274441" CREATED="1416986986437" MODIFIED="1416986990635"/>
</node>
<node TEXT="The class getter method default retrieves the default prototype event which has been initialized with values for many useful parameters" ID="ID_152078555" CREATED="1416986976912" MODIFIED="1416986977547"/>
</node>
<node TEXT="&quot;event patterns&quot;" ID="ID_1914290902" CREATED="1416987090063" MODIFIED="1416987100890">
<node TEXT="contrast to value patterns, which are all prev&apos; rec&apos;d here" ID="ID_1016174353" CREATED="1416987107703" MODIFIED="1416987129693"/>
<node TEXT="they return Events" ID="ID_1398921869" CREATED="1416987143421" MODIFIED="1416987146504">
<node TEXT="for each call to &quot;next&quot;" ID="ID_1077138134" CREATED="1416987146917" MODIFIED="1416987150336"/>
<node TEXT="once they are made into Streams" ID="ID_157736538" CREATED="1416987150542" MODIFIED="1416987158656"/>
</node>
</node>
<node TEXT="&quot;the default synth&quot;" ID="ID_1949325564" CREATED="1416988086677" MODIFIED="1416988089079">
<node TEXT="if not spec&apos;, &quot;Pbind(...).play&quot; invokes it" ID="ID_505039109" CREATED="1416987987373" MODIFIED="1416988734217">
<node TEXT="e.g. this eval&apos;s" ID="ID_731250779" CREATED="1416988018020" MODIFIED="1416988020200"/>
<node TEXT="Pbind(\freq, Prand([300, 500, 231.2, 399.2], inf), \dur, 0.1).play;" ID="ID_54877654" CREATED="1416987981734" MODIFIED="1416987982225"/>
</node>
<node TEXT="it is built-in" ID="ID_1922505688" CREATED="1416987947967" MODIFIED="1416988102735">
<node TEXT="I expect it can be changed." ID="ID_362154805" CREATED="1416988108972" MODIFIED="1416988117910"/>
</node>
</node>
<node TEXT="Pbind" ID="ID_8161575" CREATED="1416988738872" MODIFIED="1416988741037">
<node TEXT="bundles Patterns as one Stream" ID="ID_781015781" CREATED="1416988661035" MODIFIED="1416988747381">
<node TEXT="(&#xa;// a SynthDef&#xa;SynthDef(\test, { | out, freq = 440, amp = 0.1, nharms = 10, pan = 0, gate = 1 |&#xa;    var audio = Blip.ar(freq, nharms, amp);&#xa;    var env = Linen.kr(gate, doneAction: 2);&#xa;    OffsetOut.ar(out, Pan2.ar(audio, pan, env) );&#xa;}).add;&#xa;)&#xa;&#xa;Pbind(\instrument, \test, \freq, Prand([1, 1.2, 2, 2.5, 3, 4], inf) * 200, \dur, 0.1).play;" ID="ID_1766103082" CREATED="1416988663186" MODIFIED="1416988663567"/>
</node>
<node TEXT="using &quot;next&quot;" ID="ID_1416484473" CREATED="1416989332374" MODIFIED="1416989338267">
<node TEXT="t = Pbind( \freq, Pseq([440,880]) ).asStream;&#xa;t.next(Event.default);&#xa;t.next(Event.default);&#xa;t.next(Event.default);" ID="ID_340939403" CREATED="1416989338599" MODIFIED="1416989339289"/>
</node>
<node TEXT="lower" ID="ID_378978125" CREATED="1416989350503" MODIFIED="1416989356787">
<font BOLD="true"/>
<node TEXT="some of a Pbind&apos;s assignments can be to tuples" ID="ID_728209567" CREATED="1416988945198" MODIFIED="1416988998389">
<node TEXT="// standard syntax, arguments alternate symbols and patterns&#xa;(&#xa;Pbind(&#xa;  \instrument,        \test,&#xa;  \nharms,        Pseq([4, 10, 40], inf),&#xa;  \dur,           Pseq([1, 1, 2, 1]/10, inf),&#xa;  #[freq, sustain],   &#xa;  Ptuple([ // assignment to multiple keys&#xa;    Pseq( (1..16) * 50, inf),&#xa;    Pseq([1/10, 0.5, 1, 2], inf)&#xa;  ])&#xa;).play;&#xa;)" ID="ID_1999964510" CREATED="1416988948182" MODIFIED="1416988974005"/>
</node>
<node TEXT="*[ and : syntax" ID="ID_300989316" CREATED="1416989061867" MODIFIED="1416989065742">
<node TEXT="for brevity, supposedly" ID="ID_963776499" CREATED="1416989069500" MODIFIED="1416989078175"/>
<node TEXT="(&#xa;// Alternative syntax, using a key/pattern array:&#xa;Pbind(*[&#xa;    instrument:        \test,&#xa;    nharms:            Pseq([4, 10, 40], inf),&#xa;    dur:            Pseq([1, 1, 2, 1]/10, inf),&#xa;    #[freq, sustain],    Ptuple([&#xa;                    Pseq( (1..16) * 50, 4),&#xa;                    Pseq([1/10, 0.5, 1, 2], inf)&#xa;                ])&#xa;]).play;&#xa;)" ID="ID_1859297528" CREATED="1416989066061" MODIFIED="1416989066759"/>
</node>
</node>
</node>
<node TEXT="EventStreamPlayer" ID="ID_1562717620" CREATED="1416989378774" MODIFIED="1416989382200">
<node TEXT="default .play handles automatically" ID="ID_99770015" CREATED="1416989385383" MODIFIED="1416989392682">
<node TEXT="&quot;When calling Pattern: -play an EventStreamPlayer is automatically generated which handles scheduling as well as passing the protoEvent into the event stream.&quot;" ID="ID_1054130808" CREATED="1416989392966" MODIFIED="1416989394594"/>
</node>
</node>
</node>
</node>
<node TEXT=".def" ID="ID_79981379" CREATED="1416989262169" MODIFIED="1416989263869"/>
<node TEXT="u, earlier" ID="ID_1696745961" CREATED="1416783992607" MODIFIED="1417501827553">
<node TEXT="BeatClock: &quot;crucial library&quot;" ID="ID_1912955982" CREATED="1416783954279" MODIFIED="1416783966550">
<node TEXT="so says Felix on SC-users" ID="ID_1826816721" CREATED="1416783979142" MODIFIED="1416783988389"/>
<node TEXT="a wrapper for TempoClock, more flexible" ID="ID_879894175" CREATED="1416783966898" MODIFIED="1416783976013"/>
</node>
<node TEXT="&quot;cxaudio quark has a collection of Instr&quot;" ID="ID_279404781" CREATED="1416784102926" MODIFIED="1416784107697">
<node TEXT="so says Felix on SC-users" ID="ID_1000310413" CREATED="1416783979142" MODIFIED="1416783988389"/>
</node>
<node TEXT="[sc-users] extract data from patterns" ID="ID_68061263" CREATED="1416784473151" MODIFIED="1416784473594">
<node TEXT="example of code in that thread" ID="ID_1458152660" CREATED="1416784474639" MODIFIED="1416784481657">
<node TEXT="~events = ~mypat.asStream.nextN(10, Event.default) // get the 10 first&#xa;events of the event pattern ~mypat" ID="ID_529325048" CREATED="1416784444352" MODIFIED="1416784444891"/>
</node>
</node>
<node TEXT="iteration" ID="ID_1008050931" CREATED="1416885961614" MODIFIED="1416885963842">
<node TEXT="10.do counts from 1 to 10" ID="ID_1408147815" CREATED="1416885651682" MODIFIED="1416885660239">
<node TEXT="that is, if the function it is called on takes an input" ID="ID_1244883010" CREATED="1416885660775" MODIFIED="1416885673759"/>
<node TEXT="otherwise that number is thrown away" ID="ID_105872171" CREATED="1416885679547" MODIFIED="1416885688806"/>
</node>
<node TEXT="for loop over arbitrary interval, uniform spacing" ID="ID_1532897756" CREATED="1416885918334" MODIFIED="1416885957853">
<node TEXT="// b is a stream that counts from 100 to 280 by 20&#xa;b = Routine.new({&#xa;        forBy (100,280,20, { arg i; i.yield })&#xa;    });" ID="ID_62210347" CREATED="1416885940302" MODIFIED="1416885940827"/>
</node>
</node>
</node>
<node TEXT="u, 2014 12 01" ID="ID_1508417116" CREATED="1416945401881" MODIFIED="1417501823856">
<node TEXT="mailing lists" ID="ID_1522738202" CREATED="1416279705572" MODIFIED="1417499137662">
<node TEXT="users" ID="ID_1653021535" CREATED="1416279841370" MODIFIED="1416279842102">
<node TEXT="web-interactive?" ID="ID_701320728" CREATED="1416279984063" MODIFIED="1416279986899">
<node TEXT="http://new-supercollider-mailing-lists-forums-use-these.2681727.n2.nabble.com/SuperCollider-Users-New-Use-this-f2676391.html" ID="ID_1022742867" CREATED="1416279975243" MODIFIED="1416279975243" LINK="http://new-supercollider-mailing-lists-forums-use-these.2681727.n2.nabble.com/SuperCollider-Users-New-Use-this-f2676391.html"/>
</node>
<node TEXT="email-interactive" ID="ID_1526485581" CREATED="1416279979775" MODIFIED="1416279989506">
<node TEXT="http://www.listarc.bham.ac.uk/marchives/sc-users/" ID="ID_1721235331" CREATED="1416279709554" MODIFIED="1416279709554" LINK="http://www.listarc.bham.ac.uk/marchives/sc-users/"/>
</node>
<node TEXT="2001 and earlier" ID="ID_1056994805" CREATED="1416279830489" MODIFIED="1416279837486">
<node TEXT="http://www.audiosynth.com/files/sc-users-archive/" ID="ID_616612283" CREATED="1416279750600" MODIFIED="1416279750600" LINK="http://www.audiosynth.com/files/sc-users-archive/"/>
</node>
</node>
<node TEXT="dev" ID="ID_1867669945" CREATED="1416279839435" MODIFIED="1416279840140">
<node TEXT="http://www.listarc.bham.ac.uk/marchives/sc-dev/" ID="ID_1044773819" CREATED="1416279733839" MODIFIED="1416279733839" LINK="http://www.listarc.bham.ac.uk/marchives/sc-dev/"/>
</node>
</node>
<node TEXT="learn" ID="ID_809914616" CREATED="1416990027508" MODIFIED="1416990028319">
<node TEXT="seq: abstract-sep param from other code" ID="ID_1300720054" CREATED="1416981607719" MODIFIED="1416981619337">
<node TEXT="more seq, pattern ideas, so I can save param settings for a task separate from its code" ID="ID_451271793" CREATED="1416955115044" MODIFIED="1416981572034"/>
</node>
<node TEXT="serial across-instr proc" ID="ID_649954904" CREATED="1416981575287" MODIFIED="1416981604148"/>
<node TEXT="transform highlight, emacs" ID="ID_1074729739" CREATED="1416983574381" MODIFIED="1416983618832">
<node TEXT="also shortcuts for highlighting, e.g. a range in a sequence" ID="ID_30440038" CREATED="1416983619002" MODIFIED="1416983626461"/>
<node TEXT="shortcuts for rearranging a list" ID="ID_149300848" CREATED="1416983627170" MODIFIED="1416983635886"/>
<node TEXT="add to a scale a multiple of an extant member" ID="ID_138804171" CREATED="1416983659057" MODIFIED="1416983684916"/>
</node>
<node TEXT="monome" ID="ID_1623770860" CREATED="1417038702699" MODIFIED="1417038705647"/>
</node>
<node TEXT="implem" ID="ID_266250329" CREATED="1416990029564" MODIFIED="1416990030623">
<node TEXT="how to hotswap audio out" ID="ID_19344881" CREATED="1416989967204" MODIFIED="1416989978171">
<node TEXT="state 1" ID="ID_777846046" CREATED="1416989982141" MODIFIED="1416989983550">
<node TEXT="x -&gt; out" ID="ID_1553095939" CREATED="1416989978701" MODIFIED="1416989981895"/>
</node>
<node TEXT="state 2" ID="ID_1942309084" CREATED="1416989996515" MODIFIED="1416989998119">
<node TEXT="x -&gt; out" ID="ID_1233678952" CREATED="1416989998396" MODIFIED="1416990000216"/>
<node TEXT="x -&gt; y" ID="ID_75120041" CREATED="1416990000467" MODIFIED="1416990003749"/>
</node>
<node TEXT="crossfade" ID="ID_1323367548" CREATED="1416990011580" MODIFIED="1416990014007"/>
<node TEXT="final state" ID="ID_506115132" CREATED="1416989984644" MODIFIED="1416989995799">
<node TEXT="x -&gt; y -&gt; out" ID="ID_1207909624" CREATED="1416989987549" MODIFIED="1416989993741"/>
</node>
</node>
</node>
<node TEXT="how" ID="ID_822030786" CREATED="1417057716622" MODIFIED="1417057717857">
<node TEXT="nil = not applicable" ID="ID_664224218" CREATED="1416896917334" MODIFIED="1416896920232"/>
<node TEXT="multichannel expan&apos; iterates as if in parallel across its arrays" ID="ID_1253296169" CREATED="1417044176309" MODIFIED="1417118603432">
<node TEXT="{SinOsc.ar([500,400],0,[0.02,0.8])}.play;" ID="ID_816406883" CREATED="1417044193413" MODIFIED="1417044193928"/>
</node>
</node>
<node TEXT="awesome" ID="ID_784348589" CREATED="1416728106151" MODIFIED="1418890239819">
<node TEXT="deterministic but the timbre depends ery nonlinearly on the input pair" ID="ID_1000905382" CREATED="1416728087712" MODIFIED="1416728100259">
<node TEXT="{ LFGauss.ar(MouseX.kr(1/8000, 0.1, 1), MouseY.kr(0.001, 0.1, 1)) * 0.1 }.play;" ID="ID_989684805" CREATED="1416728102512" MODIFIED="1416728103011"/>
</node>
</node>
</node>
<node TEXT="2016 03 30" ID="ID_1487363782" CREATED="1459378007457" MODIFIED="1459378012082">
<node TEXT="OSC sequencer for SuperCollider" ID="ID_433277292" CREATED="1458754608959" MODIFIED="1458754626708">
<node TEXT="https://github.com/GameOfLife/Unit-Lib" ID="ID_1423793614" CREATED="1458754612922" MODIFIED="1458754612922" LINK="https://github.com/GameOfLife/Unit-Lib"/>
</node>
<node TEXT="OSC connections toolkit for SuperCollider" ID="ID_482110507" CREATED="1458754644268" MODIFIED="1458754652799">
<node TEXT="https://github.com/ModalityTeam/Modality-toolkit" ID="ID_904052748" CREATED="1458754653183" MODIFIED="1458754653183" LINK="https://github.com/ModalityTeam/Modality-toolkit"/>
</node>
</node>
</node>
<node TEXT="R" ID="ID_928746245" CREATED="1447268720491" MODIFIED="1447268721270">
<node TEXT="an intro, incomplete" ID="ID_1532179587" CREATED="1447297855352" MODIFIED="1447357012969">
<font BOLD="true"/>
<node TEXT="&gt;&gt;&gt; resume here" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_1496534779" CREATED="1447271381099" MODIFIED="1447271413097">
<node TEXT="this section" ID="ID_1705767618" CREATED="1447271397738" MODIFIED="1447271399248">
<node ID="ID_657064029" CREATED="1447271384848" MODIFIED="1447271384848"><richcontent TYPE="NODE">

<html>
  <head>
    
  </head>
  <body>
    <h3 http-equiv="content-type" content="text/html; charset=utf-8" class="section" style="background-image: null; font-size: large; white-space: normal; font-style: normal; background-repeat: repeat; background-attachment: scroll; font-variant: normal; background-position: null; word-spacing: 0px; line-height: normal; font-family: monospace; text-indent: 0px; color: rgb(102, 102, 102); letter-spacing: normal; text-align: start; text-transform: none; background-color: white">
      Index vectors; selecting and modifying subsets of a data set
    </h3>
  </body>
</html>
</richcontent>
</node>
</node>
<node TEXT="this page" ID="ID_308340663" CREATED="1447271395341" MODIFIED="1447271396717">
<node TEXT="https://cran.r-project.org/doc/manuals/r-release/R-intro.html" ID="ID_1248338828" CREATED="1447271391416" MODIFIED="1447271391416" LINK="https://cran.r-project.org/doc/manuals/r-release/R-intro.html"/>
</node>
</node>
<node TEXT="assign" ID="ID_1560558023" CREATED="1447268838681" MODIFIED="1447268839669">
<node TEXT="x &lt;- 3" ID="ID_1974199493" CREATED="1447268752188" MODIFIED="1447268754789"/>
<node TEXT="x &lt;- function(a,b){expr}" ID="ID_1654356515" CREATED="1447268755650" MODIFIED="1447268763085"/>
<node TEXT="-&gt; also works" ID="ID_1772221029" CREATED="1447269716321" MODIFIED="1447269719051"/>
</node>
<node TEXT="functions have invisible defaults" ID="ID_1756531146" CREATED="1447268920365" MODIFIED="1447268930314">
<node TEXT="e.g. (surely) mean and variance for the normal distn" ID="ID_592570163" CREATED="1447268942922" MODIFIED="1447268950810"/>
<node TEXT="&gt; rnorm(1,2,3)&#xa;[1] 10.88414&#xa;&gt; rnorm(1)&#xa;[1] 1.062899&#xa;&gt; rnorm(1,2,3,4)&#xa;Error in rnorm(1, 2, 3, 4) : unused argument (4)&#xa;&gt;" ID="ID_1033044604" CREATED="1447268951528" MODIFIED="1447268954625"/>
</node>
<node TEXT="arrays, tables" ID="ID_419882994" CREATED="1447269091766" MODIFIED="1447269388810">
<node TEXT="x &lt;- 1:20" ID="ID_484980682" CREATED="1447269103513" MODIFIED="1447269106139"/>
<node TEXT="dummy &lt;- data.frame(x=x, y= x + rnorm(x)*w)" ID="ID_292834598" CREATED="1447269232243" MODIFIED="1447269234952"/>
<node TEXT="math functions accept scalars or vectors" ID="ID_1196449186" CREATED="1447268841481" MODIFIED="1447268855946">
<node TEXT="x &lt;- rnorm(50)&#xa;y &lt;- rnorm(x)" ID="ID_1894706711" CREATED="1447268860555" MODIFIED="1447268861900">
<node TEXT="gives two length-50 random vectors" ID="ID_15050473" CREATED="1447268869452" MODIFIED="1447268893017"/>
</node>
<node TEXT="plot(x,y)" ID="ID_653520674" CREATED="1447268988979" MODIFIED="1447268991327">
<node TEXT="x and y should be the same length" ID="ID_959923927" CREATED="1447268993202" MODIFIED="1447269000810"/>
</node>
</node>
<node TEXT="short vectors are cycled" ID="ID_1185040371" CREATED="1447270024055" MODIFIED="1447270112564">
<node TEXT="example" LOCALIZED_STYLE_REF="defaultstyle.details" ID="ID_1327135038" CREATED="1447270130441" MODIFIED="1447270132288"/>
<node TEXT="&gt; 10*1:2 + 1:10&#xa; [1] 11 22 13 24 15 26 17 28 19 30" ID="ID_912924632" CREATED="1447270128303" MODIFIED="1447270129934"/>
</node>
<node TEXT="booleans work" ID="ID_522892753" CREATED="1447270639953" MODIFIED="1447270643647">
<node TEXT="&gt; x &lt;- 1:5&#xa;&gt; x &gt; 3&#xa;[1] FALSE FALSE FALSE  TRUE  TRUE&#xa;&gt;" ID="ID_474131698" CREATED="1447270644516" MODIFIED="1447270646623"/>
</node>
<node TEXT="are not typed" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_698599213" CREATED="1447270727361" MODIFIED="1447270730706">
<node TEXT="&gt; c(&quot;a&quot;,1)&#xa;[1] &quot;a&quot; &quot;1&quot;&#xa;&gt;" ID="ID_1103187400" CREATED="1447270734939" MODIFIED="1447270737094"/>
</node>
</node>
<node TEXT="complex numbers" ID="ID_1365108318" CREATED="1447270512934" MODIFIED="1447270515331">
<node TEXT="To work with complex numbers, supply an explicit complex part. Thus&#xa;&#xa;sqrt(-17)&#xa;will give NaN and a warning, but&#xa;&#xa;sqrt(-17+0i)&#xa;will do the computations as complex numbers." ID="ID_1980824680" CREATED="1447270516125" MODIFIED="1447270517576"/>
</node>
<node TEXT="memory" ID="ID_322474565" CREATED="1447269377181" MODIFIED="1447269378105">
<node TEXT="ls()" ID="ID_150637882" CREATED="1447269031513" MODIFIED="1447269033994">
<node TEXT="lists R objects" ID="ID_334379898" CREATED="1447269034508" MODIFIED="1447269037519"/>
</node>
<node TEXT="rm(name)" ID="ID_1614838200" CREATED="1447269051428" MODIFIED="1447269057269">
<node TEXT="deletes the thing named name" ID="ID_395025429" CREATED="1447269057989" MODIFIED="1447269064406"/>
</node>
<node TEXT="&quot;attach&quot;, &quot;detach&quot;" ID="ID_1143540062" CREATED="1447269345884" MODIFIED="1447269435394">
<node TEXT="&quot;attach(dummy)&quot; makes the columns in the data frame named dummy visible as variables." ID="ID_809745917" CREATED="1447269351060" MODIFIED="1447269373959"/>
</node>
</node>
<node TEXT="file i/o" ID="ID_1607390876" CREATED="1447269589075" MODIFIED="1447269592160">
<node TEXT="run a script: source(&quot;commands.R&quot;)" ID="ID_1089506922" CREATED="1447269592799" MODIFIED="1447269613366"/>
<node TEXT="record (and divert) output: sink(&quot;record.lis&quot;)" ID="ID_1886037884" CREATED="1447269620960" MODIFIED="1447269630435">
<node TEXT="sink() restores it to the console" ID="ID_1899479476" CREATED="1447269637341" MODIFIED="1447269642012"/>
</node>
</node>
<node TEXT="quit with q()" ID="ID_552246774" CREATED="1447268729911" MODIFIED="1447268732936"/>
</node>
<node TEXT="plots" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1825372890" CREATED="1447297597071" MODIFIED="1449439590334">
<node TEXT="save plot" ID="ID_893650296" CREATED="1447297607087" MODIFIED="1447297610821">
<node TEXT="&gt; jpeg(&apos;rplot.jpg&apos;)&#xa;&gt; plot( runif(10), runif(10) )&#xa;&gt; abline(v=1/2)&#xa;&gt; dev.off()&#xa;X11cairo&#xa;       2&#xa;&gt;" ID="ID_1940717322" CREATED="1447297602463" MODIFIED="1447297603672"/>
<node TEXT="the commands between jpeg() and dev.off() accrete into the picture" ID="ID_1810380346" CREATED="1447297613160" MODIFIED="1447297629415"/>
</node>
<node TEXT="add lines to plot" ID="ID_55237327" CREATED="1447297636263" MODIFIED="1447297638470">
<node TEXT="don&apos;t close the window the plot shows up in" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_73948471" CREATED="1447297640623" MODIFIED="1447297650687"/>
<node TEXT="&gt; plot( runif(10), runif(10) )&#xa;&gt; abline(v=1/2)" ID="ID_563590241" CREATED="1447297656455" MODIFIED="1447297657256"/>
</node>
<node TEXT="add functions to plot" ID="ID_636107334" CREATED="1447356970253" MODIFIED="1447356973808">
<node TEXT="call &quot;par&quot; before each new function" ID="ID_1864404149" CREATED="1447356979568" MODIFIED="1447356990078"/>
<node TEXT="example" ID="ID_1437318867" CREATED="1447356990290" MODIFIED="1447356991280">
<node TEXT="&gt; plot(function(x){x^3},0,1)&#xa;&gt; par(new=TRUE)&#xa;&gt; plot(function(x){x^2},0,1)&#xa;&gt; par(new=TRUE)&#xa;&gt; plot(function(x){x/2},0,1)&#xa;&gt;" ID="ID_1546630634" CREATED="1447356991756" MODIFIED="1447356994072"/>
</node>
</node>
<node TEXT="plot conditional function" LOCALIZED_STYLE_REF="AutomaticLayout.level,4" ID="ID_1086363629" CREATED="1447299025608" MODIFIED="1447356977633">
<node TEXT="! trick ! define the domain of the plot, and then the range in terms of the domain" ID="ID_1354210209" CREATED="1447299053503" MODIFIED="1447299075568"/>
<node TEXT="&gt; x &lt;- seq(-1,5,0.01)&#xa;&gt; fx &lt;- (x&gt;0 &amp; x&lt;4)*x/2&#xa;&gt; plot(x,fx)" ID="ID_1136740117" CREATED="1447299050432" MODIFIED="1447299051658"/>
</node>
</node>
</node>
<node TEXT="regex" ID="ID_49270633" CREATED="1426285962790" MODIFIED="1426285965067">
<node TEXT="JEdit regex ref, possibly more general" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_51809091" CREATED="1409161633930" MODIFIED="1426286074274">
<node TEXT="http://www.jedit.org/users-guide/regexps.html" ID="ID_1775372993" CREATED="1409161637739" MODIFIED="1409161637739" LINK="http://www.jedit.org/users-guide/regexps.html"/>
</node>
<node TEXT="wikipedia/regex: where to start reading, usj" ID="ID_284520742" CREATED="1425956790552" MODIFIED="1425956813481">
<node TEXT="http://en.wikipedia.org/wiki/Regular_expression#Standards" ID="ID_1034503171" CREATED="1425956802448" MODIFIED="1425956802448" LINK="http://en.wikipedia.org/wiki/Regular_expression#Standards"/>
</node>
<node TEXT="named regexp search/replace" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1236325039" CREATED="1409162237562" MODIFIED="1409711728126">
<node TEXT="tags" LOCALIZED_STYLE_REF="AutomaticLayout.level.root" ID="ID_786194035" CREATED="1411966723076" MODIFIED="1411966730291">
<node TEXT="regular expression" ID="ID_287360732" CREATED="1411966724086" MODIFIED="1411966726264"/>
<node TEXT="regex" ID="ID_263332954" CREATED="1411966726478" MODIFIED="1411966727321"/>
</node>
<node TEXT="start with" ID="ID_573690787" CREATED="1409162263240" MODIFIED="1409162264339">
<node TEXT="xx   x_y" ID="ID_2669497" CREATED="1409162264600" MODIFIED="1409162264600"/>
</node>
<node TEXT="search string" ID="ID_1616779169" CREATED="1409162254441" MODIFIED="1409162256117">
<node TEXT="x( *)x(_*)y" ID="ID_251622634" CREATED="1409162256482" MODIFIED="1409162256482"/>
</node>
<node TEXT="replace string" ID="ID_318660841" CREATED="1409162249057" MODIFIED="1409162250796">
<node TEXT="$2x$1y" ID="ID_1256293805" CREATED="1409162251122" MODIFIED="1409162251122"/>
</node>
<node TEXT="ends with" ID="ID_41485398" CREATED="1409162266032" MODIFIED="1409162267259">
<node TEXT="x_x   y" ID="ID_37500080" CREATED="1409162303976" MODIFIED="1409162303976"/>
</node>
<node TEXT="options" ID="ID_455135220" CREATED="1415680822301" MODIFIED="1415680823440">
<node TEXT="~" ID="ID_234171873" CREATED="1415680823526" MODIFIED="1415680827017"/>
</node>
</node>
<node TEXT="trailing whitespace" ID="ID_65955595" CREATED="1409161743792" MODIFIED="1426286030697">
<node TEXT="search string" ID="ID_866912147" CREATED="1409162358505" MODIFIED="1409162366340">
<node TEXT="[ |\t]*\n" ID="ID_320244468" CREATED="1409161752304" MODIFIED="1409161752304"/>
</node>
<node TEXT="replace string" ID="ID_277023815" CREATED="1409162361946" MODIFIED="1409162369644">
<node TEXT="\n" ID="ID_57204112" CREATED="1409161752998" MODIFIED="1409162358019"/>
</node>
</node>
<node TEXT="regex" ID="ID_79312423" CREATED="1419811388674" MODIFIED="1419811389494">
<node TEXT="(^|\W)ad($|^\w)" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_1583300889" CREATED="1419811387651" MODIFIED="1419811395396">
<node TEXT="to find word not substring of word, possibly at start or end of line (or in case of Freeplane, node)" ID="ID_124091755" CREATED="1419811404194" MODIFIED="1419811433510"/>
</node>
<node TEXT="(^|\W)aud(\w|&apos;)*c" LOCALIZED_STYLE_REF="AutomaticLayout.level,2" ID="ID_266372178" CREATED="1419814590125" MODIFIED="1419814597469">
<node TEXT="finds &quot;aud&apos;c&quot; and &quot;audience&quot;" ID="ID_938966781" CREATED="1419814602773" MODIFIED="1419814608504"/>
</node>
<node TEXT="unordered &amp;" ID="ID_358746641" CREATED="1423804705971" MODIFIED="1424210627891">
<node TEXT="http://stackoverflow.com/questions/22502339/regexp-to-fit-unordered-list" ID="ID_62737793" CREATED="1423804829608" MODIFIED="1423804829608" LINK="http://stackoverflow.com/questions/22502339/regexp-to-fit-unordered-list"/>
</node>
<node TEXT="egrep &quot;(^|\W)gra(ph|\W.)&quot; *.mm" ID="ID_1104369397" CREATED="1424147623537" MODIFIED="1424147628886"/>
</node>
<node TEXT="to get node or Node but not in vnode or Vnode" LOCALIZED_STYLE_REF="styles.topic" ID="ID_1079208674" CREATED="1425956885313" MODIFIED="1426286177478">
<node TEXT="[^vV]node" ID="ID_1790490998" CREATED="1425956923656" MODIFIED="1425956924223">
<node TEXT="permits using terms node and vnode" ID="ID_52373245" CREATED="1425956088536" MODIFIED="1425956935984"/>
</node>
</node>
</node>
</node>
</node>
</map>
